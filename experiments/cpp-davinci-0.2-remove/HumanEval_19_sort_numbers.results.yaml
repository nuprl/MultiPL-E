language: cpp
name: HumanEval_19_sort_numbers
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") {\n         \
    \   nums.push_back(0);\n        } else if (word == \"one\") {\n            nums.push_back(1);\n\
    \        } else if (word == \"two\") {\n            nums.push_back(2);\n     \
    \   } else if (word == \"three\") {\n            nums.push_back(3);\n        }\
    \ else if (word == \"four\") {\n            nums.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            nums.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            nums.push_back(6);\n        } else if (word == \"\
    seven\") {\n            nums.push_back(7);\n        } else if (word == \"eight\"\
    ) {\n            nums.push_back(8);\n        } else if (word == \"nine\") {\n\
    \            nums.push_back(9);\n        }\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::stringstream out;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        if (i > 0) {\n            out << \" \";\n        }\n       \
    \ if (nums[i] == 0) {\n            out << \"zero\";\n        } else if (nums[i]\
    \ == 1) {\n            out << \"one\";\n        } else if (nums[i] == 2) {\n \
    \           out << \"two\";\n        } else if (nums[i] == 3) {\n            out\
    \ << \"three\";\n        } else if (nums[i] == 4) {\n            out << \"four\"\
    ;\n        } else if (nums[i] == 5) {\n            out << \"five\";\n        }\
    \ else if (nums[i] == 6) {\n            out << \"six\";\n        } else if (nums[i]\
    \ == 7) {\n            out << \"seven\";\n        } else\n}\nint main() {\n  \
    \  auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpgvd4u3fq.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> nums;\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"zero\"\
    ) nums.push_back(0);\n        else if (word == \"one\") nums.push_back(1);\n \
    \       else if (word == \"two\") nums.push_back(2);\n        else if (word ==\
    \ \"three\") nums.push_back(3);\n        else if (word == \"four\") nums.push_back(4);\n\
    \        else if (word == \"five\") nums.push_back(5);\n        else if (word\
    \ == \"six\") nums.push_back(6);\n        else if (word == \"seven\") nums.push_back(7);\n\
    \        else if (word == \"eight\") nums.push_back(8);\n        else if (word\
    \ == \"nine\") nums.push_back(9);\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::stringstream out;\n    for (int i = 0; i < nums.size(); i++) {\n   \
    \     if (i > 0) out << \" \";\n        if (nums[i] == 0) out << \"zero\";\n \
    \       else if (nums[i] == 1) out << \"one\";\n        else if (nums[i] == 2)\
    \ out << \"two\";\n        else if (nums[i] == 3) out << \"three\";\n        else\
    \ if (nums[i] == 4) out << \"four\";\n        else if (nums[i] == 5) out << \"\
    five\";\n        else if (nums[i] == 6) out << \"six\";\n        else if (nums[i]\
    \ == 7) out << \"seven\";\n        else if (nums[i] == 8) out << \"eight\";\n\
    \        else if (nums[i] == 9) out << \"nine\";\n    }\n    return out.str();\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpyzbzr1k4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string temp;\n    while(ss >> temp) {\n        if(temp == \"zero\") v.push_back(0);\n\
    \        else if(temp == \"one\") v.push_back(1);\n        else if(temp == \"\
    two\") v.push_back(2);\n        else if(temp == \"three\") v.push_back(3);\n \
    \       else if(temp == \"four\") v.push_back(4);\n        else if(temp == \"\
    five\") v.push_back(5);\n        else if(temp == \"six\") v.push_back(6);\n  \
    \      else if(temp == \"seven\") v.push_back(7);\n        else if(temp == \"\
    eight\") v.push_back(8);\n        else if(temp == \"nine\") v.push_back(9);\n\
    \    }\n    std::sort(v.begin(), v.end());\n    std::string result;\n    for(int\
    \ i = 0; i < v.size(); i++) {\n        if(v[i] == 0) result += \"zero \";\n  \
    \      else if(v[i] == 1) result += \"one \";\n        else if(v[i] == 2) result\
    \ += \"two \";\n        else if(v[i] == 3) result += \"three \";\n        else\
    \ if(v[i] == 4) result += \"four \";\n        else if(v[i] == 5) result += \"\
    five \";\n        else if(v[i] == 6) result += \"six \";\n        else if(v[i]\
    \ == 7) result += \"seven \";\n        else if(v[i] == 8) result += \"eight \"\
    ;\n        else if(v[i] == 9) result += \"nine \";\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpcuc6fz18.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string token;\n    while(std::getline(ss, token, ' ')) {\n        if(token\
    \ == \"zero\")\n            v.push_back(0);\n        else if(token == \"one\"\
    )\n            v.push_back(1);\n        else if(token == \"two\")\n          \
    \  v.push_back(2);\n        else if(token == \"three\")\n            v.push_back(3);\n\
    \        else if(token == \"four\")\n            v.push_back(4);\n        else\
    \ if(token == \"five\")\n            v.push_back(5);\n        else if(token ==\
    \ \"six\")\n            v.push_back(6);\n        else if(token == \"seven\")\n\
    \            v.push_back(7);\n        else if(token == \"eight\")\n          \
    \  v.push_back(8);\n        else if(token == \"nine\")\n            v.push_back(9);\n\
    \    }\n    std::sort(v.begin(), v.end());\n    std::string result;\n    for(int\
    \ i = 0; i < v.size(); i++) {\n        if(v[i] == 0)\n            result += \"\
    zero \";\n        else if(v[i] == 1)\n            result += \"one \";\n      \
    \  else if(v[i] == 2)\n            result += \"two \";\n        else if(v[i] ==\
    \ 3)\n            result += \"three \";\n        else if(v[i] == 4)\n        \
    \    result += \"four \";\n        else if(v[i] == 5)\n            result += \"\
    five \";\n        else if(v[i] == 6)\n            result += \"six \";\n      \
    \  else if(v[i] == 7)\n            result += \"seven \";\n        else if(v[i]\
    \ == 8)\n            result += \"eight \";\n        else if(v[i] == 9)\n     \
    \       result += \"nine \";\n    }\n    return result;\n}\nint main() {\n   \
    \ auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n \
    \   assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"three\
    \ five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpgzzkum9z.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") {\n         \
    \   nums.push_back(0);\n        } else if (word == \"one\") {\n            nums.push_back(1);\n\
    \        } else if (word == \"two\") {\n            nums.push_back(2);\n     \
    \   } else if (word == \"three\") {\n            nums.push_back(3);\n        }\
    \ else if (word == \"four\") {\n            nums.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            nums.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            nums.push_back(6);\n        } else if (word == \"\
    seven\") {\n            nums.push_back(7);\n        } else if (word == \"eight\"\
    ) {\n            nums.push_back(8);\n        } else if (word == \"nine\") {\n\
    \            nums.push_back(9);\n        }\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::string result;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        if (i != 0) {\n            result += \" \";\n        }\n   \
    \     if (nums[i] == 0) {\n            result += \"zero\";\n        } else if\
    \ (nums[i] == 1) {\n            result += \"one\";\n        } else if (nums[i]\
    \ == 2) {\n            result += \"two\";\n        } else if (nums[i] == 3) {\n\
    \            result += \"three\";\n        } else if (nums[i] == 4) {\n      \
    \      result += \"four\";\n        } else if (nums[i] == 5) {\n            result\
    \ += \"five\";\n        } else if (nums[i] == 6) {\n            result += \"six\"\
    ;\n        } else if (nums[i] == 7) {\n            result += \"seven\";\n    \
    \    } else if\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpldvxpsli.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string temp;\n    while (ss >> temp) {\n        if (temp == \"zero\"\
    ) {\n            nums.push_back(0);\n        } else if (temp == \"one\") {\n \
    \           nums.push_back(1);\n        } else if (temp == \"two\") {\n      \
    \      nums.push_back(2);\n        } else if (temp == \"three\") {\n         \
    \   nums.push_back(3);\n        } else if (temp == \"four\") {\n            nums.push_back(4);\n\
    \        } else if (temp == \"five\") {\n            nums.push_back(5);\n    \
    \    } else if (temp == \"six\") {\n            nums.push_back(6);\n        }\
    \ else if (temp == \"seven\") {\n            nums.push_back(7);\n        } else\
    \ if (temp == \"eight\") {\n            nums.push_back(8);\n        } else if\
    \ (temp == \"nine\") {\n            nums.push_back(9);\n        }\n    }\n   \
    \ std::sort(nums.begin(), nums.end());\n    std::stringstream result;\n    for\
    \ (auto i : nums) {\n        if (i == 0) {\n            result << \"zero \";\n\
    \        } else if (i == 1) {\n            result << \"one \";\n        } else\
    \ if (i == 2) {\n            result << \"two \";\n        } else if (i == 3) {\n\
    \            result << \"three \";\n        } else if (i == 4) {\n           \
    \ result << \"four \";\n        } else if (i == 5) {\n            result << \"\
    five \";\n        } else if (i == 6) {\n            result << \"six \";\n    \
    \    } else if (i == 7) {\n            result << \"seven \";\n        } else if\
    \ (i == 8) {\n            result << \"eight \";\n        } else if (i == 9) {\n\
    \            result << \"nine \";\n        }\n    }\n    return result.str();\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpu9li17mm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") {\n         \
    \   nums.push_back(0);\n        } else if (word == \"one\") {\n            nums.push_back(1);\n\
    \        } else if (word == \"two\") {\n            nums.push_back(2);\n     \
    \   } else if (word == \"three\") {\n            nums.push_back(3);\n        }\
    \ else if (word == \"four\") {\n            nums.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            nums.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            nums.push_back(6);\n        } else if (word == \"\
    seven\") {\n            nums.push_back(7);\n        } else if (word == \"eight\"\
    ) {\n            nums.push_back(8);\n        } else if (word == \"nine\") {\n\
    \            nums.push_back(9);\n        }\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::string result = \"\";\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        if (nums[i] == 0) {\n            result += \"zero\";\n     \
    \   } else if (nums[i] == 1) {\n            result += \"one\";\n        } else\
    \ if (nums[i] == 2) {\n            result += \"two\";\n        } else if (nums[i]\
    \ == 3) {\n            result += \"three\";\n        } else if (nums[i] == 4)\
    \ {\n            result += \"four\";\n        } else if (nums[i] == 5) {\n   \
    \         result += \"five\";\n        } else if (nums[i] == 6) {\n          \
    \  result += \"six\";\n        } else if (nums[i] == 7) {\n            result\
    \ += \"seven\";\n        } else if (nums[i] == 8) {\n            result += \"\
    eight\";\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpcmqzmool.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string number;\n  \
    \  std::vector<int> nums;\n    while (ss >> number) {\n        if (number == \"\
    zero\") {\n            nums.push_back(0);\n        } else if (number == \"one\"\
    ) {\n            nums.push_back(1);\n        } else if (number == \"two\") {\n\
    \            nums.push_back(2);\n        } else if (number == \"three\") {\n \
    \           nums.push_back(3);\n        } else if (number == \"four\") {\n   \
    \         nums.push_back(4);\n        } else if (number == \"five\") {\n     \
    \       nums.push_back(5);\n        } else if (number == \"six\") {\n        \
    \    nums.push_back(6);\n        } else if (number == \"seven\") {\n         \
    \   nums.push_back(7);\n        } else if (number == \"eight\") {\n          \
    \  nums.push_back(8);\n        } else if (number == \"nine\") {\n            nums.push_back(9);\n\
    \        }\n    }\n    std::sort(nums.begin(), nums.end());\n    std::stringstream\
    \ result;\n    for (int i = 0; i < nums.size(); i++) {\n        if (i > 0) {\n\
    \            result << \" \";\n        }\n        if (nums[i] == 0) {\n      \
    \      result << \"zero\";\n        } else if (nums[i] == 1) {\n            result\
    \ << \"one\";\n        } else if (nums[i] == 2) {\n            result << \"two\"\
    ;\n        } else if (nums[i] == 3) {\n            result << \"three\";\n    \
    \    } else if (nums[i] == 4) {\n            result << \"four\";\n        } else\
    \ if (nums[i] == 5) {\n            result << \"five\";\n        } else if (nums[i]\
    \ == 6) {\n            result << \"six\";\n        } else if (nums[i] == 7) {\n\
    \            result << \"seven\";\n        } else\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmppie086m8.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string word;\n    while (ss >> word) {\n        if (word == \"zero\")\
    \ {\n            v.push_back(0);\n        } else if (word == \"one\") {\n    \
    \        v.push_back(1);\n        } else if (word == \"two\") {\n            v.push_back(2);\n\
    \        } else if (word == \"three\") {\n            v.push_back(3);\n      \
    \  } else if (word == \"four\") {\n            v.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            v.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            v.push_back(6);\n        } else if (word == \"seven\"\
    ) {\n            v.push_back(7);\n        } else if (word == \"eight\") {\n  \
    \          v.push_back(8);\n        } else if (word == \"nine\") {\n         \
    \   v.push_back(9);\n        }\n    }\n    std::sort(v.begin(), v.end());\n  \
    \  std::string result;\n    for (auto i : v) {\n        if (i == 0) {\n      \
    \      result += \"zero \";\n        } else if (i == 1) {\n            result\
    \ += \"one \";\n        } else if (i == 2) {\n            result += \"two \";\n\
    \        } else if (i == 3) {\n            result += \"three \";\n        } else\
    \ if (i == 4) {\n            result += \"four \";\n        } else if (i == 5)\
    \ {\n            result += \"five \";\n        } else if (i == 6) {\n        \
    \    result += \"six \";\n        } else if (i == 7) {\n            result +=\
    \ \"seven \";\n        } else if (i == 8) {\n            result += \"eight \"\
    ;\n        } else if (i == 9) {\n            result += \"nine \";\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmprfq__pwn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string word;\n    while (ss >> word) {\n        if (word == \"zero\")\
    \ v.push_back(0);\n        else if (word == \"one\") v.push_back(1);\n       \
    \ else if (word == \"two\") v.push_back(2);\n        else if (word == \"three\"\
    ) v.push_back(3);\n        else if (word == \"four\") v.push_back(4);\n      \
    \  else if (word == \"five\") v.push_back(5);\n        else if (word == \"six\"\
    ) v.push_back(6);\n        else if (word == \"seven\") v.push_back(7);\n     \
    \   else if (word == \"eight\") v.push_back(8);\n        else if (word == \"nine\"\
    ) v.push_back(9);\n    }\n    std::sort(v.begin(), v.end());\n    std::string\
    \ result;\n    for (int i = 0; i < v.size(); i++) {\n        if (i != 0) result\
    \ += \" \";\n        if (v[i] == 0) result += \"zero\";\n        else if (v[i]\
    \ == 1) result += \"one\";\n        else if (v[i] == 2) result += \"two\";\n \
    \       else if (v[i] == 3) result += \"three\";\n        else if (v[i] == 4)\
    \ result += \"four\";\n        else if (v[i] == 5) result += \"five\";\n     \
    \   else if (v[i] == 6) result += \"six\";\n        else if (v[i] == 7) result\
    \ += \"seven\";\n        else if (v[i] == 8) result += \"eight\";\n        else\
    \ if (v[i] == 9) result += \"nine\";\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp1mzg3r2v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string temp;\n    std::vector<int>\
    \ nums;\n    while(ss >> temp) {\n        if(temp == \"zero\") nums.push_back(0);\n\
    \        else if(temp == \"one\") nums.push_back(1);\n        else if(temp ==\
    \ \"two\") nums.push_back(2);\n        else if(temp == \"three\") nums.push_back(3);\n\
    \        else if(temp == \"four\") nums.push_back(4);\n        else if(temp ==\
    \ \"five\") nums.push_back(5);\n        else if(temp == \"six\") nums.push_back(6);\n\
    \        else if(temp == \"seven\") nums.push_back(7);\n        else if(temp ==\
    \ \"eight\") nums.push_back(8);\n        else if(temp == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::string res = \"\";\n\
    \    for(int i = 0; i < nums.size(); i++) {\n        if(nums[i] == 0) res += \"\
    zero \";\n        else if(nums[i] == 1) res += \"one \";\n        else if(nums[i]\
    \ == 2) res += \"two \";\n        else if(nums[i] == 3) res += \"three \";\n \
    \       else if(nums[i] == 4) res += \"four \";\n        else if(nums[i] == 5)\
    \ res += \"five \";\n        else if(nums[i] == 6) res += \"six \";\n        else\
    \ if(nums[i] == 7) res += \"seven \";\n        else if(nums[i] == 8) res += \"\
    eight \";\n        else if(nums[i] == 9) res += \"nine \";\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp_98l0a2i.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string word;\n    while (ss >> word) {\n        if (word == \"zero\")\
    \ v.push_back(0);\n        else if (word == \"one\") v.push_back(1);\n       \
    \ else if (word == \"two\") v.push_back(2);\n        else if (word == \"three\"\
    ) v.push_back(3);\n        else if (word == \"four\") v.push_back(4);\n      \
    \  else if (word == \"five\") v.push_back(5);\n        else if (word == \"six\"\
    ) v.push_back(6);\n        else if (word == \"seven\") v.push_back(7);\n     \
    \   else if (word == \"eight\") v.push_back(8);\n        else if (word == \"nine\"\
    ) v.push_back(9);\n    }\n    std::sort(v.begin(), v.end());\n    std::string\
    \ res;\n    for (int i = 0; i < v.size(); i++) {\n        if (i != 0) res += \"\
    \ \";\n        if (v[i] == 0) res += \"zero\";\n        else if (v[i] == 1) res\
    \ += \"one\";\n        else if (v[i] == 2) res += \"two\";\n        else if (v[i]\
    \ == 3) res += \"three\";\n        else if (v[i] == 4) res += \"four\";\n    \
    \    else if (v[i] == 5) res += \"five\";\n        else if (v[i] == 6) res +=\
    \ \"six\";\n        else if (v[i] == 7) res += \"seven\";\n        else if (v[i]\
    \ == 8) res += \"eight\";\n        else if (v[i] == 9) res += \"nine\";\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpl_qw_j8p.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"zero\"\
    ) {\n            nums.push_back(0);\n        } else if (word == \"one\") {\n \
    \           nums.push_back(1);\n        } else if (word == \"two\") {\n      \
    \      nums.push_back(2);\n        } else if (word == \"three\") {\n         \
    \   nums.push_back(3);\n        } else if (word == \"four\") {\n            nums.push_back(4);\n\
    \        } else if (word == \"five\") {\n            nums.push_back(5);\n    \
    \    } else if (word == \"six\") {\n            nums.push_back(6);\n        }\
    \ else if (word == \"seven\") {\n            nums.push_back(7);\n        } else\
    \ if (word == \"eight\") {\n            nums.push_back(8);\n        } else if\
    \ (word == \"nine\") {\n            nums.push_back(9);\n        }\n    }\n   \
    \ std::sort(nums.begin(), nums.end());\n    std::stringstream out;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        if (i != 0) {\n            out << \"\
    \ \";\n        }\n        if (nums[i] == 0) {\n            out << \"zero\";\n\
    \        } else if (nums[i] == 1) {\n            out << \"one\";\n        } else\
    \ if (nums[i] == 2) {\n            out << \"two\";\n        } else if (nums[i]\
    \ == 3) {\n            out << \"three\";\n        } else if (nums[i] == 4) {\n\
    \            out << \"four\";\n        } else if (nums[i] == 5) {\n          \
    \  out << \"five\";\n        } else if (nums[i] == 6) {\n            out << \"\
    six\";\n        } else if (nums[i] == 7) {\n            out << \"seven\";\n  \
    \      } else\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp6mabslba.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string temp;\n    while(ss >> temp) {\n        if(temp == \"zero\") v.push_back(0);\n\
    \        else if(temp == \"one\") v.push_back(1);\n        else if(temp == \"\
    two\") v.push_back(2);\n        else if(temp == \"three\") v.push_back(3);\n \
    \       else if(temp == \"four\") v.push_back(4);\n        else if(temp == \"\
    five\") v.push_back(5);\n        else if(temp == \"six\") v.push_back(6);\n  \
    \      else if(temp == \"seven\") v.push_back(7);\n        else if(temp == \"\
    eight\") v.push_back(8);\n        else if(temp == \"nine\") v.push_back(9);\n\
    \    }\n    std::sort(v.begin(), v.end());\n    std::string ans = \"\";\n    for(int\
    \ i = 0; i < v.size(); i++) {\n        if(v[i] == 0) ans += \"zero \";\n     \
    \   else if(v[i] == 1) ans += \"one \";\n        else if(v[i] == 2) ans += \"\
    two \";\n        else if(v[i] == 3) ans += \"three \";\n        else if(v[i] ==\
    \ 4) ans += \"four \";\n        else if(v[i] == 5) ans += \"five \";\n       \
    \ else if(v[i] == 6) ans += \"six \";\n        else if(v[i] == 7) ans += \"seven\
    \ \";\n        else if(v[i] == 8) ans += \"eight \";\n        else if(v[i] ==\
    \ 9) ans += \"nine \";\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpaw3xuoi2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n\tstd::vector<int> nums;\n\tstd::stringstream ss(numbers);\n\tstd::string\
    \ word;\n\twhile (ss >> word) {\n\t\tif (word == \"zero\") nums.push_back(0);\n\
    \t\telse if (word == \"one\") nums.push_back(1);\n\t\telse if (word == \"two\"\
    ) nums.push_back(2);\n\t\telse if (word == \"three\") nums.push_back(3);\n\t\t\
    else if (word == \"four\") nums.push_back(4);\n\t\telse if (word == \"five\")\
    \ nums.push_back(5);\n\t\telse if (word == \"six\") nums.push_back(6);\n\t\telse\
    \ if (word == \"seven\") nums.push_back(7);\n\t\telse if (word == \"eight\") nums.push_back(8);\n\
    \t\telse if (word == \"nine\") nums.push_back(9);\n\t}\n\tstd::sort(nums.begin(),\
    \ nums.end());\n\tstd::stringstream sorted;\n\tfor (int i = 0; i < nums.size();\
    \ i++) {\n\t\tif (i != 0) sorted << \" \";\n\t\tif (nums[i] == 0) sorted << \"\
    zero\";\n\t\telse if (nums[i] == 1) sorted << \"one\";\n\t\telse if (nums[i] ==\
    \ 2) sorted << \"two\";\n\t\telse if (nums[i] == 3) sorted << \"three\";\n\t\t\
    else if (nums[i] == 4) sorted << \"four\";\n\t\telse if (nums[i] == 5) sorted\
    \ << \"five\";\n\t\telse if (nums[i] == 6) sorted << \"six\";\n\t\telse if (nums[i]\
    \ == 7) sorted << \"seven\";\n\t\telse if (nums[i] == 8) sorted << \"eight\";\n\
    \t\telse if (nums[i] == 9) sorted << \"nine\";\n\t}\n\treturn sorted.str();\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpxnxxafru.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n  std::stringstream ss(numbers);\n  std::vector<int> v;\n  std::string\
    \ temp;\n  while(ss >> temp) {\n    if(temp == \"zero\") {\n      v.push_back(0);\n\
    \    } else if(temp == \"one\") {\n      v.push_back(1);\n    } else if(temp ==\
    \ \"two\") {\n      v.push_back(2);\n    } else if(temp == \"three\") {\n    \
    \  v.push_back(3);\n    } else if(temp == \"four\") {\n      v.push_back(4);\n\
    \    } else if(temp == \"five\") {\n      v.push_back(5);\n    } else if(temp\
    \ == \"six\") {\n      v.push_back(6);\n    } else if(temp == \"seven\") {\n \
    \     v.push_back(7);\n    } else if(temp == \"eight\") {\n      v.push_back(8);\n\
    \    } else if(temp == \"nine\") {\n      v.push_back(9);\n    }\n  }\n  std::sort(v.begin(),\
    \ v.end());\n  std::stringstream ss2;\n  for(int i = 0; i < v.size(); i++) {\n\
    \    if(v[i] == 0) {\n      ss2 << \"zero\";\n    } else if(v[i] == 1) {\n   \
    \   ss2 << \"one\";\n    } else if(v[i] == 2) {\n      ss2 << \"two\";\n    }\
    \ else if(v[i] == 3) {\n      ss2 << \"three\";\n    } else if(v[i] == 4) {\n\
    \      ss2 << \"four\";\n    } else if(v[i] == 5) {\n      ss2 << \"five\";\n\
    \    } else if(v[i] == 6) {\n      ss2 << \"six\";\n    } else if(v[i] == 7) {\n\
    \      ss2 << \"seven\";\n    } else if(v[i] == 8) {\n      ss2 << \"eight\";\n\
    \    } else if(v[i] == 9) {\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp7iwgdd5k.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n\tstd::stringstream ss(numbers);\n\tstd::vector<int> v;\n\tstd::string\
    \ word;\n\twhile (ss >> word) {\n\t\tif (word == \"zero\") v.push_back(0);\n\t\
    \telse if (word == \"one\") v.push_back(1);\n\t\telse if (word == \"two\") v.push_back(2);\n\
    \t\telse if (word == \"three\") v.push_back(3);\n\t\telse if (word == \"four\"\
    ) v.push_back(4);\n\t\telse if (word == \"five\") v.push_back(5);\n\t\telse if\
    \ (word == \"six\") v.push_back(6);\n\t\telse if (word == \"seven\") v.push_back(7);\n\
    \t\telse if (word == \"eight\") v.push_back(8);\n\t\telse if (word == \"nine\"\
    ) v.push_back(9);\n\t}\n\tstd::sort(v.begin(), v.end());\n\tstd::string res;\n\
    \tfor (int i = 0; i < v.size(); i++) {\n\t\tif (i) res += \" \";\n\t\tif (v[i]\
    \ == 0) res += \"zero\";\n\t\telse if (v[i] == 1) res += \"one\";\n\t\telse if\
    \ (v[i] == 2) res += \"two\";\n\t\telse if (v[i] == 3) res += \"three\";\n\t\t\
    else if (v[i] == 4) res += \"four\";\n\t\telse if (v[i] == 5) res += \"five\"\
    ;\n\t\telse if (v[i] == 6) res += \"six\";\n\t\telse if (v[i] == 7) res += \"\
    seven\";\n\t\telse if (v[i] == 8) res += \"eight\";\n\t\telse if (v[i] == 9) res\
    \ += \"nine\";\n\t}\n\treturn res;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmptnt540ce.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n  std::vector<int> nums;\n  std::stringstream ss(numbers);\n  std::string\
    \ word;\n  while (ss >> word) {\n    if (word == \"zero\") {\n      nums.push_back(0);\n\
    \    } else if (word == \"one\") {\n      nums.push_back(1);\n    } else if (word\
    \ == \"two\") {\n      nums.push_back(2);\n    } else if (word == \"three\") {\n\
    \      nums.push_back(3);\n    } else if (word == \"four\") {\n      nums.push_back(4);\n\
    \    } else if (word == \"five\") {\n      nums.push_back(5);\n    } else if (word\
    \ == \"six\") {\n      nums.push_back(6);\n    } else if (word == \"seven\") {\n\
    \      nums.push_back(7);\n    } else if (word == \"eight\") {\n      nums.push_back(8);\n\
    \    } else if (word == \"nine\") {\n      nums.push_back(9);\n    }\n  }\n  std::sort(nums.begin(),\
    \ nums.end());\n  std::stringstream ss2;\n  for (int i = 0; i < nums.size(); i++)\
    \ {\n    if (i != 0) {\n      ss2 << \" \";\n    }\n    if (nums[i] == 0) {\n\
    \      ss2 << \"zero\";\n    } else if (nums[i] == 1) {\n      ss2 << \"one\"\
    ;\n    } else if (nums[i] == 2) {\n      ss2 << \"two\";\n    } else if (nums[i]\
    \ == 3) {\n      ss2 << \"three\";\n    } else if (nums[i] == 4) {\n      ss2\
    \ << \"four\";\n    } else if (nums[i] == 5) {\n      ss2 << \"five\";\n    }\
    \ else if (nums[i] == 6) {\n      ss2 << \"six\";\n    } else if (nums[i] == 7)\
    \ {\n     \n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzvlt81o6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n\tstd::stringstream ss(numbers);\n\tstd::vector<int> v;\n\tstd::string\
    \ temp;\n\twhile (ss >> temp) {\n\t\tif (temp == \"zero\") {\n\t\t\tv.push_back(0);\n\
    \t\t}\n\t\telse if (temp == \"one\") {\n\t\t\tv.push_back(1);\n\t\t}\n\t\telse\
    \ if (temp == \"two\") {\n\t\t\tv.push_back(2);\n\t\t}\n\t\telse if (temp == \"\
    three\") {\n\t\t\tv.push_back(3);\n\t\t}\n\t\telse if (temp == \"four\") {\n\t\
    \t\tv.push_back(4);\n\t\t}\n\t\telse if (temp == \"five\") {\n\t\t\tv.push_back(5);\n\
    \t\t}\n\t\telse if (temp == \"six\") {\n\t\t\tv.push_back(6);\n\t\t}\n\t\telse\
    \ if (temp == \"seven\") {\n\t\t\tv.push_back(7);\n\t\t}\n\t\telse if (temp ==\
    \ \"eight\") {\n\t\t\tv.push_back(8);\n\t\t}\n\t\telse if (temp == \"nine\") {\n\
    \t\t\tv.push_back(9);\n\t\t}\n\t}\n\tstd::sort(v.begin(), v.end());\n\tstd::string\
    \ result;\n\tfor (int i = 0; i < v.size(); i++) {\n\t\tif (v[i] == 0) {\n\t\t\t\
    result += \"zero \";\n\t\t}\n\t\telse if (v[i] == 1) {\n\t\t\tresult += \"one\
    \ \";\n\t\t}\n\t\telse if (v[i] == 2) {\n\t\t\tresult += \"two \";\n\t\t}\n\t\t\
    else if (v[i] == 3) {\n\t\t\tresult += \"three \";\n\t\t}\n\t\telse if (v[i] ==\
    \ 4) {\n\t\t\tresult += \"four \";\n\t\t}\n\t\telse if (v[i] == 5) {\n\n}\nint\
    \ main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpkt54aeks.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") {\n         \
    \   nums.push_back(0);\n        } else if (word == \"one\") {\n            nums.push_back(1);\n\
    \        } else if (word == \"two\") {\n            nums.push_back(2);\n     \
    \   } else if (word == \"three\") {\n            nums.push_back(3);\n        }\
    \ else if (word == \"four\") {\n            nums.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            nums.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            nums.push_back(6);\n        } else if (word == \"\
    seven\") {\n            nums.push_back(7);\n        } else if (word == \"eight\"\
    ) {\n            nums.push_back(8);\n        } else if (word == \"nine\") {\n\
    \            nums.push_back(9);\n        }\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::string result;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        if (i != 0) {\n            result += \" \";\n        }\n   \
    \     if (nums[i] == 0) {\n            result += \"zero\";\n        } else if\
    \ (nums[i] == 1) {\n            result += \"one\";\n        } else if (nums[i]\
    \ == 2) {\n            result += \"two\";\n        } else if (nums[i] == 3) {\n\
    \            result += \"three\";\n        } else if (nums[i] == 4) {\n      \
    \      result += \"four\";\n        } else if (nums[i] == 5) {\n            result\
    \ += \"five\";\n        } else if (nums[i] == 6) {\n            result += \"six\"\
    ;\n        } else if (nums[i] == 7) {\n            result += \"seven\";\n    \
    \    } else if\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpldvxpsli.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") {\n         \
    \   nums.push_back(0);\n        } else if (word == \"one\") {\n            nums.push_back(1);\n\
    \        } else if (word == \"two\") {\n            nums.push_back(2);\n     \
    \   } else if (word == \"three\") {\n            nums.push_back(3);\n        }\
    \ else if (word == \"four\") {\n            nums.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            nums.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            nums.push_back(6);\n        } else if (word == \"\
    seven\") {\n            nums.push_back(7);\n        } else if (word == \"eight\"\
    ) {\n            nums.push_back(8);\n        } else if (word == \"nine\") {\n\
    \            nums.push_back(9);\n        }\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::string result;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        if (i != 0) {\n            result += \" \";\n        }\n   \
    \     if (nums[i] == 0) {\n            result += \"zero\";\n        } else if\
    \ (nums[i] == 1) {\n            result += \"one\";\n        } else if (nums[i]\
    \ == 2) {\n            result += \"two\";\n        } else if (nums[i] == 3) {\n\
    \            result += \"three\";\n        } else if (nums[i] == 4) {\n      \
    \      result += \"four\";\n        } else if (nums[i] == 5) {\n            result\
    \ += \"five\";\n        } else if (nums[i] == 6) {\n            result += \"six\"\
    ;\n        } else if (nums[i] == 7) {\n            result += \"seven\";\n    \
    \    } else if\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpldvxpsli.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string temp;\n    while (ss >> temp) {\n        if (temp == \"zero\"\
    ) {\n            nums.push_back(0);\n        } else if (temp == \"one\") {\n \
    \           nums.push_back(1);\n        } else if (temp == \"two\") {\n      \
    \      nums.push_back(2);\n        } else if (temp == \"three\") {\n         \
    \   nums.push_back(3);\n        } else if (temp == \"four\") {\n            nums.push_back(4);\n\
    \        } else if (temp == \"five\") {\n            nums.push_back(5);\n    \
    \    } else if (temp == \"six\") {\n            nums.push_back(6);\n        }\
    \ else if (temp == \"seven\") {\n            nums.push_back(7);\n        } else\
    \ if (temp == \"eight\") {\n            nums.push_back(8);\n        } else if\
    \ (temp == \"nine\") {\n            nums.push_back(9);\n        }\n    }\n   \
    \ std::sort(nums.begin(), nums.end());\n    std::string result;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        if (nums[i] == 0) {\n            result\
    \ += \"zero\";\n        } else if (nums[i] == 1) {\n            result += \"one\"\
    ;\n        } else if (nums[i] == 2) {\n            result += \"two\";\n      \
    \  } else if (nums[i] == 3) {\n            result += \"three\";\n        } else\
    \ if (nums[i] == 4) {\n            result += \"four\";\n        } else if (nums[i]\
    \ == 5) {\n            result += \"five\";\n        } else if (nums[i] == 6) {\n\
    \            result += \"six\";\n        } else if (nums[i] == 7) {\n        \
    \    result += \"seven\";\n        } else if (nums[i] == 8) {\n            result\
    \ += \"eight\";\n       \n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpjx0dtifl.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> nums;\n\
    \    std::string temp;\n    while(ss >> temp) {\n        if(temp == \"zero\")\
    \ nums.push_back(0);\n        else if(temp == \"one\") nums.push_back(1);\n  \
    \      else if(temp == \"two\") nums.push_back(2);\n        else if(temp == \"\
    three\") nums.push_back(3);\n        else if(temp == \"four\") nums.push_back(4);\n\
    \        else if(temp == \"five\") nums.push_back(5);\n        else if(temp ==\
    \ \"six\") nums.push_back(6);\n        else if(temp == \"seven\") nums.push_back(7);\n\
    \        else if(temp == \"eight\") nums.push_back(8);\n        else if(temp ==\
    \ \"nine\") nums.push_back(9);\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::stringstream result;\n    for(int i = 0; i < nums.size(); i++) {\n \
    \       if(i != 0) result << \" \";\n        if(nums[i] == 0) result << \"zero\"\
    ;\n        else if(nums[i] == 1) result << \"one\";\n        else if(nums[i] ==\
    \ 2) result << \"two\";\n        else if(nums[i] == 3) result << \"three\";\n\
    \        else if(nums[i] == 4) result << \"four\";\n        else if(nums[i] ==\
    \ 5) result << \"five\";\n        else if(nums[i] == 6) result << \"six\";\n \
    \       else if(nums[i] == 7) result << \"seven\";\n        else if(nums[i] ==\
    \ 8) result << \"eight\";\n        else if(nums[i] == 9) result << \"nine\";\n\
    \    }\n    return result.str();\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpfrck32li.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"zero\"\
    ) {\n            nums.push_back(0);\n        } else if (word == \"one\") {\n \
    \           nums.push_back(1);\n        } else if (word == \"two\") {\n      \
    \      nums.push_back(2);\n        } else if (word == \"three\") {\n         \
    \   nums.push_back(3);\n        } else if (word == \"four\") {\n            nums.push_back(4);\n\
    \        } else if (word == \"five\") {\n            nums.push_back(5);\n    \
    \    } else if (word == \"six\") {\n            nums.push_back(6);\n        }\
    \ else if (word == \"seven\") {\n            nums.push_back(7);\n        } else\
    \ if (word == \"eight\") {\n            nums.push_back(8);\n        } else if\
    \ (word == \"nine\") {\n            nums.push_back(9);\n        }\n    }\n   \
    \ std::sort(nums.begin(), nums.end());\n    std::string result;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        if (i != 0) {\n            result +=\
    \ \" \";\n        }\n        if (nums[i] == 0) {\n            result += \"zero\"\
    ;\n        } else if (nums[i] == 1) {\n            result += \"one\";\n      \
    \  } else if (nums[i] == 2) {\n            result += \"two\";\n        } else\
    \ if (nums[i] == 3) {\n            result += \"three\";\n        } else if (nums[i]\
    \ == 4) {\n            result += \"four\";\n        } else if (nums[i] == 5) {\n\
    \            result += \"five\";\n        } else if (nums[i] == 6) {\n       \
    \     result += \"six\";\n        } else if (nums[i] == 7) {\n            result\
    \ += \"seven\";\n        } else if\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpv3sxm8ju.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") nums.push_back(0);\n\
    \        else if (word == \"one\") nums.push_back(1);\n        else if (word ==\
    \ \"two\") nums.push_back(2);\n        else if (word == \"three\") nums.push_back(3);\n\
    \        else if (word == \"four\") nums.push_back(4);\n        else if (word\
    \ == \"five\") nums.push_back(5);\n        else if (word == \"six\") nums.push_back(6);\n\
    \        else if (word == \"seven\") nums.push_back(7);\n        else if (word\
    \ == \"eight\") nums.push_back(8);\n        else if (word == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::string res;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        if (i != 0) res += \" \";\n   \
    \     if (nums[i] == 0) res += \"zero\";\n        else if (nums[i] == 1) res +=\
    \ \"one\";\n        else if (nums[i] == 2) res += \"two\";\n        else if (nums[i]\
    \ == 3) res += \"three\";\n        else if (nums[i] == 4) res += \"four\";\n \
    \       else if (nums[i] == 5) res += \"five\";\n        else if (nums[i] == 6)\
    \ res += \"six\";\n        else if (nums[i] == 7) res += \"seven\";\n        else\
    \ if (nums[i] == 8) res += \"eight\";\n        else if (nums[i] == 9) res += \"\
    nine\";\n    }\n    return res;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2hwkxkfi.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"zero\"\
    ) {\n            nums.push_back(0);\n        } else if (word == \"one\") {\n \
    \           nums.push_back(1);\n        } else if (word == \"two\") {\n      \
    \      nums.push_back(2);\n        } else if (word == \"three\") {\n         \
    \   nums.push_back(3);\n        } else if (word == \"four\") {\n            nums.push_back(4);\n\
    \        } else if (word == \"five\") {\n            nums.push_back(5);\n    \
    \    } else if (word == \"six\") {\n            nums.push_back(6);\n        }\
    \ else if (word == \"seven\") {\n            nums.push_back(7);\n        } else\
    \ if (word == \"eight\") {\n            nums.push_back(8);\n        } else if\
    \ (word == \"nine\") {\n            nums.push_back(9);\n        }\n    }\n   \
    \ std::sort(nums.begin(), nums.end());\n    std::string result;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        if (i > 0) {\n            result +=\
    \ \" \";\n        }\n        if (nums[i] == 0) {\n            result += \"zero\"\
    ;\n        } else if (nums[i] == 1) {\n            result += \"one\";\n      \
    \  } else if (nums[i] == 2) {\n            result += \"two\";\n        } else\
    \ if (nums[i] == 3) {\n            result += \"three\";\n        } else if (nums[i]\
    \ == 4) {\n            result += \"four\";\n        } else if (nums[i] == 5) {\n\
    \            result += \"five\";\n        } else if (nums[i] == 6) {\n       \
    \     result += \"six\";\n        } else if (nums[i] == 7) {\n            result\
    \ += \"seven\";\n        } else if\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpv6b_368o.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string temp;\n    while(ss >> temp) {\n        if(temp == \"zero\") {\n\
    \            v.push_back(0);\n        }\n        else if(temp == \"one\") {\n\
    \            v.push_back(1);\n        }\n        else if(temp == \"two\") {\n\
    \            v.push_back(2);\n        }\n        else if(temp == \"three\") {\n\
    \            v.push_back(3);\n        }\n        else if(temp == \"four\") {\n\
    \            v.push_back(4);\n        }\n        else if(temp == \"five\") {\n\
    \            v.push_back(5);\n        }\n        else if(temp == \"six\") {\n\
    \            v.push_back(6);\n        }\n        else if(temp == \"seven\") {\n\
    \            v.push_back(7);\n        }\n        else if(temp == \"eight\") {\n\
    \            v.push_back(8);\n        }\n        else if(temp == \"nine\") {\n\
    \            v.push_back(9);\n        }\n    }\n    std::sort(v.begin(), v.end());\n\
    \    std::string ans = \"\";\n    for(int i = 0; i < v.size(); i++) {\n      \
    \  if(v[i] == 0) {\n            ans += \"zero \";\n        }\n        else if(v[i]\
    \ == 1) {\n            ans += \"one \";\n        }\n        else if(v[i] == 2)\
    \ {\n            ans += \"two \";\n        }\n        else if(v[i] == 3) {\n \
    \           ans += \"three \";\n        }\n        else if(v[i] == 4) {\n    \
    \        ans += \"four \";\n        }\n        else if(v[i] == 5) {\n        \
    \    ans += \"five \";\n        }\n        else if(v[i] == 6) {\n            ans\
    \ += \"six \";\n        }\n        else if(v[i] == 7) {\n            ans += \"\
    seven \";\n        }\n\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmphk9lwkat.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string num;\n    std::vector<int>\
    \ nums;\n    while(ss >> num) {\n        if(num == \"zero\") nums.push_back(0);\n\
    \        else if(num == \"one\") nums.push_back(1);\n        else if(num == \"\
    two\") nums.push_back(2);\n        else if(num == \"three\") nums.push_back(3);\n\
    \        else if(num == \"four\") nums.push_back(4);\n        else if(num == \"\
    five\") nums.push_back(5);\n        else if(num == \"six\") nums.push_back(6);\n\
    \        else if(num == \"seven\") nums.push_back(7);\n        else if(num ==\
    \ \"eight\") nums.push_back(8);\n        else if(num == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::string ans = \"\";\n\
    \    for(int i = 0; i < nums.size(); i++) {\n        if(nums[i] == 0) ans += \"\
    zero \";\n        else if(nums[i] == 1) ans += \"one \";\n        else if(nums[i]\
    \ == 2) ans += \"two \";\n        else if(nums[i] == 3) ans += \"three \";\n \
    \       else if(nums[i] == 4) ans += \"four \";\n        else if(nums[i] == 5)\
    \ ans += \"five \";\n        else if(nums[i] == 6) ans += \"six \";\n        else\
    \ if(nums[i] == 7) ans += \"seven \";\n        else if(nums[i] == 8) ans += \"\
    eight \";\n        else if(nums[i] == 9) ans += \"nine \";\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5jmdkom2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"zero\"\
    ) nums.push_back(0);\n        else if (word == \"one\") nums.push_back(1);\n \
    \       else if (word == \"two\") nums.push_back(2);\n        else if (word ==\
    \ \"three\") nums.push_back(3);\n        else if (word == \"four\") nums.push_back(4);\n\
    \        else if (word == \"five\") nums.push_back(5);\n        else if (word\
    \ == \"six\") nums.push_back(6);\n        else if (word == \"seven\") nums.push_back(7);\n\
    \        else if (word == \"eight\") nums.push_back(8);\n        else if (word\
    \ == \"nine\") nums.push_back(9);\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::string result;\n    for (int i = 0; i < nums.size(); i++) {\n      \
    \  if (i != 0) result += \" \";\n        if (nums[i] == 0) result += \"zero\"\
    ;\n        else if (nums[i] == 1) result += \"one\";\n        else if (nums[i]\
    \ == 2) result += \"two\";\n        else if (nums[i] == 3) result += \"three\"\
    ;\n        else if (nums[i] == 4) result += \"four\";\n        else if (nums[i]\
    \ == 5) result += \"five\";\n        else if (nums[i] == 6) result += \"six\"\
    ;\n        else if (nums[i] == 7) result += \"seven\";\n        else if (nums[i]\
    \ == 8) result += \"eight\";\n        else if (nums[i] == 9) result += \"nine\"\
    ;\n    }\n    return result;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2dj47tj6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string temp;\n    while (ss >> temp) {\n        if (temp == \"zero\"\
    ) {\n            nums.push_back(0);\n        } else if (temp == \"one\") {\n \
    \           nums.push_back(1);\n        } else if (temp == \"two\") {\n      \
    \      nums.push_back(2);\n        } else if (temp == \"three\") {\n         \
    \   nums.push_back(3);\n        } else if (temp == \"four\") {\n            nums.push_back(4);\n\
    \        } else if (temp == \"five\") {\n            nums.push_back(5);\n    \
    \    } else if (temp == \"six\") {\n            nums.push_back(6);\n        }\
    \ else if (temp == \"seven\") {\n            nums.push_back(7);\n        } else\
    \ if (temp == \"eight\") {\n            nums.push_back(8);\n        } else if\
    \ (temp == \"nine\") {\n            nums.push_back(9);\n        }\n    }\n   \
    \ std::sort(nums.begin(), nums.end());\n    std::string result;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        if (nums[i] == 0) {\n            result\
    \ += \"zero\";\n        } else if (nums[i] == 1) {\n            result += \"one\"\
    ;\n        } else if (nums[i] == 2) {\n            result += \"two\";\n      \
    \  } else if (nums[i] == 3) {\n            result += \"three\";\n        } else\
    \ if (nums[i] == 4) {\n            result += \"four\";\n        } else if (nums[i]\
    \ == 5) {\n            result += \"five\";\n        } else if (nums[i] == 6) {\n\
    \            result += \"six\";\n        } else if (nums[i] == 7) {\n        \
    \    result += \"seven\";\n        } else if (nums[i] == 8) {\n            result\
    \ += \"eight\";\n       \n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpjx0dtifl.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n  std::string result = \"\";\n  std::vector<int> nums;\n  std::stringstream\
    \ ss(numbers);\n  std::string temp;\n  while (ss >> temp) {\n    if (temp == \"\
    zero\") {\n      nums.push_back(0);\n    } else if (temp == \"one\") {\n     \
    \ nums.push_back(1);\n    } else if (temp == \"two\") {\n      nums.push_back(2);\n\
    \    } else if (temp == \"three\") {\n      nums.push_back(3);\n    } else if\
    \ (temp == \"four\") {\n      nums.push_back(4);\n    } else if (temp == \"five\"\
    ) {\n      nums.push_back(5);\n    } else if (temp == \"six\") {\n      nums.push_back(6);\n\
    \    } else if (temp == \"seven\") {\n      nums.push_back(7);\n    } else if\
    \ (temp == \"eight\") {\n      nums.push_back(8);\n    } else if (temp == \"nine\"\
    ) {\n      nums.push_back(9);\n    }\n  }\n  std::sort(nums.begin(), nums.end());\n\
    \  for (int i = 0; i < nums.size(); i++) {\n    if (nums[i] == 0) {\n      result\
    \ += \"zero\";\n    } else if (nums[i] == 1) {\n      result += \"one\";\n   \
    \ } else if (nums[i] == 2) {\n      result += \"two\";\n    } else if (nums[i]\
    \ == 3) {\n      result += \"three\";\n    } else if (nums[i] == 4) {\n      result\
    \ += \"four\";\n    } else if (nums[i] == 5) {\n      result += \"five\";\n  \
    \  } else if (nums[i] == 6) {\n      result += \"six\";\n    } else if (nums[i]\
    \ == 7) {\n      result += \"seven\";\n    } else if (nums[i] == 8) {\n      result\
    \ += \"eight\";\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp9snd69zj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string word;\n    while (ss >> word) {\n        if (word == \"zero\")\
    \ {\n            v.push_back(0);\n        } else if (word == \"one\") {\n    \
    \        v.push_back(1);\n        } else if (word == \"two\") {\n            v.push_back(2);\n\
    \        } else if (word == \"three\") {\n            v.push_back(3);\n      \
    \  } else if (word == \"four\") {\n            v.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            v.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            v.push_back(6);\n        } else if (word == \"seven\"\
    ) {\n            v.push_back(7);\n        } else if (word == \"eight\") {\n  \
    \          v.push_back(8);\n        } else if (word == \"nine\") {\n         \
    \   v.push_back(9);\n        }\n    }\n    std::sort(v.begin(), v.end());\n  \
    \  std::string result;\n    for (auto i : v) {\n        switch (i) {\n       \
    \     case 0:\n                result += \"zero \";\n                break;\n\
    \            case 1:\n                result += \"one \";\n                break;\n\
    \            case 2:\n                result += \"two \";\n                break;\n\
    \            case 3:\n                result += \"three \";\n                break;\n\
    \            case 4:\n                result += \"four \";\n                break;\n\
    \            case 5:\n                result += \"five \";\n                break;\n\
    \            case 6:\n                result += \"six \";\n                break;\n\
    \            case 7:\n                result += \"seven \";\n                break;\n\
    \            case 8:\n                result += \"eight \";\n                break;\n\
    \            case 9:\n                result += \"nine \";\n                break;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmppzn2pmdu.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n  std::stringstream ss(numbers);\n  std::vector<int> v;\n  std::string\
    \ temp;\n  while(ss >> temp) {\n    if(temp == \"zero\") {\n      v.push_back(0);\n\
    \    }\n    else if(temp == \"one\") {\n      v.push_back(1);\n    }\n    else\
    \ if(temp == \"two\") {\n      v.push_back(2);\n    }\n    else if(temp == \"\
    three\") {\n      v.push_back(3);\n    }\n    else if(temp == \"four\") {\n  \
    \    v.push_back(4);\n    }\n    else if(temp == \"five\") {\n      v.push_back(5);\n\
    \    }\n    else if(temp == \"six\") {\n      v.push_back(6);\n    }\n    else\
    \ if(temp == \"seven\") {\n      v.push_back(7);\n    }\n    else if(temp == \"\
    eight\") {\n      v.push_back(8);\n    }\n    else if(temp == \"nine\") {\n  \
    \    v.push_back(9);\n    }\n  }\n  std::sort(v.begin(), v.end());\n  std::string\
    \ result;\n  for(int i = 0; i < v.size(); i++) {\n    if(v[i] == 0) {\n      result\
    \ += \"zero \";\n    }\n    else if(v[i] == 1) {\n      result += \"one \";\n\
    \    }\n    else if(v[i] == 2) {\n      result += \"two \";\n    }\n    else if(v[i]\
    \ == 3) {\n      result += \"three \";\n    }\n    else if(v[i] == 4) {\n    \
    \  result += \"four \";\n    }\n    else if(v[i] == 5) {\n      result += \"five\
    \ \";\n    }\n    else if(v[i] == 6) {\n      result += \"six \";\n    }\n   \
    \ else if(v[i] == 7) {\n      result += \"seven \";\n    }\n    else\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmppuozjyat.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n  std::vector<int> nums;\n  std::stringstream ss(numbers);\n  std::string\
    \ temp;\n  while (ss >> temp) {\n    if (temp == \"zero\") {\n      nums.push_back(0);\n\
    \    } else if (temp == \"one\") {\n      nums.push_back(1);\n    } else if (temp\
    \ == \"two\") {\n      nums.push_back(2);\n    } else if (temp == \"three\") {\n\
    \      nums.push_back(3);\n    } else if (temp == \"four\") {\n      nums.push_back(4);\n\
    \    } else if (temp == \"five\") {\n      nums.push_back(5);\n    } else if (temp\
    \ == \"six\") {\n      nums.push_back(6);\n    } else if (temp == \"seven\") {\n\
    \      nums.push_back(7);\n    } else if (temp == \"eight\") {\n      nums.push_back(8);\n\
    \    } else if (temp == \"nine\") {\n      nums.push_back(9);\n    }\n  }\n  std::sort(nums.begin(),\
    \ nums.end());\n  std::stringstream ss2;\n  for (int i = 0; i < nums.size(); i++)\
    \ {\n    if (i != 0) {\n      ss2 << \" \";\n    }\n    if (nums[i] == 0) {\n\
    \      ss2 << \"zero\";\n    } else if (nums[i] == 1) {\n      ss2 << \"one\"\
    ;\n    } else if (nums[i] == 2) {\n      ss2 << \"two\";\n    } else if (nums[i]\
    \ == 3) {\n      ss2 << \"three\";\n    } else if (nums[i] == 4) {\n      ss2\
    \ << \"four\";\n    } else if (nums[i] == 5) {\n      ss2 << \"five\";\n    }\
    \ else if (nums[i] == 6) {\n      ss2 << \"six\";\n    } else if (nums[i] == 7)\
    \ {\n     \n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpefbxw_ns.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n  std::vector<int> nums;\n  std::stringstream ss(numbers);\n  std::string\
    \ word;\n  while (ss >> word) {\n    if (word == \"zero\") {\n      nums.push_back(0);\n\
    \    } else if (word == \"one\") {\n      nums.push_back(1);\n    } else if (word\
    \ == \"two\") {\n      nums.push_back(2);\n    } else if (word == \"three\") {\n\
    \      nums.push_back(3);\n    } else if (word == \"four\") {\n      nums.push_back(4);\n\
    \    } else if (word == \"five\") {\n      nums.push_back(5);\n    } else if (word\
    \ == \"six\") {\n      nums.push_back(6);\n    } else if (word == \"seven\") {\n\
    \      nums.push_back(7);\n    } else if (word == \"eight\") {\n      nums.push_back(8);\n\
    \    } else if (word == \"nine\") {\n      nums.push_back(9);\n    }\n  }\n  std::sort(nums.begin(),\
    \ nums.end());\n  std::string result;\n  for (int i = 0; i < nums.size(); i++)\
    \ {\n    if (nums[i] == 0) {\n      result += \"zero\";\n    } else if (nums[i]\
    \ == 1) {\n      result += \"one\";\n    } else if (nums[i] == 2) {\n      result\
    \ += \"two\";\n    } else if (nums[i] == 3) {\n      result += \"three\";\n  \
    \  } else if (nums[i] == 4) {\n      result += \"four\";\n    } else if (nums[i]\
    \ == 5) {\n      result += \"five\";\n    } else if (nums[i] == 6) {\n      result\
    \ += \"six\";\n    } else if (nums[i] == 7) {\n      result += \"seven\";\n  \
    \  } else if (nums[i] == 8) {\n      result += \"eight\";\n   \n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp90w83dya.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n  std::vector<int> nums;\n  std::stringstream ss(numbers);\n  std::string\
    \ temp;\n  while (ss >> temp) {\n    if (temp == \"zero\") {\n      nums.push_back(0);\n\
    \    } else if (temp == \"one\") {\n      nums.push_back(1);\n    } else if (temp\
    \ == \"two\") {\n      nums.push_back(2);\n    } else if (temp == \"three\") {\n\
    \      nums.push_back(3);\n    } else if (temp == \"four\") {\n      nums.push_back(4);\n\
    \    } else if (temp == \"five\") {\n      nums.push_back(5);\n    } else if (temp\
    \ == \"six\") {\n      nums.push_back(6);\n    } else if (temp == \"seven\") {\n\
    \      nums.push_back(7);\n    } else if (temp == \"eight\") {\n      nums.push_back(8);\n\
    \    } else if (temp == \"nine\") {\n      nums.push_back(9);\n    }\n  }\n  std::sort(nums.begin(),\
    \ nums.end());\n  std::string result;\n  for (int i = 0; i < nums.size(); i++)\
    \ {\n    if (nums[i] == 0) {\n      result += \"zero\";\n    } else if (nums[i]\
    \ == 1) {\n      result += \"one\";\n    } else if (nums[i] == 2) {\n      result\
    \ += \"two\";\n    } else if (nums[i] == 3) {\n      result += \"three\";\n  \
    \  } else if (nums[i] == 4) {\n      result += \"four\";\n    } else if (nums[i]\
    \ == 5) {\n      result += \"five\";\n    } else if (nums[i] == 6) {\n      result\
    \ += \"six\";\n    } else if (nums[i] == 7) {\n      result += \"seven\";\n  \
    \  } else if (nums[i] == 8) {\n      result += \"eight\";\n   \n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpyhsihk6q.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string num;\n    std::vector<int>\
    \ nums;\n    while(ss >> num) {\n        if(num == \"zero\") {\n            nums.push_back(0);\n\
    \        } else if(num == \"one\") {\n            nums.push_back(1);\n       \
    \ } else if(num == \"two\") {\n            nums.push_back(2);\n        } else\
    \ if(num == \"three\") {\n            nums.push_back(3);\n        } else if(num\
    \ == \"four\") {\n            nums.push_back(4);\n        } else if(num == \"\
    five\") {\n            nums.push_back(5);\n        } else if(num == \"six\") {\n\
    \            nums.push_back(6);\n        } else if(num == \"seven\") {\n     \
    \       nums.push_back(7);\n        } else if(num == \"eight\") {\n          \
    \  nums.push_back(8);\n        } else if(num == \"nine\") {\n            nums.push_back(9);\n\
    \        }\n    }\n    std::sort(nums.begin(), nums.end());\n    std::stringstream\
    \ sorted;\n    for(int i = 0; i < nums.size(); i++) {\n        if(nums[i] == 0)\
    \ {\n            sorted << \"zero\";\n        } else if(nums[i] == 1) {\n    \
    \        sorted << \"one\";\n        } else if(nums[i] == 2) {\n            sorted\
    \ << \"two\";\n        } else if(nums[i] == 3) {\n            sorted << \"three\"\
    ;\n        } else if(nums[i] == 4) {\n            sorted << \"four\";\n      \
    \  } else if(nums[i] == 5) {\n            sorted << \"five\";\n        } else\
    \ if(nums[i] == 6) {\n            sorted << \"six\";\n        } else if(nums[i]\
    \ == 7) {\n            sorted << \"seven\";\n        } else if(nums[i] == 8) {\n\
    \            sorted << \"eight\";\n\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmph3zr__b9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n  std::vector<int> nums;\n  std::stringstream ss(numbers);\n  std::string\
    \ temp;\n  while (ss >> temp) {\n    if (temp == \"zero\") {\n      nums.push_back(0);\n\
    \    } else if (temp == \"one\") {\n      nums.push_back(1);\n    } else if (temp\
    \ == \"two\") {\n      nums.push_back(2);\n    } else if (temp == \"three\") {\n\
    \      nums.push_back(3);\n    } else if (temp == \"four\") {\n      nums.push_back(4);\n\
    \    } else if (temp == \"five\") {\n      nums.push_back(5);\n    } else if (temp\
    \ == \"six\") {\n      nums.push_back(6);\n    } else if (temp == \"seven\") {\n\
    \      nums.push_back(7);\n    } else if (temp == \"eight\") {\n      nums.push_back(8);\n\
    \    } else if (temp == \"nine\") {\n      nums.push_back(9);\n    }\n  }\n  std::sort(nums.begin(),\
    \ nums.end());\n  std::string result;\n  for (int i = 0; i < nums.size(); i++)\
    \ {\n    if (nums[i] == 0) {\n      result += \"zero\";\n    } else if (nums[i]\
    \ == 1) {\n      result += \"one\";\n    } else if (nums[i] == 2) {\n      result\
    \ += \"two\";\n    } else if (nums[i] == 3) {\n      result += \"three\";\n  \
    \  } else if (nums[i] == 4) {\n      result += \"four\";\n    } else if (nums[i]\
    \ == 5) {\n      result += \"five\";\n    } else if (nums[i] == 6) {\n      result\
    \ += \"six\";\n    } else if (nums[i] == 7) {\n      result += \"seven\";\n  \
    \  } else if (nums[i] == 8) {\n      result += \"eight\";\n   \n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpyhsihk6q.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string temp;\n    while (ss >> temp) {\n        if (temp == \"zero\"\
    ) nums.push_back(0);\n        else if (temp == \"one\") nums.push_back(1);\n \
    \       else if (temp == \"two\") nums.push_back(2);\n        else if (temp ==\
    \ \"three\") nums.push_back(3);\n        else if (temp == \"four\") nums.push_back(4);\n\
    \        else if (temp == \"five\") nums.push_back(5);\n        else if (temp\
    \ == \"six\") nums.push_back(6);\n        else if (temp == \"seven\") nums.push_back(7);\n\
    \        else if (temp == \"eight\") nums.push_back(8);\n        else if (temp\
    \ == \"nine\") nums.push_back(9);\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::string result;\n    for (auto i : nums) {\n        if (i == 0) result\
    \ += \"zero \";\n        else if (i == 1) result += \"one \";\n        else if\
    \ (i == 2) result += \"two \";\n        else if (i == 3) result += \"three \"\
    ;\n        else if (i == 4) result += \"four \";\n        else if (i == 5) result\
    \ += \"five \";\n        else if (i == 6) result += \"six \";\n        else if\
    \ (i == 7) result += \"seven \";\n        else if (i == 8) result += \"eight \"\
    ;\n        else if (i == 9) result += \"nine \";\n    }\n    return result.substr(0,\
    \ result.size() - 1);\n}\nint main() {\n    auto candidate = sort_numbers;\n \
    \   assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpcn2ped2l.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") nums.push_back(0);\n\
    \        else if (word == \"one\") nums.push_back(1);\n        else if (word ==\
    \ \"two\") nums.push_back(2);\n        else if (word == \"three\") nums.push_back(3);\n\
    \        else if (word == \"four\") nums.push_back(4);\n        else if (word\
    \ == \"five\") nums.push_back(5);\n        else if (word == \"six\") nums.push_back(6);\n\
    \        else if (word == \"seven\") nums.push_back(7);\n        else if (word\
    \ == \"eight\") nums.push_back(8);\n        else if (word == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::stringstream res;\n\
    \    for (int i = 0; i < nums.size(); i++) {\n        if (i != 0) res << \" \"\
    ;\n        if (nums[i] == 0) res << \"zero\";\n        else if (nums[i] == 1)\
    \ res << \"one\";\n        else if (nums[i] == 2) res << \"two\";\n        else\
    \ if (nums[i] == 3) res << \"three\";\n        else if (nums[i] == 4) res << \"\
    four\";\n        else if (nums[i] == 5) res << \"five\";\n        else if (nums[i]\
    \ == 6) res << \"six\";\n        else if (nums[i] == 7) res << \"seven\";\n  \
    \      else if (nums[i] == 8) res << \"eight\";\n        else if (nums[i] == 9)\
    \ res << \"nine\";\n    }\n    return res.str();\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpedp_xztc.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> nums;\n\
    \    std::string temp;\n    while(ss >> temp) {\n        if(temp == \"zero\")\
    \ nums.push_back(0);\n        else if(temp == \"one\") nums.push_back(1);\n  \
    \      else if(temp == \"two\") nums.push_back(2);\n        else if(temp == \"\
    three\") nums.push_back(3);\n        else if(temp == \"four\") nums.push_back(4);\n\
    \        else if(temp == \"five\") nums.push_back(5);\n        else if(temp ==\
    \ \"six\") nums.push_back(6);\n        else if(temp == \"seven\") nums.push_back(7);\n\
    \        else if(temp == \"eight\") nums.push_back(8);\n        else if(temp ==\
    \ \"nine\") nums.push_back(9);\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::string result;\n    for(int i = 0; i < nums.size(); i++) {\n       \
    \ if(nums[i] == 0) result += \"zero \";\n        else if(nums[i] == 1) result\
    \ += \"one \";\n        else if(nums[i] == 2) result += \"two \";\n        else\
    \ if(nums[i] == 3) result += \"three \";\n        else if(nums[i] == 4) result\
    \ += \"four \";\n        else if(nums[i] == 5) result += \"five \";\n        else\
    \ if(nums[i] == 6) result += \"six \";\n        else if(nums[i] == 7) result +=\
    \ \"seven \";\n        else if(nums[i] == 8) result += \"eight \";\n        else\
    \ if(nums[i] == 9) result += \"nine \";\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5n5wq3e2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") nums.push_back(0);\n\
    \        else if (word == \"one\") nums.push_back(1);\n        else if (word ==\
    \ \"two\") nums.push_back(2);\n        else if (word == \"three\") nums.push_back(3);\n\
    \        else if (word == \"four\") nums.push_back(4);\n        else if (word\
    \ == \"five\") nums.push_back(5);\n        else if (word == \"six\") nums.push_back(6);\n\
    \        else if (word == \"seven\") nums.push_back(7);\n        else if (word\
    \ == \"eight\") nums.push_back(8);\n        else if (word == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::string result;\n  \
    \  for (int i = 0; i < nums.size(); i++) {\n        if (i > 0) result += \" \"\
    ;\n        if (nums[i] == 0) result += \"zero\";\n        else if (nums[i] ==\
    \ 1) result += \"one\";\n        else if (nums[i] == 2) result += \"two\";\n \
    \       else if (nums[i] == 3) result += \"three\";\n        else if (nums[i]\
    \ == 4) result += \"four\";\n        else if (nums[i] == 5) result += \"five\"\
    ;\n        else if (nums[i] == 6) result += \"six\";\n        else if (nums[i]\
    \ == 7) result += \"seven\";\n        else if (nums[i] == 8) result += \"eight\"\
    ;\n        else if (nums[i] == 9) result += \"nine\";\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpvn8f8t7q.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string temp;\n    while (ss >> temp) {\n        if (temp == \"zero\"\
    ) nums.push_back(0);\n        else if (temp == \"one\") nums.push_back(1);\n \
    \       else if (temp == \"two\") nums.push_back(2);\n        else if (temp ==\
    \ \"three\") nums.push_back(3);\n        else if (temp == \"four\") nums.push_back(4);\n\
    \        else if (temp == \"five\") nums.push_back(5);\n        else if (temp\
    \ == \"six\") nums.push_back(6);\n        else if (temp == \"seven\") nums.push_back(7);\n\
    \        else if (temp == \"eight\") nums.push_back(8);\n        else if (temp\
    \ == \"nine\") nums.push_back(9);\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::stringstream ss2;\n    for (int i = 0; i < nums.size(); i++) {\n   \
    \     if (nums[i] == 0) ss2 << \"zero\";\n        else if (nums[i] == 1) ss2 <<\
    \ \"one\";\n        else if (nums[i] == 2) ss2 << \"two\";\n        else if (nums[i]\
    \ == 3) ss2 << \"three\";\n        else if (nums[i] == 4) ss2 << \"four\";\n \
    \       else if (nums[i] == 5) ss2 << \"five\";\n        else if (nums[i] == 6)\
    \ ss2 << \"six\";\n        else if (nums[i] == 7) ss2 << \"seven\";\n        else\
    \ if (nums[i] == 8) ss2 << \"eight\";\n        else if (nums[i] == 9) ss2 << \"\
    nine\";\n        if (i < nums.size() - 1) ss2 << \" \";\n    }\n    return ss2.str();\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpa_mw6je1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") nums.push_back(0);\n\
    \        else if (word == \"one\") nums.push_back(1);\n        else if (word ==\
    \ \"two\") nums.push_back(2);\n        else if (word == \"three\") nums.push_back(3);\n\
    \        else if (word == \"four\") nums.push_back(4);\n        else if (word\
    \ == \"five\") nums.push_back(5);\n        else if (word == \"six\") nums.push_back(6);\n\
    \        else if (word == \"seven\") nums.push_back(7);\n        else if (word\
    \ == \"eight\") nums.push_back(8);\n        else if (word == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::stringstream result;\n\
    \    for (int i = 0; i < nums.size(); i++) {\n        if (i > 0) result << \"\
    \ \";\n        if (nums[i] == 0) result << \"zero\";\n        else if (nums[i]\
    \ == 1) result << \"one\";\n        else if (nums[i] == 2) result << \"two\";\n\
    \        else if (nums[i] == 3) result << \"three\";\n        else if (nums[i]\
    \ == 4) result << \"four\";\n        else if (nums[i] == 5) result << \"five\"\
    ;\n        else if (nums[i] == 6) result << \"six\";\n        else if (nums[i]\
    \ == 7) result << \"seven\";\n        else if (nums[i] == 8) result << \"eight\"\
    ;\n        else if (nums[i] == 9) result << \"nine\";\n    }\n    return result.str();\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpkx_gy5y6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") nums.push_back(0);\n\
    \        else if (word == \"one\") nums.push_back(1);\n        else if (word ==\
    \ \"two\") nums.push_back(2);\n        else if (word == \"three\") nums.push_back(3);\n\
    \        else if (word == \"four\") nums.push_back(4);\n        else if (word\
    \ == \"five\") nums.push_back(5);\n        else if (word == \"six\") nums.push_back(6);\n\
    \        else if (word == \"seven\") nums.push_back(7);\n        else if (word\
    \ == \"eight\") nums.push_back(8);\n        else if (word == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::string result;\n  \
    \  for (int i = 0; i < nums.size(); i++) {\n        if (i > 0) result += \" \"\
    ;\n        if (nums[i] == 0) result += \"zero\";\n        else if (nums[i] ==\
    \ 1) result += \"one\";\n        else if (nums[i] == 2) result += \"two\";\n \
    \       else if (nums[i] == 3) result += \"three\";\n        else if (nums[i]\
    \ == 4) result += \"four\";\n        else if (nums[i] == 5) result += \"five\"\
    ;\n        else if (nums[i] == 6) result += \"six\";\n        else if (nums[i]\
    \ == 7) result += \"seven\";\n        else if (nums[i] == 8) result += \"eight\"\
    ;\n        else if (nums[i] == 9) result += \"nine\";\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpvn8f8t7q.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> nums;\n\
    \    std::string num;\n    while (ss >> num) {\n        if (num == \"zero\") nums.push_back(0);\n\
    \        else if (num == \"one\") nums.push_back(1);\n        else if (num ==\
    \ \"two\") nums.push_back(2);\n        else if (num == \"three\") nums.push_back(3);\n\
    \        else if (num == \"four\") nums.push_back(4);\n        else if (num ==\
    \ \"five\") nums.push_back(5);\n        else if (num == \"six\") nums.push_back(6);\n\
    \        else if (num == \"seven\") nums.push_back(7);\n        else if (num ==\
    \ \"eight\") nums.push_back(8);\n        else if (num == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::string result;\n  \
    \  for (int i = 0; i < nums.size(); i++) {\n        if (i != 0) result += \" \"\
    ;\n        if (nums[i] == 0) result += \"zero\";\n        else if (nums[i] ==\
    \ 1) result += \"one\";\n        else if (nums[i] == 2) result += \"two\";\n \
    \       else if (nums[i] == 3) result += \"three\";\n        else if (nums[i]\
    \ == 4) result += \"four\";\n        else if (nums[i] == 5) result += \"five\"\
    ;\n        else if (nums[i] == 6) result += \"six\";\n        else if (nums[i]\
    \ == 7) result += \"seven\";\n        else if (nums[i] == 8) result += \"eight\"\
    ;\n        else if (nums[i] == 9) result += \"nine\";\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2ue95qak.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string word;\n    while (ss >> word) {\n        if (word == \"zero\")\
    \ v.push_back(0);\n        else if (word == \"one\") v.push_back(1);\n       \
    \ else if (word == \"two\") v.push_back(2);\n        else if (word == \"three\"\
    ) v.push_back(3);\n        else if (word == \"four\") v.push_back(4);\n      \
    \  else if (word == \"five\") v.push_back(5);\n        else if (word == \"six\"\
    ) v.push_back(6);\n        else if (word == \"seven\") v.push_back(7);\n     \
    \   else if (word == \"eight\") v.push_back(8);\n        else if (word == \"nine\"\
    ) v.push_back(9);\n    }\n    std::sort(v.begin(), v.end());\n    std::stringstream\
    \ s;\n    for (int i = 0; i < v.size(); i++) {\n        if (i > 0) s << \" \"\
    ;\n        if (v[i] == 0) s << \"zero\";\n        else if (v[i] == 1) s << \"\
    one\";\n        else if (v[i] == 2) s << \"two\";\n        else if (v[i] == 3)\
    \ s << \"three\";\n        else if (v[i] == 4) s << \"four\";\n        else if\
    \ (v[i] == 5) s << \"five\";\n        else if (v[i] == 6) s << \"six\";\n    \
    \    else if (v[i] == 7) s << \"seven\";\n        else if (v[i] == 8) s << \"\
    eight\";\n        else if (v[i] == 9) s << \"nine\";\n    }\n    return s.str();\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp1hu9qw3a.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"zero\"\
    ) {\n            nums.push_back(0);\n        } else if (word == \"one\") {\n \
    \           nums.push_back(1);\n        } else if (word == \"two\") {\n      \
    \      nums.push_back(2);\n        } else if (word == \"three\") {\n         \
    \   nums.push_back(3);\n        } else if (word == \"four\") {\n            nums.push_back(4);\n\
    \        } else if (word == \"five\") {\n            nums.push_back(5);\n    \
    \    } else if (word == \"six\") {\n            nums.push_back(6);\n        }\
    \ else if (word == \"seven\") {\n            nums.push_back(7);\n        } else\
    \ if (word == \"eight\") {\n            nums.push_back(8);\n        } else if\
    \ (word == \"nine\") {\n            nums.push_back(9);\n        }\n    }\n   \
    \ std::sort(nums.begin(), nums.end());\n    std::string result;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        if (i != 0) {\n            result +=\
    \ \" \";\n        }\n        if (nums[i] == 0) {\n            result += \"zero\"\
    ;\n        } else if (nums[i] == 1) {\n            result += \"one\";\n      \
    \  } else if (nums[i] == 2) {\n            result += \"two\";\n        } else\
    \ if (nums[i] == 3) {\n            result += \"three\";\n        } else if (nums[i]\
    \ == 4) {\n            result += \"four\";\n        } else if (nums[i] == 5) {\n\
    \            result += \"five\";\n        } else if (nums[i] == 6) {\n       \
    \     result += \"six\";\n        } else if (nums[i] == 7) {\n            result\
    \ += \"seven\";\n        } else if\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpv3sxm8ju.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string token;\n   \
    \ std::vector<int> v;\n    while(ss >> token) {\n        if(token == \"zero\"\
    ) v.push_back(0);\n        else if(token == \"one\") v.push_back(1);\n       \
    \ else if(token == \"two\") v.push_back(2);\n        else if(token == \"three\"\
    ) v.push_back(3);\n        else if(token == \"four\") v.push_back(4);\n      \
    \  else if(token == \"five\") v.push_back(5);\n        else if(token == \"six\"\
    ) v.push_back(6);\n        else if(token == \"seven\") v.push_back(7);\n     \
    \   else if(token == \"eight\") v.push_back(8);\n        else if(token == \"nine\"\
    ) v.push_back(9);\n    }\n    std::sort(v.begin(), v.end());\n    std::string\
    \ res = \"\";\n    for(int i = 0; i < v.size(); i++) {\n        if(v[i] == 0)\
    \ res += \"zero \";\n        else if(v[i] == 1) res += \"one \";\n        else\
    \ if(v[i] == 2) res += \"two \";\n        else if(v[i] == 3) res += \"three \"\
    ;\n        else if(v[i] == 4) res += \"four \";\n        else if(v[i] == 5) res\
    \ += \"five \";\n        else if(v[i] == 6) res += \"six \";\n        else if(v[i]\
    \ == 7) res += \"seven \";\n        else if(v[i] == 8) res += \"eight \";\n  \
    \      else if(v[i] == 9) res += \"nine \";\n    }\n    return res;\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp6rvyt3_r.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"zero\"\
    ) nums.push_back(0);\n        else if (word == \"one\") nums.push_back(1);\n \
    \       else if (word == \"two\") nums.push_back(2);\n        else if (word ==\
    \ \"three\") nums.push_back(3);\n        else if (word == \"four\") nums.push_back(4);\n\
    \        else if (word == \"five\") nums.push_back(5);\n        else if (word\
    \ == \"six\") nums.push_back(6);\n        else if (word == \"seven\") nums.push_back(7);\n\
    \        else if (word == \"eight\") nums.push_back(8);\n        else if (word\
    \ == \"nine\") nums.push_back(9);\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::stringstream out;\n    for (int i = 0; i < nums.size(); i++) {\n   \
    \     if (i != 0) out << \" \";\n        if (nums[i] == 0) out << \"zero\";\n\
    \        else if (nums[i] == 1) out << \"one\";\n        else if (nums[i] == 2)\
    \ out << \"two\";\n        else if (nums[i] == 3) out << \"three\";\n        else\
    \ if (nums[i] == 4) out << \"four\";\n        else if (nums[i] == 5) out << \"\
    five\";\n        else if (nums[i] == 6) out << \"six\";\n        else if (nums[i]\
    \ == 7) out << \"seven\";\n        else if (nums[i] == 8) out << \"eight\";\n\
    \        else if (nums[i] == 9) out << \"nine\";\n    }\n    return out.str();\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpc08aipdk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n  std::vector<int> nums;\n  std::stringstream ss(numbers);\n  std::string\
    \ temp;\n  while (ss >> temp) {\n    if (temp == \"zero\")\n      nums.push_back(0);\n\
    \    else if (temp == \"one\")\n      nums.push_back(1);\n    else if (temp ==\
    \ \"two\")\n      nums.push_back(2);\n    else if (temp == \"three\")\n      nums.push_back(3);\n\
    \    else if (temp == \"four\")\n      nums.push_back(4);\n    else if (temp ==\
    \ \"five\")\n      nums.push_back(5);\n    else if (temp == \"six\")\n      nums.push_back(6);\n\
    \    else if (temp == \"seven\")\n      nums.push_back(7);\n    else if (temp\
    \ == \"eight\")\n      nums.push_back(8);\n    else if (temp == \"nine\")\n  \
    \    nums.push_back(9);\n  }\n  std::sort(nums.begin(), nums.end());\n  std::string\
    \ result;\n  for (int i = 0; i < nums.size(); i++) {\n    if (nums[i] == 0)\n\
    \      result += \"zero \";\n    else if (nums[i] == 1)\n      result += \"one\
    \ \";\n    else if (nums[i] == 2)\n      result += \"two \";\n    else if (nums[i]\
    \ == 3)\n      result += \"three \";\n    else if (nums[i] == 4)\n      result\
    \ += \"four \";\n    else if (nums[i] == 5)\n      result += \"five \";\n    else\
    \ if (nums[i] == 6)\n      result += \"six \";\n    else if (nums[i] == 7)\n \
    \     result += \"seven \";\n    else if (nums[i] == 8)\n      result += \"eight\
    \ \";\n    else if (nums[i] == 9)\n      result += \"nine \";\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpv9tlee6r.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string temp;\n    std::vector<int>\
    \ v;\n    while(ss >> temp) {\n        if(temp == \"zero\") v.push_back(0);\n\
    \        else if(temp == \"one\") v.push_back(1);\n        else if(temp == \"\
    two\") v.push_back(2);\n        else if(temp == \"three\") v.push_back(3);\n \
    \       else if(temp == \"four\") v.push_back(4);\n        else if(temp == \"\
    five\") v.push_back(5);\n        else if(temp == \"six\") v.push_back(6);\n  \
    \      else if(temp == \"seven\") v.push_back(7);\n        else if(temp == \"\
    eight\") v.push_back(8);\n        else if(temp == \"nine\") v.push_back(9);\n\
    \    }\n    std::sort(v.begin(), v.end());\n    std::string result;\n    for(int\
    \ i = 0; i < v.size(); i++) {\n        if(v[i] == 0) result += \"zero \";\n  \
    \      else if(v[i] == 1) result += \"one \";\n        else if(v[i] == 2) result\
    \ += \"two \";\n        else if(v[i] == 3) result += \"three \";\n        else\
    \ if(v[i] == 4) result += \"four \";\n        else if(v[i] == 5) result += \"\
    five \";\n        else if(v[i] == 6) result += \"six \";\n        else if(v[i]\
    \ == 7) result += \"seven \";\n        else if(v[i] == 8) result += \"eight \"\
    ;\n        else if(v[i] == 9) result += \"nine \";\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpliyhcmyh.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n\tstd::stringstream ss(numbers);\n\tstd::string word;\n\tstd::vector<int>\
    \ nums;\n\twhile (ss >> word) {\n\t\tif (word == \"zero\") {\n\t\t\tnums.push_back(0);\n\
    \t\t}\n\t\telse if (word == \"one\") {\n\t\t\tnums.push_back(1);\n\t\t}\n\t\t\
    else if (word == \"two\") {\n\t\t\tnums.push_back(2);\n\t\t}\n\t\telse if (word\
    \ == \"three\") {\n\t\t\tnums.push_back(3);\n\t\t}\n\t\telse if (word == \"four\"\
    ) {\n\t\t\tnums.push_back(4);\n\t\t}\n\t\telse if (word == \"five\") {\n\t\t\t\
    nums.push_back(5);\n\t\t}\n\t\telse if (word == \"six\") {\n\t\t\tnums.push_back(6);\n\
    \t\t}\n\t\telse if (word == \"seven\") {\n\t\t\tnums.push_back(7);\n\t\t}\n\t\t\
    else if (word == \"eight\") {\n\t\t\tnums.push_back(8);\n\t\t}\n\t\telse if (word\
    \ == \"nine\") {\n\t\t\tnums.push_back(9);\n\t\t}\n\t}\n\tstd::sort(nums.begin(),\
    \ nums.end());\n\tstd::string result = \"\";\n\tfor (int i = 0; i < nums.size();\
    \ i++) {\n\t\tif (nums[i] == 0) {\n\t\t\tresult += \"zero \";\n\t\t}\n\t\telse\
    \ if (nums[i] == 1) {\n\t\t\tresult += \"one \";\n\t\t}\n\t\telse if (nums[i]\
    \ == 2) {\n\t\t\tresult += \"two \";\n\t\t}\n\t\telse if (nums[i] == 3) {\n\t\t\
    \tresult += \"three \";\n\t\t}\n\t\telse if (nums[i] == 4) {\n\t\t\tresult +=\
    \ \"four\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpunsjybgx.cpp:58:14: warning: missing terminating \" character [enabled\
    \ by default]\n    result += \"four\n              ^\n/tmp/tmpunsjybgx.cpp:58:4:\
    \ error: missing terminating \" character\n    result += \"four\n    ^\nIn file\
    \ included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpunsjybgx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string temp;\n    while (ss >> temp) {\n        if (temp == \"zero\"\
    ) nums.push_back(0);\n        else if (temp == \"one\") nums.push_back(1);\n \
    \       else if (temp == \"two\") nums.push_back(2);\n        else if (temp ==\
    \ \"three\") nums.push_back(3);\n        else if (temp == \"four\") nums.push_back(4);\n\
    \        else if (temp == \"five\") nums.push_back(5);\n        else if (temp\
    \ == \"six\") nums.push_back(6);\n        else if (temp == \"seven\") nums.push_back(7);\n\
    \        else if (temp == \"eight\") nums.push_back(8);\n        else if (temp\
    \ == \"nine\") nums.push_back(9);\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::string result;\n    for (int i = 0; i < nums.size(); i++) {\n      \
    \  if (nums[i] == 0) result += \"zero \";\n        else if (nums[i] == 1) result\
    \ += \"one \";\n        else if (nums[i] == 2) result += \"two \";\n        else\
    \ if (nums[i] == 3) result += \"three \";\n        else if (nums[i] == 4) result\
    \ += \"four \";\n        else if (nums[i] == 5) result += \"five \";\n       \
    \ else if (nums[i] == 6) result += \"six \";\n        else if (nums[i] == 7) result\
    \ += \"seven \";\n        else if (nums[i] == 8) result += \"eight \";\n     \
    \   else if (nums[i] == 9) result += \"nine \";\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2a_t6boz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string s;\n    while(ss >> s) {\n        if(s == \"zero\") v.push_back(0);\n\
    \        else if(s == \"one\") v.push_back(1);\n        else if(s == \"two\")\
    \ v.push_back(2);\n        else if(s == \"three\") v.push_back(3);\n        else\
    \ if(s == \"four\") v.push_back(4);\n        else if(s == \"five\") v.push_back(5);\n\
    \        else if(s == \"six\") v.push_back(6);\n        else if(s == \"seven\"\
    ) v.push_back(7);\n        else if(s == \"eight\") v.push_back(8);\n        else\
    \ if(s == \"nine\") v.push_back(9);\n    }\n    std::sort(v.begin(), v.end());\n\
    \    std::stringstream ss2;\n    for(int i = 0; i < v.size(); i++) {\n       \
    \ if(i) ss2 << \" \";\n        if(v[i] == 0) ss2 << \"zero\";\n        else if(v[i]\
    \ == 1) ss2 << \"one\";\n        else if(v[i] == 2) ss2 << \"two\";\n        else\
    \ if(v[i] == 3) ss2 << \"three\";\n        else if(v[i] == 4) ss2 << \"four\"\
    ;\n        else if(v[i] == 5) ss2 << \"five\";\n        else if(v[i] == 6) ss2\
    \ << \"six\";\n        else if(v[i] == 7) ss2 << \"seven\";\n        else if(v[i]\
    \ == 8) ss2 << \"eight\";\n        else if(v[i] == 9) ss2 << \"nine\";\n    }\n\
    \    return ss2.str();\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2k2hznef.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"zero\"\
    ) {\n            nums.push_back(0);\n        } else if (word == \"one\") {\n \
    \           nums.push_back(1);\n        } else if (word == \"two\") {\n      \
    \      nums.push_back(2);\n        } else if (word == \"three\") {\n         \
    \   nums.push_back(3);\n        } else if (word == \"four\") {\n            nums.push_back(4);\n\
    \        } else if (word == \"five\") {\n            nums.push_back(5);\n    \
    \    } else if (word == \"six\") {\n            nums.push_back(6);\n        }\
    \ else if (word == \"seven\") {\n            nums.push_back(7);\n        } else\
    \ if (word == \"eight\") {\n            nums.push_back(8);\n        } else if\
    \ (word == \"nine\") {\n            nums.push_back(9);\n        }\n    }\n   \
    \ std::sort(nums.begin(), nums.end());\n    std::string result;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        if (i > 0) {\n            result +=\
    \ \" \";\n        }\n        if (nums[i] == 0) {\n            result += \"zero\"\
    ;\n        } else if (nums[i] == 1) {\n            result += \"one\";\n      \
    \  } else if (nums[i] == 2) {\n            result += \"two\";\n        } else\
    \ if (nums[i] == 3) {\n            result += \"three\";\n        } else if (nums[i]\
    \ == 4) {\n            result += \"four\";\n        } else if (nums[i] == 5) {\n\
    \            result += \"five\";\n        } else if (nums[i] == 6) {\n       \
    \     result += \"six\";\n        } else if (nums[i] == 7) {\n            result\
    \ += \"seven\";\n        } else if\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpv6b_368o.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n\tstd::stringstream ss(numbers);\n\tstd::string temp;\n\tstd::vector<int>\
    \ nums;\n\twhile (ss >> temp) {\n\t\tif (temp == \"zero\") nums.push_back(0);\n\
    \t\telse if (temp == \"one\") nums.push_back(1);\n\t\telse if (temp == \"two\"\
    ) nums.push_back(2);\n\t\telse if (temp == \"three\") nums.push_back(3);\n\t\t\
    else if (temp == \"four\") nums.push_back(4);\n\t\telse if (temp == \"five\")\
    \ nums.push_back(5);\n\t\telse if (temp == \"six\") nums.push_back(6);\n\t\telse\
    \ if (temp == \"seven\") nums.push_back(7);\n\t\telse if (temp == \"eight\") nums.push_back(8);\n\
    \t\telse if (temp == \"nine\") nums.push_back(9);\n\t}\n\tstd::sort(nums.begin(),\
    \ nums.end());\n\tstd::stringstream ss2;\n\tfor (int i = 0; i < nums.size(); i++)\
    \ {\n\t\tif (nums[i] == 0) ss2 << \"zero\";\n\t\telse if (nums[i] == 1) ss2 <<\
    \ \"one\";\n\t\telse if (nums[i] == 2) ss2 << \"two\";\n\t\telse if (nums[i] ==\
    \ 3) ss2 << \"three\";\n\t\telse if (nums[i] == 4) ss2 << \"four\";\n\t\telse\
    \ if (nums[i] == 5) ss2 << \"five\";\n\t\telse if (nums[i] == 6) ss2 << \"six\"\
    ;\n\t\telse if (nums[i] == 7) ss2 << \"seven\";\n\t\telse if (nums[i] == 8) ss2\
    \ << \"eight\";\n\t\telse if (nums[i] == 9) ss2 << \"nine\";\n\t\tif (i < nums.size()\
    \ - 1) ss2 << \" \";\n\t}\n\treturn ss2\n}\nint main() {\n    auto candidate =\
    \ sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpig06m52g.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string s;\n    while(ss >> s) {\n        if(s == \"zero\") v.push_back(0);\n\
    \        else if(s == \"one\") v.push_back(1);\n        else if(s == \"two\")\
    \ v.push_back(2);\n        else if(s == \"three\") v.push_back(3);\n        else\
    \ if(s == \"four\") v.push_back(4);\n        else if(s == \"five\") v.push_back(5);\n\
    \        else if(s == \"six\") v.push_back(6);\n        else if(s == \"seven\"\
    ) v.push_back(7);\n        else if(s == \"eight\") v.push_back(8);\n        else\
    \ if(s == \"nine\") v.push_back(9);\n    }\n    std::sort(v.begin(), v.end());\n\
    \    std::string ans;\n    for(int i = 0; i < v.size(); i++) {\n        if(i !=\
    \ 0) ans += \" \";\n        if(v[i] == 0) ans += \"zero\";\n        else if(v[i]\
    \ == 1) ans += \"one\";\n        else if(v[i] == 2) ans += \"two\";\n        else\
    \ if(v[i] == 3) ans += \"three\";\n        else if(v[i] == 4) ans += \"four\"\
    ;\n        else if(v[i] == 5) ans += \"five\";\n        else if(v[i] == 6) ans\
    \ += \"six\";\n        else if(v[i] == 7) ans += \"seven\";\n        else if(v[i]\
    \ == 8) ans += \"eight\";\n        else if(v[i] == 9) ans += \"nine\";\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp_pngwxxj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string word;\n    while (ss >> word) {\n        if (word == \"zero\")\
    \ {\n            v.push_back(0);\n        } else if (word == \"one\") {\n    \
    \        v.push_back(1);\n        } else if (word == \"two\") {\n            v.push_back(2);\n\
    \        } else if (word == \"three\") {\n            v.push_back(3);\n      \
    \  } else if (word == \"four\") {\n            v.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            v.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            v.push_back(6);\n        } else if (word == \"seven\"\
    ) {\n            v.push_back(7);\n        } else if (word == \"eight\") {\n  \
    \          v.push_back(8);\n        } else if (word == \"nine\") {\n         \
    \   v.push_back(9);\n        }\n    }\n    std::sort(v.begin(), v.end());\n  \
    \  std::stringstream result;\n    for (int i = 0; i < v.size(); i++) {\n     \
    \   if (i != 0) {\n            result << \" \";\n        }\n        if (v[i] ==\
    \ 0) {\n            result << \"zero\";\n        } else if (v[i] == 1) {\n   \
    \         result << \"one\";\n        } else if (v[i] == 2) {\n            result\
    \ << \"two\";\n        } else if (v[i] == 3) {\n            result << \"three\"\
    ;\n        } else if (v[i] == 4) {\n            result << \"four\";\n        }\
    \ else if (v[i] == 5) {\n            result << \"five\";\n        } else if (v[i]\
    \ == 6) {\n            result << \"six\";\n        } else if (v[i] == 7) {\n \
    \           result << \"seven\";\n        } else if (v[i] == 8) {\n          \
    \  result << \"eight\";\n        } else if\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpx8hueaj7.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") nums.push_back(0);\n\
    \        else if (word == \"one\") nums.push_back(1);\n        else if (word ==\
    \ \"two\") nums.push_back(2);\n        else if (word == \"three\") nums.push_back(3);\n\
    \        else if (word == \"four\") nums.push_back(4);\n        else if (word\
    \ == \"five\") nums.push_back(5);\n        else if (word == \"six\") nums.push_back(6);\n\
    \        else if (word == \"seven\") nums.push_back(7);\n        else if (word\
    \ == \"eight\") nums.push_back(8);\n        else if (word == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::string result;\n  \
    \  for (int i = 0; i < nums.size(); i++) {\n        if (i != 0) result += \" \"\
    ;\n        if (nums[i] == 0) result += \"zero\";\n        else if (nums[i] ==\
    \ 1) result += \"one\";\n        else if (nums[i] == 2) result += \"two\";\n \
    \       else if (nums[i] == 3) result += \"three\";\n        else if (nums[i]\
    \ == 4) result += \"four\";\n        else if (nums[i] == 5) result += \"five\"\
    ;\n        else if (nums[i] == 6) result += \"six\";\n        else if (nums[i]\
    \ == 7) result += \"seven\";\n        else if (nums[i] == 8) result += \"eight\"\
    ;\n        else if (nums[i] == 9) result += \"nine\";\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp6sxp8tdo.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"zero\"\
    ) nums.push_back(0);\n        else if (word == \"one\") nums.push_back(1);\n \
    \       else if (word == \"two\") nums.push_back(2);\n        else if (word ==\
    \ \"three\") nums.push_back(3);\n        else if (word == \"four\") nums.push_back(4);\n\
    \        else if (word == \"five\") nums.push_back(5);\n        else if (word\
    \ == \"six\") nums.push_back(6);\n        else if (word == \"seven\") nums.push_back(7);\n\
    \        else if (word == \"eight\") nums.push_back(8);\n        else if (word\
    \ == \"nine\") nums.push_back(9);\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::string res;\n    for (int i = 0; i < nums.size(); i++) {\n        if\
    \ (i != 0) res += \" \";\n        if (nums[i] == 0) res += \"zero\";\n       \
    \ else if (nums[i] == 1) res += \"one\";\n        else if (nums[i] == 2) res +=\
    \ \"two\";\n        else if (nums[i] == 3) res += \"three\";\n        else if\
    \ (nums[i] == 4) res += \"four\";\n        else if (nums[i] == 5) res += \"five\"\
    ;\n        else if (nums[i] == 6) res += \"six\";\n        else if (nums[i] ==\
    \ 7) res += \"seven\";\n        else if (nums[i] == 8) res += \"eight\";\n   \
    \     else if (nums[i] == 9) res += \"nine\";\n    }\n    return res;\n}\nint\
    \ main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp8x6t87bm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n  std::stringstream ss(numbers);\n  std::vector<int> v;\n  std::string\
    \ word;\n  while (ss >> word) {\n    if (word == \"zero\") v.push_back(0);\n \
    \   else if (word == \"one\") v.push_back(1);\n    else if (word == \"two\") v.push_back(2);\n\
    \    else if (word == \"three\") v.push_back(3);\n    else if (word == \"four\"\
    ) v.push_back(4);\n    else if (word == \"five\") v.push_back(5);\n    else if\
    \ (word == \"six\") v.push_back(6);\n    else if (word == \"seven\") v.push_back(7);\n\
    \    else if (word == \"eight\") v.push_back(8);\n    else if (word == \"nine\"\
    ) v.push_back(9);\n  }\n  std::sort(v.begin(), v.end());\n  std::stringstream\
    \ out;\n  for (auto i : v) {\n    if (i == 0) out << \"zero \";\n    else if (i\
    \ == 1) out << \"one \";\n    else if (i == 2) out << \"two \";\n    else if (i\
    \ == 3) out << \"three \";\n    else if (i == 4) out << \"four \";\n    else if\
    \ (i == 5) out << \"five \";\n    else if (i == 6) out << \"six \";\n    else\
    \ if (i == 7) out << \"seven \";\n    else if (i == 8) out << \"eight \";\n  \
    \  else if (i == 9) out << \"nine \";\n  }\n  return out.str();\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2ixiqg5c.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\")\n           \
    \ nums.push_back(0);\n        else if (word == \"one\")\n            nums.push_back(1);\n\
    \        else if (word == \"two\")\n            nums.push_back(2);\n        else\
    \ if (word == \"three\")\n            nums.push_back(3);\n        else if (word\
    \ == \"four\")\n            nums.push_back(4);\n        else if (word == \"five\"\
    )\n            nums.push_back(5);\n        else if (word == \"six\")\n       \
    \     nums.push_back(6);\n        else if (word == \"seven\")\n            nums.push_back(7);\n\
    \        else if (word == \"eight\")\n            nums.push_back(8);\n       \
    \ else if (word == \"nine\")\n            nums.push_back(9);\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::string result;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        if (i == 0) {\n            if (nums[i] == 0)\n             \
    \   result += \"zero\";\n            else if (nums[i] == 1)\n                result\
    \ += \"one\";\n            else if (nums[i] == 2)\n                result += \"\
    two\";\n            else if (nums[i] == 3)\n                result += \"three\"\
    ;\n            else if (nums[i] == 4)\n                result += \"four\";\n \
    \           else if (nums[i] == 5)\n                result += \"five\";\n    \
    \        else if (nums[i] == 6)\n                result += \"six\";\n        \
    \    else if (nums[i] == 7)\n                result += \"seven\";\n          \
    \  else if (nums[i] == 8)\n                result += \"eight\";\n            else\
    \ if (nums[i] == 9)\n                result += \"nine\";\n        }\n        else\
    \ {\n            if (n\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpn_u76kmp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") nums.push_back(0);\n\
    \        else if (word == \"one\") nums.push_back(1);\n        else if (word ==\
    \ \"two\") nums.push_back(2);\n        else if (word == \"three\") nums.push_back(3);\n\
    \        else if (word == \"four\") nums.push_back(4);\n        else if (word\
    \ == \"five\") nums.push_back(5);\n        else if (word == \"six\") nums.push_back(6);\n\
    \        else if (word == \"seven\") nums.push_back(7);\n        else if (word\
    \ == \"eight\") nums.push_back(8);\n        else if (word == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::stringstream result;\n\
    \    for (int i = 0; i < nums.size(); i++) {\n        if (i > 0) result << \"\
    \ \";\n        if (nums[i] == 0) result << \"zero\";\n        else if (nums[i]\
    \ == 1) result << \"one\";\n        else if (nums[i] == 2) result << \"two\";\n\
    \        else if (nums[i] == 3) result << \"three\";\n        else if (nums[i]\
    \ == 4) result << \"four\";\n        else if (nums[i] == 5) result << \"five\"\
    ;\n        else if (nums[i] == 6) result << \"six\";\n        else if (nums[i]\
    \ == 7) result << \"seven\";\n        else if (nums[i] == 8) result << \"eight\"\
    ;\n        else if (nums[i] == 9) result << \"nine\";\n    }\n    return result.str();\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpkx_gy5y6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ v;\n    while(ss >> word) {\n        if(word == \"zero\") v.push_back(0);\n\
    \        else if(word == \"one\") v.push_back(1);\n        else if(word == \"\
    two\") v.push_back(2);\n        else if(word == \"three\") v.push_back(3);\n \
    \       else if(word == \"four\") v.push_back(4);\n        else if(word == \"\
    five\") v.push_back(5);\n        else if(word == \"six\") v.push_back(6);\n  \
    \      else if(word == \"seven\") v.push_back(7);\n        else if(word == \"\
    eight\") v.push_back(8);\n        else if(word == \"nine\") v.push_back(9);\n\
    \    }\n    std::sort(v.begin(), v.end());\n    std::stringstream s;\n    for(int\
    \ i = 0; i < v.size(); i++) {\n        if(v[i] == 0) s << \"zero\";\n        else\
    \ if(v[i] == 1) s << \"one\";\n        else if(v[i] == 2) s << \"two\";\n    \
    \    else if(v[i] == 3) s << \"three\";\n        else if(v[i] == 4) s << \"four\"\
    ;\n        else if(v[i] == 5) s << \"five\";\n        else if(v[i] == 6) s <<\
    \ \"six\";\n        else if(v[i] == 7) s << \"seven\";\n        else if(v[i] ==\
    \ 8) s << \"eight\";\n        else if(v[i] == 9) s << \"nine\";\n        if(i\
    \ != v.size() - 1) s << \" \";\n    }\n    return s.str();\n}\nint main() {\n\
    \    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpojnuivk1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") nums.push_back(0);\n\
    \        else if (word == \"one\") nums.push_back(1);\n        else if (word ==\
    \ \"two\") nums.push_back(2);\n        else if (word == \"three\") nums.push_back(3);\n\
    \        else if (word == \"four\") nums.push_back(4);\n        else if (word\
    \ == \"five\") nums.push_back(5);\n        else if (word == \"six\") nums.push_back(6);\n\
    \        else if (word == \"seven\") nums.push_back(7);\n        else if (word\
    \ == \"eight\") nums.push_back(8);\n        else if (word == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::string res;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        if (i != 0) res += \" \";\n   \
    \     if (nums[i] == 0) res += \"zero\";\n        else if (nums[i] == 1) res +=\
    \ \"one\";\n        else if (nums[i] == 2) res += \"two\";\n        else if (nums[i]\
    \ == 3) res += \"three\";\n        else if (nums[i] == 4) res += \"four\";\n \
    \       else if (nums[i] == 5) res += \"five\";\n        else if (nums[i] == 6)\
    \ res += \"six\";\n        else if (nums[i] == 7) res += \"seven\";\n        else\
    \ if (nums[i] == 8) res += \"eight\";\n        else if (nums[i] == 9) res += \"\
    nine\";\n    }\n    return res;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2hwkxkfi.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string temp;\n    while (ss >> temp) {\n        if (temp == \"zero\"\
    ) nums.push_back(0);\n        else if (temp == \"one\") nums.push_back(1);\n \
    \       else if (temp == \"two\") nums.push_back(2);\n        else if (temp ==\
    \ \"three\") nums.push_back(3);\n        else if (temp == \"four\") nums.push_back(4);\n\
    \        else if (temp == \"five\") nums.push_back(5);\n        else if (temp\
    \ == \"six\") nums.push_back(6);\n        else if (temp == \"seven\") nums.push_back(7);\n\
    \        else if (temp == \"eight\") nums.push_back(8);\n        else if (temp\
    \ == \"nine\") nums.push_back(9);\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::stringstream result;\n    for (int i = 0; i < nums.size(); i++) {\n\
    \        if (i != 0) result << \" \";\n        if (nums[i] == 0) result << \"\
    zero\";\n        else if (nums[i] == 1) result << \"one\";\n        else if (nums[i]\
    \ == 2) result << \"two\";\n        else if (nums[i] == 3) result << \"three\"\
    ;\n        else if (nums[i] == 4) result << \"four\";\n        else if (nums[i]\
    \ == 5) result << \"five\";\n        else if (nums[i] == 6) result << \"six\"\
    ;\n        else if (nums[i] == 7) result << \"seven\";\n        else if (nums[i]\
    \ == 8) result << \"eight\";\n        else if (nums[i] == 9) result << \"nine\"\
    ;\n    }\n    return result.str();\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp8l11541o.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string s;\n    while(ss >> s) {\n        if(s == \"zero\") v.push_back(0);\n\
    \        else if(s == \"one\") v.push_back(1);\n        else if(s == \"two\")\
    \ v.push_back(2);\n        else if(s == \"three\") v.push_back(3);\n        else\
    \ if(s == \"four\") v.push_back(4);\n        else if(s == \"five\") v.push_back(5);\n\
    \        else if(s == \"six\") v.push_back(6);\n        else if(s == \"seven\"\
    ) v.push_back(7);\n        else if(s == \"eight\") v.push_back(8);\n        else\
    \ if(s == \"nine\") v.push_back(9);\n    }\n    std::sort(v.begin(), v.end());\n\
    \    std::string ans;\n    for(auto i : v) {\n        if(i == 0) ans += \"zero\
    \ \";\n        else if(i == 1) ans += \"one \";\n        else if(i == 2) ans +=\
    \ \"two \";\n        else if(i == 3) ans += \"three \";\n        else if(i ==\
    \ 4) ans += \"four \";\n        else if(i == 5) ans += \"five \";\n        else\
    \ if(i == 6) ans += \"six \";\n        else if(i == 7) ans += \"seven \";\n  \
    \      else if(i == 8) ans += \"eight \";\n        else if(i == 9) ans += \"nine\
    \ \";\n    }\n    return ans;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp1q6qt1hj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string word;\n    while (ss >> word) {\n        if (word == \"zero\")\
    \ {\n            v.push_back(0);\n        } else if (word == \"one\") {\n    \
    \        v.push_back(1);\n        } else if (word == \"two\") {\n            v.push_back(2);\n\
    \        } else if (word == \"three\") {\n            v.push_back(3);\n      \
    \  } else if (word == \"four\") {\n            v.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            v.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            v.push_back(6);\n        } else if (word == \"seven\"\
    ) {\n            v.push_back(7);\n        } else if (word == \"eight\") {\n  \
    \          v.push_back(8);\n        } else if (word == \"nine\") {\n         \
    \   v.push_back(9);\n        }\n    }\n    std::sort(v.begin(), v.end());\n  \
    \  std::string result;\n    for (int i = 0; i < v.size(); i++) {\n        if (v[i]\
    \ == 0) {\n            result += \"zero\";\n        } else if (v[i] == 1) {\n\
    \            result += \"one\";\n        } else if (v[i] == 2) {\n           \
    \ result += \"two\";\n        } else if (v[i] == 3) {\n            result += \"\
    three\";\n        } else if (v[i] == 4) {\n            result += \"four\";\n \
    \       } else if (v[i] == 5) {\n            result += \"five\";\n        } else\
    \ if (v[i] == 6) {\n            result += \"six\";\n        } else if (v[i] ==\
    \ 7) {\n            result += \"seven\";\n        } else if (v[i] == 8) {\n  \
    \          result += \"eight\";\n        } else if (v[i] == 9) {\n           \
    \ result += \"nine\";\n        }\n\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp8serbuq0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string temp;\n    while (ss >> temp) {\n        if (temp == \"zero\"\
    ) {\n            nums.push_back(0);\n        } else if (temp == \"one\") {\n \
    \           nums.push_back(1);\n        } else if (temp == \"two\") {\n      \
    \      nums.push_back(2);\n        } else if (temp == \"three\") {\n         \
    \   nums.push_back(3);\n        } else if (temp == \"four\") {\n            nums.push_back(4);\n\
    \        } else if (temp == \"five\") {\n            nums.push_back(5);\n    \
    \    } else if (temp == \"six\") {\n            nums.push_back(6);\n        }\
    \ else if (temp == \"seven\") {\n            nums.push_back(7);\n        } else\
    \ if (temp == \"eight\") {\n            nums.push_back(8);\n        } else if\
    \ (temp == \"nine\") {\n            nums.push_back(9);\n        }\n    }\n   \
    \ std::sort(nums.begin(), nums.end());\n    std::string res = \"\";\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        if (nums[i] == 0) {\n            res\
    \ += \"zero\";\n        } else if (nums[i] == 1) {\n            res += \"one\"\
    ;\n        } else if (nums[i] == 2) {\n            res += \"two\";\n        }\
    \ else if (nums[i] == 3) {\n            res += \"three\";\n        } else if (nums[i]\
    \ == 4) {\n            res += \"four\";\n        } else if (nums[i] == 5) {\n\
    \            res += \"five\";\n        } else if (nums[i] == 6) {\n          \
    \  res += \"six\";\n        } else if (nums[i] == 7) {\n            res += \"\
    seven\";\n        } else if (nums[i] == 8) {\n            res += \"eight\";\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp8dhrq0pt.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string temp;\n    while (ss >> temp) {\n        if (temp == \"zero\"\
    ) {\n            nums.push_back(0);\n        } else if (temp == \"one\") {\n \
    \           nums.push_back(1);\n        } else if (temp == \"two\") {\n      \
    \      nums.push_back(2);\n        } else if (temp == \"three\") {\n         \
    \   nums.push_back(3);\n        } else if (temp == \"four\") {\n            nums.push_back(4);\n\
    \        } else if (temp == \"five\") {\n            nums.push_back(5);\n    \
    \    } else if (temp == \"six\") {\n            nums.push_back(6);\n        }\
    \ else if (temp == \"seven\") {\n            nums.push_back(7);\n        } else\
    \ if (temp == \"eight\") {\n            nums.push_back(8);\n        } else if\
    \ (temp == \"nine\") {\n            nums.push_back(9);\n        }\n    }\n   \
    \ std::sort(nums.begin(), nums.end());\n    std::string result;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        if (nums[i] == 0) {\n            result\
    \ += \"zero\";\n        } else if (nums[i] == 1) {\n            result += \"one\"\
    ;\n        } else if (nums[i] == 2) {\n            result += \"two\";\n      \
    \  } else if (nums[i] == 3) {\n            result += \"three\";\n        } else\
    \ if (nums[i] == 4) {\n            result += \"four\";\n        } else if (nums[i]\
    \ == 5) {\n            result += \"five\";\n        } else if (nums[i] == 6) {\n\
    \            result += \"six\";\n        } else if (nums[i] == 7) {\n        \
    \    result += \"seven\";\n        } else if (nums[i] == 8) {\n            result\
    \ += \"eight\";\n       \n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpjx0dtifl.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string temp;\n    while(ss >> temp) {\n        if(temp == \"zero\")\n\
    \            v.push_back(0);\n        else if(temp == \"one\")\n            v.push_back(1);\n\
    \        else if(temp == \"two\")\n            v.push_back(2);\n        else if(temp\
    \ == \"three\")\n            v.push_back(3);\n        else if(temp == \"four\"\
    )\n            v.push_back(4);\n        else if(temp == \"five\")\n          \
    \  v.push_back(5);\n        else if(temp == \"six\")\n            v.push_back(6);\n\
    \        else if(temp == \"seven\")\n            v.push_back(7);\n        else\
    \ if(temp == \"eight\")\n            v.push_back(8);\n        else if(temp ==\
    \ \"nine\")\n            v.push_back(9);\n    }\n    std::sort(v.begin(), v.end());\n\
    \    std::stringstream s;\n    for(int i = 0; i < v.size(); i++) {\n        if(v[i]\
    \ == 0)\n            s << \"zero\";\n        else if(v[i] == 1)\n            s\
    \ << \"one\";\n        else if(v[i] == 2)\n            s << \"two\";\n       \
    \ else if(v[i] == 3)\n            s << \"three\";\n        else if(v[i] == 4)\n\
    \            s << \"four\";\n        else if(v[i] == 5)\n            s << \"five\"\
    ;\n        else if(v[i] == 6)\n            s << \"six\";\n        else if(v[i]\
    \ == 7)\n            s << \"seven\";\n        else if(v[i] == 8)\n           \
    \ s << \"eight\";\n        else if(v[i] == 9)\n            s << \"nine\";\n  \
    \      if(i != v.size() - 1)\n            s << \" \";\n    }\n    return s.str();\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp6sp6pzv_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string temp;\n    while (ss >> temp) {\n        if (temp == \"zero\"\
    ) {\n            nums.push_back(0);\n        } else if (temp == \"one\") {\n \
    \           nums.push_back(1);\n        } else if (temp == \"two\") {\n      \
    \      nums.push_back(2);\n        } else if (temp == \"three\") {\n         \
    \   nums.push_back(3);\n        } else if (temp == \"four\") {\n            nums.push_back(4);\n\
    \        } else if (temp == \"five\") {\n            nums.push_back(5);\n    \
    \    } else if (temp == \"six\") {\n            nums.push_back(6);\n        }\
    \ else if (temp == \"seven\") {\n            nums.push_back(7);\n        } else\
    \ if (temp == \"eight\") {\n            nums.push_back(8);\n        } else if\
    \ (temp == \"nine\") {\n            nums.push_back(9);\n        }\n    }\n   \
    \ std::sort(nums.begin(), nums.end());\n    std::string result;\n    for (auto\
    \ i : nums) {\n        if (i == 0) {\n            result += \"zero \";\n     \
    \   } else if (i == 1) {\n            result += \"one \";\n        } else if (i\
    \ == 2) {\n            result += \"two \";\n        } else if (i == 3) {\n   \
    \         result += \"three \";\n        } else if (i == 4) {\n            result\
    \ += \"four \";\n        } else if (i == 5) {\n            result += \"five \"\
    ;\n        } else if (i == 6) {\n            result += \"six \";\n        } else\
    \ if (i == 7) {\n            result += \"seven \";\n        } else if (i == 8)\
    \ {\n            result += \"eight \";\n        } else if (i == 9) {\n       \
    \     result += \"nine \";\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmppcc4ii8f.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n\tstd::stringstream ss(numbers);\n\tstd::vector<int> v;\n\tstd::string\
    \ word;\n\twhile (ss >> word) {\n\t\tif (word == \"zero\") v.push_back(0);\n\t\
    \telse if (word == \"one\") v.push_back(1);\n\t\telse if (word == \"two\") v.push_back(2);\n\
    \t\telse if (word == \"three\") v.push_back(3);\n\t\telse if (word == \"four\"\
    ) v.push_back(4);\n\t\telse if (word == \"five\") v.push_back(5);\n\t\telse if\
    \ (word == \"six\") v.push_back(6);\n\t\telse if (word == \"seven\") v.push_back(7);\n\
    \t\telse if (word == \"eight\") v.push_back(8);\n\t\telse if (word == \"nine\"\
    ) v.push_back(9);\n\t}\n\tstd::sort(v.begin(), v.end());\n\tstd::string result;\n\
    \tfor (int i = 0; i < v.size(); i++) {\n\t\tif (i != 0) result += \" \";\n\t\t\
    if (v[i] == 0) result += \"zero\";\n\t\telse if (v[i] == 1) result += \"one\"\
    ;\n\t\telse if (v[i] == 2) result += \"two\";\n\t\telse if (v[i] == 3) result\
    \ += \"three\";\n\t\telse if (v[i] == 4) result += \"four\";\n\t\telse if (v[i]\
    \ == 5) result += \"five\";\n\t\telse if (v[i] == 6) result += \"six\";\n\t\t\
    else if (v[i] == 7) result += \"seven\";\n\t\telse if (v[i] == 8) result += \"\
    eight\";\n\t\telse if (v[i] == 9) result += \"nine\";\n\t}\n\treturn result;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp_45y7ovm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n  std::stringstream ss(numbers);\n  std::vector<int> nums;\n  std::string\
    \ word;\n  while (ss >> word) {\n    if (word == \"zero\") nums.push_back(0);\n\
    \    else if (word == \"one\") nums.push_back(1);\n    else if (word == \"two\"\
    ) nums.push_back(2);\n    else if (word == \"three\") nums.push_back(3);\n   \
    \ else if (word == \"four\") nums.push_back(4);\n    else if (word == \"five\"\
    ) nums.push_back(5);\n    else if (word == \"six\") nums.push_back(6);\n    else\
    \ if (word == \"seven\") nums.push_back(7);\n    else if (word == \"eight\") nums.push_back(8);\n\
    \    else if (word == \"nine\") nums.push_back(9);\n  }\n  std::sort(nums.begin(),\
    \ nums.end());\n  std::string result;\n  for (int i = 0; i < nums.size(); i++)\
    \ {\n    if (i > 0) result += \" \";\n    if (nums[i] == 0) result += \"zero\"\
    ;\n    else if (nums[i] == 1) result += \"one\";\n    else if (nums[i] == 2) result\
    \ += \"two\";\n    else if (nums[i] == 3) result += \"three\";\n    else if (nums[i]\
    \ == 4) result += \"four\";\n    else if (nums[i] == 5) result += \"five\";\n\
    \    else if (nums[i] == 6) result += \"six\";\n    else if (nums[i] == 7) result\
    \ += \"seven\";\n    else if (nums[i] == 8) result += \"eight\";\n    else if\
    \ (nums[i] == 9) result += \"nine\";\n  }\n  return result;\n}\nint main() {\n\
    \    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpe4x5srao.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"zero\"\
    ) {\n            nums.push_back(0);\n        } else if (word == \"one\") {\n \
    \           nums.push_back(1);\n        } else if (word == \"two\") {\n      \
    \      nums.push_back(2);\n        } else if (word == \"three\") {\n         \
    \   nums.push_back(3);\n        } else if (word == \"four\") {\n            nums.push_back(4);\n\
    \        } else if (word == \"five\") {\n            nums.push_back(5);\n    \
    \    } else if (word == \"six\") {\n            nums.push_back(6);\n        }\
    \ else if (word == \"seven\") {\n            nums.push_back(7);\n        } else\
    \ if (word == \"eight\") {\n            nums.push_back(8);\n        } else if\
    \ (word == \"nine\") {\n            nums.push_back(9);\n        }\n    }\n   \
    \ std::sort(nums.begin(), nums.end());\n    std::stringstream result;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        if (i > 0) {\n            result\
    \ << \" \";\n        }\n        if (nums[i] == 0) {\n            result << \"\
    zero\";\n        } else if (nums[i] == 1) {\n            result << \"one\";\n\
    \        } else if (nums[i] == 2) {\n            result << \"two\";\n        }\
    \ else if (nums[i] == 3) {\n            result << \"three\";\n        } else if\
    \ (nums[i] == 4) {\n            result << \"four\";\n        } else if (nums[i]\
    \ == 5) {\n            result << \"five\";\n        } else if (nums[i] == 6) {\n\
    \            result << \"six\";\n        } else if (nums[i] == 7) {\n        \
    \    result << \"seven\";\n        } else\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmppyg2rvnz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string word;\n    while (ss >> word) {\n        if (word == \"zero\")\
    \ {\n            v.push_back(0);\n        } else if (word == \"one\") {\n    \
    \        v.push_back(1);\n        } else if (word == \"two\") {\n            v.push_back(2);\n\
    \        } else if (word == \"three\") {\n            v.push_back(3);\n      \
    \  } else if (word == \"four\") {\n            v.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            v.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            v.push_back(6);\n        } else if (word == \"seven\"\
    ) {\n            v.push_back(7);\n        } else if (word == \"eight\") {\n  \
    \          v.push_back(8);\n        } else if (word == \"nine\") {\n         \
    \   v.push_back(9);\n        }\n    }\n    std::sort(v.begin(), v.end());\n  \
    \  std::string result;\n    for (int i = 0; i < v.size(); i++) {\n        if (v[i]\
    \ == 0) {\n            result += \"zero\";\n        } else if (v[i] == 1) {\n\
    \            result += \"one\";\n        } else if (v[i] == 2) {\n           \
    \ result += \"two\";\n        } else if (v[i] == 3) {\n            result += \"\
    three\";\n        } else if (v[i] == 4) {\n            result += \"four\";\n \
    \       } else if (v[i] == 5) {\n            result += \"five\";\n        } else\
    \ if (v[i] == 6) {\n            result += \"six\";\n        } else if (v[i] ==\
    \ 7) {\n            result += \"seven\";\n        } else if (v[i] == 8) {\n  \
    \          result += \"eight\";\n        } else if (v[i] == 9) {\n           \
    \ result += \"nine\";\n        }\n\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp8serbuq0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"zero\"\
    ) {\n            nums.push_back(0);\n        } else if (word == \"one\") {\n \
    \           nums.push_back(1);\n        } else if (word == \"two\") {\n      \
    \      nums.push_back(2);\n        } else if (word == \"three\") {\n         \
    \   nums.push_back(3);\n        } else if (word == \"four\") {\n            nums.push_back(4);\n\
    \        } else if (word == \"five\") {\n            nums.push_back(5);\n    \
    \    } else if (word == \"six\") {\n            nums.push_back(6);\n        }\
    \ else if (word == \"seven\") {\n            nums.push_back(7);\n        } else\
    \ if (word == \"eight\") {\n            nums.push_back(8);\n        } else if\
    \ (word == \"nine\") {\n            nums.push_back(9);\n        }\n    }\n   \
    \ std::sort(nums.begin(), nums.end());\n    std::stringstream ss2;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        if (i != 0) {\n            ss2 << \"\
    \ \";\n        }\n        if (nums[i] == 0) {\n            ss2 << \"zero\";\n\
    \        } else if (nums[i] == 1) {\n            ss2 << \"one\";\n        } else\
    \ if (nums[i] == 2) {\n            ss2 << \"two\";\n        } else if (nums[i]\
    \ == 3) {\n            ss2 << \"three\";\n        } else if (nums[i] == 4) {\n\
    \            ss2 << \"four\";\n        } else if (nums[i] == 5) {\n          \
    \  ss2 << \"five\";\n        } else if (nums[i] == 6) {\n            ss2 << \"\
    six\";\n        } else if (nums[i] == 7) {\n           \n}\nint main() {\n   \
    \ auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n \
    \   assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"three\
    \ five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp0m9_q5yb.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"zero\"\
    ) {\n            nums.push_back(0);\n        } else if (word == \"one\") {\n \
    \           nums.push_back(1);\n        } else if (word == \"two\") {\n      \
    \      nums.push_back(2);\n        } else if (word == \"three\") {\n         \
    \   nums.push_back(3);\n        } else if (word == \"four\") {\n            nums.push_back(4);\n\
    \        } else if (word == \"five\") {\n            nums.push_back(5);\n    \
    \    } else if (word == \"six\") {\n            nums.push_back(6);\n        }\
    \ else if (word == \"seven\") {\n            nums.push_back(7);\n        } else\
    \ if (word == \"eight\") {\n            nums.push_back(8);\n        } else if\
    \ (word == \"nine\") {\n            nums.push_back(9);\n        }\n    }\n   \
    \ std::sort(nums.begin(), nums.end());\n    std::stringstream out;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        if (i != 0) {\n            out << \"\
    \ \";\n        }\n        if (nums[i] == 0) {\n            out << \"zero\";\n\
    \        } else if (nums[i] == 1) {\n            out << \"one\";\n        } else\
    \ if (nums[i] == 2) {\n            out << \"two\";\n        } else if (nums[i]\
    \ == 3) {\n            out << \"three\";\n        } else if (nums[i] == 4) {\n\
    \            out << \"four\";\n        } else if (nums[i] == 5) {\n          \
    \  out << \"five\";\n        } else if (nums[i] == 6) {\n            out << \"\
    six\";\n        } else if (nums[i] == 7) {\n            out << \"seven\";\n  \
    \      } else\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp6mabslba.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> nums;\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"zero\"\
    ) nums.push_back(0);\n        else if (word == \"one\") nums.push_back(1);\n \
    \       else if (word == \"two\") nums.push_back(2);\n        else if (word ==\
    \ \"three\") nums.push_back(3);\n        else if (word == \"four\") nums.push_back(4);\n\
    \        else if (word == \"five\") nums.push_back(5);\n        else if (word\
    \ == \"six\") nums.push_back(6);\n        else if (word == \"seven\") nums.push_back(7);\n\
    \        else if (word == \"eight\") nums.push_back(8);\n        else if (word\
    \ == \"nine\") nums.push_back(9);\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::string result;\n    for (int i = 0; i < nums.size(); i++) {\n      \
    \  if (i > 0) result += \" \";\n        if (nums[i] == 0) result += \"zero\";\n\
    \        else if (nums[i] == 1) result += \"one\";\n        else if (nums[i] ==\
    \ 2) result += \"two\";\n        else if (nums[i] == 3) result += \"three\";\n\
    \        else if (nums[i] == 4) result += \"four\";\n        else if (nums[i]\
    \ == 5) result += \"five\";\n        else if (nums[i] == 6) result += \"six\"\
    ;\n        else if (nums[i] == 7) result += \"seven\";\n        else if (nums[i]\
    \ == 8) result += \"eight\";\n        else if (nums[i] == 9) result += \"nine\"\
    ;\n    }\n    return result;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmplltn10rs.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") {\n         \
    \   nums.push_back(0);\n        } else if (word == \"one\") {\n            nums.push_back(1);\n\
    \        } else if (word == \"two\") {\n            nums.push_back(2);\n     \
    \   } else if (word == \"three\") {\n            nums.push_back(3);\n        }\
    \ else if (word == \"four\") {\n            nums.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            nums.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            nums.push_back(6);\n        } else if (word == \"\
    seven\") {\n            nums.push_back(7);\n        } else if (word == \"eight\"\
    ) {\n            nums.push_back(8);\n        } else if (word == \"nine\") {\n\
    \            nums.push_back(9);\n        }\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::stringstream result;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        if (i > 0) {\n            result << \" \";\n        }\n    \
    \    if (nums[i] == 0) {\n            result << \"zero\";\n        } else if (nums[i]\
    \ == 1) {\n            result << \"one\";\n        } else if (nums[i] == 2) {\n\
    \            result << \"two\";\n        } else if (nums[i] == 3) {\n        \
    \    result << \"three\";\n        } else if (nums[i] == 4) {\n            result\
    \ << \"four\";\n        } else if (nums[i] == 5) {\n            result << \"five\"\
    ;\n        } else if (nums[i] == 6) {\n            result << \"six\";\n      \
    \  } else if (nums[i] == 7) {\n            result << \"seven\";\n        } else\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpkt2h3brs.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string temp;\n    while (ss >> temp) {\n        if (temp == \"zero\"\
    ) nums.push_back(0);\n        else if (temp == \"one\") nums.push_back(1);\n \
    \       else if (temp == \"two\") nums.push_back(2);\n        else if (temp ==\
    \ \"three\") nums.push_back(3);\n        else if (temp == \"four\") nums.push_back(4);\n\
    \        else if (temp == \"five\") nums.push_back(5);\n        else if (temp\
    \ == \"six\") nums.push_back(6);\n        else if (temp == \"seven\") nums.push_back(7);\n\
    \        else if (temp == \"eight\") nums.push_back(8);\n        else if (temp\
    \ == \"nine\") nums.push_back(9);\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::string result;\n    for (int i = 0; i < nums.size(); i++) {\n      \
    \  if (nums[i] == 0) result += \"zero \";\n        else if (nums[i] == 1) result\
    \ += \"one \";\n        else if (nums[i] == 2) result += \"two \";\n        else\
    \ if (nums[i] == 3) result += \"three \";\n        else if (nums[i] == 4) result\
    \ += \"four \";\n        else if (nums[i] == 5) result += \"five \";\n       \
    \ else if (nums[i] == 6) result += \"six \";\n        else if (nums[i] == 7) result\
    \ += \"seven \";\n        else if (nums[i] == 8) result += \"eight \";\n     \
    \   else if (nums[i] == 9) result += \"nine \";\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2a_t6boz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n  std::stringstream ss(numbers);\n  std::vector<int> nums;\n  std::string\
    \ word;\n  while (ss >> word) {\n    if (word == \"zero\") nums.push_back(0);\n\
    \    else if (word == \"one\") nums.push_back(1);\n    else if (word == \"two\"\
    ) nums.push_back(2);\n    else if (word == \"three\") nums.push_back(3);\n   \
    \ else if (word == \"four\") nums.push_back(4);\n    else if (word == \"five\"\
    ) nums.push_back(5);\n    else if (word == \"six\") nums.push_back(6);\n    else\
    \ if (word == \"seven\") nums.push_back(7);\n    else if (word == \"eight\") nums.push_back(8);\n\
    \    else if (word == \"nine\") nums.push_back(9);\n  }\n  std::sort(nums.begin(),\
    \ nums.end());\n  std::string result;\n  for (int i = 0; i < nums.size(); i++)\
    \ {\n    if (i > 0) result += \" \";\n    if (nums[i] == 0) result += \"zero\"\
    ;\n    else if (nums[i] == 1) result += \"one\";\n    else if (nums[i] == 2) result\
    \ += \"two\";\n    else if (nums[i] == 3) result += \"three\";\n    else if (nums[i]\
    \ == 4) result += \"four\";\n    else if (nums[i] == 5) result += \"five\";\n\
    \    else if (nums[i] == 6) result += \"six\";\n    else if (nums[i] == 7) result\
    \ += \"seven\";\n    else if (nums[i] == 8) result += \"eight\";\n    else if\
    \ (nums[i] == 9) result += \"nine\";\n  }\n  return result;\n}\nint main() {\n\
    \    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpe4x5srao.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string temp;\n    while(ss >> temp) {\n        if(temp == \"zero\") v.push_back(0);\n\
    \        else if(temp == \"one\") v.push_back(1);\n        else if(temp == \"\
    two\") v.push_back(2);\n        else if(temp == \"three\") v.push_back(3);\n \
    \       else if(temp == \"four\") v.push_back(4);\n        else if(temp == \"\
    five\") v.push_back(5);\n        else if(temp == \"six\") v.push_back(6);\n  \
    \      else if(temp == \"seven\") v.push_back(7);\n        else if(temp == \"\
    eight\") v.push_back(8);\n        else if(temp == \"nine\") v.push_back(9);\n\
    \    }\n    std::sort(v.begin(), v.end());\n    std::stringstream ss2;\n    for(int\
    \ i = 0; i < v.size(); i++) {\n        if(v[i] == 0) ss2 << \"zero\";\n      \
    \  else if(v[i] == 1) ss2 << \"one\";\n        else if(v[i] == 2) ss2 << \"two\"\
    ;\n        else if(v[i] == 3) ss2 << \"three\";\n        else if(v[i] == 4) ss2\
    \ << \"four\";\n        else if(v[i] == 5) ss2 << \"five\";\n        else if(v[i]\
    \ == 6) ss2 << \"six\";\n        else if(v[i] == 7) ss2 << \"seven\";\n      \
    \  else if(v[i] == 8) ss2 << \"eight\";\n        else if(v[i] == 9) ss2 << \"\
    nine\";\n        if(i != v.size() - 1) ss2 << \" \";\n    }\n    return ss2.str();\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpgr_yack1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n  std::string result;\n  std::vector<int> nums;\n  std::stringstream\
    \ ss(numbers);\n  std::string temp;\n  while (ss >> temp) {\n    if (temp == \"\
    zero\") {\n      nums.push_back(0);\n    } else if (temp == \"one\") {\n     \
    \ nums.push_back(1);\n    } else if (temp == \"two\") {\n      nums.push_back(2);\n\
    \    } else if (temp == \"three\") {\n      nums.push_back(3);\n    } else if\
    \ (temp == \"four\") {\n      nums.push_back(4);\n    } else if (temp == \"five\"\
    ) {\n      nums.push_back(5);\n    } else if (temp == \"six\") {\n      nums.push_back(6);\n\
    \    } else if (temp == \"seven\") {\n      nums.push_back(7);\n    } else if\
    \ (temp == \"eight\") {\n      nums.push_back(8);\n    } else if (temp == \"nine\"\
    ) {\n      nums.push_back(9);\n    }\n  }\n  std::sort(nums.begin(), nums.end());\n\
    \  for (int i = 0; i < nums.size(); i++) {\n    if (nums[i] == 0) {\n      result\
    \ += \"zero\";\n    } else if (nums[i] == 1) {\n      result += \"one\";\n   \
    \ } else if (nums[i] == 2) {\n      result += \"two\";\n    } else if (nums[i]\
    \ == 3) {\n      result += \"three\";\n    } else if (nums[i] == 4) {\n      result\
    \ += \"four\";\n    } else if (nums[i] == 5) {\n      result += \"five\";\n  \
    \  } else if (nums[i] == 6) {\n      result += \"six\";\n    } else if (nums[i]\
    \ == 7) {\n      result += \"seven\";\n    } else if (nums[i] == 8) {\n      result\
    \ += \"eight\";\n   \n}\nint main() {\n    auto candidate = sort_numbers;\n  \
    \  assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpgvrt5_dj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string temp;\n    while(ss >> temp) {\n        if(temp == \"zero\") v.push_back(0);\n\
    \        else if(temp == \"one\") v.push_back(1);\n        else if(temp == \"\
    two\") v.push_back(2);\n        else if(temp == \"three\") v.push_back(3);\n \
    \       else if(temp == \"four\") v.push_back(4);\n        else if(temp == \"\
    five\") v.push_back(5);\n        else if(temp == \"six\") v.push_back(6);\n  \
    \      else if(temp == \"seven\") v.push_back(7);\n        else if(temp == \"\
    eight\") v.push_back(8);\n        else if(temp == \"nine\") v.push_back(9);\n\
    \    }\n    std::sort(v.begin(), v.end());\n    std::string ans = \"\";\n    for(int\
    \ i = 0; i < v.size(); i++) {\n        if(v[i] == 0) ans += \"zero \";\n     \
    \   else if(v[i] == 1) ans += \"one \";\n        else if(v[i] == 2) ans += \"\
    two \";\n        else if(v[i] == 3) ans += \"three \";\n        else if(v[i] ==\
    \ 4) ans += \"four \";\n        else if(v[i] == 5) ans += \"five \";\n       \
    \ else if(v[i] == 6) ans += \"six \";\n        else if(v[i] == 7) ans += \"seven\
    \ \";\n        else if(v[i] == 8) ans += \"eight \";\n        else if(v[i] ==\
    \ 9) ans += \"nine \";\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpaw3xuoi2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") {\n         \
    \   nums.push_back(0);\n        } else if (word == \"one\") {\n            nums.push_back(1);\n\
    \        } else if (word == \"two\") {\n            nums.push_back(2);\n     \
    \   } else if (word == \"three\") {\n            nums.push_back(3);\n        }\
    \ else if (word == \"four\") {\n            nums.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            nums.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            nums.push_back(6);\n        } else if (word == \"\
    seven\") {\n            nums.push_back(7);\n        } else if (word == \"eight\"\
    ) {\n            nums.push_back(8);\n        } else if (word == \"nine\") {\n\
    \            nums.push_back(9);\n        }\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::stringstream out;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        if (i != 0) {\n            out << \" \";\n        }\n      \
    \  if (nums[i] == 0) {\n            out << \"zero\";\n        } else if (nums[i]\
    \ == 1) {\n            out << \"one\";\n        } else if (nums[i] == 2) {\n \
    \           out << \"two\";\n        } else if (nums[i] == 3) {\n            out\
    \ << \"three\";\n        } else if (nums[i] == 4) {\n            out << \"four\"\
    ;\n        } else if (nums[i] == 5) {\n            out << \"five\";\n        }\
    \ else if (nums[i] == 6) {\n            out << \"six\";\n        } else if (nums[i]\
    \ == 7) {\n            out << \"seven\";\n        } else\n}\nint main() {\n  \
    \  auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmprvx2121i.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string temp;\n    while(ss >> temp) {\n        if(temp == \"zero\") {\n\
    \            v.push_back(0);\n        }\n        else if(temp == \"one\") {\n\
    \            v.push_back(1);\n        }\n        else if(temp == \"two\") {\n\
    \            v.push_back(2);\n        }\n        else if(temp == \"three\") {\n\
    \            v.push_back(3);\n        }\n        else if(temp == \"four\") {\n\
    \            v.push_back(4);\n        }\n        else if(temp == \"five\") {\n\
    \            v.push_back(5);\n        }\n        else if(temp == \"six\") {\n\
    \            v.push_back(6);\n        }\n        else if(temp == \"seven\") {\n\
    \            v.push_back(7);\n        }\n        else if(temp == \"eight\") {\n\
    \            v.push_back(8);\n        }\n        else if(temp == \"nine\") {\n\
    \            v.push_back(9);\n        }\n    }\n    std::sort(v.begin(), v.end());\n\
    \    std::string result;\n    for(int i = 0; i < v.size(); i++) {\n        if(v[i]\
    \ == 0) {\n            result += \"zero \";\n        }\n        else if(v[i] ==\
    \ 1) {\n            result += \"one \";\n        }\n        else if(v[i] == 2)\
    \ {\n            result += \"two \";\n        }\n        else if(v[i] == 3) {\n\
    \            result += \"three \";\n        }\n        else if(v[i] == 4) {\n\
    \            result += \"four \";\n        }\n        else if(v[i] == 5) {\n \
    \           result += \"five \";\n        }\n        else if(v[i] == 6) {\n  \
    \          result += \"six \";\n        }\n        else if(v[i] == 7) {\n    \
    \        result += \"seven \";\n        }\n        else\n}\nint main() {\n   \
    \ auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n \
    \   assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"three\
    \ five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpqd9lsbmr.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n  std::stringstream ss(numbers);\n  std::vector<int> v;\n  std::string\
    \ word;\n  while (ss >> word) {\n    if (word == \"zero\") v.push_back(0);\n \
    \   else if (word == \"one\") v.push_back(1);\n    else if (word == \"two\") v.push_back(2);\n\
    \    else if (word == \"three\") v.push_back(3);\n    else if (word == \"four\"\
    ) v.push_back(4);\n    else if (word == \"five\") v.push_back(5);\n    else if\
    \ (word == \"six\") v.push_back(6);\n    else if (word == \"seven\") v.push_back(7);\n\
    \    else if (word == \"eight\") v.push_back(8);\n    else if (word == \"nine\"\
    ) v.push_back(9);\n  }\n  std::sort(v.begin(), v.end());\n  std::stringstream\
    \ ss2;\n  for (int i = 0; i < v.size(); i++) {\n    if (i != 0) ss2 << \" \";\n\
    \    if (v[i] == 0) ss2 << \"zero\";\n    else if (v[i] == 1) ss2 << \"one\";\n\
    \    else if (v[i] == 2) ss2 << \"two\";\n    else if (v[i] == 3) ss2 << \"three\"\
    ;\n    else if (v[i] == 4) ss2 << \"four\";\n    else if (v[i] == 5) ss2 << \"\
    five\";\n    else if (v[i] == 6) ss2 << \"six\";\n    else if (v[i] == 7) ss2\
    \ << \"seven\";\n    else if (v[i] == 8) ss2 << \"eight\";\n    else if (v[i]\
    \ == 9) ss2 << \"nine\";\n  }\n  return ss2.str();\n}\nint main() {\n    auto\
    \ candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2yq7c5wv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"zero\"\
    ) {\n            nums.push_back(0);\n        } else if (word == \"one\") {\n \
    \           nums.push_back(1);\n        } else if (word == \"two\") {\n      \
    \      nums.push_back(2);\n        } else if (word == \"three\") {\n         \
    \   nums.push_back(3);\n        } else if (word == \"four\") {\n            nums.push_back(4);\n\
    \        } else if (word == \"five\") {\n            nums.push_back(5);\n    \
    \    } else if (word == \"six\") {\n            nums.push_back(6);\n        }\
    \ else if (word == \"seven\") {\n            nums.push_back(7);\n        } else\
    \ if (word == \"eight\") {\n            nums.push_back(8);\n        } else if\
    \ (word == \"nine\") {\n            nums.push_back(9);\n        }\n    }\n   \
    \ std::sort(nums.begin(), nums.end());\n    std::stringstream result;\n    for\
    \ (auto num : nums) {\n        if (num == 0) {\n            result << \"zero \"\
    ;\n        } else if (num == 1) {\n            result << \"one \";\n        }\
    \ else if (num == 2) {\n            result << \"two \";\n        } else if (num\
    \ == 3) {\n            result << \"three \";\n        } else if (num == 4) {\n\
    \            result << \"four \";\n        } else if (num == 5) {\n          \
    \  result << \"five \";\n        } else if (num == 6) {\n            result <<\
    \ \"six \";\n        } else if (num == 7) {\n            result << \"seven \"\
    ;\n        } else if (num == 8) {\n            result << \"eight \";\n       \
    \ } else if (num == 9) {\n            result << \"nine \";\n        }\n    }\n\
    \    return result.str();\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpvo9wh94j.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") {\n         \
    \   nums.push_back(0);\n        } else if (word == \"one\") {\n            nums.push_back(1);\n\
    \        } else if (word == \"two\") {\n            nums.push_back(2);\n     \
    \   } else if (word == \"three\") {\n            nums.push_back(3);\n        }\
    \ else if (word == \"four\") {\n            nums.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            nums.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            nums.push_back(6);\n        } else if (word == \"\
    seven\") {\n            nums.push_back(7);\n        } else if (word == \"eight\"\
    ) {\n            nums.push_back(8);\n        } else if (word == \"nine\") {\n\
    \            nums.push_back(9);\n        }\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::stringstream ss2;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        if (i != 0) {\n            ss2 << \" \";\n        }\n      \
    \  if (nums[i] == 0) {\n            ss2 << \"zero\";\n        } else if (nums[i]\
    \ == 1) {\n            ss2 << \"one\";\n        } else if (nums[i] == 2) {\n \
    \           ss2 << \"two\";\n        } else if (nums[i] == 3) {\n            ss2\
    \ << \"three\";\n        } else if (nums[i] == 4) {\n            ss2 << \"four\"\
    ;\n        } else if (nums[i] == 5) {\n            ss2 << \"five\";\n        }\
    \ else if (nums[i] == 6) {\n            ss2 << \"six\";\n        } else if (nums[i]\
    \ == 7) {\n           \n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp91_onwto.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string temp;\n    while (ss >> temp) {\n        if (temp == \"zero\"\
    )\n            nums.push_back(0);\n        else if (temp == \"one\")\n       \
    \     nums.push_back(1);\n        else if (temp == \"two\")\n            nums.push_back(2);\n\
    \        else if (temp == \"three\")\n            nums.push_back(3);\n       \
    \ else if (temp == \"four\")\n            nums.push_back(4);\n        else if\
    \ (temp == \"five\")\n            nums.push_back(5);\n        else if (temp ==\
    \ \"six\")\n            nums.push_back(6);\n        else if (temp == \"seven\"\
    )\n            nums.push_back(7);\n        else if (temp == \"eight\")\n     \
    \       nums.push_back(8);\n        else if (temp == \"nine\")\n            nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::string result;\n  \
    \  for (auto i : nums) {\n        switch (i) {\n            case 0:\n        \
    \        result += \"zero \";\n                break;\n            case 1:\n \
    \               result += \"one \";\n                break;\n            case\
    \ 2:\n                result += \"two \";\n                break;\n          \
    \  case 3:\n                result += \"three \";\n                break;\n  \
    \          case 4:\n                result += \"four \";\n                break;\n\
    \            case 5:\n                result += \"five \";\n                break;\n\
    \            case 6:\n                result += \"six \";\n                break;\n\
    \            case 7:\n                result += \"seven \";\n                break;\n\
    \            case 8:\n                result += \"eight \";\n                break;\n\
    \            case 9:\n                result += \"nine \";\n                break;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpckcqnvlr.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") {\n         \
    \   nums.push_back(0);\n        } else if (word == \"one\") {\n            nums.push_back(1);\n\
    \        } else if (word == \"two\") {\n            nums.push_back(2);\n     \
    \   } else if (word == \"three\") {\n            nums.push_back(3);\n        }\
    \ else if (word == \"four\") {\n            nums.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            nums.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            nums.push_back(6);\n        } else if (word == \"\
    seven\") {\n            nums.push_back(7);\n        } else if (word == \"eight\"\
    ) {\n            nums.push_back(8);\n        } else if (word == \"nine\") {\n\
    \            nums.push_back(9);\n        }\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::string result;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        if (i != 0) {\n            result += \" \";\n        }\n   \
    \     if (nums[i] == 0) {\n            result += \"zero\";\n        } else if\
    \ (nums[i] == 1) {\n            result += \"one\";\n        } else if (nums[i]\
    \ == 2) {\n            result += \"two\";\n        } else if (nums[i] == 3) {\n\
    \            result += \"three\";\n        } else if (nums[i] == 4) {\n      \
    \      result += \"four\";\n        } else if (nums[i] == 5) {\n            result\
    \ += \"five\";\n        } else if (nums[i] == 6) {\n            result += \"six\"\
    ;\n        } else if (nums[i] == 7) {\n            result += \"seven\";\n    \
    \    } else if\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpldvxpsli.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") nums.push_back(0);\n\
    \        else if (word == \"one\") nums.push_back(1);\n        else if (word ==\
    \ \"two\") nums.push_back(2);\n        else if (word == \"three\") nums.push_back(3);\n\
    \        else if (word == \"four\") nums.push_back(4);\n        else if (word\
    \ == \"five\") nums.push_back(5);\n        else if (word == \"six\") nums.push_back(6);\n\
    \        else if (word == \"seven\") nums.push_back(7);\n        else if (word\
    \ == \"eight\") nums.push_back(8);\n        else if (word == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::string ans = \"\";\n\
    \    for (int i = 0; i < nums.size(); i++) {\n        if (i != 0) ans += \" \"\
    ;\n        if (nums[i] == 0) ans += \"zero\";\n        else if (nums[i] == 1)\
    \ ans += \"one\";\n        else if (nums[i] == 2) ans += \"two\";\n        else\
    \ if (nums[i] == 3) ans += \"three\";\n        else if (nums[i] == 4) ans += \"\
    four\";\n        else if (nums[i] == 5) ans += \"five\";\n        else if (nums[i]\
    \ == 6) ans += \"six\";\n        else if (nums[i] == 7) ans += \"seven\";\n  \
    \      else if (nums[i] == 8) ans += \"eight\";\n        else if (nums[i] == 9)\
    \ ans += \"nine\";\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpa2f_fefx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") {\n         \
    \   nums.push_back(0);\n        } else if (word == \"one\") {\n            nums.push_back(1);\n\
    \        } else if (word == \"two\") {\n            nums.push_back(2);\n     \
    \   } else if (word == \"three\") {\n            nums.push_back(3);\n        }\
    \ else if (word == \"four\") {\n            nums.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            nums.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            nums.push_back(6);\n        } else if (word == \"\
    seven\") {\n            nums.push_back(7);\n        } else if (word == \"eight\"\
    ) {\n            nums.push_back(8);\n        } else if (word == \"nine\") {\n\
    \            nums.push_back(9);\n        }\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::string result;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        if (i != 0) {\n            result += \" \";\n        }\n   \
    \     if (nums[i] == 0) {\n            result += \"zero\";\n        } else if\
    \ (nums[i] == 1) {\n            result += \"one\";\n        } else if (nums[i]\
    \ == 2) {\n            result += \"two\";\n        } else if (nums[i] == 3) {\n\
    \            result += \"three\";\n        } else if (nums[i] == 4) {\n      \
    \      result += \"four\";\n        } else if (nums[i] == 5) {\n            result\
    \ += \"five\";\n        } else if (nums[i] == 6) {\n            result += \"six\"\
    ;\n        } else if (nums[i] == 7) {\n            result += \"seven\";\n    \
    \    } else if\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpldvxpsli.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n  std::vector<int> nums;\n  std::stringstream ss(numbers);\n  std::string\
    \ token;\n  while(std::getline(ss, token, ' ')) {\n    if(token == \"zero\")\n\
    \      nums.push_back(0);\n    else if(token == \"one\")\n      nums.push_back(1);\n\
    \    else if(token == \"two\")\n      nums.push_back(2);\n    else if(token ==\
    \ \"three\")\n      nums.push_back(3);\n    else if(token == \"four\")\n     \
    \ nums.push_back(4);\n    else if(token == \"five\")\n      nums.push_back(5);\n\
    \    else if(token == \"six\")\n      nums.push_back(6);\n    else if(token ==\
    \ \"seven\")\n      nums.push_back(7);\n    else if(token == \"eight\")\n    \
    \  nums.push_back(8);\n    else if(token == \"nine\")\n      nums.push_back(9);\n\
    \  }\n  std::sort(nums.begin(), nums.end());\n  std::string result;\n  for(int\
    \ i = 0; i < nums.size(); i++) {\n    if(i != 0)\n      result += \" \";\n   \
    \ switch(nums[i]) {\n      case 0:\n        result += \"zero\";\n        break;\n\
    \      case 1:\n        result += \"one\";\n        break;\n      case 2:\n  \
    \      result += \"two\";\n        break;\n      case 3:\n        result += \"\
    three\";\n        break;\n      case 4:\n        result += \"four\";\n       \
    \ break;\n      case 5:\n        result += \"five\";\n        break;\n      case\
    \ 6:\n        result += \"six\";\n        break;\n      case 7:\n        result\
    \ += \"seven\";\n        break;\n      case 8:\n        result += \"eight\";\n\
    \        break;\n      case 9:\n        result += \"nine\";\n        break;\n\
    \    }\n  }\n  return result;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzw03lc7n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") {\n         \
    \   nums.push_back(0);\n        } else if (word == \"one\") {\n            nums.push_back(1);\n\
    \        } else if (word == \"two\") {\n            nums.push_back(2);\n     \
    \   } else if (word == \"three\") {\n            nums.push_back(3);\n        }\
    \ else if (word == \"four\") {\n            nums.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            nums.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            nums.push_back(6);\n        } else if (word == \"\
    seven\") {\n            nums.push_back(7);\n        } else if (word == \"eight\"\
    ) {\n            nums.push_back(8);\n        } else if (word == \"nine\") {\n\
    \            nums.push_back(9);\n        }\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::string res = \"\";\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        if (nums[i] == 0) {\n            res += \"zero\";\n        }\
    \ else if (nums[i] == 1) {\n            res += \"one\";\n        } else if (nums[i]\
    \ == 2) {\n            res += \"two\";\n        } else if (nums[i] == 3) {\n \
    \           res += \"three\";\n        } else if (nums[i] == 4) {\n          \
    \  res += \"four\";\n        } else if (nums[i] == 5) {\n            res += \"\
    five\";\n        } else if (nums[i] == 6) {\n            res += \"six\";\n   \
    \     } else if (nums[i] == 7) {\n            res += \"seven\";\n        } else\
    \ if (nums[i] == 8) {\n            res += \"eight\";\n}\nint main() {\n    auto\
    \ candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpr7bwkmko.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") nums.push_back(0);\n\
    \        else if (word == \"one\") nums.push_back(1);\n        else if (word ==\
    \ \"two\") nums.push_back(2);\n        else if (word == \"three\") nums.push_back(3);\n\
    \        else if (word == \"four\") nums.push_back(4);\n        else if (word\
    \ == \"five\") nums.push_back(5);\n        else if (word == \"six\") nums.push_back(6);\n\
    \        else if (word == \"seven\") nums.push_back(7);\n        else if (word\
    \ == \"eight\") nums.push_back(8);\n        else if (word == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::string result;\n  \
    \  for (int i = 0; i < nums.size(); i++) {\n        if (i != 0) result += \" \"\
    ;\n        if (nums[i] == 0) result += \"zero\";\n        else if (nums[i] ==\
    \ 1) result += \"one\";\n        else if (nums[i] == 2) result += \"two\";\n \
    \       else if (nums[i] == 3) result += \"three\";\n        else if (nums[i]\
    \ == 4) result += \"four\";\n        else if (nums[i] == 5) result += \"five\"\
    ;\n        else if (nums[i] == 6) result += \"six\";\n        else if (nums[i]\
    \ == 7) result += \"seven\";\n        else if (nums[i] == 8) result += \"eight\"\
    ;\n        else if (nums[i] == 9) result += \"nine\";\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp6sxp8tdo.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") nums.push_back(0);\n\
    \        else if (word == \"one\") nums.push_back(1);\n        else if (word ==\
    \ \"two\") nums.push_back(2);\n        else if (word == \"three\") nums.push_back(3);\n\
    \        else if (word == \"four\") nums.push_back(4);\n        else if (word\
    \ == \"five\") nums.push_back(5);\n        else if (word == \"six\") nums.push_back(6);\n\
    \        else if (word == \"seven\") nums.push_back(7);\n        else if (word\
    \ == \"eight\") nums.push_back(8);\n        else if (word == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::string res;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        if (i > 0) res += \" \";\n    \
    \    if (nums[i] == 0) res += \"zero\";\n        else if (nums[i] == 1) res +=\
    \ \"one\";\n        else if (nums[i] == 2) res += \"two\";\n        else if (nums[i]\
    \ == 3) res += \"three\";\n        else if (nums[i] == 4) res += \"four\";\n \
    \       else if (nums[i] == 5) res += \"five\";\n        else if (nums[i] == 6)\
    \ res += \"six\";\n        else if (nums[i] == 7) res += \"seven\";\n        else\
    \ if (nums[i] == 8) res += \"eight\";\n        else if (nums[i] == 9) res += \"\
    nine\";\n    }\n    return res;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpdkislfk4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") nums.push_back(0);\n\
    \        else if (word == \"one\") nums.push_back(1);\n        else if (word ==\
    \ \"two\") nums.push_back(2);\n        else if (word == \"three\") nums.push_back(3);\n\
    \        else if (word == \"four\") nums.push_back(4);\n        else if (word\
    \ == \"five\") nums.push_back(5);\n        else if (word == \"six\") nums.push_back(6);\n\
    \        else if (word == \"seven\") nums.push_back(7);\n        else if (word\
    \ == \"eight\") nums.push_back(8);\n        else if (word == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::string result;\n  \
    \  for (int i = 0; i < nums.size(); i++) {\n        if (i != 0) result += \" \"\
    ;\n        if (nums[i] == 0) result += \"zero\";\n        else if (nums[i] ==\
    \ 1) result += \"one\";\n        else if (nums[i] == 2) result += \"two\";\n \
    \       else if (nums[i] == 3) result += \"three\";\n        else if (nums[i]\
    \ == 4) result += \"four\";\n        else if (nums[i] == 5) result += \"five\"\
    ;\n        else if (nums[i] == 6) result += \"six\";\n        else if (nums[i]\
    \ == 7) result += \"seven\";\n        else if (nums[i] == 8) result += \"eight\"\
    ;\n        else if (nums[i] == 9) result += \"nine\";\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp6sxp8tdo.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n\tstd::stringstream ss(numbers);\n\tstd::vector<int> v;\n\tstd::string\
    \ s;\n\twhile (ss >> s) {\n\t\tif (s == \"zero\") v.push_back(0);\n\t\telse if\
    \ (s == \"one\") v.push_back(1);\n\t\telse if (s == \"two\") v.push_back(2);\n\
    \t\telse if (s == \"three\") v.push_back(3);\n\t\telse if (s == \"four\") v.push_back(4);\n\
    \t\telse if (s == \"five\") v.push_back(5);\n\t\telse if (s == \"six\") v.push_back(6);\n\
    \t\telse if (s == \"seven\") v.push_back(7);\n\t\telse if (s == \"eight\") v.push_back(8);\n\
    \t\telse if (s == \"nine\") v.push_back(9);\n\t}\n\tstd::sort(v.begin(), v.end());\n\
    \tstd::string ans;\n\tfor (int i = 0; i < v.size(); i++) {\n\t\tif (i != 0) ans\
    \ += \" \";\n\t\tif (v[i] == 0) ans += \"zero\";\n\t\telse if (v[i] == 1) ans\
    \ += \"one\";\n\t\telse if (v[i] == 2) ans += \"two\";\n\t\telse if (v[i] == 3)\
    \ ans += \"three\";\n\t\telse if (v[i] == 4) ans += \"four\";\n\t\telse if (v[i]\
    \ == 5) ans += \"five\";\n\t\telse if (v[i] == 6) ans += \"six\";\n\t\telse if\
    \ (v[i] == 7) ans += \"seven\";\n\t\telse if (v[i] == 8) ans += \"eight\";\n\t\
    \telse if (v[i] == 9) ans += \"nine\";\n\t}\n\treturn ans;\n}\nint main() {\n\
    \    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpbn_furp4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") nums.push_back(0);\n\
    \        else if (word == \"one\") nums.push_back(1);\n        else if (word ==\
    \ \"two\") nums.push_back(2);\n        else if (word == \"three\") nums.push_back(3);\n\
    \        else if (word == \"four\") nums.push_back(4);\n        else if (word\
    \ == \"five\") nums.push_back(5);\n        else if (word == \"six\") nums.push_back(6);\n\
    \        else if (word == \"seven\") nums.push_back(7);\n        else if (word\
    \ == \"eight\") nums.push_back(8);\n        else if (word == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::string result;\n  \
    \  for (int i = 0; i < nums.size(); i++) {\n        if (i > 0) result += \" \"\
    ;\n        if (nums[i] == 0) result += \"zero\";\n        else if (nums[i] ==\
    \ 1) result += \"one\";\n        else if (nums[i] == 2) result += \"two\";\n \
    \       else if (nums[i] == 3) result += \"three\";\n        else if (nums[i]\
    \ == 4) result += \"four\";\n        else if (nums[i] == 5) result += \"five\"\
    ;\n        else if (nums[i] == 6) result += \"six\";\n        else if (nums[i]\
    \ == 7) result += \"seven\";\n        else if (nums[i] == 8) result += \"eight\"\
    ;\n        else if (nums[i] == 9) result += \"nine\";\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpvn8f8t7q.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") nums.push_back(0);\n\
    \        else if (word == \"one\") nums.push_back(1);\n        else if (word ==\
    \ \"two\") nums.push_back(2);\n        else if (word == \"three\") nums.push_back(3);\n\
    \        else if (word == \"four\") nums.push_back(4);\n        else if (word\
    \ == \"five\") nums.push_back(5);\n        else if (word == \"six\") nums.push_back(6);\n\
    \        else if (word == \"seven\") nums.push_back(7);\n        else if (word\
    \ == \"eight\") nums.push_back(8);\n        else if (word == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::string result;\n  \
    \  for (int i = 0; i < nums.size(); i++) {\n        if (i > 0) result += \" \"\
    ;\n        if (nums[i] == 0) result += \"zero\";\n        else if (nums[i] ==\
    \ 1) result += \"one\";\n        else if (nums[i] == 2) result += \"two\";\n \
    \       else if (nums[i] == 3) result += \"three\";\n        else if (nums[i]\
    \ == 4) result += \"four\";\n        else if (nums[i] == 5) result += \"five\"\
    ;\n        else if (nums[i] == 6) result += \"six\";\n        else if (nums[i]\
    \ == 7) result += \"seven\";\n        else if (nums[i] == 8) result += \"eight\"\
    ;\n        else if (nums[i] == 9) result += \"nine\";\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpvn8f8t7q.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n  std::vector<int> nums;\n  std::stringstream ss(numbers);\n  std::string\
    \ word;\n  while (ss >> word) {\n    if (word == \"zero\") {\n      nums.push_back(0);\n\
    \    } else if (word == \"one\") {\n      nums.push_back(1);\n    } else if (word\
    \ == \"two\") {\n      nums.push_back(2);\n    } else if (word == \"three\") {\n\
    \      nums.push_back(3);\n    } else if (word == \"four\") {\n      nums.push_back(4);\n\
    \    } else if (word == \"five\") {\n      nums.push_back(5);\n    } else if (word\
    \ == \"six\") {\n      nums.push_back(6);\n    } else if (word == \"seven\") {\n\
    \      nums.push_back(7);\n    } else if (word == \"eight\") {\n      nums.push_back(8);\n\
    \    } else if (word == \"nine\") {\n      nums.push_back(9);\n    }\n  }\n  std::sort(nums.begin(),\
    \ nums.end());\n  std::string result;\n  for (int i = 0; i < nums.size(); i++)\
    \ {\n    if (nums[i] == 0) {\n      result += \"zero\";\n    } else if (nums[i]\
    \ == 1) {\n      result += \"one\";\n    } else if (nums[i] == 2) {\n      result\
    \ += \"two\";\n    } else if (nums[i] == 3) {\n      result += \"three\";\n  \
    \  } else if (nums[i] == 4) {\n      result += \"four\";\n    } else if (nums[i]\
    \ == 5) {\n      result += \"five\";\n    } else if (nums[i] == 6) {\n      result\
    \ += \"six\";\n    } else if (nums[i] == 7) {\n      result += \"seven\";\n  \
    \  } else if (nums[i] == 8) {\n      result += \"eight\";\n   \n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp90w83dya.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  int i;\n    while (ss >> i) {\n        v.push_back(i);\n    }\n    std::sort(v.begin(),\
    \ v.end());\n    std::stringstream s;\n    for (auto i : v) {\n        s << i\
    \ << \" \";\n    }\n    return s.str();\n}\nint main() {\n    auto candidate =\
    \ sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpc1lac2dw.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") nums.push_back(0);\n\
    \        else if (word == \"one\") nums.push_back(1);\n        else if (word ==\
    \ \"two\") nums.push_back(2);\n        else if (word == \"three\") nums.push_back(3);\n\
    \        else if (word == \"four\") nums.push_back(4);\n        else if (word\
    \ == \"five\") nums.push_back(5);\n        else if (word == \"six\") nums.push_back(6);\n\
    \        else if (word == \"seven\") nums.push_back(7);\n        else if (word\
    \ == \"eight\") nums.push_back(8);\n        else if (word == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::string res;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        if (i > 0) res += \" \";\n    \
    \    if (nums[i] == 0) res += \"zero\";\n        else if (nums[i] == 1) res +=\
    \ \"one\";\n        else if (nums[i] == 2) res += \"two\";\n        else if (nums[i]\
    \ == 3) res += \"three\";\n        else if (nums[i] == 4) res += \"four\";\n \
    \       else if (nums[i] == 5) res += \"five\";\n        else if (nums[i] == 6)\
    \ res += \"six\";\n        else if (nums[i] == 7) res += \"seven\";\n        else\
    \ if (nums[i] == 8) res += \"eight\";\n        else if (nums[i] == 9) res += \"\
    nine\";\n    }\n    return res;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpdkislfk4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string temp;\n    while (ss >> temp) {\n        if (temp == \"zero\"\
    ) nums.push_back(0);\n        else if (temp == \"one\") nums.push_back(1);\n \
    \       else if (temp == \"two\") nums.push_back(2);\n        else if (temp ==\
    \ \"three\") nums.push_back(3);\n        else if (temp == \"four\") nums.push_back(4);\n\
    \        else if (temp == \"five\") nums.push_back(5);\n        else if (temp\
    \ == \"six\") nums.push_back(6);\n        else if (temp == \"seven\") nums.push_back(7);\n\
    \        else if (temp == \"eight\") nums.push_back(8);\n        else if (temp\
    \ == \"nine\") nums.push_back(9);\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::string result;\n    for (int i = 0; i < nums.size(); i++) {\n      \
    \  if (nums[i] == 0) result += \"zero \";\n        else if (nums[i] == 1) result\
    \ += \"one \";\n        else if (nums[i] == 2) result += \"two \";\n        else\
    \ if (nums[i] == 3) result += \"three \";\n        else if (nums[i] == 4) result\
    \ += \"four \";\n        else if (nums[i] == 5) result += \"five \";\n       \
    \ else if (nums[i] == 6) result += \"six \";\n        else if (nums[i] == 7) result\
    \ += \"seven \";\n        else if (nums[i] == 8) result += \"eight \";\n     \
    \   else if (nums[i] == 9) result += \"nine \";\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2a_t6boz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string temp;\n    std::vector<int>\
    \ nums;\n    while(ss >> temp) {\n        if(temp == \"zero\") nums.push_back(0);\n\
    \        else if(temp == \"one\") nums.push_back(1);\n        else if(temp ==\
    \ \"two\") nums.push_back(2);\n        else if(temp == \"three\") nums.push_back(3);\n\
    \        else if(temp == \"four\") nums.push_back(4);\n        else if(temp ==\
    \ \"five\") nums.push_back(5);\n        else if(temp == \"six\") nums.push_back(6);\n\
    \        else if(temp == \"seven\") nums.push_back(7);\n        else if(temp ==\
    \ \"eight\") nums.push_back(8);\n        else if(temp == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::string result;\n  \
    \  for(int i = 0; i < nums.size(); i++) {\n        if(nums[i] == 0) result +=\
    \ \"zero \";\n        else if(nums[i] == 1) result += \"one \";\n        else\
    \ if(nums[i] == 2) result += \"two \";\n        else if(nums[i] == 3) result +=\
    \ \"three \";\n        else if(nums[i] == 4) result += \"four \";\n        else\
    \ if(nums[i] == 5) result += \"five \";\n        else if(nums[i] == 6) result\
    \ += \"six \";\n        else if(nums[i] == 7) result += \"seven \";\n        else\
    \ if(nums[i] == 8) result += \"eight \";\n        else if(nums[i] == 9) result\
    \ += \"nine \";\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmphi83t8c0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"zero\"\
    ) {\n            nums.push_back(0);\n        } else if (word == \"one\") {\n \
    \           nums.push_back(1);\n        } else if (word == \"two\") {\n      \
    \      nums.push_back(2);\n        } else if (word == \"three\") {\n         \
    \   nums.push_back(3);\n        } else if (word == \"four\") {\n            nums.push_back(4);\n\
    \        } else if (word == \"five\") {\n            nums.push_back(5);\n    \
    \    } else if (word == \"six\") {\n            nums.push_back(6);\n        }\
    \ else if (word == \"seven\") {\n            nums.push_back(7);\n        } else\
    \ if (word == \"eight\") {\n            nums.push_back(8);\n        } else if\
    \ (word == \"nine\") {\n            nums.push_back(9);\n        }\n    }\n   \
    \ std::sort(nums.begin(), nums.end());\n    std::string result;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        if (i > 0) {\n            result +=\
    \ \" \";\n        }\n        if (nums[i] == 0) {\n            result += \"zero\"\
    ;\n        } else if (nums[i] == 1) {\n            result += \"one\";\n      \
    \  } else if (nums[i] == 2) {\n            result += \"two\";\n        } else\
    \ if (nums[i] == 3) {\n            result += \"three\";\n        } else if (nums[i]\
    \ == 4) {\n            result += \"four\";\n        } else if (nums[i] == 5) {\n\
    \            result += \"five\";\n        } else if (nums[i] == 6) {\n       \
    \     result += \"six\";\n        } else if (nums[i] == 7) {\n            result\
    \ += \"seven\";\n        } else if\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpv6b_368o.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string word;\n    while (ss >> word) {\n        if (word == \"zero\")\
    \ v.push_back(0);\n        else if (word == \"one\") v.push_back(1);\n       \
    \ else if (word == \"two\") v.push_back(2);\n        else if (word == \"three\"\
    ) v.push_back(3);\n        else if (word == \"four\") v.push_back(4);\n      \
    \  else if (word == \"five\") v.push_back(5);\n        else if (word == \"six\"\
    ) v.push_back(6);\n        else if (word == \"seven\") v.push_back(7);\n     \
    \   else if (word == \"eight\") v.push_back(8);\n        else if (word == \"nine\"\
    ) v.push_back(9);\n    }\n    std::sort(v.begin(), v.end());\n    std::string\
    \ result;\n    for (int i = 0; i < v.size(); i++) {\n        if (i != 0) result\
    \ += \" \";\n        if (v[i] == 0) result += \"zero\";\n        else if (v[i]\
    \ == 1) result += \"one\";\n        else if (v[i] == 2) result += \"two\";\n \
    \       else if (v[i] == 3) result += \"three\";\n        else if (v[i] == 4)\
    \ result += \"four\";\n        else if (v[i] == 5) result += \"five\";\n     \
    \   else if (v[i] == 6) result += \"six\";\n        else if (v[i] == 7) result\
    \ += \"seven\";\n        else if (v[i] == 8) result += \"eight\";\n        else\
    \ if (v[i] == 9) result += \"nine\";\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp1mzg3r2v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string word;\n    while (ss >> word) {\n        if (word == \"zero\")\
    \ {\n            v.push_back(0);\n        } else if (word == \"one\") {\n    \
    \        v.push_back(1);\n        } else if (word == \"two\") {\n            v.push_back(2);\n\
    \        } else if (word == \"three\") {\n            v.push_back(3);\n      \
    \  } else if (word == \"four\") {\n            v.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            v.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            v.push_back(6);\n        } else if (word == \"seven\"\
    ) {\n            v.push_back(7);\n        } else if (word == \"eight\") {\n  \
    \          v.push_back(8);\n        } else if (word == \"nine\") {\n         \
    \   v.push_back(9);\n        }\n    }\n    std::sort(v.begin(), v.end());\n  \
    \  std::string result;\n    for (int i = 0; i < v.size(); i++) {\n        if (v[i]\
    \ == 0) {\n            result += \"zero\";\n        } else if (v[i] == 1) {\n\
    \            result += \"one\";\n        } else if (v[i] == 2) {\n           \
    \ result += \"two\";\n        } else if (v[i] == 3) {\n            result += \"\
    three\";\n        } else if (v[i] == 4) {\n            result += \"four\";\n \
    \       } else if (v[i] == 5) {\n            result += \"five\";\n        } else\
    \ if (v[i] == 6) {\n            result += \"six\";\n        } else if (v[i] ==\
    \ 7) {\n            result += \"seven\";\n        } else if (v[i] == 8) {\n  \
    \          result += \"eight\";\n        } else if (v[i] == 9) {\n           \
    \ result += \"nine\";\n        }\n\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp8serbuq0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") nums.push_back(0);\n\
    \        else if (word == \"one\") nums.push_back(1);\n        else if (word ==\
    \ \"two\") nums.push_back(2);\n        else if (word == \"three\") nums.push_back(3);\n\
    \        else if (word == \"four\") nums.push_back(4);\n        else if (word\
    \ == \"five\") nums.push_back(5);\n        else if (word == \"six\") nums.push_back(6);\n\
    \        else if (word == \"seven\") nums.push_back(7);\n        else if (word\
    \ == \"eight\") nums.push_back(8);\n        else if (word == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::stringstream output;\n\
    \    for (int i = 0; i < nums.size(); i++) {\n        if (i != 0) output << \"\
    \ \";\n        if (nums[i] == 0) output << \"zero\";\n        else if (nums[i]\
    \ == 1) output << \"one\";\n        else if (nums[i] == 2) output << \"two\";\n\
    \        else if (nums[i] == 3) output << \"three\";\n        else if (nums[i]\
    \ == 4) output << \"four\";\n        else if (nums[i] == 5) output << \"five\"\
    ;\n        else if (nums[i] == 6) output << \"six\";\n        else if (nums[i]\
    \ == 7) output << \"seven\";\n        else if (nums[i] == 8) output << \"eight\"\
    ;\n        else if (nums[i] == 9) output << \"nine\";\n    }\n    return output.str();\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpaiyip4xq.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") nums.push_back(0);\n\
    \        else if (word == \"one\") nums.push_back(1);\n        else if (word ==\
    \ \"two\") nums.push_back(2);\n        else if (word == \"three\") nums.push_back(3);\n\
    \        else if (word == \"four\") nums.push_back(4);\n        else if (word\
    \ == \"five\") nums.push_back(5);\n        else if (word == \"six\") nums.push_back(6);\n\
    \        else if (word == \"seven\") nums.push_back(7);\n        else if (word\
    \ == \"eight\") nums.push_back(8);\n        else if (word == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::string result;\n  \
    \  for (int i = 0; i < nums.size(); i++) {\n        if (i > 0) result += \" \"\
    ;\n        if (nums[i] == 0) result += \"zero\";\n        else if (nums[i] ==\
    \ 1) result += \"one\";\n        else if (nums[i] == 2) result += \"two\";\n \
    \       else if (nums[i] == 3) result += \"three\";\n        else if (nums[i]\
    \ == 4) result += \"four\";\n        else if (nums[i] == 5) result += \"five\"\
    ;\n        else if (nums[i] == 6) result += \"six\";\n        else if (nums[i]\
    \ == 7) result += \"seven\";\n        else if (nums[i] == 8) result += \"eight\"\
    ;\n        else if (nums[i] == 9) result += \"nine\";\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpvn8f8t7q.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") {\n         \
    \   nums.push_back(0);\n        } else if (word == \"one\") {\n            nums.push_back(1);\n\
    \        } else if (word == \"two\") {\n            nums.push_back(2);\n     \
    \   } else if (word == \"three\") {\n            nums.push_back(3);\n        }\
    \ else if (word == \"four\") {\n            nums.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            nums.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            nums.push_back(6);\n        } else if (word == \"\
    seven\") {\n            nums.push_back(7);\n        } else if (word == \"eight\"\
    ) {\n            nums.push_back(8);\n        } else if (word == \"nine\") {\n\
    \            nums.push_back(9);\n        }\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::string result;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        if (i != 0) {\n            result += \" \";\n        }\n   \
    \     if (nums[i] == 0) {\n            result += \"zero\";\n        } else if\
    \ (nums[i] == 1) {\n            result += \"one\";\n        } else if (nums[i]\
    \ == 2) {\n            result += \"two\";\n        } else if (nums[i] == 3) {\n\
    \            result += \"three\";\n        } else if (nums[i] == 4) {\n      \
    \      result += \"four\";\n        } else if (nums[i] == 5) {\n            result\
    \ += \"five\";\n        } else if (nums[i] == 6) {\n            result += \"six\"\
    ;\n        } else if (nums[i] == 7) {\n            result += \"seven\";\n    \
    \    } else if\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpldvxpsli.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") {\n         \
    \   nums.push_back(0);\n        } else if (word == \"one\") {\n            nums.push_back(1);\n\
    \        } else if (word == \"two\") {\n            nums.push_back(2);\n     \
    \   } else if (word == \"three\") {\n            nums.push_back(3);\n        }\
    \ else if (word == \"four\") {\n            nums.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            nums.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            nums.push_back(6);\n        } else if (word == \"\
    seven\") {\n            nums.push_back(7);\n        } else if (word == \"eight\"\
    ) {\n            nums.push_back(8);\n        } else if (word == \"nine\") {\n\
    \            nums.push_back(9);\n        }\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::string result;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        if (i != 0) {\n            result += \" \";\n        }\n   \
    \     if (nums[i] == 0) {\n            result += \"zero\";\n        } else if\
    \ (nums[i] == 1) {\n            result += \"one\";\n        } else if (nums[i]\
    \ == 2) {\n            result += \"two\";\n        } else if (nums[i] == 3) {\n\
    \            result += \"three\";\n        } else if (nums[i] == 4) {\n      \
    \      result += \"four\";\n        } else if (nums[i] == 5) {\n            result\
    \ += \"five\";\n        } else if (nums[i] == 6) {\n            result += \"six\"\
    ;\n        } else if (nums[i] == 7) {\n            result += \"seven\";\n    \
    \    } else if\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpldvxpsli.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string word;\n    while (ss >> word) {\n        if (word == \"zero\")\
    \ v.push_back(0);\n        else if (word == \"one\") v.push_back(1);\n       \
    \ else if (word == \"two\") v.push_back(2);\n        else if (word == \"three\"\
    ) v.push_back(3);\n        else if (word == \"four\") v.push_back(4);\n      \
    \  else if (word == \"five\") v.push_back(5);\n        else if (word == \"six\"\
    ) v.push_back(6);\n        else if (word == \"seven\") v.push_back(7);\n     \
    \   else if (word == \"eight\") v.push_back(8);\n        else if (word == \"nine\"\
    ) v.push_back(9);\n    }\n    std::sort(v.begin(), v.end());\n    std::string\
    \ result;\n    for (int i = 0; i < v.size(); i++) {\n        if (i > 0) result\
    \ += \" \";\n        if (v[i] == 0) result += \"zero\";\n        else if (v[i]\
    \ == 1) result += \"one\";\n        else if (v[i] == 2) result += \"two\";\n \
    \       else if (v[i] == 3) result += \"three\";\n        else if (v[i] == 4)\
    \ result += \"four\";\n        else if (v[i] == 5) result += \"five\";\n     \
    \   else if (v[i] == 6) result += \"six\";\n        else if (v[i] == 7) result\
    \ += \"seven\";\n        else if (v[i] == 8) result += \"eight\";\n        else\
    \ if (v[i] == 9) result += \"nine\";\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp3wdctpk7.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string token;\n    while(std::getline(ss, token, ' ')) {\n        if(token\
    \ == \"zero\") {\n            v.push_back(0);\n        } else if(token == \"one\"\
    ) {\n            v.push_back(1);\n        } else if(token == \"two\") {\n    \
    \        v.push_back(2);\n        } else if(token == \"three\") {\n          \
    \  v.push_back(3);\n        } else if(token == \"four\") {\n            v.push_back(4);\n\
    \        } else if(token == \"five\") {\n            v.push_back(5);\n       \
    \ } else if(token == \"six\") {\n            v.push_back(6);\n        } else if(token\
    \ == \"seven\") {\n            v.push_back(7);\n        } else if(token == \"\
    eight\") {\n            v.push_back(8);\n        } else if(token == \"nine\")\
    \ {\n            v.push_back(9);\n        }\n    }\n    std::sort(v.begin(), v.end());\n\
    \    std::string result;\n    for(int i = 0; i < v.size(); i++) {\n        if(v[i]\
    \ == 0) {\n            result += \"zero \";\n        } else if(v[i] == 1) {\n\
    \            result += \"one \";\n        } else if(v[i] == 2) {\n           \
    \ result += \"two \";\n        } else if(v[i] == 3) {\n            result += \"\
    three \";\n        } else if(v[i] == 4) {\n            result += \"four \";\n\
    \        } else if(v[i] == 5) {\n            result += \"five \";\n        } else\
    \ if(v[i] == 6) {\n            result += \"six \";\n        } else if(v[i] ==\
    \ 7) {\n            result += \"seven \";\n        } else if(v[i] == 8) {\n  \
    \          result += \"eight \";\n        } else if(v[\n}\nint main() {\n    auto\
    \ candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp6mzecdne.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> nums;\n\
    \    std::string temp;\n    while(ss >> temp) {\n        if(temp == \"zero\")\
    \ {\n            nums.push_back(0);\n        } else if(temp == \"one\") {\n  \
    \          nums.push_back(1);\n        } else if(temp == \"two\") {\n        \
    \    nums.push_back(2);\n        } else if(temp == \"three\") {\n            nums.push_back(3);\n\
    \        } else if(temp == \"four\") {\n            nums.push_back(4);\n     \
    \   } else if(temp == \"five\") {\n            nums.push_back(5);\n        } else\
    \ if(temp == \"six\") {\n            nums.push_back(6);\n        } else if(temp\
    \ == \"seven\") {\n            nums.push_back(7);\n        } else if(temp == \"\
    eight\") {\n            nums.push_back(8);\n        } else if(temp == \"nine\"\
    ) {\n            nums.push_back(9);\n        }\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::stringstream result;\n    for(int i = 0; i < nums.size();\
    \ i++) {\n        if(i != 0) {\n            result << \" \";\n        }\n    \
    \    if(nums[i] == 0) {\n            result << \"zero\";\n        } else if(nums[i]\
    \ == 1) {\n            result << \"one\";\n        } else if(nums[i] == 2) {\n\
    \            result << \"two\";\n        } else if(nums[i] == 3) {\n         \
    \   result << \"three\";\n        } else if(nums[i] == 4) {\n            result\
    \ << \"four\";\n        } else if(nums[i] == 5) {\n            result << \"five\"\
    ;\n        } else if(nums[i] == 6) {\n            result << \"six\";\n       \
    \ } else if(nums[i] == 7) {\n            result << \"seven\";\n        } else\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpfa_g755c.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  int i;\n    while (ss >> i) {\n        v.push_back(i);\n    }\n    std::sort(v.begin(),\
    \ v.end());\n    std::stringstream sss;\n    for (auto i : v) {\n        sss <<\
    \ i << \" \";\n    }\n    return sss.str();\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp6nycw31z.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n\tstd::vector<int> nums;\n\tstd::stringstream ss(numbers);\n\tstd::string\
    \ temp;\n\twhile (ss >> temp) {\n\t\tif (temp == \"zero\") {\n\t\t\tnums.push_back(0);\n\
    \t\t}\n\t\telse if (temp == \"one\") {\n\t\t\tnums.push_back(1);\n\t\t}\n\t\t\
    else if (temp == \"two\") {\n\t\t\tnums.push_back(2);\n\t\t}\n\t\telse if (temp\
    \ == \"three\") {\n\t\t\tnums.push_back(3);\n\t\t}\n\t\telse if (temp == \"four\"\
    ) {\n\t\t\tnums.push_back(4);\n\t\t}\n\t\telse if (temp == \"five\") {\n\t\t\t\
    nums.push_back(5);\n\t\t}\n\t\telse if (temp == \"six\") {\n\t\t\tnums.push_back(6);\n\
    \t\t}\n\t\telse if (temp == \"seven\") {\n\t\t\tnums.push_back(7);\n\t\t}\n\t\t\
    else if (temp == \"eight\") {\n\t\t\tnums.push_back(8);\n\t\t}\n\t\telse if (temp\
    \ == \"nine\") {\n\t\t\tnums.push_back(9);\n\t\t}\n\t}\n\tstd::sort(nums.begin(),\
    \ nums.end());\n\tstd::string result;\n\tfor (int i = 0; i < nums.size(); i++)\
    \ {\n\t\tif (nums[i] == 0) {\n\t\t\tresult += \"zero \";\n\t\t}\n\t\telse if (nums[i]\
    \ == 1) {\n\t\t\tresult += \"one \";\n\t\t}\n\t\telse if (nums[i] == 2) {\n\t\t\
    \tresult += \"two \";\n\t\t}\n\t\telse if (nums[i] == 3) {\n\t\t\tresult += \"\
    three \";\n\t\t}\n\t\telse if (nums[i] == 4) {\n\t\t\tresult += \"four \";\n}\n\
    int main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzkboc8l3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string temp;\n    while(ss >> temp) {\n        if(temp == \"zero\") v.push_back(0);\n\
    \        else if(temp == \"one\") v.push_back(1);\n        else if(temp == \"\
    two\") v.push_back(2);\n        else if(temp == \"three\") v.push_back(3);\n \
    \       else if(temp == \"four\") v.push_back(4);\n        else if(temp == \"\
    five\") v.push_back(5);\n        else if(temp == \"six\") v.push_back(6);\n  \
    \      else if(temp == \"seven\") v.push_back(7);\n        else if(temp == \"\
    eight\") v.push_back(8);\n        else if(temp == \"nine\") v.push_back(9);\n\
    \    }\n    std::sort(v.begin(), v.end());\n    std::string ans = \"\";\n    for(int\
    \ i = 0; i < v.size(); i++) {\n        if(v[i] == 0) ans += \"zero \";\n     \
    \   else if(v[i] == 1) ans += \"one \";\n        else if(v[i] == 2) ans += \"\
    two \";\n        else if(v[i] == 3) ans += \"three \";\n        else if(v[i] ==\
    \ 4) ans += \"four \";\n        else if(v[i] == 5) ans += \"five \";\n       \
    \ else if(v[i] == 6) ans += \"six \";\n        else if(v[i] == 7) ans += \"seven\
    \ \";\n        else if(v[i] == 8) ans += \"eight \";\n        else if(v[i] ==\
    \ 9) ans += \"nine \";\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpaw3xuoi2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    std::map<std::string, int> dict;\n    dict[\"zero\"] = 0;\n    dict[\"\
    one\"] = 1;\n    dict[\"two\"] = 2;\n    dict[\"three\"] = 3;\n    dict[\"four\"\
    ] = 4;\n    dict[\"five\"] = 5;\n    dict[\"six\"] = 6;\n    dict[\"seven\"] =\
    \ 7;\n    dict[\"eight\"] = 8;\n    dict[\"nine\"] = 9;\n    while (ss >> word)\
    \ {\n        nums.push_back(dict[word]);\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::string result;\n    for (int i = 0; i < nums.size(); i++) {\n      \
    \  result += std::to_string(nums[i]);\n        if (i != nums.size() - 1) {\n \
    \           result += \" \";\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp_wf80fhe.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string temp;\n    std::vector<int>\
    \ nums;\n    while(ss >> temp) {\n        if(temp == \"zero\") nums.push_back(0);\n\
    \        else if(temp == \"one\") nums.push_back(1);\n        else if(temp ==\
    \ \"two\") nums.push_back(2);\n        else if(temp == \"three\") nums.push_back(3);\n\
    \        else if(temp == \"four\") nums.push_back(4);\n        else if(temp ==\
    \ \"five\") nums.push_back(5);\n        else if(temp == \"six\") nums.push_back(6);\n\
    \        else if(temp == \"seven\") nums.push_back(7);\n        else if(temp ==\
    \ \"eight\") nums.push_back(8);\n        else if(temp == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::stringstream ss2;\n\
    \    for(int i = 0; i < nums.size(); i++) {\n        if(nums[i] == 0) ss2 << \"\
    zero\";\n        else if(nums[i] == 1) ss2 << \"one\";\n        else if(nums[i]\
    \ == 2) ss2 << \"two\";\n        else if(nums[i] == 3) ss2 << \"three\";\n   \
    \     else if(nums[i] == 4) ss2 << \"four\";\n        else if(nums[i] == 5) ss2\
    \ << \"five\";\n        else if(nums[i] == 6) ss2 << \"six\";\n        else if(nums[i]\
    \ == 7) ss2 << \"seven\";\n        else if(nums[i] == 8) ss2 << \"eight\";\n \
    \       else if(nums[i] == 9) ss2 << \"nine\";\n        if(i != nums.size() -\
    \ 1) ss2 << \" \";\n    }\n    return ss2.str();\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpmguvveb_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string temp;\n    while(ss >> temp) {\n        if(temp == \"zero\") {\n\
    \            v.push_back(0);\n        }\n        else if(temp == \"one\") {\n\
    \            v.push_back(1);\n        }\n        else if(temp == \"two\") {\n\
    \            v.push_back(2);\n        }\n        else if(temp == \"three\") {\n\
    \            v.push_back(3);\n        }\n        else if(temp == \"four\") {\n\
    \            v.push_back(4);\n        }\n        else if(temp == \"five\") {\n\
    \            v.push_back(5);\n        }\n        else if(temp == \"six\") {\n\
    \            v.push_back(6);\n        }\n        else if(temp == \"seven\") {\n\
    \            v.push_back(7);\n        }\n        else if(temp == \"eight\") {\n\
    \            v.push_back(8);\n        }\n        else if(temp == \"nine\") {\n\
    \            v.push_back(9);\n        }\n    }\n    std::sort(v.begin(), v.end());\n\
    \    std::string ans = \"\";\n    for(int i = 0; i < v.size(); i++) {\n      \
    \  if(v[i] == 0) {\n            ans += \"zero \";\n        }\n        else if(v[i]\
    \ == 1) {\n            ans += \"one \";\n        }\n        else if(v[i] == 2)\
    \ {\n            ans += \"two \";\n        }\n        else if(v[i] == 3) {\n \
    \           ans += \"three \";\n        }\n        else if(v[i] == 4) {\n    \
    \        ans += \"four \";\n        }\n        else if(v[i] == 5) {\n        \
    \    ans += \"five \";\n        }\n        else if(v[i] == 6) {\n            ans\
    \ += \"six \";\n        }\n        else if(v[i] == 7) {\n            ans += \"\
    seven \";\n        }\n\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmphk9lwkat.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"zero\"\
    ) nums.push_back(0);\n        else if (word == \"one\") nums.push_back(1);\n \
    \       else if (word == \"two\") nums.push_back(2);\n        else if (word ==\
    \ \"three\") nums.push_back(3);\n        else if (word == \"four\") nums.push_back(4);\n\
    \        else if (word == \"five\") nums.push_back(5);\n        else if (word\
    \ == \"six\") nums.push_back(6);\n        else if (word == \"seven\") nums.push_back(7);\n\
    \        else if (word == \"eight\") nums.push_back(8);\n        else if (word\
    \ == \"nine\") nums.push_back(9);\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::string result;\n    for (int i = 0; i < nums.size(); i++) {\n      \
    \  if (i != 0) result += \" \";\n        if (nums[i] == 0) result += \"zero\"\
    ;\n        else if (nums[i] == 1) result += \"one\";\n        else if (nums[i]\
    \ == 2) result += \"two\";\n        else if (nums[i] == 3) result += \"three\"\
    ;\n        else if (nums[i] == 4) result += \"four\";\n        else if (nums[i]\
    \ == 5) result += \"five\";\n        else if (nums[i] == 6) result += \"six\"\
    ;\n        else if (nums[i] == 7) result += \"seven\";\n        else if (nums[i]\
    \ == 8) result += \"eight\";\n        else if (nums[i] == 9) result += \"nine\"\
    ;\n    }\n    return result;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2dj47tj6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string temp;\n    std::vector<int>\
    \ nums;\n    while(ss >> temp) {\n        if(temp == \"zero\") nums.push_back(0);\n\
    \        else if(temp == \"one\") nums.push_back(1);\n        else if(temp ==\
    \ \"two\") nums.push_back(2);\n        else if(temp == \"three\") nums.push_back(3);\n\
    \        else if(temp == \"four\") nums.push_back(4);\n        else if(temp ==\
    \ \"five\") nums.push_back(5);\n        else if(temp == \"six\") nums.push_back(6);\n\
    \        else if(temp == \"seven\") nums.push_back(7);\n        else if(temp ==\
    \ \"eight\") nums.push_back(8);\n        else if(temp == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::string result;\n  \
    \  for(int i = 0; i < nums.size(); i++) {\n        if(nums[i] == 0) result +=\
    \ \"zero \";\n        else if(nums[i] == 1) result += \"one \";\n        else\
    \ if(nums[i] == 2) result += \"two \";\n        else if(nums[i] == 3) result +=\
    \ \"three \";\n        else if(nums[i] == 4) result += \"four \";\n        else\
    \ if(nums[i] == 5) result += \"five \";\n        else if(nums[i] == 6) result\
    \ += \"six \";\n        else if(nums[i] == 7) result += \"seven \";\n        else\
    \ if(nums[i] == 8) result += \"eight \";\n        else if(nums[i] == 9) result\
    \ += \"nine \";\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmphi83t8c0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") nums.push_back(0);\n\
    \        else if (word == \"one\") nums.push_back(1);\n        else if (word ==\
    \ \"two\") nums.push_back(2);\n        else if (word == \"three\") nums.push_back(3);\n\
    \        else if (word == \"four\") nums.push_back(4);\n        else if (word\
    \ == \"five\") nums.push_back(5);\n        else if (word == \"six\") nums.push_back(6);\n\
    \        else if (word == \"seven\") nums.push_back(7);\n        else if (word\
    \ == \"eight\") nums.push_back(8);\n        else if (word == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::string ans = \"\";\n\
    \    for (auto num : nums) {\n        if (num == 0) ans += \"zero \";\n      \
    \  else if (num == 1) ans += \"one \";\n        else if (num == 2) ans += \"two\
    \ \";\n        else if (num == 3) ans += \"three \";\n        else if (num ==\
    \ 4) ans += \"four \";\n        else if (num == 5) ans += \"five \";\n       \
    \ else if (num == 6) ans += \"six \";\n        else if (num == 7) ans += \"seven\
    \ \";\n        else if (num == 8) ans += \"eight \";\n        else if (num ==\
    \ 9) ans += \"nine \";\n    }\n    return ans.substr(0, ans.size() - 1);\n}\n\
    int main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpp6gwv47x.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"zero\"\
    )\n            nums.push_back(0);\n        else if (word == \"one\")\n       \
    \     nums.push_back(1);\n        else if (word == \"two\")\n            nums.push_back(2);\n\
    \        else if (word == \"three\")\n            nums.push_back(3);\n       \
    \ else if (word == \"four\")\n            nums.push_back(4);\n        else if\
    \ (word == \"five\")\n            nums.push_back(5);\n        else if (word ==\
    \ \"six\")\n            nums.push_back(6);\n        else if (word == \"seven\"\
    )\n            nums.push_back(7);\n        else if (word == \"eight\")\n     \
    \       nums.push_back(8);\n        else if (word == \"nine\")\n            nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::string result;\n  \
    \  for (int i = 0; i < nums.size(); i++) {\n        if (i > 0)\n            result\
    \ += \" \";\n        if (nums[i] == 0)\n            result += \"zero\";\n    \
    \    else if (nums[i] == 1)\n            result += \"one\";\n        else if (nums[i]\
    \ == 2)\n            result += \"two\";\n        else if (nums[i] == 3)\n    \
    \        result += \"three\";\n        else if (nums[i] == 4)\n            result\
    \ += \"four\";\n        else if (nums[i] == 5)\n            result += \"five\"\
    ;\n        else if (nums[i] == 6)\n            result += \"six\";\n        else\
    \ if (nums[i] == 7)\n            result += \"seven\";\n        else if (nums[i]\
    \ == 8)\n            result += \"eight\";\n        else if (nums[i] == 9)\n  \
    \          result += \"nine\";\n    }\n    return\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpcids_fhn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n  std::vector<int> nums;\n  std::stringstream ss(numbers);\n  std::string\
    \ word;\n  while (ss >> word) {\n    if (word == \"zero\") {\n      nums.push_back(0);\n\
    \    } else if (word == \"one\") {\n      nums.push_back(1);\n    } else if (word\
    \ == \"two\") {\n      nums.push_back(2);\n    } else if (word == \"three\") {\n\
    \      nums.push_back(3);\n    } else if (word == \"four\") {\n      nums.push_back(4);\n\
    \    } else if (word == \"five\") {\n      nums.push_back(5);\n    } else if (word\
    \ == \"six\") {\n      nums.push_back(6);\n    } else if (word == \"seven\") {\n\
    \      nums.push_back(7);\n    } else if (word == \"eight\") {\n      nums.push_back(8);\n\
    \    } else if (word == \"nine\") {\n      nums.push_back(9);\n    }\n  }\n  std::sort(nums.begin(),\
    \ nums.end());\n  std::string result;\n  for (int i = 0; i < nums.size(); i++)\
    \ {\n    if (nums[i] == 0) {\n      result += \"zero\";\n    } else if (nums[i]\
    \ == 1) {\n      result += \"one\";\n    } else if (nums[i] == 2) {\n      result\
    \ += \"two\";\n    } else if (nums[i] == 3) {\n      result += \"three\";\n  \
    \  } else if (nums[i] == 4) {\n      result += \"four\";\n    } else if (nums[i]\
    \ == 5) {\n      result += \"five\";\n    } else if (nums[i] == 6) {\n      result\
    \ += \"six\";\n    } else if (nums[i] == 7) {\n      result += \"seven\";\n  \
    \  } else if (nums[i] == 8) {\n      result += \"eight\";\n   \n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp90w83dya.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") {\n         \
    \   nums.push_back(0);\n        } else if (word == \"one\") {\n            nums.push_back(1);\n\
    \        } else if (word == \"two\") {\n            nums.push_back(2);\n     \
    \   } else if (word == \"three\") {\n            nums.push_back(3);\n        }\
    \ else if (word == \"four\") {\n            nums.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            nums.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            nums.push_back(6);\n        } else if (word == \"\
    seven\") {\n            nums.push_back(7);\n        } else if (word == \"eight\"\
    ) {\n            nums.push_back(8);\n        } else if (word == \"nine\") {\n\
    \            nums.push_back(9);\n        }\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::string result;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        if (i != 0) {\n            result += \" \";\n        }\n   \
    \     if (nums[i] == 0) {\n            result += \"zero\";\n        } else if\
    \ (nums[i] == 1) {\n            result += \"one\";\n        } else if (nums[i]\
    \ == 2) {\n            result += \"two\";\n        } else if (nums[i] == 3) {\n\
    \            result += \"three\";\n        } else if (nums[i] == 4) {\n      \
    \      result += \"four\";\n        } else if (nums[i] == 5) {\n            result\
    \ += \"five\";\n        } else if (nums[i] == 6) {\n            result += \"six\"\
    ;\n        } else if (nums[i] == 7) {\n            result += \"seven\";\n    \
    \    } else if\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpldvxpsli.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n\tstd::stringstream ss(numbers);\n\tstd::string word;\n\tstd::vector<int>\
    \ nums;\n\twhile (ss >> word) {\n\t\tif (word == \"zero\")\n\t\t\tnums.push_back(0);\n\
    \t\telse if (word == \"one\")\n\t\t\tnums.push_back(1);\n\t\telse if (word ==\
    \ \"two\")\n\t\t\tnums.push_back(2);\n\t\telse if (word == \"three\")\n\t\t\t\
    nums.push_back(3);\n\t\telse if (word == \"four\")\n\t\t\tnums.push_back(4);\n\
    \t\telse if (word == \"five\")\n\t\t\tnums.push_back(5);\n\t\telse if (word ==\
    \ \"six\")\n\t\t\tnums.push_back(6);\n\t\telse if (word == \"seven\")\n\t\t\t\
    nums.push_back(7);\n\t\telse if (word == \"eight\")\n\t\t\tnums.push_back(8);\n\
    \t\telse if (word == \"nine\")\n\t\t\tnums.push_back(9);\n\t}\n\tstd::sort(nums.begin(),\
    \ nums.end());\n\tstd::string result;\n\tfor (int i = 0; i < nums.size(); i++)\
    \ {\n\t\tif (nums[i] == 0)\n\t\t\tresult += \"zero \";\n\t\telse if (nums[i] ==\
    \ 1)\n\t\t\tresult += \"one \";\n\t\telse if (nums[i] == 2)\n\t\t\tresult += \"\
    two \";\n\t\telse if (nums[i] == 3)\n\t\t\tresult += \"three \";\n\t\telse if\
    \ (nums[i] == 4)\n\t\t\tresult += \"four \";\n\t\telse if (nums[i] == 5)\n\t\t\
    \tresult += \"five \";\n\t\telse if (nums[i] == 6)\n\t\t\tresult += \"six \";\n\
    \t\telse if (nums[i] == 7)\n\t\t\tresult += \"seven \"\n}\nint main() {\n    auto\
    \ candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpselxq93k.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") nums.push_back(0);\n\
    \        else if (word == \"one\") nums.push_back(1);\n        else if (word ==\
    \ \"two\") nums.push_back(2);\n        else if (word == \"three\") nums.push_back(3);\n\
    \        else if (word == \"four\") nums.push_back(4);\n        else if (word\
    \ == \"five\") nums.push_back(5);\n        else if (word == \"six\") nums.push_back(6);\n\
    \        else if (word == \"seven\") nums.push_back(7);\n        else if (word\
    \ == \"eight\") nums.push_back(8);\n        else if (word == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::string ans = \"\";\n\
    \    for (int i = 0; i < nums.size(); i++) {\n        if (i != 0) ans += \" \"\
    ;\n        if (nums[i] == 0) ans += \"zero\";\n        else if (nums[i] == 1)\
    \ ans += \"one\";\n        else if (nums[i] == 2) ans += \"two\";\n        else\
    \ if (nums[i] == 3) ans += \"three\";\n        else if (nums[i] == 4) ans += \"\
    four\";\n        else if (nums[i] == 5) ans += \"five\";\n        else if (nums[i]\
    \ == 6) ans += \"six\";\n        else if (nums[i] == 7) ans += \"seven\";\n  \
    \      else if (nums[i] == 8) ans += \"eight\";\n        else if (nums[i] == 9)\
    \ ans += \"nine\";\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpa2f_fefx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> nums;\n\
    \    std::string temp;\n    while(ss >> temp) {\n        if(temp == \"zero\")\
    \ nums.push_back(0);\n        else if(temp == \"one\") nums.push_back(1);\n  \
    \      else if(temp == \"two\") nums.push_back(2);\n        else if(temp == \"\
    three\") nums.push_back(3);\n        else if(temp == \"four\") nums.push_back(4);\n\
    \        else if(temp == \"five\") nums.push_back(5);\n        else if(temp ==\
    \ \"six\") nums.push_back(6);\n        else if(temp == \"seven\") nums.push_back(7);\n\
    \        else if(temp == \"eight\") nums.push_back(8);\n        else if(temp ==\
    \ \"nine\") nums.push_back(9);\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::string result;\n    for(int i = 0; i < nums.size(); i++) {\n       \
    \ if(nums[i] == 0) result += \"zero \";\n        else if(nums[i] == 1) result\
    \ += \"one \";\n        else if(nums[i] == 2) result += \"two \";\n        else\
    \ if(nums[i] == 3) result += \"three \";\n        else if(nums[i] == 4) result\
    \ += \"four \";\n        else if(nums[i] == 5) result += \"five \";\n        else\
    \ if(nums[i] == 6) result += \"six \";\n        else if(nums[i] == 7) result +=\
    \ \"seven \";\n        else if(nums[i] == 8) result += \"eight \";\n        else\
    \ if(nums[i] == 9) result += \"nine \";\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5n5wq3e2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") {\n         \
    \   nums.push_back(0);\n        } else if (word == \"one\") {\n            nums.push_back(1);\n\
    \        } else if (word == \"two\") {\n            nums.push_back(2);\n     \
    \   } else if (word == \"three\") {\n            nums.push_back(3);\n        }\
    \ else if (word == \"four\") {\n            nums.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            nums.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            nums.push_back(6);\n        } else if (word == \"\
    seven\") {\n            nums.push_back(7);\n        } else if (word == \"eight\"\
    ) {\n            nums.push_back(8);\n        } else if (word == \"nine\") {\n\
    \            nums.push_back(9);\n        }\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::string result;\n    for (auto num : nums) {\n       \
    \ if (num == 0) {\n            result += \"zero \";\n        } else if (num ==\
    \ 1) {\n            result += \"one \";\n        } else if (num == 2) {\n    \
    \        result += \"two \";\n        } else if (num == 3) {\n            result\
    \ += \"three \";\n        } else if (num == 4) {\n            result += \"four\
    \ \";\n        } else if (num == 5) {\n            result += \"five \";\n    \
    \    } else if (num == 6) {\n            result += \"six \";\n        } else if\
    \ (num == 7) {\n            result += \"seven \";\n        } else if (num == 8)\
    \ {\n            result += \"eight \";\n        } else if (num == 9) {\n     \
    \       result += \"nine \";\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpup6m1o0p.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"zero\"\
    ) nums.push_back(0);\n        else if (word == \"one\") nums.push_back(1);\n \
    \       else if (word == \"two\") nums.push_back(2);\n        else if (word ==\
    \ \"three\") nums.push_back(3);\n        else if (word == \"four\") nums.push_back(4);\n\
    \        else if (word == \"five\") nums.push_back(5);\n        else if (word\
    \ == \"six\") nums.push_back(6);\n        else if (word == \"seven\") nums.push_back(7);\n\
    \        else if (word == \"eight\") nums.push_back(8);\n        else if (word\
    \ == \"nine\") nums.push_back(9);\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::string result;\n    for (int i = 0; i < nums.size(); i++) {\n      \
    \  if (i != 0) result += \" \";\n        if (nums[i] == 0) result += \"zero\"\
    ;\n        else if (nums[i] == 1) result += \"one\";\n        else if (nums[i]\
    \ == 2) result += \"two\";\n        else if (nums[i] == 3) result += \"three\"\
    ;\n        else if (nums[i] == 4) result += \"four\";\n        else if (nums[i]\
    \ == 5) result += \"five\";\n        else if (nums[i] == 6) result += \"six\"\
    ;\n        else if (nums[i] == 7) result += \"seven\";\n        else if (nums[i]\
    \ == 8) result += \"eight\";\n        else if (nums[i] == 9) result += \"nine\"\
    ;\n    }\n    return result;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2dj47tj6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n  std::stringstream ss(numbers);\n  std::vector<int> v;\n  std::string\
    \ temp;\n  while(ss >> temp) {\n    if(temp == \"zero\") v.push_back(0);\n   \
    \ else if(temp == \"one\") v.push_back(1);\n    else if(temp == \"two\") v.push_back(2);\n\
    \    else if(temp == \"three\") v.push_back(3);\n    else if(temp == \"four\"\
    ) v.push_back(4);\n    else if(temp == \"five\") v.push_back(5);\n    else if(temp\
    \ == \"six\") v.push_back(6);\n    else if(temp == \"seven\") v.push_back(7);\n\
    \    else if(temp == \"eight\") v.push_back(8);\n    else if(temp == \"nine\"\
    ) v.push_back(9);\n  }\n  std::sort(v.begin(), v.end());\n  std::stringstream\
    \ ss2;\n  for(int i = 0; i < v.size(); i++) {\n    if(v[i] == 0) ss2 << \"zero\
    \ \";\n    else if(v[i] == 1) ss2 << \"one \";\n    else if(v[i] == 2) ss2 <<\
    \ \"two \";\n    else if(v[i] == 3) ss2 << \"three \";\n    else if(v[i] == 4)\
    \ ss2 << \"four \";\n    else if(v[i] == 5) ss2 << \"five \";\n    else if(v[i]\
    \ == 6) ss2 << \"six \";\n    else if(v[i] == 7) ss2 << \"seven \";\n    else\
    \ if(v[i] == 8) ss2 << \"eight \";\n    else if(v[i] == 9) ss2 << \"nine \";\n\
    \  }\n  return ss2.str();\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpg86uuala.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string temp;\n    std::vector<int>\
    \ nums;\n    while(ss >> temp) {\n        if(temp == \"zero\") nums.push_back(0);\n\
    \        else if(temp == \"one\") nums.push_back(1);\n        else if(temp ==\
    \ \"two\") nums.push_back(2);\n        else if(temp == \"three\") nums.push_back(3);\n\
    \        else if(temp == \"four\") nums.push_back(4);\n        else if(temp ==\
    \ \"five\") nums.push_back(5);\n        else if(temp == \"six\") nums.push_back(6);\n\
    \        else if(temp == \"seven\") nums.push_back(7);\n        else if(temp ==\
    \ \"eight\") nums.push_back(8);\n        else if(temp == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::string ans = \"\";\n\
    \    for(int i = 0; i < nums.size(); i++) {\n        if(nums[i] == 0) ans += \"\
    zero \";\n        else if(nums[i] == 1) ans += \"one \";\n        else if(nums[i]\
    \ == 2) ans += \"two \";\n        else if(nums[i] == 3) ans += \"three \";\n \
    \       else if(nums[i] == 4) ans += \"four \";\n        else if(nums[i] == 5)\
    \ ans += \"five \";\n        else if(nums[i] == 6) ans += \"six \";\n        else\
    \ if(nums[i] == 7) ans += \"seven \";\n        else if(nums[i] == 8) ans += \"\
    eight \";\n        else if(nums[i] == 9) ans += \"nine \";\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpmsniaw7q.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n  std::stringstream ss(numbers);\n  std::string word;\n  std::vector<int>\
    \ nums;\n  while (ss >> word) {\n    if (word == \"zero\") nums.push_back(0);\n\
    \    else if (word == \"one\") nums.push_back(1);\n    else if (word == \"two\"\
    ) nums.push_back(2);\n    else if (word == \"three\") nums.push_back(3);\n   \
    \ else if (word == \"four\") nums.push_back(4);\n    else if (word == \"five\"\
    ) nums.push_back(5);\n    else if (word == \"six\") nums.push_back(6);\n    else\
    \ if (word == \"seven\") nums.push_back(7);\n    else if (word == \"eight\") nums.push_back(8);\n\
    \    else if (word == \"nine\") nums.push_back(9);\n  }\n  std::sort(nums.begin(),\
    \ nums.end());\n  std::string result;\n  for (int i = 0; i < nums.size(); i++)\
    \ {\n    if (i > 0) result += \" \";\n    if (nums[i] == 0) result += \"zero\"\
    ;\n    else if (nums[i] == 1) result += \"one\";\n    else if (nums[i] == 2) result\
    \ += \"two\";\n    else if (nums[i] == 3) result += \"three\";\n    else if (nums[i]\
    \ == 4) result += \"four\";\n    else if (nums[i] == 5) result += \"five\";\n\
    \    else if (nums[i] == 6) result += \"six\";\n    else if (nums[i] == 7) result\
    \ += \"seven\";\n    else if (nums[i] == 8) result += \"eight\";\n    else if\
    \ (nums[i] == 9) result += \"nine\";\n  }\n  return result;\n}\nint main() {\n\
    \    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpum0vza7p.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") nums.push_back(0);\n\
    \        else if (word == \"one\") nums.push_back(1);\n        else if (word ==\
    \ \"two\") nums.push_back(2);\n        else if (word == \"three\") nums.push_back(3);\n\
    \        else if (word == \"four\") nums.push_back(4);\n        else if (word\
    \ == \"five\") nums.push_back(5);\n        else if (word == \"six\") nums.push_back(6);\n\
    \        else if (word == \"seven\") nums.push_back(7);\n        else if (word\
    \ == \"eight\") nums.push_back(8);\n        else if (word == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::stringstream out;\n\
    \    for (auto i : nums) {\n        if (i == 0) out << \"zero \";\n        else\
    \ if (i == 1) out << \"one \";\n        else if (i == 2) out << \"two \";\n  \
    \      else if (i == 3) out << \"three \";\n        else if (i == 4) out << \"\
    four \";\n        else if (i == 5) out << \"five \";\n        else if (i == 6)\
    \ out << \"six \";\n        else if (i == 7) out << \"seven \";\n        else\
    \ if (i == 8) out << \"eight \";\n        else if (i == 9) out << \"nine \";\n\
    \    }\n    return out.str();\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmppi82pcm3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string word;\n    while (ss >> word) {\n        if (word == \"zero\")\
    \ {\n            v.push_back(0);\n        } else if (word == \"one\") {\n    \
    \        v.push_back(1);\n        } else if (word == \"two\") {\n            v.push_back(2);\n\
    \        } else if (word == \"three\") {\n            v.push_back(3);\n      \
    \  } else if (word == \"four\") {\n            v.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            v.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            v.push_back(6);\n        } else if (word == \"seven\"\
    ) {\n            v.push_back(7);\n        } else if (word == \"eight\") {\n  \
    \          v.push_back(8);\n        } else if (word == \"nine\") {\n         \
    \   v.push_back(9);\n        }\n    }\n    std::sort(v.begin(), v.end());\n  \
    \  std::stringstream s;\n    for (int i = 0; i < v.size(); i++) {\n        if\
    \ (v[i] == 0) {\n            s << \"zero\";\n        } else if (v[i] == 1) {\n\
    \            s << \"one\";\n        } else if (v[i] == 2) {\n            s <<\
    \ \"two\";\n        } else if (v[i] == 3) {\n            s << \"three\";\n   \
    \     } else if (v[i] == 4) {\n            s << \"four\";\n        } else if (v[i]\
    \ == 5) {\n            s << \"five\";\n        } else if (v[i] == 6) {\n     \
    \       s << \"six\";\n        } else if (v[i] == 7) {\n            s << \"seven\"\
    ;\n        } else if (v[i] == 8) {\n            s << \"eight\";\n        } else\
    \ if (v[i] == 9) {\n            s << \"nine\";\n        }\n}\nint main() {\n \
    \   auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp429gzgdh.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string temp;\n    while (ss >> temp) {\n        if (temp == \"zero\"\
    ) nums.push_back(0);\n        else if (temp == \"one\") nums.push_back(1);\n \
    \       else if (temp == \"two\") nums.push_back(2);\n        else if (temp ==\
    \ \"three\") nums.push_back(3);\n        else if (temp == \"four\") nums.push_back(4);\n\
    \        else if (temp == \"five\") nums.push_back(5);\n        else if (temp\
    \ == \"six\") nums.push_back(6);\n        else if (temp == \"seven\") nums.push_back(7);\n\
    \        else if (temp == \"eight\") nums.push_back(8);\n        else if (temp\
    \ == \"nine\") nums.push_back(9);\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::string res;\n    for (int i = 0; i < nums.size(); i++) {\n        if\
    \ (nums[i] == 0) res += \"zero \";\n        else if (nums[i] == 1) res += \"one\
    \ \";\n        else if (nums[i] == 2) res += \"two \";\n        else if (nums[i]\
    \ == 3) res += \"three \";\n        else if (nums[i] == 4) res += \"four \";\n\
    \        else if (nums[i] == 5) res += \"five \";\n        else if (nums[i] ==\
    \ 6) res += \"six \";\n        else if (nums[i] == 7) res += \"seven \";\n   \
    \     else if (nums[i] == 8) res += \"eight \";\n        else if (nums[i] == 9)\
    \ res += \"nine \";\n    }\n    return res.substr(0, res.size() - 1);\n}\nint\
    \ main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpyde_aosu.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"zero\"\
    ) {\n            nums.push_back(0);\n        } else if (word == \"one\") {\n \
    \           nums.push_back(1);\n        } else if (word == \"two\") {\n      \
    \      nums.push_back(2);\n        } else if (word == \"three\") {\n         \
    \   nums.push_back(3);\n        } else if (word == \"four\") {\n            nums.push_back(4);\n\
    \        } else if (word == \"five\") {\n            nums.push_back(5);\n    \
    \    } else if (word == \"six\") {\n            nums.push_back(6);\n        }\
    \ else if (word == \"seven\") {\n            nums.push_back(7);\n        } else\
    \ if (word == \"eight\") {\n            nums.push_back(8);\n        } else if\
    \ (word == \"nine\") {\n            nums.push_back(9);\n        }\n    }\n   \
    \ std::sort(nums.begin(), nums.end());\n    std::string result;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        if (i != 0) {\n            result +=\
    \ \" \";\n        }\n        if (nums[i] == 0) {\n            result += \"zero\"\
    ;\n        } else if (nums[i] == 1) {\n            result += \"one\";\n      \
    \  } else if (nums[i] == 2) {\n            result += \"two\";\n        } else\
    \ if (nums[i] == 3) {\n            result += \"three\";\n        } else if (nums[i]\
    \ == 4) {\n            result += \"four\";\n        } else if (nums[i] == 5) {\n\
    \            result += \"five\";\n        } else if (nums[i] == 6) {\n       \
    \     result += \"six\";\n        } else if (nums[i] == 7) {\n            result\
    \ += \"seven\";\n        } else if\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpv3sxm8ju.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") {\n         \
    \   nums.push_back(0);\n        } else if (word == \"one\") {\n            nums.push_back(1);\n\
    \        } else if (word == \"two\") {\n            nums.push_back(2);\n     \
    \   } else if (word == \"three\") {\n            nums.push_back(3);\n        }\
    \ else if (word == \"four\") {\n            nums.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            nums.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            nums.push_back(6);\n        } else if (word == \"\
    seven\") {\n            nums.push_back(7);\n        } else if (word == \"eight\"\
    ) {\n            nums.push_back(8);\n        } else if (word == \"nine\") {\n\
    \            nums.push_back(9);\n        }\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::stringstream out;\n    for (auto num : nums) {\n    \
    \    if (num == 0) {\n            out << \"zero\";\n        } else if (num ==\
    \ 1) {\n            out << \"one\";\n        } else if (num == 2) {\n        \
    \    out << \"two\";\n        } else if (num == 3) {\n            out << \"three\"\
    ;\n        } else if (num == 4) {\n            out << \"four\";\n        } else\
    \ if (num == 5) {\n            out << \"five\";\n        } else if (num == 6)\
    \ {\n            out << \"six\";\n        } else if (num == 7) {\n           \
    \ out << \"seven\";\n        } else if (num == 8) {\n            out << \"eight\"\
    ;\n        } else if (num == 9) {\n            out << \"nine\";\n        }\n \
    \       out << \" \";\n    }\n    return out.str();\n}\nint main() {\n    auto\
    \ candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4k_kvm24.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\")\n           \
    \ nums.push_back(0);\n        else if (word == \"one\")\n            nums.push_back(1);\n\
    \        else if (word == \"two\")\n            nums.push_back(2);\n        else\
    \ if (word == \"three\")\n            nums.push_back(3);\n        else if (word\
    \ == \"four\")\n            nums.push_back(4);\n        else if (word == \"five\"\
    )\n            nums.push_back(5);\n        else if (word == \"six\")\n       \
    \     nums.push_back(6);\n        else if (word == \"seven\")\n            nums.push_back(7);\n\
    \        else if (word == \"eight\")\n            nums.push_back(8);\n       \
    \ else if (word == \"nine\")\n            nums.push_back(9);\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::string result;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        if (i != 0)\n            result += \" \";\n        if (nums[i]\
    \ == 0)\n            result += \"zero\";\n        else if (nums[i] == 1)\n   \
    \         result += \"one\";\n        else if (nums[i] == 2)\n            result\
    \ += \"two\";\n        else if (nums[i] == 3)\n            result += \"three\"\
    ;\n        else if (nums[i] == 4)\n            result += \"four\";\n        else\
    \ if (nums[i] == 5)\n            result += \"five\";\n        else if (nums[i]\
    \ == 6)\n            result += \"six\";\n        else if (nums[i] == 7)\n    \
    \        result += \"seven\";\n        else if (nums[i] == 8)\n            result\
    \ += \"eight\";\n        else if (nums[i] == 9)\n            result += \"nine\"\
    ;\n    }\n    return\n}\nint main() {\n    auto candidate = sort_numbers;\n  \
    \  assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpvoazf4ye.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") nums.push_back(0);\n\
    \        else if (word == \"one\") nums.push_back(1);\n        else if (word ==\
    \ \"two\") nums.push_back(2);\n        else if (word == \"three\") nums.push_back(3);\n\
    \        else if (word == \"four\") nums.push_back(4);\n        else if (word\
    \ == \"five\") nums.push_back(5);\n        else if (word == \"six\") nums.push_back(6);\n\
    \        else if (word == \"seven\") nums.push_back(7);\n        else if (word\
    \ == \"eight\") nums.push_back(8);\n        else if (word == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::string result;\n  \
    \  for (int i = 0; i < nums.size(); i++) {\n        if (i != 0) result += \" \"\
    ;\n        if (nums[i] == 0) result += \"zero\";\n        else if (nums[i] ==\
    \ 1) result += \"one\";\n        else if (nums[i] == 2) result += \"two\";\n \
    \       else if (nums[i] == 3) result += \"three\";\n        else if (nums[i]\
    \ == 4) result += \"four\";\n        else if (nums[i] == 5) result += \"five\"\
    ;\n        else if (nums[i] == 6) result += \"six\";\n        else if (nums[i]\
    \ == 7) result += \"seven\";\n        else if (nums[i] == 8) result += \"eight\"\
    ;\n        else if (nums[i] == 9) result += \"nine\";\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp6sxp8tdo.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n  std::vector<int> nums;\n  std::stringstream ss(numbers);\n  std::string\
    \ temp;\n  while (ss >> temp) {\n    if (temp == \"zero\") nums.push_back(0);\n\
    \    else if (temp == \"one\") nums.push_back(1);\n    else if (temp == \"two\"\
    ) nums.push_back(2);\n    else if (temp == \"three\") nums.push_back(3);\n   \
    \ else if (temp == \"four\") nums.push_back(4);\n    else if (temp == \"five\"\
    ) nums.push_back(5);\n    else if (temp == \"six\") nums.push_back(6);\n    else\
    \ if (temp == \"seven\") nums.push_back(7);\n    else if (temp == \"eight\") nums.push_back(8);\n\
    \    else if (temp == \"nine\") nums.push_back(9);\n  }\n  std::sort(nums.begin(),\
    \ nums.end());\n  std::string result;\n  for (auto i : nums) {\n    if (i == 0)\
    \ result += \"zero \";\n    else if (i == 1) result += \"one \";\n    else if\
    \ (i == 2) result += \"two \";\n    else if (i == 3) result += \"three \";\n \
    \   else if (i == 4) result += \"four \";\n    else if (i == 5) result += \"five\
    \ \";\n    else if (i == 6) result += \"six \";\n    else if (i == 7) result +=\
    \ \"seven \";\n    else if (i == 8) result += \"eight \";\n    else if (i == 9)\
    \ result += \"nine \";\n  }\n  return result.substr(0, result.size() - 1);\n}\n\
    int main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpxrxlg77_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> nums;\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"zero\"\
    ) nums.push_back(0);\n        else if (word == \"one\") nums.push_back(1);\n \
    \       else if (word == \"two\") nums.push_back(2);\n        else if (word ==\
    \ \"three\") nums.push_back(3);\n        else if (word == \"four\") nums.push_back(4);\n\
    \        else if (word == \"five\") nums.push_back(5);\n        else if (word\
    \ == \"six\") nums.push_back(6);\n        else if (word == \"seven\") nums.push_back(7);\n\
    \        else if (word == \"eight\") nums.push_back(8);\n        else if (word\
    \ == \"nine\") nums.push_back(9);\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::stringstream res;\n    for (int i = 0; i < nums.size(); i++) {\n   \
    \     if (i > 0) res << \" \";\n        if (nums[i] == 0) res << \"zero\";\n \
    \       else if (nums[i] == 1) res << \"one\";\n        else if (nums[i] == 2)\
    \ res << \"two\";\n        else if (nums[i] == 3) res << \"three\";\n        else\
    \ if (nums[i] == 4) res << \"four\";\n        else if (nums[i] == 5) res << \"\
    five\";\n        else if (nums[i] == 6) res << \"six\";\n        else if (nums[i]\
    \ == 7) res << \"seven\";\n        else if (nums[i] == 8) res << \"eight\";\n\
    \        else if (nums[i] == 9) res << \"nine\";\n    }\n    return res.str();\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp_8xxq5hj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string s;\n    while(ss >> s) {\n        if(s == \"zero\") v.push_back(0);\n\
    \        else if(s == \"one\") v.push_back(1);\n        else if(s == \"two\")\
    \ v.push_back(2);\n        else if(s == \"three\") v.push_back(3);\n        else\
    \ if(s == \"four\") v.push_back(4);\n        else if(s == \"five\") v.push_back(5);\n\
    \        else if(s == \"six\") v.push_back(6);\n        else if(s == \"seven\"\
    ) v.push_back(7);\n        else if(s == \"eight\") v.push_back(8);\n        else\
    \ if(s == \"nine\") v.push_back(9);\n    }\n    std::sort(v.begin(), v.end());\n\
    \    std::string ans;\n    for(int i = 0; i < v.size(); i++) {\n        if(v[i]\
    \ == 0) ans += \"zero \";\n        else if(v[i] == 1) ans += \"one \";\n     \
    \   else if(v[i] == 2) ans += \"two \";\n        else if(v[i] == 3) ans += \"\
    three \";\n        else if(v[i] == 4) ans += \"four \";\n        else if(v[i]\
    \ == 5) ans += \"five \";\n        else if(v[i] == 6) ans += \"six \";\n     \
    \   else if(v[i] == 7) ans += \"seven \";\n        else if(v[i] == 8) ans += \"\
    eight \";\n        else if(v[i] == 9) ans += \"nine \";\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4gfosin0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") {\n         \
    \   nums.push_back(0);\n        } else if (word == \"one\") {\n            nums.push_back(1);\n\
    \        } else if (word == \"two\") {\n            nums.push_back(2);\n     \
    \   } else if (word == \"three\") {\n            nums.push_back(3);\n        }\
    \ else if (word == \"four\") {\n            nums.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            nums.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            nums.push_back(6);\n        } else if (word == \"\
    seven\") {\n            nums.push_back(7);\n        } else if (word == \"eight\"\
    ) {\n            nums.push_back(8);\n        } else if (word == \"nine\") {\n\
    \            nums.push_back(9);\n        }\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::string result;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        if (i != 0) {\n            result += \" \";\n        }\n   \
    \     if (nums[i] == 0) {\n            result += \"zero\";\n        } else if\
    \ (nums[i] == 1) {\n            result += \"one\";\n        } else if (nums[i]\
    \ == 2) {\n            result += \"two\";\n        } else if (nums[i] == 3) {\n\
    \            result += \"three\";\n        } else if (nums[i] == 4) {\n      \
    \      result += \"four\";\n        } else if (nums[i] == 5) {\n            result\
    \ += \"five\";\n        } else if (nums[i] == 6) {\n            result += \"six\"\
    ;\n        } else if (nums[i] == 7) {\n            result += \"seven\";\n    \
    \    } else if\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpldvxpsli.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"zero\"\
    ) {\n            nums.push_back(0);\n        } else if (word == \"one\") {\n \
    \           nums.push_back(1);\n        } else if (word == \"two\") {\n      \
    \      nums.push_back(2);\n        } else if (word == \"three\") {\n         \
    \   nums.push_back(3);\n        } else if (word == \"four\") {\n            nums.push_back(4);\n\
    \        } else if (word == \"five\") {\n            nums.push_back(5);\n    \
    \    } else if (word == \"six\") {\n            nums.push_back(6);\n        }\
    \ else if (word == \"seven\") {\n            nums.push_back(7);\n        } else\
    \ if (word == \"eight\") {\n            nums.push_back(8);\n        } else if\
    \ (word == \"nine\") {\n            nums.push_back(9);\n        }\n    }\n   \
    \ std::sort(nums.begin(), nums.end());\n    std::stringstream ss2;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        if (i != 0) {\n            ss2 << \"\
    \ \";\n        }\n        if (nums[i] == 0) {\n            ss2 << \"zero\";\n\
    \        } else if (nums[i] == 1) {\n            ss2 << \"one\";\n        } else\
    \ if (nums[i] == 2) {\n            ss2 << \"two\";\n        } else if (nums[i]\
    \ == 3) {\n            ss2 << \"three\";\n        } else if (nums[i] == 4) {\n\
    \            ss2 << \"four\";\n        } else if (nums[i] == 5) {\n          \
    \  ss2 << \"five\";\n        } else if (nums[i] == 6) {\n            ss2 << \"\
    six\";\n        } else if (nums[i] == 7) {\n           \n}\nint main() {\n   \
    \ auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n \
    \   assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"three\
    \ five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp0m9_q5yb.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n  std::vector<int> nums;\n  std::stringstream ss(numbers);\n  std::string\
    \ temp;\n  while (ss >> temp) {\n    if (temp == \"zero\") nums.push_back(0);\n\
    \    else if (temp == \"one\") nums.push_back(1);\n    else if (temp == \"two\"\
    ) nums.push_back(2);\n    else if (temp == \"three\") nums.push_back(3);\n   \
    \ else if (temp == \"four\") nums.push_back(4);\n    else if (temp == \"five\"\
    ) nums.push_back(5);\n    else if (temp == \"six\") nums.push_back(6);\n    else\
    \ if (temp == \"seven\") nums.push_back(7);\n    else if (temp == \"eight\") nums.push_back(8);\n\
    \    else if (temp == \"nine\") nums.push_back(9);\n  }\n  std::sort(nums.begin(),\
    \ nums.end());\n  std::string result;\n  for (int i = 0; i < nums.size(); i++)\
    \ {\n    if (i > 0) result += \" \";\n    if (nums[i] == 0) result += \"zero\"\
    ;\n    else if (nums[i] == 1) result += \"one\";\n    else if (nums[i] == 2) result\
    \ += \"two\";\n    else if (nums[i] == 3) result += \"three\";\n    else if (nums[i]\
    \ == 4) result += \"four\";\n    else if (nums[i] == 5) result += \"five\";\n\
    \    else if (nums[i] == 6) result += \"six\";\n    else if (nums[i] == 7) result\
    \ += \"seven\";\n    else if (nums[i] == 8) result += \"eight\";\n    else if\
    \ (nums[i] == 9) result += \"nine\";\n  }\n  return result;\n}\nint main() {\n\
    \    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpp6765pcf.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") {\n         \
    \   nums.push_back(0);\n        } else if (word == \"one\") {\n            nums.push_back(1);\n\
    \        } else if (word == \"two\") {\n            nums.push_back(2);\n     \
    \   } else if (word == \"three\") {\n            nums.push_back(3);\n        }\
    \ else if (word == \"four\") {\n            nums.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            nums.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            nums.push_back(6);\n        } else if (word == \"\
    seven\") {\n            nums.push_back(7);\n        } else if (word == \"eight\"\
    ) {\n            nums.push_back(8);\n        } else if (word == \"nine\") {\n\
    \            nums.push_back(9);\n        }\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::string result;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        if (i != 0) {\n            result += \" \";\n        }\n   \
    \     if (nums[i] == 0) {\n            result += \"zero\";\n        } else if\
    \ (nums[i] == 1) {\n            result += \"one\";\n        } else if (nums[i]\
    \ == 2) {\n            result += \"two\";\n        } else if (nums[i] == 3) {\n\
    \            result += \"three\";\n        } else if (nums[i] == 4) {\n      \
    \      result += \"four\";\n        } else if (nums[i] == 5) {\n            result\
    \ += \"five\";\n        } else if (nums[i] == 6) {\n            result += \"six\"\
    ;\n        } else if (nums[i] == 7) {\n            result += \"seven\";\n    \
    \    } else if\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpldvxpsli.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string word;\n    while (ss >> word) {\n        if (word == \"zero\")\
    \ {\n            v.push_back(0);\n        } else if (word == \"one\") {\n    \
    \        v.push_back(1);\n        } else if (word == \"two\") {\n            v.push_back(2);\n\
    \        } else if (word == \"three\") {\n            v.push_back(3);\n      \
    \  } else if (word == \"four\") {\n            v.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            v.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            v.push_back(6);\n        } else if (word == \"seven\"\
    ) {\n            v.push_back(7);\n        } else if (word == \"eight\") {\n  \
    \          v.push_back(8);\n        } else if (word == \"nine\") {\n         \
    \   v.push_back(9);\n        }\n    }\n    std::sort(v.begin(), v.end());\n  \
    \  std::string result;\n    for (auto x : v) {\n        if (x == 0) {\n      \
    \      result += \"zero \";\n        } else if (x == 1) {\n            result\
    \ += \"one \";\n        } else if (x == 2) {\n            result += \"two \";\n\
    \        } else if (x == 3) {\n            result += \"three \";\n        } else\
    \ if (x == 4) {\n            result += \"four \";\n        } else if (x == 5)\
    \ {\n            result += \"five \";\n        } else if (x == 6) {\n        \
    \    result += \"six \";\n        } else if (x == 7) {\n            result +=\
    \ \"seven \";\n        } else if (x == 8) {\n            result += \"eight \"\
    ;\n        } else if (x == 9) {\n            result += \"nine \";\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpqvrq344c.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string word;\n    while (ss >> word) {\n        if (word == \"zero\")\
    \ v.push_back(0);\n        else if (word == \"one\") v.push_back(1);\n       \
    \ else if (word == \"two\") v.push_back(2);\n        else if (word == \"three\"\
    ) v.push_back(3);\n        else if (word == \"four\") v.push_back(4);\n      \
    \  else if (word == \"five\") v.push_back(5);\n        else if (word == \"six\"\
    ) v.push_back(6);\n        else if (word == \"seven\") v.push_back(7);\n     \
    \   else if (word == \"eight\") v.push_back(8);\n        else if (word == \"nine\"\
    ) v.push_back(9);\n    }\n    std::sort(v.begin(), v.end());\n    std::string\
    \ result;\n    for (auto i : v) {\n        if (i == 0) result += \"zero \";\n\
    \        else if (i == 1) result += \"one \";\n        else if (i == 2) result\
    \ += \"two \";\n        else if (i == 3) result += \"three \";\n        else if\
    \ (i == 4) result += \"four \";\n        else if (i == 5) result += \"five \"\
    ;\n        else if (i == 6) result += \"six \";\n        else if (i == 7) result\
    \ += \"seven \";\n        else if (i == 8) result += \"eight \";\n        else\
    \ if (i == 9) result += \"nine \";\n    }\n    return result.substr(0, result.size()\
    \ - 1);\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpkt_j1axl.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") {\n         \
    \   nums.push_back(0);\n        } else if (word == \"one\") {\n            nums.push_back(1);\n\
    \        } else if (word == \"two\") {\n            nums.push_back(2);\n     \
    \   } else if (word == \"three\") {\n            nums.push_back(3);\n        }\
    \ else if (word == \"four\") {\n            nums.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            nums.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            nums.push_back(6);\n        } else if (word == \"\
    seven\") {\n            nums.push_back(7);\n        } else if (word == \"eight\"\
    ) {\n            nums.push_back(8);\n        } else if (word == \"nine\") {\n\
    \            nums.push_back(9);\n        }\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::stringstream ss2;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        if (i != 0) {\n            ss2 << \" \";\n        }\n      \
    \  if (nums[i] == 0) {\n            ss2 << \"zero\";\n        } else if (nums[i]\
    \ == 1) {\n            ss2 << \"one\";\n        } else if (nums[i] == 2) {\n \
    \           ss2 << \"two\";\n        } else if (nums[i] == 3) {\n            ss2\
    \ << \"three\";\n        } else if (nums[i] == 4) {\n            ss2 << \"four\"\
    ;\n        } else if (nums[i] == 5) {\n            ss2 << \"five\";\n        }\
    \ else if (nums[i] == 6) {\n            ss2 << \"six\";\n        } else if (nums[i]\
    \ == 7) {\n           \n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp91_onwto.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string temp;\n    while (ss >> temp) {\n        if (temp == \"zero\"\
    ) nums.push_back(0);\n        else if (temp == \"one\") nums.push_back(1);\n \
    \       else if (temp == \"two\") nums.push_back(2);\n        else if (temp ==\
    \ \"three\") nums.push_back(3);\n        else if (temp == \"four\") nums.push_back(4);\n\
    \        else if (temp == \"five\") nums.push_back(5);\n        else if (temp\
    \ == \"six\") nums.push_back(6);\n        else if (temp == \"seven\") nums.push_back(7);\n\
    \        else if (temp == \"eight\") nums.push_back(8);\n        else if (temp\
    \ == \"nine\") nums.push_back(9);\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::stringstream ss2;\n    for (int i = 0; i < nums.size(); i++) {\n   \
    \     if (i != 0) ss2 << \" \";\n        if (nums[i] == 0) ss2 << \"zero\";\n\
    \        else if (nums[i] == 1) ss2 << \"one\";\n        else if (nums[i] == 2)\
    \ ss2 << \"two\";\n        else if (nums[i] == 3) ss2 << \"three\";\n        else\
    \ if (nums[i] == 4) ss2 << \"four\";\n        else if (nums[i] == 5) ss2 << \"\
    five\";\n        else if (nums[i] == 6) ss2 << \"six\";\n        else if (nums[i]\
    \ == 7) ss2 << \"seven\";\n        else if (nums[i] == 8) ss2 << \"eight\";\n\
    \        else if (nums[i] == 9) ss2 << \"nine\";\n    }\n    return ss2.str();\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpl9vyagpp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n  std::vector<int> nums;\n  std::stringstream ss(numbers);\n  std::string\
    \ word;\n  while (ss >> word) {\n    if (word == \"zero\") {\n      nums.push_back(0);\n\
    \    } else if (word == \"one\") {\n      nums.push_back(1);\n    } else if (word\
    \ == \"two\") {\n      nums.push_back(2);\n    } else if (word == \"three\") {\n\
    \      nums.push_back(3);\n    } else if (word == \"four\") {\n      nums.push_back(4);\n\
    \    } else if (word == \"five\") {\n      nums.push_back(5);\n    } else if (word\
    \ == \"six\") {\n      nums.push_back(6);\n    } else if (word == \"seven\") {\n\
    \      nums.push_back(7);\n    } else if (word == \"eight\") {\n      nums.push_back(8);\n\
    \    } else if (word == \"nine\") {\n      nums.push_back(9);\n    }\n  }\n  std::sort(nums.begin(),\
    \ nums.end());\n  std::string result;\n  for (int i = 0; i < nums.size(); i++)\
    \ {\n    if (nums[i] == 0) {\n      result += \"zero\";\n    } else if (nums[i]\
    \ == 1) {\n      result += \"one\";\n    } else if (nums[i] == 2) {\n      result\
    \ += \"two\";\n    } else if (nums[i] == 3) {\n      result += \"three\";\n  \
    \  } else if (nums[i] == 4) {\n      result += \"four\";\n    } else if (nums[i]\
    \ == 5) {\n      result += \"five\";\n    } else if (nums[i] == 6) {\n      result\
    \ += \"six\";\n    } else if (nums[i] == 7) {\n      result += \"seven\";\n  \
    \  } else if (nums[i] == 8) {\n      result += \"eight\";\n   \n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp90w83dya.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n\tstd::stringstream ss(numbers);\n\tstd::vector<int> v;\n\tstd::string\
    \ s;\n\twhile (ss >> s) {\n\t\tif (s == \"zero\")\n\t\t\tv.push_back(0);\n\t\t\
    else if (s == \"one\")\n\t\t\tv.push_back(1);\n\t\telse if (s == \"two\")\n\t\t\
    \tv.push_back(2);\n\t\telse if (s == \"three\")\n\t\t\tv.push_back(3);\n\t\telse\
    \ if (s == \"four\")\n\t\t\tv.push_back(4);\n\t\telse if (s == \"five\")\n\t\t\
    \tv.push_back(5);\n\t\telse if (s == \"six\")\n\t\t\tv.push_back(6);\n\t\telse\
    \ if (s == \"seven\")\n\t\t\tv.push_back(7);\n\t\telse if (s == \"eight\")\n\t\
    \t\tv.push_back(8);\n\t\telse if (s == \"nine\")\n\t\t\tv.push_back(9);\n\t}\n\
    \tstd::sort(v.begin(), v.end());\n\tstd::string result;\n\tfor (int i = 0; i <\
    \ v.size(); i++) {\n\t\tif (v[i] == 0)\n\t\t\tresult += \"zero \";\n\t\telse if\
    \ (v[i] == 1)\n\t\t\tresult += \"one \";\n\t\telse if (v[i] == 2)\n\t\t\tresult\
    \ += \"two \";\n\t\telse if (v[i] == 3)\n\t\t\tresult += \"three \";\n\t\telse\
    \ if (v[i] == 4)\n\t\t\tresult += \"four \";\n\t\telse if (v[i] == 5)\n\t\t\t\
    result += \"five \";\n\t\telse if (v[i] == 6)\n\t\t\tresult += \"six \";\n\t\t\
    else if (v[i] == 7)\n\t\t\tresult += \"seven \";\n\t\telse if (v[i] == 8)\n\t\t\
    \tresult += \"eight\n}\nint main() {\n    auto candidate = sort_numbers;\n   \
    \ assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) == (\"\
    three\"));\n    assert(candidate((\"three five nine\")) == (\"three five nine\"\
    ));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"zero four\
    \ five seven eight nine\"));\n    assert(candidate((\"six five four three two\
    \ one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps955t192.cpp:52:14: warning: missing terminating \" character [enabled\
    \ by default]\n    result += \"eight\n              ^\n/tmp/tmps955t192.cpp:52:4:\
    \ error: missing terminating \" character\n    result += \"eight\n    ^\nIn file\
    \ included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmps955t192.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_t"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") {\n         \
    \   nums.push_back(0);\n        } else if (word == \"one\") {\n            nums.push_back(1);\n\
    \        } else if (word == \"two\") {\n            nums.push_back(2);\n     \
    \   } else if (word == \"three\") {\n            nums.push_back(3);\n        }\
    \ else if (word == \"four\") {\n            nums.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            nums.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            nums.push_back(6);\n        } else if (word == \"\
    seven\") {\n            nums.push_back(7);\n        } else if (word == \"eight\"\
    ) {\n            nums.push_back(8);\n        } else if (word == \"nine\") {\n\
    \            nums.push_back(9);\n        }\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::string result;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        if (i != 0) {\n            result += \" \";\n        }\n   \
    \     if (nums[i] == 0) {\n            result += \"zero\";\n        } else if\
    \ (nums[i] == 1) {\n            result += \"one\";\n        } else if (nums[i]\
    \ == 2) {\n            result += \"two\";\n        } else if (nums[i] == 3) {\n\
    \            result += \"three\";\n        } else if (nums[i] == 4) {\n      \
    \      result += \"four\";\n        } else if (nums[i] == 5) {\n            result\
    \ += \"five\";\n        } else if (nums[i] == 6) {\n            result += \"six\"\
    ;\n        } else if (nums[i] == 7) {\n            result += \"seven\";\n    \
    \    } else if\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpldvxpsli.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"zero\"\
    ) nums.push_back(0);\n        else if (word == \"one\") nums.push_back(1);\n \
    \       else if (word == \"two\") nums.push_back(2);\n        else if (word ==\
    \ \"three\") nums.push_back(3);\n        else if (word == \"four\") nums.push_back(4);\n\
    \        else if (word == \"five\") nums.push_back(5);\n        else if (word\
    \ == \"six\") nums.push_back(6);\n        else if (word == \"seven\") nums.push_back(7);\n\
    \        else if (word == \"eight\") nums.push_back(8);\n        else if (word\
    \ == \"nine\") nums.push_back(9);\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::stringstream ss2;\n    for (int i = 0; i < nums.size(); i++) {\n   \
    \     if (i != 0) ss2 << \" \";\n        if (nums[i] == 0) ss2 << \"zero\";\n\
    \        else if (nums[i] == 1) ss2 << \"one\";\n        else if (nums[i] == 2)\
    \ ss2 << \"two\";\n        else if (nums[i] == 3) ss2 << \"three\";\n        else\
    \ if (nums[i] == 4) ss2 << \"four\";\n        else if (nums[i] == 5) ss2 << \"\
    five\";\n        else if (nums[i] == 6) ss2 << \"six\";\n        else if (nums[i]\
    \ == 7) ss2 << \"seven\";\n        else if (nums[i] == 8) ss2 << \"eight\";\n\
    \        else if (nums[i] == 9) ss2 << \"nine\";\n    }\n    return ss2.str();\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpkwsfp12f.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"zero\"\
    ) {\n            nums.push_back(0);\n        } else if (word == \"one\") {\n \
    \           nums.push_back(1);\n        } else if (word == \"two\") {\n      \
    \      nums.push_back(2);\n        } else if (word == \"three\") {\n         \
    \   nums.push_back(3);\n        } else if (word == \"four\") {\n            nums.push_back(4);\n\
    \        } else if (word == \"five\") {\n            nums.push_back(5);\n    \
    \    } else if (word == \"six\") {\n            nums.push_back(6);\n        }\
    \ else if (word == \"seven\") {\n            nums.push_back(7);\n        } else\
    \ if (word == \"eight\") {\n            nums.push_back(8);\n        } else if\
    \ (word == \"nine\") {\n            nums.push_back(9);\n        }\n    }\n   \
    \ std::sort(nums.begin(), nums.end());\n    std::string result;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        if (i != 0) {\n            result +=\
    \ \" \";\n        }\n        if (nums[i] == 0) {\n            result += \"zero\"\
    ;\n        } else if (nums[i] == 1) {\n            result += \"one\";\n      \
    \  } else if (nums[i] == 2) {\n            result += \"two\";\n        } else\
    \ if (nums[i] == 3) {\n            result += \"three\";\n        } else if (nums[i]\
    \ == 4) {\n            result += \"four\";\n        } else if (nums[i] == 5) {\n\
    \            result += \"five\";\n        } else if (nums[i] == 6) {\n       \
    \     result += \"six\";\n        } else if (nums[i] == 7) {\n            result\
    \ += \"seven\";\n        } else if\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpv3sxm8ju.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\")\n           \
    \ nums.push_back(0);\n        else if (word == \"one\")\n            nums.push_back(1);\n\
    \        else if (word == \"two\")\n            nums.push_back(2);\n        else\
    \ if (word == \"three\")\n            nums.push_back(3);\n        else if (word\
    \ == \"four\")\n            nums.push_back(4);\n        else if (word == \"five\"\
    )\n            nums.push_back(5);\n        else if (word == \"six\")\n       \
    \     nums.push_back(6);\n        else if (word == \"seven\")\n            nums.push_back(7);\n\
    \        else if (word == \"eight\")\n            nums.push_back(8);\n       \
    \ else if (word == \"nine\")\n            nums.push_back(9);\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::string result;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        if (i != 0)\n            result += \" \";\n        if (nums[i]\
    \ == 0)\n            result += \"zero\";\n        else if (nums[i] == 1)\n   \
    \         result += \"one\";\n        else if (nums[i] == 2)\n            result\
    \ += \"two\";\n        else if (nums[i] == 3)\n            result += \"three\"\
    ;\n        else if (nums[i] == 4)\n            result += \"four\";\n        else\
    \ if (nums[i] == 5)\n            result += \"five\";\n        else if (nums[i]\
    \ == 6)\n            result += \"six\";\n        else if (nums[i] == 7)\n    \
    \        result += \"seven\";\n        else if (nums[i] == 8)\n            result\
    \ += \"eight\";\n        else if (nums[i] == 9)\n            result += \"nine\"\
    ;\n    }\n    return\n}\nint main() {\n    auto candidate = sort_numbers;\n  \
    \  assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpvoazf4ye.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") nums.push_back(0);\n\
    \        else if (word == \"one\") nums.push_back(1);\n        else if (word ==\
    \ \"two\") nums.push_back(2);\n        else if (word == \"three\") nums.push_back(3);\n\
    \        else if (word == \"four\") nums.push_back(4);\n        else if (word\
    \ == \"five\") nums.push_back(5);\n        else if (word == \"six\") nums.push_back(6);\n\
    \        else if (word == \"seven\") nums.push_back(7);\n        else if (word\
    \ == \"eight\") nums.push_back(8);\n        else if (word == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::string res;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        switch (nums[i]) {\n          \
    \  case 0: res += \"zero\"; break;\n            case 1: res += \"one\"; break;\n\
    \            case 2: res += \"two\"; break;\n            case 3: res += \"three\"\
    ; break;\n            case 4: res += \"four\"; break;\n            case 5: res\
    \ += \"five\"; break;\n            case 6: res += \"six\"; break;\n          \
    \  case 7: res += \"seven\"; break;\n            case 8: res += \"eight\"; break;\n\
    \            case 9: res += \"nine\"; break;\n        }\n        if (i != nums.size()\
    \ - 1) res += \" \";\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp3dsas9ja.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") {\n         \
    \   nums.push_back(0);\n        } else if (word == \"one\") {\n            nums.push_back(1);\n\
    \        } else if (word == \"two\") {\n            nums.push_back(2);\n     \
    \   } else if (word == \"three\") {\n            nums.push_back(3);\n        }\
    \ else if (word == \"four\") {\n            nums.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            nums.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            nums.push_back(6);\n        } else if (word == \"\
    seven\") {\n            nums.push_back(7);\n        } else if (word == \"eight\"\
    ) {\n            nums.push_back(8);\n        } else if (word == \"nine\") {\n\
    \            nums.push_back(9);\n        }\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::string ans = \"\";\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        if (nums[i] == 0) {\n            ans += \"zero\";\n        }\
    \ else if (nums[i] == 1) {\n            ans += \"one\";\n        } else if (nums[i]\
    \ == 2) {\n            ans += \"two\";\n        } else if (nums[i] == 3) {\n \
    \           ans += \"three\";\n        } else if (nums[i] == 4) {\n          \
    \  ans += \"four\";\n        } else if (nums[i] == 5) {\n            ans += \"\
    five\";\n        } else if (nums[i] == 6) {\n            ans += \"six\";\n   \
    \     } else if (nums[i] == 7) {\n            ans += \"seven\";\n        } else\
    \ if (nums[i] == 8) {\n            ans += \"eight\";\n}\nint main() {\n    auto\
    \ candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp_dgwynh3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string temp;\n    std::vector<int>\
    \ nums;\n    while(ss >> temp) {\n        if(temp == \"zero\") nums.push_back(0);\n\
    \        else if(temp == \"one\") nums.push_back(1);\n        else if(temp ==\
    \ \"two\") nums.push_back(2);\n        else if(temp == \"three\") nums.push_back(3);\n\
    \        else if(temp == \"four\") nums.push_back(4);\n        else if(temp ==\
    \ \"five\") nums.push_back(5);\n        else if(temp == \"six\") nums.push_back(6);\n\
    \        else if(temp == \"seven\") nums.push_back(7);\n        else if(temp ==\
    \ \"eight\") nums.push_back(8);\n        else if(temp == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::string res = \"\";\n\
    \    for(int i = 0; i < nums.size(); i++) {\n        if(nums[i] == 0) res += \"\
    zero \";\n        else if(nums[i] == 1) res += \"one \";\n        else if(nums[i]\
    \ == 2) res += \"two \";\n        else if(nums[i] == 3) res += \"three \";\n \
    \       else if(nums[i] == 4) res += \"four \";\n        else if(nums[i] == 5)\
    \ res += \"five \";\n        else if(nums[i] == 6) res += \"six \";\n        else\
    \ if(nums[i] == 7) res += \"seven \";\n        else if(nums[i] == 8) res += \"\
    eight \";\n        else if(nums[i] == 9) res += \"nine \";\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp_98l0a2i.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string word;\n    while (ss >> word) {\n        if (word == \"zero\")\
    \ {\n            v.push_back(0);\n        } else if (word == \"one\") {\n    \
    \        v.push_back(1);\n        } else if (word == \"two\") {\n            v.push_back(2);\n\
    \        } else if (word == \"three\") {\n            v.push_back(3);\n      \
    \  } else if (word == \"four\") {\n            v.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            v.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            v.push_back(6);\n        } else if (word == \"seven\"\
    ) {\n            v.push_back(7);\n        } else if (word == \"eight\") {\n  \
    \          v.push_back(8);\n        } else if (word == \"nine\") {\n         \
    \   v.push_back(9);\n        }\n    }\n    std::sort(v.begin(), v.end());\n  \
    \  std::string res;\n    for (int i = 0; i < v.size(); i++) {\n        if (v[i]\
    \ == 0) {\n            res += \"zero\";\n        } else if (v[i] == 1) {\n   \
    \         res += \"one\";\n        } else if (v[i] == 2) {\n            res +=\
    \ \"two\";\n        } else if (v[i] == 3) {\n            res += \"three\";\n \
    \       } else if (v[i] == 4) {\n            res += \"four\";\n        } else\
    \ if (v[i] == 5) {\n            res += \"five\";\n        } else if (v[i] == 6)\
    \ {\n            res += \"six\";\n        } else if (v[i] == 7) {\n          \
    \  res += \"seven\";\n        } else if (v[i] == 8) {\n            res += \"eight\"\
    ;\n        } else if (v[i] == 9) {\n            res += \"nine\";\n        }\n\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpc66nxk_7.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n  std::stringstream ss(numbers);\n  std::vector<int> v;\n  std::string\
    \ word;\n  while (ss >> word) {\n    if (word == \"zero\") v.push_back(0);\n \
    \   else if (word == \"one\") v.push_back(1);\n    else if (word == \"two\") v.push_back(2);\n\
    \    else if (word == \"three\") v.push_back(3);\n    else if (word == \"four\"\
    ) v.push_back(4);\n    else if (word == \"five\") v.push_back(5);\n    else if\
    \ (word == \"six\") v.push_back(6);\n    else if (word == \"seven\") v.push_back(7);\n\
    \    else if (word == \"eight\") v.push_back(8);\n    else if (word == \"nine\"\
    ) v.push_back(9);\n  }\n  std::sort(v.begin(), v.end());\n  std::stringstream\
    \ out;\n  for (int i = 0; i < v.size(); i++) {\n    switch (v[i]) {\n      case\
    \ 0: out << \"zero\"; break;\n      case 1: out << \"one\"; break;\n      case\
    \ 2: out << \"two\"; break;\n      case 3: out << \"three\"; break;\n      case\
    \ 4: out << \"four\"; break;\n      case 5: out << \"five\"; break;\n      case\
    \ 6: out << \"six\"; break;\n      case 7: out << \"seven\"; break;\n      case\
    \ 8: out << \"eight\"; break;\n      case 9: out << \"nine\"; break;\n    }\n\
    \    if (i != v.size() - 1) out << \" \";\n  }\n  return out.str();\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpj0efiw5c.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string temp;\n    while(ss >> temp) {\n        if(temp == \"zero\") v.push_back(0);\n\
    \        else if(temp == \"one\") v.push_back(1);\n        else if(temp == \"\
    two\") v.push_back(2);\n        else if(temp == \"three\") v.push_back(3);\n \
    \       else if(temp == \"four\") v.push_back(4);\n        else if(temp == \"\
    five\") v.push_back(5);\n        else if(temp == \"six\") v.push_back(6);\n  \
    \      else if(temp == \"seven\") v.push_back(7);\n        else if(temp == \"\
    eight\") v.push_back(8);\n        else if(temp == \"nine\") v.push_back(9);\n\
    \    }\n    std::sort(v.begin(), v.end());\n    std::string res;\n    for(int\
    \ i = 0; i < v.size(); i++) {\n        if(v[i] == 0) res += \"zero \";\n     \
    \   else if(v[i] == 1) res += \"one \";\n        else if(v[i] == 2) res += \"\
    two \";\n        else if(v[i] == 3) res += \"three \";\n        else if(v[i] ==\
    \ 4) res += \"four \";\n        else if(v[i] == 5) res += \"five \";\n       \
    \ else if(v[i] == 6) res += \"six \";\n        else if(v[i] == 7) res += \"seven\
    \ \";\n        else if(v[i] == 8) res += \"eight \";\n        else if(v[i] ==\
    \ 9) res += \"nine \";\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmprmslm8p0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") {\n         \
    \   nums.push_back(0);\n        } else if (word == \"one\") {\n            nums.push_back(1);\n\
    \        } else if (word == \"two\") {\n            nums.push_back(2);\n     \
    \   } else if (word == \"three\") {\n            nums.push_back(3);\n        }\
    \ else if (word == \"four\") {\n            nums.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            nums.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            nums.push_back(6);\n        } else if (word == \"\
    seven\") {\n            nums.push_back(7);\n        } else if (word == \"eight\"\
    ) {\n            nums.push_back(8);\n        } else if (word == \"nine\") {\n\
    \            nums.push_back(9);\n        }\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::string result;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        if (i == 0) {\n            if (nums[i] == 0) {\n           \
    \     result += \"zero\";\n            } else if (nums[i] == 1) {\n          \
    \      result += \"one\";\n            } else if (nums[i] == 2) {\n          \
    \      result += \"two\";\n            } else if (nums[i] == 3) {\n          \
    \      result += \"three\";\n            } else if (nums[i] == 4) {\n        \
    \        result += \"four\";\n            } else if (nums[i] == 5) {\n       \
    \         result += \"five\";\n            } else if (nums[i] == 6) {\n      \
    \          result += \"six\";\n            } else if (nums[i] == 7) {\n      \
    \          result += \"seven\";\n            } else if (nums[i] == 8) {\n}\nint\
    \ main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp67gp026x.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<std::string>\
    \ nums;\n    std::string num;\n    while (ss >> num) {\n        nums.push_back(num);\n\
    \    }\n    std::sort(nums.begin(), nums.end(), [](std::string a, std::string\
    \ b) {\n        return std::stoi(a) < std::stoi(b);\n    });\n    std::string\
    \ result;\n    for (auto num : nums) {\n        result += num + \" \";\n    }\n\
    \    return result.substr(0, result.size() - 1);\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpv31x80d2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string temp;\n    while (ss >> temp) {\n        if (temp == \"zero\"\
    ) nums.push_back(0);\n        else if (temp == \"one\") nums.push_back(1);\n \
    \       else if (temp == \"two\") nums.push_back(2);\n        else if (temp ==\
    \ \"three\") nums.push_back(3);\n        else if (temp == \"four\") nums.push_back(4);\n\
    \        else if (temp == \"five\") nums.push_back(5);\n        else if (temp\
    \ == \"six\") nums.push_back(6);\n        else if (temp == \"seven\") nums.push_back(7);\n\
    \        else if (temp == \"eight\") nums.push_back(8);\n        else if (temp\
    \ == \"nine\") nums.push_back(9);\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::string result;\n    for (int i = 0; i < nums.size(); i++) {\n      \
    \  if (i != 0) result += \" \";\n        switch (nums[i]) {\n            case\
    \ 0: result += \"zero\"; break;\n            case 1: result += \"one\"; break;\n\
    \            case 2: result += \"two\"; break;\n            case 3: result +=\
    \ \"three\"; break;\n            case 4: result += \"four\"; break;\n        \
    \    case 5: result += \"five\"; break;\n            case 6: result += \"six\"\
    ; break;\n            case 7: result += \"seven\"; break;\n            case 8:\
    \ result += \"eight\"; break;\n            case 9: result += \"nine\"; break;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmptvgz0xfg.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string temp;\n    while(ss >> temp) {\n        if(temp == \"zero\") v.push_back(0);\n\
    \        else if(temp == \"one\") v.push_back(1);\n        else if(temp == \"\
    two\") v.push_back(2);\n        else if(temp == \"three\") v.push_back(3);\n \
    \       else if(temp == \"four\") v.push_back(4);\n        else if(temp == \"\
    five\") v.push_back(5);\n        else if(temp == \"six\") v.push_back(6);\n  \
    \      else if(temp == \"seven\") v.push_back(7);\n        else if(temp == \"\
    eight\") v.push_back(8);\n        else if(temp == \"nine\") v.push_back(9);\n\
    \    }\n    std::sort(v.begin(), v.end());\n    std::string ans = \"\";\n    for(int\
    \ i = 0; i < v.size(); i++) {\n        if(i != 0) ans += \" \";\n        if(v[i]\
    \ == 0) ans += \"zero\";\n        else if(v[i] == 1) ans += \"one\";\n       \
    \ else if(v[i] == 2) ans += \"two\";\n        else if(v[i] == 3) ans += \"three\"\
    ;\n        else if(v[i] == 4) ans += \"four\";\n        else if(v[i] == 5) ans\
    \ += \"five\";\n        else if(v[i] == 6) ans += \"six\";\n        else if(v[i]\
    \ == 7) ans += \"seven\";\n        else if(v[i] == 8) ans += \"eight\";\n    \
    \    else if(v[i] == 9) ans += \"nine\";\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4an9m3lb.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n\tstd::stringstream ss(numbers);\n\tstd::string word;\n\tstd::vector<int>\
    \ nums;\n\twhile (ss >> word) {\n\t\tif (word == \"zero\") {\n\t\t\tnums.push_back(0);\n\
    \t\t}\n\t\telse if (word == \"one\") {\n\t\t\tnums.push_back(1);\n\t\t}\n\t\t\
    else if (word == \"two\") {\n\t\t\tnums.push_back(2);\n\t\t}\n\t\telse if (word\
    \ == \"three\") {\n\t\t\tnums.push_back(3);\n\t\t}\n\t\telse if (word == \"four\"\
    ) {\n\t\t\tnums.push_back(4);\n\t\t}\n\t\telse if (word == \"five\") {\n\t\t\t\
    nums.push_back(5);\n\t\t}\n\t\telse if (word == \"six\") {\n\t\t\tnums.push_back(6);\n\
    \t\t}\n\t\telse if (word == \"seven\") {\n\t\t\tnums.push_back(7);\n\t\t}\n\t\t\
    else if (word == \"eight\") {\n\t\t\tnums.push_back(8);\n\t\t}\n\t\telse if (word\
    \ == \"nine\") {\n\t\t\tnums.push_back(9);\n\t\t}\n\t}\n\tstd::sort(nums.begin(),\
    \ nums.end());\n\tstd::string ans = \"\";\n\tfor (int i = 0; i < nums.size();\
    \ i++) {\n\t\tif (nums[i] == 0) {\n\t\t\tans += \"zero \";\n\t\t}\n\t\telse if\
    \ (nums[i] == 1) {\n\t\t\tans += \"one \";\n\t\t}\n\t\telse if (nums[i] == 2)\
    \ {\n\t\t\tans += \"two \";\n\t\t}\n\t\telse if (nums[i] == 3) {\n\t\t\tans +=\
    \ \"three \";\n\t\t}\n\t\telse if (nums[i] == 4) {\n\t\t\tans += \"four\n}\nint\
    \ main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpabz_r19c.cpp:58:11: warning: missing terminating \" character [enabled\
    \ by default]\n    ans += \"four\n           ^\n/tmp/tmpabz_r19c.cpp:58:4: error:\
    \ missing terminating \" character\n    ans += \"four\n    ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n \
    \                from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpabz_r19c.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_co"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    std::map<std::string, int> num_map = {\n        {\"zero\", 0},\n\
    \        {\"one\", 1},\n        {\"two\", 2},\n        {\"three\", 3},\n     \
    \   {\"four\", 4},\n        {\"five\", 5},\n        {\"six\", 6},\n        {\"\
    seven\", 7},\n        {\"eight\", 8},\n        {\"nine\", 9}\n    };\n    while\
    \ (ss >> word) {\n        nums.push_back(num_map[word]);\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::string result;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        result += std::to_string(nums[i]);\n        if (i != nums.size()\
    \ - 1) {\n            result += \" \";\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp9qwncshi.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string word;\n    while (ss >> word) {\n        if (word == \"zero\")\
    \ v.push_back(0);\n        else if (word == \"one\") v.push_back(1);\n       \
    \ else if (word == \"two\") v.push_back(2);\n        else if (word == \"three\"\
    ) v.push_back(3);\n        else if (word == \"four\") v.push_back(4);\n      \
    \  else if (word == \"five\") v.push_back(5);\n        else if (word == \"six\"\
    ) v.push_back(6);\n        else if (word == \"seven\") v.push_back(7);\n     \
    \   else if (word == \"eight\") v.push_back(8);\n        else if (word == \"nine\"\
    ) v.push_back(9);\n    }\n    std::sort(v.begin(), v.end());\n    std::stringstream\
    \ result;\n    for (auto i : v) {\n        if (i == 0) result << \"zero \";\n\
    \        else if (i == 1) result << \"one \";\n        else if (i == 2) result\
    \ << \"two \";\n        else if (i == 3) result << \"three \";\n        else if\
    \ (i == 4) result << \"four \";\n        else if (i == 5) result << \"five \"\
    ;\n        else if (i == 6) result << \"six \";\n        else if (i == 7) result\
    \ << \"seven \";\n        else if (i == 8) result << \"eight \";\n        else\
    \ if (i == 9) result << \"nine \";\n    }\n    return result.str();\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpu75secvo.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"zero\"\
    ) {\n            nums.push_back(0);\n        } else if (word == \"one\") {\n \
    \           nums.push_back(1);\n        } else if (word == \"two\") {\n      \
    \      nums.push_back(2);\n        } else if (word == \"three\") {\n         \
    \   nums.push_back(3);\n        } else if (word == \"four\") {\n            nums.push_back(4);\n\
    \        } else if (word == \"five\") {\n            nums.push_back(5);\n    \
    \    } else if (word == \"six\") {\n            nums.push_back(6);\n        }\
    \ else if (word == \"seven\") {\n            nums.push_back(7);\n        } else\
    \ if (word == \"eight\") {\n            nums.push_back(8);\n        } else if\
    \ (word == \"nine\") {\n            nums.push_back(9);\n        }\n    }\n   \
    \ std::sort(nums.begin(), nums.end());\n    std::stringstream result;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        if (i != 0) {\n            result\
    \ << \" \";\n        }\n        if (nums[i] == 0) {\n            result << \"\
    zero\";\n        } else if (nums[i] == 1) {\n            result << \"one\";\n\
    \        } else if (nums[i] == 2) {\n            result << \"two\";\n        }\
    \ else if (nums[i] == 3) {\n            result << \"three\";\n        } else if\
    \ (nums[i] == 4) {\n            result << \"four\";\n        } else if (nums[i]\
    \ == 5) {\n            result << \"five\";\n        } else if (nums[i] == 6) {\n\
    \            result << \"six\";\n        } else if (nums[i] == 7) {\n        \
    \    result << \"seven\";\n        } else\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp66jqq1n_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"zero\"\
    ) nums.push_back(0);\n        else if (word == \"one\") nums.push_back(1);\n \
    \       else if (word == \"two\") nums.push_back(2);\n        else if (word ==\
    \ \"three\") nums.push_back(3);\n        else if (word == \"four\") nums.push_back(4);\n\
    \        else if (word == \"five\") nums.push_back(5);\n        else if (word\
    \ == \"six\") nums.push_back(6);\n        else if (word == \"seven\") nums.push_back(7);\n\
    \        else if (word == \"eight\") nums.push_back(8);\n        else if (word\
    \ == \"nine\") nums.push_back(9);\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::stringstream res;\n    for (int i = 0; i < nums.size(); i++) {\n   \
    \     if (i > 0) res << \" \";\n        if (nums[i] == 0) res << \"zero\";\n \
    \       else if (nums[i] == 1) res << \"one\";\n        else if (nums[i] == 2)\
    \ res << \"two\";\n        else if (nums[i] == 3) res << \"three\";\n        else\
    \ if (nums[i] == 4) res << \"four\";\n        else if (nums[i] == 5) res << \"\
    five\";\n        else if (nums[i] == 6) res << \"six\";\n        else if (nums[i]\
    \ == 7) res << \"seven\";\n        else if (nums[i] == 8) res << \"eight\";\n\
    \        else if (nums[i] == 9) res << \"nine\";\n    }\n    return res.str();\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4yco3q4t.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"zero\"\
    ) {\n            nums.push_back(0);\n        } else if (word == \"one\") {\n \
    \           nums.push_back(1);\n        } else if (word == \"two\") {\n      \
    \      nums.push_back(2);\n        } else if (word == \"three\") {\n         \
    \   nums.push_back(3);\n        } else if (word == \"four\") {\n            nums.push_back(4);\n\
    \        } else if (word == \"five\") {\n            nums.push_back(5);\n    \
    \    } else if (word == \"six\") {\n            nums.push_back(6);\n        }\
    \ else if (word == \"seven\") {\n            nums.push_back(7);\n        } else\
    \ if (word == \"eight\") {\n            nums.push_back(8);\n        } else if\
    \ (word == \"nine\") {\n            nums.push_back(9);\n        }\n    }\n   \
    \ std::sort(nums.begin(), nums.end());\n    std::string result;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        if (i != 0) {\n            result +=\
    \ \" \";\n        }\n        if (nums[i] == 0) {\n            result += \"zero\"\
    ;\n        } else if (nums[i] == 1) {\n            result += \"one\";\n      \
    \  } else if (nums[i] == 2) {\n            result += \"two\";\n        } else\
    \ if (nums[i] == 3) {\n            result += \"three\";\n        } else if (nums[i]\
    \ == 4) {\n            result += \"four\";\n        } else if (nums[i] == 5) {\n\
    \            result += \"five\";\n        } else if (nums[i] == 6) {\n       \
    \     result += \"six\";\n        } else if (nums[i] == 7) {\n            result\
    \ += \"seven\";\n        } else if\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpv3sxm8ju.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string word;\n    while (ss >> word) {\n        if (word == \"zero\")\
    \ {\n            v.push_back(0);\n        } else if (word == \"one\") {\n    \
    \        v.push_back(1);\n        } else if (word == \"two\") {\n            v.push_back(2);\n\
    \        } else if (word == \"three\") {\n            v.push_back(3);\n      \
    \  } else if (word == \"four\") {\n            v.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            v.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            v.push_back(6);\n        } else if (word == \"seven\"\
    ) {\n            v.push_back(7);\n        } else if (word == \"eight\") {\n  \
    \          v.push_back(8);\n        } else if (word == \"nine\") {\n         \
    \   v.push_back(9);\n        }\n    }\n    std::sort(v.begin(), v.end());\n  \
    \  std::string res;\n    for (int i = 0; i < v.size(); i++) {\n        if (v[i]\
    \ == 0) {\n            res += \"zero\";\n        } else if (v[i] == 1) {\n   \
    \         res += \"one\";\n        } else if (v[i] == 2) {\n            res +=\
    \ \"two\";\n        } else if (v[i] == 3) {\n            res += \"three\";\n \
    \       } else if (v[i] == 4) {\n            res += \"four\";\n        } else\
    \ if (v[i] == 5) {\n            res += \"five\";\n        } else if (v[i] == 6)\
    \ {\n            res += \"six\";\n        } else if (v[i] == 7) {\n          \
    \  res += \"seven\";\n        } else if (v[i] == 8) {\n            res += \"eight\"\
    ;\n        } else if (v[i] == 9) {\n            res += \"nine\";\n        }\n\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpc66nxk_7.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string temp;\n    while(ss >> temp) {\n        if(temp == \"zero\") {\n\
    \            v.push_back(0);\n        }\n        else if(temp == \"one\") {\n\
    \            v.push_back(1);\n        }\n        else if(temp == \"two\") {\n\
    \            v.push_back(2);\n        }\n        else if(temp == \"three\") {\n\
    \            v.push_back(3);\n        }\n        else if(temp == \"four\") {\n\
    \            v.push_back(4);\n        }\n        else if(temp == \"five\") {\n\
    \            v.push_back(5);\n        }\n        else if(temp == \"six\") {\n\
    \            v.push_back(6);\n        }\n        else if(temp == \"seven\") {\n\
    \            v.push_back(7);\n        }\n        else if(temp == \"eight\") {\n\
    \            v.push_back(8);\n        }\n        else if(temp == \"nine\") {\n\
    \            v.push_back(9);\n        }\n    }\n    std::sort(v.begin(), v.end());\n\
    \    std::string ans = \"\";\n    for(int i = 0; i < v.size(); i++) {\n      \
    \  if(v[i] == 0) {\n            ans += \"zero \";\n        }\n        else if(v[i]\
    \ == 1) {\n            ans += \"one \";\n        }\n        else if(v[i] == 2)\
    \ {\n            ans += \"two \";\n        }\n        else if(v[i] == 3) {\n \
    \           ans += \"three \";\n        }\n        else if(v[i] == 4) {\n    \
    \        ans += \"four \";\n        }\n        else if(v[i] == 5) {\n        \
    \    ans += \"five \";\n        }\n        else if(v[i] == 6) {\n            ans\
    \ += \"six \";\n        }\n        else if(v[i] == 7) {\n            ans += \"\
    seven \";\n        }\n\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmphk9lwkat.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"zero\"\
    ) {\n            nums.push_back(0);\n        } else if (word == \"one\") {\n \
    \           nums.push_back(1);\n        } else if (word == \"two\") {\n      \
    \      nums.push_back(2);\n        } else if (word == \"three\") {\n         \
    \   nums.push_back(3);\n        } else if (word == \"four\") {\n            nums.push_back(4);\n\
    \        } else if (word == \"five\") {\n            nums.push_back(5);\n    \
    \    } else if (word == \"six\") {\n            nums.push_back(6);\n        }\
    \ else if (word == \"seven\") {\n            nums.push_back(7);\n        } else\
    \ if (word == \"eight\") {\n            nums.push_back(8);\n        } else if\
    \ (word == \"nine\") {\n            nums.push_back(9);\n        }\n    }\n   \
    \ std::sort(nums.begin(), nums.end());\n    std::string result;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        if (i != 0) {\n            result +=\
    \ \" \";\n        }\n        if (nums[i] == 0) {\n            result += \"zero\"\
    ;\n        } else if (nums[i] == 1) {\n            result += \"one\";\n      \
    \  } else if (nums[i] == 2) {\n            result += \"two\";\n        } else\
    \ if (nums[i] == 3) {\n            result += \"three\";\n        } else if (nums[i]\
    \ == 4) {\n            result += \"four\";\n        } else if (nums[i] == 5) {\n\
    \            result += \"five\";\n        } else if (nums[i] == 6) {\n       \
    \     result += \"six\";\n        } else if (nums[i] == 7) {\n            result\
    \ += \"seven\";\n        } else if\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpv3sxm8ju.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n  std::vector<int> nums;\n  std::stringstream ss(numbers);\n  std::string\
    \ word;\n  while (ss >> word) {\n    if (word == \"zero\") {\n      nums.push_back(0);\n\
    \    } else if (word == \"one\") {\n      nums.push_back(1);\n    } else if (word\
    \ == \"two\") {\n      nums.push_back(2);\n    } else if (word == \"three\") {\n\
    \      nums.push_back(3);\n    } else if (word == \"four\") {\n      nums.push_back(4);\n\
    \    } else if (word == \"five\") {\n      nums.push_back(5);\n    } else if (word\
    \ == \"six\") {\n      nums.push_back(6);\n    } else if (word == \"seven\") {\n\
    \      nums.push_back(7);\n    } else if (word == \"eight\") {\n      nums.push_back(8);\n\
    \    } else if (word == \"nine\") {\n      nums.push_back(9);\n    }\n  }\n  std::sort(nums.begin(),\
    \ nums.end());\n  std::string result;\n  for (int i = 0; i < nums.size(); i++)\
    \ {\n    if (nums[i] == 0) {\n      result += \"zero\";\n    } else if (nums[i]\
    \ == 1) {\n      result += \"one\";\n    } else if (nums[i] == 2) {\n      result\
    \ += \"two\";\n    } else if (nums[i] == 3) {\n      result += \"three\";\n  \
    \  } else if (nums[i] == 4) {\n      result += \"four\";\n    } else if (nums[i]\
    \ == 5) {\n      result += \"five\";\n    } else if (nums[i] == 6) {\n      result\
    \ += \"six\";\n    } else if (nums[i] == 7) {\n      result += \"seven\";\n  \
    \  } else if (nums[i] == 8) {\n      result += \"eight\";\n   \n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp90w83dya.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string temp;\n    while(ss >> temp) {\n        if(temp == \"zero\")\n\
    \            v.push_back(0);\n        else if(temp == \"one\")\n            v.push_back(1);\n\
    \        else if(temp == \"two\")\n            v.push_back(2);\n        else if(temp\
    \ == \"three\")\n            v.push_back(3);\n        else if(temp == \"four\"\
    )\n            v.push_back(4);\n        else if(temp == \"five\")\n          \
    \  v.push_back(5);\n        else if(temp == \"six\")\n            v.push_back(6);\n\
    \        else if(temp == \"seven\")\n            v.push_back(7);\n        else\
    \ if(temp == \"eight\")\n            v.push_back(8);\n        else if(temp ==\
    \ \"nine\")\n            v.push_back(9);\n    }\n    std::sort(v.begin(), v.end());\n\
    \    std::string result;\n    for(int i = 0; i < v.size(); i++) {\n        if(v[i]\
    \ == 0)\n            result += \"zero \";\n        else if(v[i] == 1)\n      \
    \      result += \"one \";\n        else if(v[i] == 2)\n            result +=\
    \ \"two \";\n        else if(v[i] == 3)\n            result += \"three \";\n \
    \       else if(v[i] == 4)\n            result += \"four \";\n        else if(v[i]\
    \ == 5)\n            result += \"five \";\n        else if(v[i] == 6)\n      \
    \      result += \"six \";\n        else if(v[i] == 7)\n            result +=\
    \ \"seven \";\n        else if(v[i] == 8)\n            result += \"eight \";\n\
    \        else if(v[i] == 9)\n            result += \"nine \";\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpvx6jnh_m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n\tstd::stringstream ss(numbers);\n\tstd::vector<int> v;\n\tstd::string\
    \ s;\n\twhile (ss >> s) {\n\t\tif (s == \"zero\") v.push_back(0);\n\t\telse if\
    \ (s == \"one\") v.push_back(1);\n\t\telse if (s == \"two\") v.push_back(2);\n\
    \t\telse if (s == \"three\") v.push_back(3);\n\t\telse if (s == \"four\") v.push_back(4);\n\
    \t\telse if (s == \"five\") v.push_back(5);\n\t\telse if (s == \"six\") v.push_back(6);\n\
    \t\telse if (s == \"seven\") v.push_back(7);\n\t\telse if (s == \"eight\") v.push_back(8);\n\
    \t\telse if (s == \"nine\") v.push_back(9);\n\t}\n\tstd::sort(v.begin(), v.end());\n\
    \tstd::string ans;\n\tfor (int i = 0; i < v.size(); i++) {\n\t\tif (i != 0) ans\
    \ += \" \";\n\t\tif (v[i] == 0) ans += \"zero\";\n\t\telse if (v[i] == 1) ans\
    \ += \"one\";\n\t\telse if (v[i] == 2) ans += \"two\";\n\t\telse if (v[i] == 3)\
    \ ans += \"three\";\n\t\telse if (v[i] == 4) ans += \"four\";\n\t\telse if (v[i]\
    \ == 5) ans += \"five\";\n\t\telse if (v[i] == 6) ans += \"six\";\n\t\telse if\
    \ (v[i] == 7) ans += \"seven\";\n\t\telse if (v[i] == 8) ans += \"eight\";\n\t\
    \telse if (v[i] == 9) ans += \"nine\";\n\t}\n\treturn ans;\n}\nint main() {\n\
    \    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpbn_furp4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") nums.push_back(0);\n\
    \        else if (word == \"one\") nums.push_back(1);\n        else if (word ==\
    \ \"two\") nums.push_back(2);\n        else if (word == \"three\") nums.push_back(3);\n\
    \        else if (word == \"four\") nums.push_back(4);\n        else if (word\
    \ == \"five\") nums.push_back(5);\n        else if (word == \"six\") nums.push_back(6);\n\
    \        else if (word == \"seven\") nums.push_back(7);\n        else if (word\
    \ == \"eight\") nums.push_back(8);\n        else if (word == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::string result;\n  \
    \  for (int i = 0; i < nums.size(); i++) {\n        if (i != 0) result += \" \"\
    ;\n        if (nums[i] == 0) result += \"zero\";\n        else if (nums[i] ==\
    \ 1) result += \"one\";\n        else if (nums[i] == 2) result += \"two\";\n \
    \       else if (nums[i] == 3) result += \"three\";\n        else if (nums[i]\
    \ == 4) result += \"four\";\n        else if (nums[i] == 5) result += \"five\"\
    ;\n        else if (nums[i] == 6) result += \"six\";\n        else if (nums[i]\
    \ == 7) result += \"seven\";\n        else if (nums[i] == 8) result += \"eight\"\
    ;\n        else if (nums[i] == 9) result += \"nine\";\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp6sxp8tdo.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"zero\"\
    ) nums.push_back(0);\n        else if (word == \"one\") nums.push_back(1);\n \
    \       else if (word == \"two\") nums.push_back(2);\n        else if (word ==\
    \ \"three\") nums.push_back(3);\n        else if (word == \"four\") nums.push_back(4);\n\
    \        else if (word == \"five\") nums.push_back(5);\n        else if (word\
    \ == \"six\") nums.push_back(6);\n        else if (word == \"seven\") nums.push_back(7);\n\
    \        else if (word == \"eight\") nums.push_back(8);\n        else if (word\
    \ == \"nine\") nums.push_back(9);\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::string result;\n    for (int i = 0; i < nums.size(); i++) {\n      \
    \  if (i != 0) result += \" \";\n        if (nums[i] == 0) result += \"zero\"\
    ;\n        else if (nums[i] == 1) result += \"one\";\n        else if (nums[i]\
    \ == 2) result += \"two\";\n        else if (nums[i] == 3) result += \"three\"\
    ;\n        else if (nums[i] == 4) result += \"four\";\n        else if (nums[i]\
    \ == 5) result += \"five\";\n        else if (nums[i] == 6) result += \"six\"\
    ;\n        else if (nums[i] == 7) result += \"seven\";\n        else if (nums[i]\
    \ == 8) result += \"eight\";\n        else if (nums[i] == 9) result += \"nine\"\
    ;\n    }\n    return result;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2dj47tj6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n  std::stringstream ss(numbers);\n  std::vector<int> v;\n  std::string\
    \ s;\n  while(ss >> s) {\n    if(s == \"zero\") v.push_back(0);\n    else if(s\
    \ == \"one\") v.push_back(1);\n    else if(s == \"two\") v.push_back(2);\n   \
    \ else if(s == \"three\") v.push_back(3);\n    else if(s == \"four\") v.push_back(4);\n\
    \    else if(s == \"five\") v.push_back(5);\n    else if(s == \"six\") v.push_back(6);\n\
    \    else if(s == \"seven\") v.push_back(7);\n    else if(s == \"eight\") v.push_back(8);\n\
    \    else if(s == \"nine\") v.push_back(9);\n  }\n  std::sort(v.begin(), v.end());\n\
    \  std::stringstream ss2;\n  for(int i = 0; i < v.size(); i++) {\n    if(v[i]\
    \ == 0) ss2 << \"zero\";\n    else if(v[i] == 1) ss2 << \"one\";\n    else if(v[i]\
    \ == 2) ss2 << \"two\";\n    else if(v[i] == 3) ss2 << \"three\";\n    else if(v[i]\
    \ == 4) ss2 << \"four\";\n    else if(v[i] == 5) ss2 << \"five\";\n    else if(v[i]\
    \ == 6) ss2 << \"six\";\n    else if(v[i] == 7) ss2 << \"seven\";\n    else if(v[i]\
    \ == 8) ss2 << \"eight\";\n    else if(v[i] == 9) ss2 << \"nine\";\n    if(i !=\
    \ v.size() - 1) ss2 << \" \";\n  }\n  return ss2.str();\n}\nint main() {\n   \
    \ auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n \
    \   assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"three\
    \ five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmplr9s2x_g.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"zero\"\
    ) {\n            nums.push_back(0);\n        } else if (word == \"one\") {\n \
    \           nums.push_back(1);\n        } else if (word == \"two\") {\n      \
    \      nums.push_back(2);\n        } else if (word == \"three\") {\n         \
    \   nums.push_back(3);\n        } else if (word == \"four\") {\n            nums.push_back(4);\n\
    \        } else if (word == \"five\") {\n            nums.push_back(5);\n    \
    \    } else if (word == \"six\") {\n            nums.push_back(6);\n        }\
    \ else if (word == \"seven\") {\n            nums.push_back(7);\n        } else\
    \ if (word == \"eight\") {\n            nums.push_back(8);\n        } else if\
    \ (word == \"nine\") {\n            nums.push_back(9);\n        }\n    }\n   \
    \ std::sort(nums.begin(), nums.end());\n    std::stringstream ss2;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        if (i != 0) {\n            ss2 << \"\
    \ \";\n        }\n        if (nums[i] == 0) {\n            ss2 << \"zero\";\n\
    \        } else if (nums[i] == 1) {\n            ss2 << \"one\";\n        } else\
    \ if (nums[i] == 2) {\n            ss2 << \"two\";\n        } else if (nums[i]\
    \ == 3) {\n            ss2 << \"three\";\n        } else if (nums[i] == 4) {\n\
    \            ss2 << \"four\";\n        } else if (nums[i] == 5) {\n          \
    \  ss2 << \"five\";\n        } else if (nums[i] == 6) {\n            ss2 << \"\
    six\";\n        } else if (nums[i] == 7) {\n           \n}\nint main() {\n   \
    \ auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n \
    \   assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"three\
    \ five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp0m9_q5yb.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n\tstd::stringstream ss(numbers);\n\tstd::vector<int> v;\n\tstd::string\
    \ s;\n\twhile (ss >> s) {\n\t\tif (s == \"zero\") v.push_back(0);\n\t\telse if\
    \ (s == \"one\") v.push_back(1);\n\t\telse if (s == \"two\") v.push_back(2);\n\
    \t\telse if (s == \"three\") v.push_back(3);\n\t\telse if (s == \"four\") v.push_back(4);\n\
    \t\telse if (s == \"five\") v.push_back(5);\n\t\telse if (s == \"six\") v.push_back(6);\n\
    \t\telse if (s == \"seven\") v.push_back(7);\n\t\telse if (s == \"eight\") v.push_back(8);\n\
    \t\telse if (s == \"nine\") v.push_back(9);\n\t}\n\tstd::sort(v.begin(), v.end());\n\
    \tstd::string result;\n\tfor (int i = 0; i < v.size(); i++) {\n\t\tif (v[i] ==\
    \ 0) result += \"zero \";\n\t\telse if (v[i] == 1) result += \"one \";\n\t\telse\
    \ if (v[i] == 2) result += \"two \";\n\t\telse if (v[i] == 3) result += \"three\
    \ \";\n\t\telse if (v[i] == 4) result += \"four \";\n\t\telse if (v[i] == 5) result\
    \ += \"five \";\n\t\telse if (v[i] == 6) result += \"six \";\n\t\telse if (v[i]\
    \ == 7) result += \"seven \";\n\t\telse if (v[i] == 8) result += \"eight \";\n\
    \t\telse if (v[i] == 9) result += \"nine \";\n\t}\n\treturn result;\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpopcwmsha.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n\tstd::stringstream ss(numbers);\n\tstd::string word;\n\tstd::vector<int>\
    \ nums;\n\twhile (ss >> word) {\n\t\tif (word == \"zero\") {\n\t\t\tnums.push_back(0);\n\
    \t\t}\n\t\telse if (word == \"one\") {\n\t\t\tnums.push_back(1);\n\t\t}\n\t\t\
    else if (word == \"two\") {\n\t\t\tnums.push_back(2);\n\t\t}\n\t\telse if (word\
    \ == \"three\") {\n\t\t\tnums.push_back(3);\n\t\t}\n\t\telse if (word == \"four\"\
    ) {\n\t\t\tnums.push_back(4);\n\t\t}\n\t\telse if (word == \"five\") {\n\t\t\t\
    nums.push_back(5);\n\t\t}\n\t\telse if (word == \"six\") {\n\t\t\tnums.push_back(6);\n\
    \t\t}\n\t\telse if (word == \"seven\") {\n\t\t\tnums.push_back(7);\n\t\t}\n\t\t\
    else if (word == \"eight\") {\n\t\t\tnums.push_back(8);\n\t\t}\n\t\telse if (word\
    \ == \"nine\") {\n\t\t\tnums.push_back(9);\n\t\t}\n\t}\n\tstd::sort(nums.begin(),\
    \ nums.end());\n\tstd::string result = \"\";\n\tfor (int i = 0; i < nums.size();\
    \ i++) {\n\t\tif (nums[i] == 0) {\n\t\t\tresult += \"zero \";\n\t\t}\n\t\telse\
    \ if (nums[i] == 1) {\n\t\t\tresult += \"one \";\n\t\t}\n\t\telse if (nums[i]\
    \ == 2) {\n\t\t\tresult += \"two \";\n\t\t}\n\t\telse if (nums[i] == 3) {\n\t\t\
    \tresult += \"three \";\n\t\t}\n\t\telse if (nums[i] == 4) {\n\t\t\tresult +=\
    \ \"four\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpunsjybgx.cpp:58:14: warning: missing terminating \" character [enabled\
    \ by default]\n    result += \"four\n              ^\n/tmp/tmpunsjybgx.cpp:58:4:\
    \ error: missing terminating \" character\n    result += \"four\n    ^\nIn file\
    \ included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpunsjybgx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string word;\n    while (ss >> word) {\n        if (word == \"zero\")\
    \ {\n            v.push_back(0);\n        } else if (word == \"one\") {\n    \
    \        v.push_back(1);\n        } else if (word == \"two\") {\n            v.push_back(2);\n\
    \        } else if (word == \"three\") {\n            v.push_back(3);\n      \
    \  } else if (word == \"four\") {\n            v.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            v.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            v.push_back(6);\n        } else if (word == \"seven\"\
    ) {\n            v.push_back(7);\n        } else if (word == \"eight\") {\n  \
    \          v.push_back(8);\n        } else if (word == \"nine\") {\n         \
    \   v.push_back(9);\n        }\n    }\n    std::sort(v.begin(), v.end());\n  \
    \  std::string result;\n    for (int i = 0; i < v.size(); i++) {\n        if (v[i]\
    \ == 0) {\n            result += \"zero\";\n        } else if (v[i] == 1) {\n\
    \            result += \"one\";\n        } else if (v[i] == 2) {\n           \
    \ result += \"two\";\n        } else if (v[i] == 3) {\n            result += \"\
    three\";\n        } else if (v[i] == 4) {\n            result += \"four\";\n \
    \       } else if (v[i] == 5) {\n            result += \"five\";\n        } else\
    \ if (v[i] == 6) {\n            result += \"six\";\n        } else if (v[i] ==\
    \ 7) {\n            result += \"seven\";\n        } else if (v[i] == 8) {\n  \
    \          result += \"eight\";\n        } else if (v[i] == 9) {\n           \
    \ result += \"nine\";\n        }\n\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp8serbuq0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::vector<int> v;\n  \
    \  std::string s;\n    while(ss >> s) {\n        if(s == \"zero\") v.push_back(0);\n\
    \        else if(s == \"one\") v.push_back(1);\n        else if(s == \"two\")\
    \ v.push_back(2);\n        else if(s == \"three\") v.push_back(3);\n        else\
    \ if(s == \"four\") v.push_back(4);\n        else if(s == \"five\") v.push_back(5);\n\
    \        else if(s == \"six\") v.push_back(6);\n        else if(s == \"seven\"\
    ) v.push_back(7);\n        else if(s == \"eight\") v.push_back(8);\n        else\
    \ if(s == \"nine\") v.push_back(9);\n    }\n    std::sort(v.begin(), v.end());\n\
    \    std::string res;\n    for(int i = 0; i < v.size(); i++) {\n        if(v[i]\
    \ == 0) res += \"zero \";\n        else if(v[i] == 1) res += \"one \";\n     \
    \   else if(v[i] == 2) res += \"two \";\n        else if(v[i] == 3) res += \"\
    three \";\n        else if(v[i] == 4) res += \"four \";\n        else if(v[i]\
    \ == 5) res += \"five \";\n        else if(v[i] == 6) res += \"six \";\n     \
    \   else if(v[i] == 7) res += \"seven \";\n        else if(v[i] == 8) res += \"\
    eight \";\n        else if(v[i] == 9) res += \"nine \";\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp3urgf46g.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") nums.push_back(0);\n\
    \        else if (word == \"one\") nums.push_back(1);\n        else if (word ==\
    \ \"two\") nums.push_back(2);\n        else if (word == \"three\") nums.push_back(3);\n\
    \        else if (word == \"four\") nums.push_back(4);\n        else if (word\
    \ == \"five\") nums.push_back(5);\n        else if (word == \"six\") nums.push_back(6);\n\
    \        else if (word == \"seven\") nums.push_back(7);\n        else if (word\
    \ == \"eight\") nums.push_back(8);\n        else if (word == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::string result;\n  \
    \  for (int i = 0; i < nums.size(); i++) {\n        if (i != 0) result += \" \"\
    ;\n        if (nums[i] == 0) result += \"zero\";\n        else if (nums[i] ==\
    \ 1) result += \"one\";\n        else if (nums[i] == 2) result += \"two\";\n \
    \       else if (nums[i] == 3) result += \"three\";\n        else if (nums[i]\
    \ == 4) result += \"four\";\n        else if (nums[i] == 5) result += \"five\"\
    ;\n        else if (nums[i] == 6) result += \"six\";\n        else if (nums[i]\
    \ == 7) result += \"seven\";\n        else if (nums[i] == 8) result += \"eight\"\
    ;\n        else if (nums[i] == 9) result += \"nine\";\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp6sxp8tdo.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") {\n         \
    \   nums.push_back(0);\n        } else if (word == \"one\") {\n            nums.push_back(1);\n\
    \        } else if (word == \"two\") {\n            nums.push_back(2);\n     \
    \   } else if (word == \"three\") {\n            nums.push_back(3);\n        }\
    \ else if (word == \"four\") {\n            nums.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            nums.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            nums.push_back(6);\n        } else if (word == \"\
    seven\") {\n            nums.push_back(7);\n        } else if (word == \"eight\"\
    ) {\n            nums.push_back(8);\n        } else if (word == \"nine\") {\n\
    \            nums.push_back(9);\n        }\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::string result;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        if (i != 0) {\n            result += \" \";\n        }\n   \
    \     if (nums[i] == 0) {\n            result += \"zero\";\n        } else if\
    \ (nums[i] == 1) {\n            result += \"one\";\n        } else if (nums[i]\
    \ == 2) {\n            result += \"two\";\n        } else if (nums[i] == 3) {\n\
    \            result += \"three\";\n        } else if (nums[i] == 4) {\n      \
    \      result += \"four\";\n        } else if (nums[i] == 5) {\n            result\
    \ += \"five\";\n        } else if (nums[i] == 6) {\n            result += \"six\"\
    ;\n        } else if (nums[i] == 7) {\n            result += \"seven\";\n    \
    \    } else if\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpldvxpsli.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n\tstd::vector<int> nums;\n\tstd::stringstream ss(numbers);\n\tstd::string\
    \ temp;\n\twhile (ss >> temp) {\n\t\tif (temp == \"zero\") {\n\t\t\tnums.push_back(0);\n\
    \t\t}\n\t\telse if (temp == \"one\") {\n\t\t\tnums.push_back(1);\n\t\t}\n\t\t\
    else if (temp == \"two\") {\n\t\t\tnums.push_back(2);\n\t\t}\n\t\telse if (temp\
    \ == \"three\") {\n\t\t\tnums.push_back(3);\n\t\t}\n\t\telse if (temp == \"four\"\
    ) {\n\t\t\tnums.push_back(4);\n\t\t}\n\t\telse if (temp == \"five\") {\n\t\t\t\
    nums.push_back(5);\n\t\t}\n\t\telse if (temp == \"six\") {\n\t\t\tnums.push_back(6);\n\
    \t\t}\n\t\telse if (temp == \"seven\") {\n\t\t\tnums.push_back(7);\n\t\t}\n\t\t\
    else if (temp == \"eight\") {\n\t\t\tnums.push_back(8);\n\t\t}\n\t\telse if (temp\
    \ == \"nine\") {\n\t\t\tnums.push_back(9);\n\t\t}\n\t}\n\tstd::sort(nums.begin(),\
    \ nums.end());\n\tstd::string result;\n\tfor (int i = 0; i < nums.size(); i++)\
    \ {\n\t\tif (nums[i] == 0) {\n\t\t\tresult += \"zero \";\n\t\t}\n\t\telse if (nums[i]\
    \ == 1) {\n\t\t\tresult += \"one \";\n\t\t}\n\t\telse if (nums[i] == 2) {\n\t\t\
    \tresult += \"two \";\n\t\t}\n\t\telse if (nums[i] == 3) {\n\t\t\tresult += \"\
    three \";\n\t\t}\n\t\telse if (nums[i] == 4) {\n\t\t\tresult += \"four \";\n}\n\
    int main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzkboc8l3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") nums.push_back(0);\n\
    \        else if (word == \"one\") nums.push_back(1);\n        else if (word ==\
    \ \"two\") nums.push_back(2);\n        else if (word == \"three\") nums.push_back(3);\n\
    \        else if (word == \"four\") nums.push_back(4);\n        else if (word\
    \ == \"five\") nums.push_back(5);\n        else if (word == \"six\") nums.push_back(6);\n\
    \        else if (word == \"seven\") nums.push_back(7);\n        else if (word\
    \ == \"eight\") nums.push_back(8);\n        else if (word == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::stringstream out;\n\
    \    for (int i = 0; i < nums.size(); i++) {\n        if (i != 0) out << \" \"\
    ;\n        if (nums[i] == 0) out << \"zero\";\n        else if (nums[i] == 1)\
    \ out << \"one\";\n        else if (nums[i] == 2) out << \"two\";\n        else\
    \ if (nums[i] == 3) out << \"three\";\n        else if (nums[i] == 4) out << \"\
    four\";\n        else if (nums[i] == 5) out << \"five\";\n        else if (nums[i]\
    \ == 6) out << \"six\";\n        else if (nums[i] == 7) out << \"seven\";\n  \
    \      else if (nums[i] == 8) out << \"eight\";\n        else if (nums[i] == 9)\
    \ out << \"nine\";\n    }\n    return out.str();\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpvq305idw.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") nums.push_back(0);\n\
    \        else if (word == \"one\") nums.push_back(1);\n        else if (word ==\
    \ \"two\") nums.push_back(2);\n        else if (word == \"three\") nums.push_back(3);\n\
    \        else if (word == \"four\") nums.push_back(4);\n        else if (word\
    \ == \"five\") nums.push_back(5);\n        else if (word == \"six\") nums.push_back(6);\n\
    \        else if (word == \"seven\") nums.push_back(7);\n        else if (word\
    \ == \"eight\") nums.push_back(8);\n        else if (word == \"nine\") nums.push_back(9);\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::string res;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        if (i > 0) res += \" \";\n    \
    \    if (nums[i] == 0) res += \"zero\";\n        else if (nums[i] == 1) res +=\
    \ \"one\";\n        else if (nums[i] == 2) res += \"two\";\n        else if (nums[i]\
    \ == 3) res += \"three\";\n        else if (nums[i] == 4) res += \"four\";\n \
    \       else if (nums[i] == 5) res += \"five\";\n        else if (nums[i] == 6)\
    \ res += \"six\";\n        else if (nums[i] == 7) res += \"seven\";\n        else\
    \ if (nums[i] == 8) res += \"eight\";\n        else if (nums[i] == 9) res += \"\
    nine\";\n    }\n    return res;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpdkislfk4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") {\n         \
    \   nums.push_back(0);\n        } else if (word == \"one\") {\n            nums.push_back(1);\n\
    \        } else if (word == \"two\") {\n            nums.push_back(2);\n     \
    \   } else if (word == \"three\") {\n            nums.push_back(3);\n        }\
    \ else if (word == \"four\") {\n            nums.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            nums.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            nums.push_back(6);\n        } else if (word == \"\
    seven\") {\n            nums.push_back(7);\n        } else if (word == \"eight\"\
    ) {\n            nums.push_back(8);\n        } else if (word == \"nine\") {\n\
    \            nums.push_back(9);\n        }\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::string result;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        if (i != 0) {\n            result += \" \";\n        }\n   \
    \     if (nums[i] == 0) {\n            result += \"zero\";\n        } else if\
    \ (nums[i] == 1) {\n            result += \"one\";\n        } else if (nums[i]\
    \ == 2) {\n            result += \"two\";\n        } else if (nums[i] == 3) {\n\
    \            result += \"three\";\n        } else if (nums[i] == 4) {\n      \
    \      result += \"four\";\n        } else if (nums[i] == 5) {\n            result\
    \ += \"five\";\n        } else if (nums[i] == 6) {\n            result += \"six\"\
    ;\n        } else if (nums[i] == 7) {\n            result += \"seven\";\n    \
    \    } else if\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpldvxpsli.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821961
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n  std::vector<int> nums;\n  std::stringstream ss(numbers);\n  std::string\
    \ word;\n  while (ss >> word) {\n    if (word == \"zero\") nums.push_back(0);\n\
    \    else if (word == \"one\") nums.push_back(1);\n    else if (word == \"two\"\
    ) nums.push_back(2);\n    else if (word == \"three\") nums.push_back(3);\n   \
    \ else if (word == \"four\") nums.push_back(4);\n    else if (word == \"five\"\
    ) nums.push_back(5);\n    else if (word == \"six\") nums.push_back(6);\n    else\
    \ if (word == \"seven\") nums.push_back(7);\n    else if (word == \"eight\") nums.push_back(8);\n\
    \    else if (word == \"nine\") nums.push_back(9);\n  }\n  std::sort(nums.begin(),\
    \ nums.end());\n  std::string result;\n  for (int i = 0; i < nums.size(); i++)\
    \ {\n    if (i > 0) result += \" \";\n    if (nums[i] == 0) result += \"zero\"\
    ;\n    else if (nums[i] == 1) result += \"one\";\n    else if (nums[i] == 2) result\
    \ += \"two\";\n    else if (nums[i] == 3) result += \"three\";\n    else if (nums[i]\
    \ == 4) result += \"four\";\n    else if (nums[i] == 5) result += \"five\";\n\
    \    else if (nums[i] == 6) result += \"six\";\n    else if (nums[i] == 7) result\
    \ += \"seven\";\n    else if (nums[i] == 8) result += \"eight\";\n    else if\
    \ (nums[i] == 9) result += \"nine\";\n  }\n  return result;\n}\nint main() {\n\
    \    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5i3hpjx5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\nstd::string sort_numbers(std::string\
    \ numbers) {\n    std::map<std::string, int> m = {{\"zero\", 0}, {\"one\", 1},\
    \ {\"two\", 2}, {\"three\", 3}, {\"four\", 4}, {\"five\", 5}, {\"six\", 6}, {\"\
    seven\", 7}, {\"eight\", 8}, {\"nine\", 9}};\n    std::vector<int> v;\n    std::stringstream\
    \ ss(numbers);\n    std::string s;\n    while(ss >> s) {\n        v.push_back(m[s]);\n\
    \    }\n    std::sort(v.begin(), v.end());\n    std::string result;\n    for(int\
    \ i = 0; i < v.size(); i++) {\n        result += std::to_string(v[i]);\n     \
    \   if(i != v.size() - 1) {\n            result += \" \";\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = sort_numbers;\n   \
    \ assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) == (\"\
    three\"));\n    assert(candidate((\"three five nine\")) == (\"three five nine\"\
    ));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"zero four\
    \ five seven eight nine\"));\n    assert(candidate((\"six five four three two\
    \ one zero\")) == (\"zero one two three four five six\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpl9fhj5tc.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821963

name: HumanEval_151_double_the_difference
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
  \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
  \ numbers that are negative or not integers.\n// If the input list is empty, return\
  \ 0.\nlong double_the_difference(std::vector<long> lst) {\n"
tests: "}\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<long>()))\
  \ == (0));\n    assert(candidate((std::vector<long>({(long)5, (long)4}))) == (25));\n\
  \    assert(candidate((std::vector<long>(float)0.3}))) == (0));\n    assert(candidate((std::vector<long>({(long)-10,\
  \ (long)-20, (long)-30}))) == (0));\n    assert(candidate((std::vector<long>({(long)-1,\
  \ (long)-2, (long)8}))) == (0));\n    assert(candidate((std::vector<long>(float)5})))\
  \ == (34));\n    assert(candidate((std::vector<long>({(long)-9, (long)-7, (long)-5,\
  \ (long)-3, (long)-1, (long)1, (long)3, (long)5, (long)7, (long)9}))) == (165));\n\
  }\n"
completions: ["    long sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n  \
    \      if (lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (long i = 0;\
    \ i < lst.size(); i++) {\n        if (lst[i] % 2 == 1) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (int\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 == 1) {\n            sum\
    \ += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (auto i : lst) {\n        if (i % 2 != 0) {\n            sum += i * i;\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i\
    \ < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "  long sum = 0;\n  for (auto\
    \ &i : lst) {\n    if (i % 2 == 1) {\n      sum += i * i;\n    }\n  }\n  return\
    \ sum;", "    long sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n   \
    \     if (lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size();\
    \ i++) {\n\t\tif (lst[i] % 2 != 0) {\n\t\t\tsum += lst[i] * lst[i];\n\t\t}\n\t\
    }\n\treturn sum;", "  long sum = 0;\n  for (auto i : lst) {\n    if (i > 0 &&\
    \ i == (int)i) {\n      if (i % 2 != 0) {\n        sum += i * i;\n      }\n  \
    \  }\n  }\n  return sum;", "    long sum = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (long i = 0;\
    \ i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (auto\
    \ i : lst) {\n        if (i % 2 != 0) {\n            sum += i * i;\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i\
    \ < lst.size(); i++) {\n        if (lst[i] % 2 == 1) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (int\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 == 1) {\n            sum\
    \ += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (auto i : lst) {\n        if (i > 0 && i == (int)i) {\n            if\
    \ (i % 2 == 1) {\n                sum += i * i;\n            }\n        }\n  \
    \  }\n    return sum;", "    long sum = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (long i = 0;\
    \ i < lst.size(); i++) {\n        if (lst[i] % 2 == 1) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (long\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
    \ += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  \
    \  long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n   \
    \     if (lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i\
    \ < lst.size(); i++) {\n        if (lst[i] % 2 == 1) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (int\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
    \ += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  \
    \  long sum = 0;\n    for (auto i : lst) {\n        if (i % 2 == 1) {\n      \
    \      sum += i * i;\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 == 1) {\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  \
    \  long sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (auto i : lst) {\n        if (i % 2 != 0)\
    \ {\n            sum += i * i;\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2\
    \ != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n   \
    \     if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (long i = 0;\
    \ i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (int\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
    \ += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  \
    \  long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (auto i : lst) {\n        if (i % 2 != 0)\
    \ {\n            sum += i * i;\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] %\
    \ 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n    \
    \    if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (long i = 0;\
    \ i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (int\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
    \ += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 == 1) {\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  \
    \  long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n    \
    \    if (lst[i] % 2 != 0) {\n            sum += (lst[i] * lst[i]);\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i\
    \ < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "\tlong sum = 0;\n\tfor (int\
    \ i = 0; i < lst.size(); i++) {\n\t\tif (lst[i] % 2 == 1) {\n\t\t\tsum += lst[i]\
    \ * lst[i];\n\t\t}\n\t}\n\treturn sum;", "    long sum = 0;\n    for (long i =\
    \ 0; i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum +=\
    \ lst[i] * lst[i];\n        }\n    }\n    return sum;", "  long sum = 0;\n  for\
    \ (int i = 0; i < lst.size(); i++) {\n    if (lst[i] % 2 == 1) {\n      sum +=\
    \ lst[i] * lst[i];\n    }\n  }\n  return sum;", "    long sum = 0;\n    for (int\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
    \ += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (auto i : lst) {\n        if (i > 0 && i == (int)i) {\n            if\
    \ (i % 2 != 0) {\n                sum += i * i;\n            }\n        }\n  \
    \  }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i\
    \ < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (int\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 == 1) {\n            sum\
    \ += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 == 1) {\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  \
    \  long sum = 0;\n    for (auto i : lst) {\n        if (i % 2 != 0) {\n      \
    \      sum += i * i;\n        }\n    }\n    return sum;", "    // your code here\n\
    \    long sum = 0;\n    for(int i = 0; i < lst.size(); i++){\n        if(lst[i]\
    \ % 2 == 1){\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n    \
    \    if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (int\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
    \ += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  long sum = 0;\n\
    \  for (int i = 0; i < lst.size(); i++) {\n    if (lst[i] % 2 == 1) {\n      sum\
    \ += lst[i] * lst[i];\n    }\n  }\n  return sum;", "    long sum = 0;\n    for\
    \ (auto i : lst) {\n        if (i % 2 != 0) {\n            sum += i * i;\n   \
    \     }\n    }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i <\
    \ lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (int\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
    \ += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  \
    \  long sum = 0;\n    for (auto i : lst) {\n        if (i > 0 && i == int(i))\
    \ {\n            if (i % 2 == 1) {\n                sum += i * i;\n          \
    \  }\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (int i =\
    \ 0; i < lst.size(); i++) {\n        if (lst[i] % 2 == 1) {\n            sum +=\
    \ lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  \
    \  long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "  long sum = 0;\n  for (auto i : lst) {\n    if (i > 0 && i == int(i))\
    \ {\n      if (i % 2 == 1) {\n        sum += i * i;\n      }\n    }\n  }\n  return\
    \ sum;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (lst[i]\
    \ % 2 != 0) {\n\t\t\tsum += lst[i] * lst[i];\n\t\t}\n\t}\n\treturn sum;", "  \
    \  long sum = 0;\n    for (auto i : lst) {\n        if (i % 2 == 1) {\n      \
    \      sum += i * i;\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  \
    \  long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n    \
    \    if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (auto i : lst) {\n     \
    \   if (i % 2 == 1) {\n            sum += i * i;\n        }\n    }\n    return\
    \ sum;", "\tlong sum = 0;\n\tfor (long i = 0; i < lst.size(); i++) {\n\t\tif (lst[i]\
    \ % 2 != 0) {\n\t\t\tsum += lst[i] * lst[i];\n\t\t}\n\t}\n\treturn sum;", "  \
    \  long sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n    \
    \    if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (auto i : lst)\
    \ {\n        if (i % 2 != 0) {\n            sum += i * i;\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\
    \ {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n   \
    \     }\n    }\n    return sum;", "    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (lst[i] % 2 == 1) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (long\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
    \ += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  \
    \  long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (auto i : lst) {\n        if (i % 2 != 0)\
    \ {\n            sum += i * i;\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2\
    \ == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;",
  "  long sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (lst[i] % 2 ==\
    \ 1) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;", "    long sum\
    \ = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 ==\
    \ 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n    \
    \    if (lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i\
    \ < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (long\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
    \ += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  // Your code here\n\
    \  long sum = 0;\n  for(int i = 0; i < lst.size(); i++){\n    if(lst[i] % 2 !=\
    \ 0){\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;", "    long sum\
    \ = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 ==\
    \ 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (auto i : lst) {\n        if (i % 2 != 0)\
    \ {\n            sum += i * i;\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2\
    \ == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;",
  "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (lst[i] % 2 !=\
    \ 0) {\n\t\t\tsum += lst[i] * lst[i];\n\t\t}\n\t}\n\treturn sum;", "    long sum\
    \ = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 ==\
    \ 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n    \
    \    if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;", "  long sum = 0;\n  for (int i = 0; i < lst.size();\
    \ i++) {\n    if (lst[i] % 2 != 0) {\n      sum += lst[i] * lst[i];\n    }\n \
    \ }\n  return sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\
    \ {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n   \
    \     }\n    }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i <\
    \ lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (long\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
    \ += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 == 1) {\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  \
    \  long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n    \
    \    if (lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i\
    \ < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (auto\
    \ i : lst) {\n        if (i % 2 == 1) {\n            sum += i * i;\n        }\n\
    \    }\n    return sum;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size();\
    \ i++) {\n\t\tif (lst[i] % 2 != 0) {\n\t\t\tsum += lst[i] * lst[i];\n\t\t}\n\t\
    }\n\treturn sum;", "    long sum = 0;\n    for (auto i : lst) {\n        if (i\
    \ % 2 != 0) {\n            sum += i * i;\n        }\n    }\n    return sum;",
  "  long sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (lst[i] % 2 !=\
    \ 0) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;", "    long sum\
    \ = 0;\n    for (auto i : lst) {\n        if (i % 2 == 1) {\n            sum +=\
    \ i * i;\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (long\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 == 1) {\n            sum\
    \ += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] > 0 && lst[i]\
    \ == (int)lst[i]) {\n            if (lst[i] % 2 == 1) {\n                sum +=\
    \ lst[i] * lst[i];\n            }\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2\
    \ != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i\
    \ < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (auto\
    \ i : lst) {\n        if (i % 2 != 0) {\n            sum += i * i;\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i\
    \ < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (int\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
    \ += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  long sum = 0;\n\
    \  for (int i = 0; i < lst.size(); i++) {\n    if (lst[i] % 2 != 0) {\n      sum\
    \ += lst[i] * lst[i];\n    }\n  }\n  return sum;", "    long sum = 0;\n    for\
    \ (long i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n      \
    \      sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for (auto i : lst) {\n        if (i % 2 != 0) {\n            sum\
    \ += i * i;\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (int\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
    \ += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 == 1) {\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  \
    \  long sum = 0;\n    for (auto it = lst.begin(); it != lst.end(); it++) {\n \
    \       if (*it % 2 == 1) {\n            sum += (*it * *it);\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\
    \ {\n        if (lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n   \
    \     }\n    }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i <\
    \ lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (long\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
    \ += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 == 1) {\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  long\
    \ sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (lst[i] % 2 != 0)\
    \ {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;", "    long sum\
    \ = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 ==\
    \ 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n    \
    \    if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (auto i : lst)\
    \ {\n        if (i % 2 == 1) {\n            sum += i * i;\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    for (auto i : lst) {\n        if (i\
    \ % 2 == 1) {\n            sum += i * i;\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n   \
    \     if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (long i = 0;\
    \ i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (int\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 == 1) {\n            sum\
    \ += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  \
    \  long sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n    \
    \    if (lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (auto i : lst)\
    \ {\n        if (i % 2 != 0) {\n            sum += i * i;\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\
    \ {\n        if (lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n   \
    \     }\n    }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i <\
    \ lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (int\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
    \ += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 == 1) {\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  \
    \  long sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n    \
    \    if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (auto i : lst) {\n     \
    \   if (i % 2 != 0) {\n            sum += i * i;\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n   \
    \     if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (auto i : lst) {\n     \
    \   if (i % 2 == 1) {\n            sum += i * i;\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n   \
    \     if (lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (auto i : lst) {\n     \
    \   if (i % 2 == 1) {\n            sum += i * i;\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n   \
    \     if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size();\
    \ i++) {\n\t\tif (lst[i] % 2 == 1) {\n\t\t\tsum += lst[i] * lst[i];\n\t\t}\n\t\
    }\n\treturn sum;", "    long sum = 0;\n    for (auto i : lst) {\n        if (i\
    \ % 2 == 1) {\n            sum += i * i;\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    for (auto i : lst) {\n        if (i % 2 == 1) {\n      \
    \      sum += i * i;\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  \
    \  long sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n    \
    \    if (lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;", "  long sum = 0;\n  for (int i = 0; i < lst.size();\
    \ i++) {\n    if (lst[i] % 2 == 1) {\n      sum += lst[i] * lst[i];\n    }\n \
    \ }\n  return sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\
    \ {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n   \
    \     }\n    }\n    return sum;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size();\
    \ i++) {\n\t\tif (lst[i] % 2 != 0) {\n\t\t\tsum += lst[i] * lst[i];\n\t\t}\n\t\
    }\n\treturn sum;", "    long sum = 0;\n    for (auto i : lst) {\n        if (i\
    \ % 2 != 0) {\n            sum += i * i;\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n   \
    \     if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i\
    \ < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (long\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 == 1) {\n            sum\
    \ += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 == 1) {\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  \
    \  long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n   \
    \     if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (long i = 0;\
    \ i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (int\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
    \ += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  \
    \  long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n   \
    \     if (lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i\
    \ < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum += pow(lst[i],\
    \ 2);\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (int i\
    \ = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
    \ += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 != 0) {\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;"]
stop_tokens:
- "\n}"

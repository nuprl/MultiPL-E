language: cpp
name: HumanEval_27_flip_case
results:
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'&&string[i]<='z')\n\
    \        {\n            string[i]=string[i]-32;\n        }\n        else if(string[i]>='A'&&string[i]<='Z')\n\
    \        {\n            string[i]=string[i]+32;\n        }\n    }\n    return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097771
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i] = string[i] - 32;\n   \
    \     }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n      \
    \      string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\n\
    int main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i] = string[i] - 32;\n   \
    \     }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n      \
    \      string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\n\
    int main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=toupper(string[i]);\n \
    \       }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n    \
    \        string[i]=tolower(string[i]);\n        }\n    }\n    return string;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    std::string new_string = \"\";\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            new_string\
    \ += string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z')\
    \ {\n            new_string += string[i] + 32;\n        } else {\n           \
    \ new_string += string[i];\n        }\n    }\n    return new_string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097773
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n  std::string result;\n  for (char c : string) {\n    if (isupper(c))\
    \ {\n      result += tolower(c);\n    } else {\n      result += toupper(c);\n\
    \    }\n  }\n  return result;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    std::string result;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            result\
    \ += (string[i] - 32);\n        } else if (string[i] >= 'A' && string[i] <= 'Z')\
    \ {\n            result += (string[i] + 32);\n        } else {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    std::string result = \"\";\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            result\
    \ += string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z')\
    \ {\n            result += string[i] + 32;\n        } else {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0; i<string.length(); i++) {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n   \
    \     }\n        else if(string[i] >= 'A' && string[i] <= 'Z') {\n           \
    \ string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n\tfor (int i = 0; i < string.length(); i++) {\n\t\tif (string[i]\
    \ >= 'a' && string[i] <= 'z') {\n\t\t\tstring[i] = string[i] - 32;\n\t\t}\n\t\t\
    else if (string[i] >= 'A' && string[i] <= 'Z') {\n\t\t\tstring[i] = string[i]\
    \ + 32;\n\t\t}\n\t}\n\treturn string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n  for(int i=0;i<string.length();i++)\n  {\n    if(string[i]>='a'\
    \ && string[i]<='z')\n    {\n      string[i]=string[i]-32;\n    }\n    else if(string[i]>='A'\
    \ && string[i]<='Z')\n    {\n      string[i]=string[i]+32;\n    }\n  }\n  return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    std::string result = \"\";\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            result\
    \ += string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z')\
    \ {\n            result += string[i] + 32;\n        } else {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n\tfor (int i = 0; i < string.length(); i++) {\n\t\tif (string[i]\
    \ >= 'a' && string[i] <= 'z') {\n\t\t\tstring[i] = string[i] - 32;\n\t\t}\n\t\t\
    else if (string[i] >= 'A' && string[i] <= 'Z') {\n\t\t\tstring[i] = string[i]\
    \ + 32;\n\t\t}\n\t}\n\treturn string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n  for(int i=0;i<string.length();i++)\n  {\n    if(string[i]>='a'\
    \ && string[i]<='z')\n    {\n      string[i] = string[i] - 32;\n    }\n    else\
    \ if(string[i]>='A' && string[i]<='Z')\n    {\n      string[i] = string[i] + 32;\n\
    \    }\n  }\n  return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n  for(int i=0;i<string.length();i++)\n  {\n    if(string[i]>='a'\
    \ && string[i]<='z')\n    {\n      string[i]=string[i]-32;\n    }\n    else if(string[i]>='A'\
    \ && string[i]<='Z')\n    {\n      string[i]=string[i]+32;\n    }\n  }\n  return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    std::string result;\n    for (char c : string) {\n        if\
    \ (isupper(c)) {\n            result += tolower(c);\n        } else {\n      \
    \      result += toupper(c);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    std::string result = \"\";\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (islower(string[i])) {\n            result += toupper(string[i]);\n\
    \        } else {\n            result += tolower(string[i]);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097773
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n  for(int i=0;i<string.length();i++)\n  {\n    if(string[i]>='a'\
    \ && string[i]<='z')\n    {\n      string[i]=string[i]-32;\n    }\n    else if(string[i]>='A'\
    \ && string[i]<='Z')\n    {\n      string[i]=string[i]+32;\n    }\n  }\n  return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i] = string[i] - 32;\n   \
    \     }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n      \
    \      string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\n\
    int main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    std::string result = \"\";\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            result\
    \ += toupper(string[i]);\n        } else if (string[i] >= 'A' && string[i] <=\
    \ 'Z') {\n            result += tolower(string[i]);\n        } else {\n      \
    \      result += string[i];\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n  for (int i = 0; i < string.length(); i++) {\n    if (string[i]\
    \ >= 'a' && string[i] <= 'z') {\n      string[i] = string[i] - 'a' + 'A';\n  \
    \  } else if (string[i] >= 'A' && string[i] <= 'Z') {\n      string[i] = string[i]\
    \ - 'A' + 'a';\n    }\n  }\n  return string;\n}\nint main() {\n    auto candidate\
    \ = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    std::string result;\n    for (char c : string) {\n        if\
    \ (c >= 'a' && c <= 'z') {\n            result += c - 32;\n        } else if (c\
    \ >= 'A' && c <= 'Z') {\n            result += c + 32;\n        } else {\n   \
    \         result += c;\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n \
    \   assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097773
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n\tfor (int i = 0; i < string.length(); i++) {\n\t\tif (string[i]\
    \ >= 'a' && string[i] <= 'z') {\n\t\t\tstring[i] = string[i] - 32;\n\t\t}\n\t\t\
    else if (string[i] >= 'A' && string[i] <= 'Z') {\n\t\t\tstring[i] = string[i]\
    \ + 32;\n\t\t}\n\t}\n\treturn string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i] = string[i] - 32;\n   \
    \     }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n      \
    \      string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\n\
    int main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n\tfor (int i = 0; i < string.length(); i++) {\n\t\tif (string[i]\
    \ >= 'a' && string[i] <= 'z') {\n\t\t\tstring[i] = string[i] - 32;\n\t\t}\n\t\t\
    else if (string[i] >= 'A' && string[i] <= 'Z') {\n\t\t\tstring[i] = string[i]\
    \ + 32;\n\t\t}\n\t}\n\treturn string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    std::string result;\n    for (char c : string) {\n        if\
    \ (std::isupper(c)) {\n            result += std::tolower(c);\n        } else\
    \ {\n            result += std::toupper(c);\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i] = string[i] - 32;\n   \
    \     }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n      \
    \      string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\n\
    int main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    std::string result;\n    for (char c : string) {\n        if\
    \ (std::isupper(c)) {\n            result += std::tolower(c);\n        } else\
    \ {\n            result += std::toupper(c);\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n  for(int i=0;i<string.length();i++)\n  {\n    if(string[i]>='a'\
    \ && string[i]<='z')\n    {\n      string[i]=string[i]-32;\n    }\n    else if(string[i]>='A'\
    \ && string[i]<='Z')\n    {\n      string[i]=string[i]+32;\n    }\n  }\n  return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=toupper(string[i]);\n \
    \       }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n    \
    \        string[i]=tolower(string[i]);\n        }\n    }\n    return string;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    std::string result = \"\";\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            result\
    \ += string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z')\
    \ {\n            result += string[i] + 32;\n        } else {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    std::string result = \"\";\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            result\
    \ += string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z')\
    \ {\n            result += string[i] + 32;\n        } else {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    std::string result;\n    for (char c : string) {\n        if\
    \ (std::isupper(c)) {\n            result += std::tolower(c);\n        } else\
    \ {\n            result += std::toupper(c);\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n\tfor (int i = 0; i < string.length(); i++) {\n\t\tif (string[i]\
    \ >= 'a' && string[i] <= 'z') {\n\t\t\tstring[i] = string[i] - 32;\n\t\t}\n\t\t\
    else if (string[i] >= 'A' && string[i] <= 'Z') {\n\t\t\tstring[i] = string[i]\
    \ + 32;\n\t\t}\n\t}\n\treturn string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n\tfor (int i = 0; i < string.length(); i++) {\n\t\tif (string[i]\
    \ >= 'a' && string[i] <= 'z') {\n\t\t\tstring[i] = string[i] - 32;\n\t\t}\n\t\t\
    else if (string[i] >= 'A' && string[i] <= 'Z') {\n\t\t\tstring[i] = string[i]\
    \ + 32;\n\t\t}\n\t}\n\treturn string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n  for(int i=0;i<string.length();i++)\n  {\n    if(string[i]>='a'\
    \ && string[i]<='z')\n    {\n      string[i]=string[i]-32;\n    }\n    else if(string[i]>='A'\
    \ && string[i]<='Z')\n    {\n      string[i]=string[i]+32;\n    }\n  }\n  return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i] = string[i] - 32;\n   \
    \     }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n      \
    \      string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\n\
    int main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    std::string result = \"\";\n    for (char c : string) {\n   \
    \     if (isupper(c)) {\n            result += tolower(c);\n        } else {\n\
    \            result += toupper(c);\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    std::string result;\n    for (char c : string) {\n        if\
    \ (isupper(c)) {\n            result += tolower(c);\n        } else {\n      \
    \      result += toupper(c);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i] = string[i] - 32;\n   \
    \     }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n      \
    \      string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\n\
    int main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i] = string[i] - 32;\n   \
    \     }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n      \
    \      string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\n\
    int main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i] = string[i] - 32;\n   \
    \     }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n      \
    \      string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\n\
    int main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    std::string result;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (isupper(string[i])) {\n            result += tolower(string[i]);\n\
    \        } else {\n            result += toupper(string[i]);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n\tfor (int i = 0; i < string.length(); i++) {\n\t\tif (string[i]\
    \ >= 'a' && string[i] <= 'z') {\n\t\t\tstring[i] = string[i] - 'a' + 'A';\n\t\t\
    }\n\t\telse if (string[i] >= 'A' && string[i] <= 'Z') {\n\t\t\tstring[i] = string[i]\
    \ - 'A' + 'a';\n\t\t}\n\t}\n\treturn string;\n}\nint main() {\n    auto candidate\
    \ = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097773
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    // Write your code here\n    for(int i=0;i<string.length();i++)\n\
    \    {\n        if(string[i]>='a' && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n\
    \        }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n   \
    \         string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint\
    \ main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\
    \"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097773
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i] = string[i] - 32;\n   \
    \     }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n      \
    \      string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\n\
    int main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    std::string result = \"\";\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            result\
    \ += string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z')\
    \ {\n            result += string[i] + 32;\n        } else {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-'a'+'A';\n  \
    \      }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n     \
    \       string[i]=string[i]-'A'+'a';\n        }\n    }\n    return string;\n}\n\
    int main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i] = string[i] - 32;\n   \
    \     }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n      \
    \      string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\n\
    int main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    std::string result;\n    for (char c : string) {\n        if\
    \ (isupper(c)) {\n            result += tolower(c);\n        } else {\n      \
    \      result += toupper(c);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    std::string result = \"\";\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            result\
    \ += string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z')\
    \ {\n            result += string[i] + 32;\n        } else {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n  for(int i=0;i<string.length();i++)\n  {\n    if(string[i]>='a'\
    \ && string[i]<='z')\n    {\n      string[i]=string[i]-32;\n    }\n    else if(string[i]>='A'\
    \ && string[i]<='Z')\n    {\n      string[i]=string[i]+32;\n    }\n  }\n  return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'&&string[i]<='z')\n\
    \        {\n            string[i]=string[i]-32;\n        }\n        else if(string[i]>='A'&&string[i]<='Z')\n\
    \        {\n            string[i]=string[i]+32;\n        }\n    }\n    return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097771
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    std::string result;\n    for (char c : string) {\n        if\
    \ (std::isupper(c)) {\n            result += std::tolower(c);\n        } else\
    \ {\n            result += std::toupper(c);\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i] = string[i] - 32;\n   \
    \     }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n      \
    \      string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\n\
    int main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n  for(int i=0;i<string.length();i++)\n  {\n    if(string[i]>='a'\
    \ && string[i]<='z')\n    {\n      string[i]=string[i]-32;\n    }\n    else if(string[i]>='A'\
    \ && string[i]<='Z')\n    {\n      string[i]=string[i]+32;\n    }\n  }\n  return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    std::string result;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            result\
    \ += string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z')\
    \ {\n            result += string[i] + 32;\n        } else {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i] = string[i] - 32;\n   \
    \     }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n      \
    \      string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\n\
    int main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i] = string[i] - 32;\n   \
    \     }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n      \
    \      string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\n\
    int main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    std::string result = \"\";\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            result\
    \ += string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z')\
    \ {\n            result += string[i] + 32;\n        } else {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    std::string result = \"\";\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            result\
    \ += string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z')\
    \ {\n            result += string[i] + 32;\n        } else {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n  for(int i=0;i<string.length();i++)\n  {\n    if(string[i]>='a'\
    \ && string[i]<='z')\n    {\n      string[i]=string[i]-32;\n    }\n    else if(string[i]>='A'\
    \ && string[i]<='Z')\n    {\n      string[i]=string[i]+32;\n    }\n  }\n  return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i] = string[i] - 32;\n   \
    \     }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n      \
    \      string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\n\
    int main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    std::string result = \"\";\n    for (char c : string) {\n   \
    \     if (isupper(c)) {\n            result += tolower(c);\n        } else {\n\
    \            result += toupper(c);\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    int i;\n    for(i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097773
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n\tfor (int i = 0; i < string.length(); i++) {\n\t\tif (string[i]\
    \ >= 'a' && string[i] <= 'z') {\n\t\t\tstring[i] = string[i] - 32;\n\t\t}\n\t\t\
    else if (string[i] >= 'A' && string[i] <= 'Z') {\n\t\t\tstring[i] = string[i]\
    \ + 32;\n\t\t}\n\t}\n\treturn string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i] = string[i] - 32;\n   \
    \     }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n      \
    \      string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\n\
    int main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n  for(int i=0;i<string.length();i++)\n  {\n    if(string[i]>='a'\
    \ && string[i]<='z')\n    {\n      string[i]=string[i]-32;\n    }\n    else if(string[i]>='A'\
    \ && string[i]<='Z')\n    {\n      string[i]=string[i]+32;\n    }\n  }\n  return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
    \ string) {\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]>='a'\
    \ && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n       \
    \ }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n          \
    \  string[i]=string[i]+32;\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097772

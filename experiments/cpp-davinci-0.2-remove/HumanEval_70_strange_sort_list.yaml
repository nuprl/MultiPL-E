name: HumanEval_70_strange_sort_list
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given list of integers, return\
  \ list in strange order.\n// Strange sorting, is when you start with the minimum\
  \ value,\n// then maximum of the remaining integers, then minimum and so on.\n//\
  \ Examples:\nstd::vector<long> strange_sort_list(std::vector<long> lst) {\n"
tests: "}\nint main() {\n    auto candidate = strange_sort_list;\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)4, (long)2,\
  \ (long)3})));\n    assert(candidate((std::vector<long>({(long)5, (long)6, (long)7,\
  \ (long)8, (long)9}))) == (std::vector<long>({(long)5, (long)9, (long)6, (long)8,\
  \ (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
  \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)5, (long)2, (long)4,\
  \ (long)3})));\n    assert(candidate((std::vector<long>({(long)5, (long)6, (long)7,\
  \ (long)8, (long)9, (long)1}))) == (std::vector<long>({(long)1, (long)9, (long)5,\
  \ (long)8, (long)6, (long)7})));\n    assert(candidate((std::vector<long>({(long)5,\
  \ (long)5, (long)5, (long)5}))) == (std::vector<long>({(long)5, (long)5, (long)5,\
  \ (long)5})));\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
  \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5,\
  \ (long)6, (long)7, (long)8}))) == (std::vector<long>({(long)1, (long)8, (long)2,\
  \ (long)7, (long)3, (long)6, (long)4, (long)5})));\n    assert(candidate((std::vector<long>({(long)0,\
  \ (long)2, (long)2, (long)2, (long)5, (long)5, (long)-5, (long)-5}))) == (std::vector<long>({(long)-5,\
  \ (long)5, (long)-5, (long)5, (long)0, (long)2, (long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)111111})))\
  \ == (std::vector<long>({(long)111111})));\n}\n"
completions: ["    std::vector<long> result;\n    std::sort(lst.begin(), lst.end());\n\
    \    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n\
    \        if (i != j) {\n            result.push_back(lst[j]);\n        }\n   \
    \     i++;\n        j--;\n    }\n    return result;", "  std::vector<long> result;\n\
    \  std::sort(lst.begin(), lst.end());\n  int i = 0;\n  int j = lst.size() - 1;\n\
    \  while (i <= j) {\n    result.push_back(lst[i]);\n    if (i != j) {\n      result.push_back(lst[j]);\n\
    \    }\n    i++;\n    j--;\n  }\n  return result;", "    std::vector<long> result;\n\
    \    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push_back(lst[j]);\n            j--;\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        if (i != j) {\n            result.push_back(lst[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        res.push_back(lst[i]);\n        if (i !=\
    \ j) {\n            res.push_back(lst[j]);\n        }\n        i++;\n        j--;\n\
    \    }\n    return res;", "    std::vector<long> res;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        res.push_back(lst[i]);\n        if (i != j) {\n            res.push_back(lst[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return res;", "  std::sort(lst.begin(),\
    \ lst.end());\n  std::vector<long> result;\n  int i = 0;\n  int j = lst.size()\
    \ - 1;\n  while (i <= j) {\n    result.push_back(lst[i]);\n    if (i != j) {\n\
    \      result.push_back(lst[j]);\n    }\n    i++;\n    j--;\n  }\n  return result;",
  "    std::vector<long> res;\n    std::sort(lst.begin(), lst.end());\n    int i =\
    \ 0;\n    int j = lst.size() - 1;\n    while (i <= j) {\n        res.push_back(lst[i]);\n\
    \        if (i != j) {\n            res.push_back(lst[j]);\n        }\n      \
    \  i++;\n        j--;\n    }\n    return res;", "    std::vector<long> res;\n\
    \    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i < j) {\n        res.push_back(lst[i]);\n        res.push_back(lst[j]);\n\
    \        i++;\n        j--;\n    }\n    if (i == j) {\n        res.push_back(lst[i]);\n\
    \    }\n    return res;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        if (i != j) {\n            result.push_back(lst[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j =\
    \ lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n \
    \       i++;\n        if (i <= j) {\n            result.push_back(lst[j]);\n \
    \           j--;\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j =\
    \ lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n \
    \       if (i != j) {\n            result.push_back(lst[j]);\n        }\n    \
    \    i++;\n        j--;\n    }\n    return result;", "    std::vector<long> result;\n\
    \    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push_back(lst[j]);\n            j--;\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        if (i != j) {\n            result.push_back(lst[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        res.push_back(lst[i]);\n        i++;\n \
    \       if (i <= j) {\n            res.push_back(lst[j]);\n            j--;\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        if (i != j) {\n            result.push_back(lst[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j =\
    \ lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n \
    \       i++;\n        if (i <= j) {\n            result.push_back(lst[j]);\n \
    \           j--;\n        }\n    }\n    return result;", "  std::vector<long>\
    \ sorted;\n  std::sort(lst.begin(), lst.end());\n  int i = 0;\n  while(lst.size()\
    \ > 0) {\n    if(i % 2 == 0) {\n      sorted.push_back(lst.front());\n      lst.erase(lst.begin());\n\
    \    } else {\n      sorted.push_back(lst.back());\n      lst.pop_back();\n  \
    \  }\n    i++;\n  }\n  return sorted;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        if (i != j) {\n            result.push_back(lst[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;", "  // your\
    \ code here\n  std::vector<long> result;\n  std::sort(lst.begin(), lst.end());\n\
    \  int i = 0;\n  int j = lst.size() - 1;\n  while (i <= j) {\n    result.push_back(lst[i]);\n\
    \    i++;\n    if (i <= j) {\n      result.push_back(lst[j]);\n      j--;\n  \
    \  }\n  }\n  return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        i++;\n        if (i <= j) {\n\
    \            result.push_back(lst[j]);\n            j--;\n        }\n    }\n \
    \   return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        if (i != j) {\n            result.push_back(lst[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j =\
    \ lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n \
    \       i++;\n        if (i <= j) {\n            result.push_back(lst[j]);\n \
    \           j--;\n        }\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    while (lst.size()\
    \ > 0) {\n        if (i % 2 == 0) {\n            res.push_back(lst[0]);\n    \
    \        lst.erase(lst.begin());\n        } else {\n            res.push_back(lst[lst.size()\
    \ - 1]);\n            lst.erase(lst.end() - 1);\n        }\n        i++;\n   \
    \ }\n    return res;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        if (i != j) {\n            result.push_back(lst[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j =\
    \ lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n \
    \       i++;\n        if (i <= j) {\n            result.push_back(lst[j]);\n \
    \           j--;\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j =\
    \ lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n \
    \       if (i != j) {\n            result.push_back(lst[j]);\n        }\n    \
    \    i++;\n        j--;\n    }\n    return result;", "  std::vector<long> result;\n\
    \  std::sort(lst.begin(), lst.end());\n  int i = 0;\n  int j = lst.size() - 1;\n\
    \  while (i <= j) {\n    result.push_back(lst[i]);\n    i++;\n    if (i <= j)\
    \ {\n      result.push_back(lst[j]);\n      j--;\n    }\n  }\n  return result;",
  "    std::vector<long> res;\n    std::sort(lst.begin(), lst.end());\n    int i =\
    \ 0;\n    int j = lst.size() - 1;\n    while (i <= j) {\n        res.push_back(lst[i]);\n\
    \        if (i != j) {\n            res.push_back(lst[j]);\n        }\n      \
    \  i++;\n        j--;\n    }\n    return res;", "    std::vector<long> result;\n\
    \    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push_back(lst[j]);\n            j--;\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        if (i != j) {\n            result.push_back(lst[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j =\
    \ lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n \
    \       if (i != j) {\n            result.push_back(lst[j]);\n        }\n    \
    \    i++;\n        j--;\n    }\n    return result;", "    std::vector<long> result;\n\
    \    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push_back(lst[j]);\n            j--;\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        i++;\n        if (i <= j) {\n\
    \            result.push_back(lst[j]);\n            j--;\n        }\n    }\n \
    \   return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        i++;\n        if (i <= j) {\n\
    \            result.push_back(lst[j]);\n            j--;\n        }\n    }\n \
    \   return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        if (i != j) {\n            result.push_back(lst[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j =\
    \ lst.size() - 1;\n    while (i < j) {\n        result.push_back(lst[i]);\n  \
    \      result.push_back(lst[j]);\n        i++;\n        j--;\n    }\n    if (i\
    \ == j) {\n        result.push_back(lst[i]);\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::sort(lst.begin(), lst.end());\n    int\
    \ i = 0;\n    int j = lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n\
    \        i++;\n        if (i <= j) {\n            result.push_back(lst[j]);\n\
    \            j--;\n        }\n    }\n    return result;", "  std::vector<long>\
    \ result;\n  std::sort(lst.begin(), lst.end());\n  int i = 0;\n  int j = lst.size()\
    \ - 1;\n  while (i <= j) {\n    result.push_back(lst[i]);\n    if (i != j) {\n\
    \      result.push_back(lst[j]);\n    }\n    i++;\n    j--;\n  }\n  return result;",
  "    std::vector<long> result;\n    std::sort(lst.begin(), lst.end());\n    int\
    \ i = 0;\n    int j = lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n\
    \        i++;\n        if (i <= j) {\n            result.push_back(lst[j]);\n\
    \            j--;\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j =\
    \ lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n \
    \       if (i != j) {\n            result.push_back(lst[j]);\n        }\n    \
    \    i++;\n        j--;\n    }\n    return result;", "    std::vector<long> result;\n\
    \    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n        if (i\
    \ != j) {\n            result.push_back(lst[j]);\n        }\n        i++;\n  \
    \      j--;\n    }\n    return result;", "  std::vector<long> result;\n  std::sort(lst.begin(),\
    \ lst.end());\n  int i = 0;\n  int j = lst.size() - 1;\n  while (i <= j) {\n \
    \   result.push_back(lst[i]);\n    i++;\n    if (i <= j) {\n      result.push_back(lst[j]);\n\
    \      j--;\n    }\n  }\n  return result;", "    std::vector<long> res;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        res.push_back(lst[i]);\n        i++;\n        if (i <= j) {\n   \
    \         res.push_back(lst[j]);\n            j--;\n        }\n    }\n    return\
    \ res;", "    std::vector<long> result;\n    std::sort(lst.begin(), lst.end());\n\
    \    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n\
    \        i++;\n        if (i <= j) {\n            result.push_back(lst[j]);\n\
    \            j--;\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j =\
    \ lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n \
    \       i++;\n        if (i <= j) {\n            result.push_back(lst[j]);\n \
    \           j--;\n        }\n    }\n    return result;", "    std::vector<long>\
    \ sorted_list;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int\
    \ j = lst.size() - 1;\n    while (i <= j) {\n        sorted_list.push_back(lst[i]);\n\
    \        if (i != j) {\n            sorted_list.push_back(lst[j]);\n        }\n\
    \        i++;\n        j--;\n    }\n    return sorted_list;", "  std::sort(lst.begin(),\
    \ lst.end());\n  std::vector<long> result;\n  int i = 0;\n  int j = lst.size()\
    \ - 1;\n  while (i <= j) {\n    result.push_back(lst[i]);\n    if (i != j) {\n\
    \      result.push_back(lst[j]);\n    }\n    i++;\n    j--;\n  }\n  return result;",
  "    std::vector<long> result;\n    std::sort(lst.begin(), lst.end());\n    int\
    \ i = 0;\n    int j = lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n\
    \        i++;\n        if (i <= j) {\n            result.push_back(lst[j]);\n\
    \            j--;\n        }\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        res.push_back(lst[i]);\n        i++;\n \
    \       if (i <= j) {\n            res.push_back(lst[j]);\n            j--;\n\
    \        }\n    }\n    return res;", "  std::vector<long> result;\n  std::sort(lst.begin(),\
    \ lst.end());\n  int i = 0;\n  int j = lst.size() - 1;\n  while (i <= j) {\n \
    \   result.push_back(lst[i]);\n    i++;\n    if (i <= j) {\n      result.push_back(lst[j]);\n\
    \      j--;\n    }\n  }\n  return result;", "  std::vector<long> result;\n  std::sort(lst.begin(),\
    \ lst.end());\n  int i = 0;\n  int j = lst.size() - 1;\n  while (i <= j) {\n \
    \   result.push_back(lst[i]);\n    if (i != j) {\n      result.push_back(lst[j]);\n\
    \    }\n    i++;\n    j--;\n  }\n  return result;", "    std::vector<long> result;\n\
    \    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n        if (i\
    \ != j) {\n            result.push_back(lst[j]);\n        }\n        i++;\n  \
    \      j--;\n    }\n    return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        if (i != j) {\n            result.push_back(lst[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j =\
    \ lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n \
    \       i++;\n        if (i <= j) {\n            result.push_back(lst[j]);\n \
    \           j--;\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    while (i\
    \ < lst.size()) {\n        if (i % 2 == 0) {\n            result.push_back(lst[i]);\n\
    \        } else {\n            result.push_back(lst[lst.size() - 1 - i]);\n  \
    \      }\n        i++;\n    }\n    return result;", "  std::vector<long> result;\n\
    \  std::sort(lst.begin(), lst.end());\n  int i = 0;\n  int j = lst.size() - 1;\n\
    \  while (i <= j) {\n    result.push_back(lst[i]);\n    if (i != j) {\n      result.push_back(lst[j]);\n\
    \    }\n    i++;\n    j--;\n  }\n  return result;", "    std::vector<long> result;\n\
    \    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push_back(lst[j]);\n            j--;\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        if (i != j) {\n            result.push_back(lst[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        res.push_back(lst[i]);\n        i++;\n \
    \       if (i <= j) {\n            res.push_back(lst[j]);\n            j--;\n\
    \        }\n    }\n    return res;", "  std::sort(lst.begin(), lst.end());\n \
    \ std::vector<long> result;\n  int i = 0;\n  int j = lst.size() - 1;\n  while\
    \ (i <= j) {\n    result.push_back(lst[i]);\n    i++;\n    if (i <= j) {\n   \
    \   result.push_back(lst[j]);\n      j--;\n    }\n  }\n  return result;", "  \
    \  std::vector<long> result;\n    std::sort(lst.begin(), lst.end());\n    int\
    \ i = 0;\n    int j = lst.size() - 1;\n    while (i < j) {\n        result.push_back(lst[i]);\n\
    \        result.push_back(lst[j]);\n        i++;\n        j--;\n    }\n    if\
    \ (i == j) {\n        result.push_back(lst[i]);\n    }\n    return result;", " \
    \   std::vector<long> result;\n    std::sort(lst.begin(), lst.end());\n    int\
    \ i = 0;\n    int j = lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n\
    \        i++;\n        if (i <= j) {\n            result.push_back(lst[j]);\n\
    \            j--;\n        }\n    }\n    return result;", "    std::sort(lst.begin(),\
    \ lst.end());\n    std::vector<long> res;\n    int i = 0, j = lst.size() - 1;\n\
    \    while (i <= j) {\n        res.push_back(lst[i++]);\n        if (i <= j) {\n\
    \            res.push_back(lst[j--]);\n        }\n    }\n    return res;", " \
    \   std::vector<long> result;\n    std::sort(lst.begin(), lst.end());\n    int\
    \ i = 0;\n    int j = lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n\
    \        i++;\n        if (i <= j) {\n            result.push_back(lst[j]);\n\
    \            j--;\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j =\
    \ lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n \
    \       i++;\n        if (i <= j) {\n            result.push_back(lst[j]);\n \
    \           j--;\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j =\
    \ lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n \
    \       i++;\n        if (i <= j) {\n            result.push_back(lst[j]);\n \
    \           j--;\n        }\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        res.push_back(lst[i]);\n        i++;\n \
    \       if (i <= j) {\n            res.push_back(lst[j]);\n            j--;\n\
    \        }\n    }\n    return res;", "    std::vector<long> res;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        res.push_back(lst[i]);\n        if (i != j) {\n            res.push_back(lst[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return res;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    while (lst.size()\
    \ > 0) {\n        result.push_back(lst[i]);\n        lst.erase(lst.begin() + i);\n\
    \        if (lst.size() == 0) {\n            break;\n        }\n        if (i\
    \ == 0) {\n            i = lst.size() - 1;\n        } else {\n            i--;\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        i++;\n        if (i <= j) {\n\
    \            result.push_back(lst[j]);\n            j--;\n        }\n    }\n \
    \   return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        i++;\n        if (i <= j) {\n\
    \            result.push_back(lst[j]);\n            j--;\n        }\n    }\n \
    \   return result;", "  std::vector<long> result;\n  std::sort(lst.begin(), lst.end());\n\
    \  int i = 0;\n  int j = lst.size() - 1;\n  while (i <= j) {\n    result.push_back(lst[i]);\n\
    \    if (i != j) {\n      result.push_back(lst[j]);\n    }\n    i++;\n    j--;\n\
    \  }\n  return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        i++;\n        if (i <= j) {\n\
    \            result.push_back(lst[j]);\n            j--;\n        }\n    }\n \
    \   return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        i++;\n        if (i <= j) {\n\
    \            result.push_back(lst[j]);\n            j--;\n        }\n    }\n \
    \   return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        i++;\n        if (i <= j) {\n\
    \            result.push_back(lst[j]);\n            j--;\n        }\n    }\n \
    \   return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        i++;\n        if (i <= j) {\n\
    \            result.push_back(lst[j]);\n            j--;\n        }\n    }\n \
    \   return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        i++;\n        if (i <= j) {\n\
    \            result.push_back(lst[j]);\n            j--;\n        }\n    }\n \
    \   return result;", "  std::vector<long> result;\n  std::sort(lst.begin(), lst.end());\n\
    \  int i = 0;\n  int j = lst.size() - 1;\n  while (i <= j) {\n    result.push_back(lst[i]);\n\
    \    i++;\n    if (i <= j) {\n      result.push_back(lst[j]);\n      j--;\n  \
    \  }\n  }\n  return result;", "    std::vector<long> res;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0, j = lst.size() - 1;\n    while (i <= j) {\n    \
    \    res.push_back(lst[i]);\n        if (i != j) {\n            res.push_back(lst[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        res.push_back(lst[i]);\n        if (i !=\
    \ j) {\n            res.push_back(lst[j]);\n        }\n        i++;\n        j--;\n\
    \    }\n    return res;", "    std::vector<long> sorted;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        sorted.push_back(lst[i]);\n        if (i != j) {\n            sorted.push_back(lst[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return sorted;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j =\
    \ lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n \
    \       i++;\n        if (i <= j) {\n            result.push_back(lst[j]);\n \
    \           j--;\n        }\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        res.push_back(lst[i]);\n        i++;\n \
    \       if (i <= j) {\n            res.push_back(lst[j]);\n            j--;\n\
    \        }\n    }\n    return res;", "    std::vector<long> res;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        res.push_back(lst[i]);\n        if (i != j)\n            res.push_back(lst[j]);\n\
    \        i++;\n        j--;\n    }\n    return res;", "    std::vector<long> res;\n\
    \    std::sort(lst.begin(), lst.end());\n    int i = 0, j = lst.size() - 1;\n\
    \    while (i <= j) {\n        res.push_back(lst[i]);\n        i++;\n        if\
    \ (i <= j) {\n            res.push_back(lst[j]);\n            j--;\n        }\n\
    \    }\n    return res;", "  std::vector<long> result;\n  std::sort(lst.begin(),\
    \ lst.end());\n  int i = 0;\n  int j = lst.size() - 1;\n  while (i <= j) {\n \
    \   result.push_back(lst[i]);\n    if (i != j) {\n      result.push_back(lst[j]);\n\
    \    }\n    i++;\n    j--;\n  }\n  return result;", "  std::vector<long> result;\n\
    \  std::sort(lst.begin(), lst.end());\n  while(!lst.empty()) {\n    result.push_back(lst.front());\n\
    \    lst.erase(lst.begin());\n    if(!lst.empty()) {\n      result.push_back(lst.back());\n\
    \      lst.pop_back();\n    }\n  }\n  return result;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j =\
    \ lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n \
    \       i++;\n        if (i <= j) {\n            result.push_back(lst[j]);\n \
    \           j--;\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j =\
    \ lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n \
    \       i++;\n        if (i <= j) {\n            result.push_back(lst[j]);\n \
    \           j--;\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j =\
    \ lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n \
    \       i++;\n        if (i <= j) {\n            result.push_back(lst[j]);\n \
    \           j--;\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j =\
    \ lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n \
    \       i++;\n        if (i <= j) {\n            result.push_back(lst[j]);\n \
    \           j--;\n        }\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    std::sort(lst.begin(), lst.end());\n    int i = 0, j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        res.push_back(lst[i]);\n        i++;\n \
    \       if (i <= j) {\n            res.push_back(lst[j]);\n            j--;\n\
    \        }\n    }\n    return res;", "    std::vector<long> sorted_list;\n   \
    \ std::sort(lst.begin(), lst.end());\n    int i = 0;\n    while(lst.size() > 0)\
    \ {\n        if(i % 2 == 0) {\n            sorted_list.push_back(lst.front());\n\
    \            lst.erase(lst.begin());\n        } else {\n            sorted_list.push_back(lst.back());\n\
    \            lst.pop_back();\n        }\n        i++;\n    }\n    return sorted_list;",
  "    std::vector<long> result;\n    std::sort(lst.begin(), lst.end());\n    int\
    \ i = 0;\n    int j = lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n\
    \        i++;\n        if (i <= j) {\n            result.push_back(lst[j]);\n\
    \            j--;\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    while(lst.size()\
    \ > 0) {\n        if(i % 2 == 0) {\n            result.push_back(lst[0]);\n  \
    \          lst.erase(lst.begin());\n        } else {\n            result.push_back(lst[lst.size()\
    \ - 1]);\n            lst.erase(lst.end() - 1);\n        }\n        i++;\n   \
    \ }\n    return result;", "    std::sort(lst.begin(), lst.end());\n    std::vector<long>\
    \ result;\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j) {\n\
    \        result.push_back(lst[i]);\n        if (i != j) {\n            result.push_back(lst[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j =\
    \ lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n \
    \       if (i != j) {\n            result.push_back(lst[j]);\n        }\n    \
    \    i++;\n        j--;\n    }\n    return result;", "    std::vector<long> result;\n\
    \    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push_back(lst[j]);\n            j--;\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        if (i != j) {\n            result.push_back(lst[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j =\
    \ lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n \
    \       i++;\n        if (i <= j) {\n            result.push_back(lst[j]);\n \
    \           j--;\n        }\n    }\n    return result;", "    std::sort(lst.begin(),\
    \ lst.end());\n    std::vector<long> result;\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n        if (i\
    \ != j) {\n            result.push_back(lst[j]);\n        }\n        i++;\n  \
    \      j--;\n    }\n    return result;", "    std::sort(lst.begin(), lst.end());\n\
    \    std::vector<long> res;\n    int i = 0, j = lst.size() - 1;\n    while (i\
    \ <= j) {\n        res.push_back(lst[i++]);\n        if (i <= j) {\n         \
    \   res.push_back(lst[j--]);\n        }\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        res.push_back(lst[i]);\n        i++;\n \
    \       if (i <= j) {\n            res.push_back(lst[j]);\n            j--;\n\
    \        }\n    }\n    return res;", "    std::vector<long> res;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        res.push_back(lst[i]);\n        i++;\n        if (i <= j) {\n   \
    \         res.push_back(lst[j]);\n            j--;\n        }\n    }\n    return\
    \ res;", "    std::vector<long> result;\n    std::sort(lst.begin(), lst.end());\n\
    \    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n\
    \        if (i != j) {\n            result.push_back(lst[j]);\n        }\n   \
    \     i++;\n        j--;\n    }\n    return result;", "  std::vector<long> res;\n\
    \  std::sort(lst.begin(), lst.end());\n  int i = 0;\n  int j = lst.size() - 1;\n\
    \  while (i <= j) {\n    res.push_back(lst[i]);\n    if (i != j) {\n      res.push_back(lst[j]);\n\
    \    }\n    i++;\n    j--;\n  }\n  return res;", "    std::vector<long> result;\n\
    \    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n        if (i\
    \ != j) {\n            result.push_back(lst[j]);\n        }\n        i++;\n  \
    \      j--;\n    }\n    return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        i++;\n        if (i <= j) {\n\
    \            result.push_back(lst[j]);\n            j--;\n        }\n    }\n \
    \   return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        if (i != j) {\n            result.push_back(lst[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        res.push_back(lst[i]);\n        if (i !=\
    \ j) {\n            res.push_back(lst[j]);\n        }\n        i++;\n        j--;\n\
    \    }\n    return res;", "    // TODO: Implement strange_sort_list\n    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j =\
    \ lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n \
    \       i++;\n        if (i <= j) {\n            result.push_back(lst[j]);\n \
    \           j--;\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j =\
    \ lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n \
    \       if (i != j) {\n            result.push_back(lst[j]);\n        }\n    \
    \    i++;\n        j--;\n    }\n    return result;", "  std::vector<long> res;\n\
    \  std::sort(lst.begin(), lst.end());\n  int i = 0;\n  int j = lst.size() - 1;\n\
    \  while (i <= j) {\n    res.push_back(lst[i]);\n    if (i != j) {\n      res.push_back(lst[j]);\n\
    \    }\n    i++;\n    j--;\n  }\n  return res;", "    std::vector<long> result;\n\
    \    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push_back(lst[j]);\n            j--;\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        i++;\n        if (i <= j) {\n\
    \            result.push_back(lst[j]);\n            j--;\n        }\n    }\n \
    \   return result;", "  std::vector<long> result;\n  std::sort(lst.begin(), lst.end());\n\
    \  int i = 0;\n  int j = lst.size() - 1;\n  while (i <= j) {\n    result.push_back(lst[i]);\n\
    \    if (i != j) {\n      result.push_back(lst[j]);\n    }\n    i++;\n    j--;\n\
    \  }\n  return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    while(lst.size() > 0) {\n        if(i % 2 ==\
    \ 0) {\n            result.push_back(lst[0]);\n            lst.erase(lst.begin());\n\
    \        } else {\n            result.push_back(lst[lst.size() - 1]);\n      \
    \      lst.erase(lst.end() - 1);\n        }\n        i++;\n    }\n    return result;",
  "    std::vector<long> res;\n    std::sort(lst.begin(), lst.end());\n    int i =\
    \ 0;\n    int j = lst.size() - 1;\n    while (i <= j) {\n        res.push_back(lst[i]);\n\
    \        if (i != j) {\n            res.push_back(lst[j]);\n        }\n      \
    \  i++;\n        j--;\n    }\n    return res;", "    std::vector<long> result;\n\
    \    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push_back(lst[j]);\n            j--;\n\
    \        }\n    }\n    return result;", "    std::vector<long> ret;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        ret.push_back(lst[i]);\n        if (i != j) {\n            ret.push_back(lst[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return ret;", "  std::vector<long>\
    \ result;\n  std::sort(lst.begin(), lst.end());\n  int i = 0;\n  int j = lst.size()\
    \ - 1;\n  while (i <= j) {\n    result.push_back(lst[i]);\n    if (i != j) {\n\
    \      result.push_back(lst[j]);\n    }\n    i++;\n    j--;\n  }\n  return result;",
  "    std::vector<long> ret;\n    std::sort(lst.begin(), lst.end());\n    int i =\
    \ 0;\n    int j = lst.size() - 1;\n    while (i <= j) {\n        ret.push_back(lst[i]);\n\
    \        i++;\n        if (i <= j) {\n            ret.push_back(lst[j]);\n   \
    \         j--;\n        }\n    }\n    return ret;", "    std::vector<long> result;\n\
    \    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n        if (i\
    \ != j) {\n            result.push_back(lst[j]);\n        }\n        i++;\n  \
    \      j--;\n    }\n    return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        i++;\n        if (i <= j) {\n\
    \            result.push_back(lst[j]);\n            j--;\n        }\n    }\n \
    \   return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i < j)\
    \ {\n        result.push_back(lst[i]);\n        result.push_back(lst[j]);\n  \
    \      i++;\n        j--;\n    }\n    if (i == j) {\n        result.push_back(lst[i]);\n\
    \    }\n    return result;", "    std::vector<long> res;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    while (lst.size() > 0) {\n        if (i % 2\
    \ == 0) {\n            res.push_back(lst[0]);\n            lst.erase(lst.begin());\n\
    \        } else {\n            res.push_back(lst[lst.size() - 1]);\n         \
    \   lst.erase(lst.end() - 1);\n        }\n        i++;\n    }\n    return res;",
  "    std::vector<long> result;\n    std::sort(lst.begin(), lst.end());\n    int\
    \ i = 0;\n    int j = lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n\
    \        if (i != j) {\n            result.push_back(lst[j]);\n        }\n   \
    \     i++;\n        j--;\n    }\n    return result;", "    std::vector<long> result;\n\
    \    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n        if (i\
    \ != j) {\n            result.push_back(lst[j]);\n        }\n        i++;\n  \
    \      j--;\n    }\n    return result;", "  std::vector<long> res;\n  std::sort(lst.begin(),\
    \ lst.end());\n  int i = 0, j = lst.size() - 1;\n  while (i <= j) {\n    res.push_back(lst[i]);\n\
    \    if (i != j) {\n      res.push_back(lst[j]);\n    }\n    i++;\n    j--;\n\
    \  }\n  return res;", "    std::vector<long> res;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        res.push_back(lst[i]);\n        if (i != j) {\n            res.push_back(lst[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return res;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j =\
    \ lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n \
    \       if (i != j) {\n            result.push_back(lst[j]);\n        }\n    \
    \    i++;\n        j--;\n    }\n    return result;", "    std::vector<long> sorted_list;\n\
    \    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        sorted_list.push_back(lst[i]);\n       \
    \ if (i != j) {\n            sorted_list.push_back(lst[j]);\n        }\n     \
    \   i++;\n        j--;\n    }\n    return sorted_list;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j =\
    \ lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n \
    \       if (i != j) {\n            result.push_back(lst[j]);\n        }\n    \
    \    i++;\n        j--;\n    }\n    return result;", "    std::vector<long> result;\n\
    \    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n        if (i\
    \ != j) {\n            result.push_back(lst[j]);\n        }\n        i++;\n  \
    \      j--;\n    }\n    return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        i++;\n        if (i <= j) {\n\
    \            result.push_back(lst[j]);\n            j--;\n        }\n    }\n \
    \   return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        i++;\n        if (i <= j) {\n\
    \            result.push_back(lst[j]);\n            j--;\n        }\n    }\n \
    \   return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        i++;\n        if (i <= j) {\n\
    \            result.push_back(lst[j]);\n            j--;\n        }\n    }\n \
    \   return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    for (int i = 0; i < lst.size(); i++) {\n        if (i % 2 ==\
    \ 0) {\n            result.push_back(lst[i / 2]);\n        } else {\n        \
    \    result.push_back(lst[lst.size() - (i / 2) - 1]);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    std::sort(lst.begin(), lst.end());\n\
    \    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n\
    \        if (i != j) {\n            result.push_back(lst[j]);\n        }\n   \
    \     i++;\n        j--;\n    }\n    return result;", "    std::vector<long> result;\n\
    \    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n        if (i\
    \ != j) {\n            result.push_back(lst[j]);\n        }\n        i++;\n  \
    \      j--;\n    }\n    return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        i++;\n        if (i <= j) {\n\
    \            result.push_back(lst[j]);\n            j--;\n        }\n    }\n \
    \   return result;", "    std::vector<long> res;\n    std::sort(lst.begin(), lst.end());\n\
    \    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j) {\n        res.push_back(lst[i]);\n\
    \        if (i != j) {\n            res.push_back(lst[j]);\n        }\n      \
    \  i++;\n        j--;\n    }\n    return res;", "    std::vector<long> result;\n\
    \    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n        if (i\
    \ != j) {\n            result.push_back(lst[j]);\n        }\n        i++;\n  \
    \      j--;\n    }\n    return result;", "    std::sort(lst.begin(), lst.end());\n\
    \    std::vector<long> res;\n    int i = 0, j = lst.size() - 1;\n    while (i\
    \ <= j) {\n        res.push_back(lst[i++]);\n        if (i <= j) res.push_back(lst[j--]);\n\
    \    }\n    return res;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        i++;\n        if (i <= j) {\n\
    \            result.push_back(lst[j]);\n            j--;\n        }\n    }\n \
    \   return result;", "    std::sort(lst.begin(), lst.end());\n    std::vector<long>\
    \ result;\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j) {\n\
    \        result.push_back(lst[i]);\n        i++;\n        if (i <= j) {\n    \
    \        result.push_back(lst[j]);\n            j--;\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    std::sort(lst.begin(), lst.end());\n\
    \    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n\
    \        if (i != j) {\n            result.push_back(lst[j]);\n        }\n   \
    \     i++;\n        j--;\n    }\n    return result;", "    std::vector<long> result;\n\
    \    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push_back(lst[j]);\n            j--;\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0, j = lst.size() - 1;\n    while (i <= j) {\n    \
    \    res.push_back(lst[i]);\n        if (i != j) {\n            res.push_back(lst[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return res;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j =\
    \ lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n \
    \       i++;\n        if (i <= j) {\n            result.push_back(lst[j]);\n \
    \           j--;\n        }\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        res.push_back(lst[i]);\n        if (i !=\
    \ j) {\n            res.push_back(lst[j]);\n        }\n        i++;\n        j--;\n\
    \    }\n    return res;", "    std::sort(lst.begin(), lst.end());\n    std::vector<long>\
    \ result;\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j) {\n\
    \        result.push_back(lst[i]);\n        i++;\n        if (i <= j) {\n    \
    \        result.push_back(lst[j]);\n            j--;\n        }\n    }\n    return\
    \ result;", "    std::vector<long> res;\n    std::sort(lst.begin(), lst.end());\n\
    \    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j) {\n        res.push_back(lst[i]);\n\
    \        i++;\n        if (i <= j) {\n            res.push_back(lst[j]);\n   \
    \         j--;\n        }\n    }\n    return res;", "    std::vector<long> res;\n\
    \    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        res.push_back(lst[i]);\n        i++;\n \
    \       if (i <= j) {\n            res.push_back(lst[j]);\n            j--;\n\
    \        }\n    }\n    return res;", "    std::vector<long> res;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        res.push_back(lst[i]);\n        i++;\n        if (i <= j) {\n   \
    \         res.push_back(lst[j]);\n            j--;\n        }\n    }\n    return\
    \ res;", "    std::vector<long> result;\n    std::sort(lst.begin(), lst.end());\n\
    \    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n\
    \        if (i != j) {\n            result.push_back(lst[j]);\n        }\n   \
    \     i++;\n        j--;\n    }\n    return result;", "    std::sort(lst.begin(),\
    \ lst.end());\n    std::vector<long> result;\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push_back(lst[j]);\n            j--;\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0, j = lst.size() - 1;\n    while (i <= j) {\n    \
    \    res.push_back(lst[i]);\n        if (i != j) {\n            res.push_back(lst[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return res;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j =\
    \ lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n \
    \       if (i != j) {\n            result.push_back(lst[j]);\n        }\n    \
    \    i++;\n        j--;\n    }\n    return result;", "    std::vector<long> result;\n\
    \    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push_back(lst[j]);\n            j--;\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        if (i != j) {\n            result.push_back(lst[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;", "  std::vector<long>\
    \ result;\n  std::sort(lst.begin(), lst.end());\n  int i = 0;\n  int j = lst.size()\
    \ - 1;\n  while (i <= j) {\n    result.push_back(lst[i]);\n    if (i != j) {\n\
    \      result.push_back(lst[j]);\n    }\n    i++;\n    j--;\n  }\n  return result;",
  "    std::vector<long> ret;\n    std::sort(lst.begin(), lst.end());\n    int i =\
    \ 0;\n    while(i < lst.size()) {\n        ret.push_back(lst[i]);\n        if(i\
    \ + 1 < lst.size()) {\n            ret.push_back(lst[lst.size() - 1 - i]);\n \
    \       }\n        i++;\n    }\n    return ret;", "    std::vector<long> result;\n\
    \    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push_back(lst[j]);\n            j--;\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0, j = lst.size() - 1;\n    while (i <= j) {\n    \
    \    res.push_back(lst[i]);\n        if (i != j) {\n            res.push_back(lst[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return res;", "    std::sort(lst.begin(),\
    \ lst.end());\n    std::vector<long> res;\n    int i = 0, j = lst.size() - 1;\n\
    \    while (i <= j) {\n        res.push_back(lst[i++]);\n        if (i <= j) {\n\
    \            res.push_back(lst[j--]);\n        }\n    }\n    return res;", " \
    \ std::vector<long> result;\n  std::sort(lst.begin(), lst.end());\n  int i = 0;\n\
    \  int j = lst.size() - 1;\n  while (i <= j) {\n    result.push_back(lst[i]);\n\
    \    if (i != j)\n      result.push_back(lst[j]);\n    i++;\n    j--;\n  }\n \
    \ return result;", "    std::vector<long> res;\n    std::sort(lst.begin(), lst.end());\n\
    \    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j) {\n        res.push_back(lst[i]);\n\
    \        if (i != j) {\n            res.push_back(lst[j]);\n        }\n      \
    \  i++;\n        j--;\n    }\n    return res;", "    std::vector<long> result;\n\
    \    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push_back(lst[j]);\n            j--;\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        i++;\n        if (i <= j) {\n\
    \            result.push_back(lst[j]);\n            j--;\n        }\n    }\n \
    \   return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        i++;\n        if (i <= j) {\n\
    \            result.push_back(lst[j]);\n            j--;\n        }\n    }\n \
    \   return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        i++;\n        if (i <= j) {\n\
    \            result.push_back(lst[j]);\n            j--;\n        }\n    }\n \
    \   return result;", "  std::vector<long> result;\n  std::sort(lst.begin(), lst.end());\n\
    \  int i = 0;\n  int j = lst.size() - 1;\n  while (i <= j) {\n    result.push_back(lst[i]);\n\
    \    if (i != j) {\n      result.push_back(lst[j]);\n    }\n    i++;\n    j--;\n\
    \  }\n  return result;", "  std::vector<long> result;\n  std::sort(lst.begin(),\
    \ lst.end());\n  int i = 0;\n  int j = lst.size() - 1;\n  while (i <= j) {\n \
    \   result.push_back(lst[i]);\n    if (i != j) {\n      result.push_back(lst[j]);\n\
    \    }\n    i++;\n    j--;\n  }\n  return result;", "    std::vector<long> res;\n\
    \    std::sort(lst.begin(), lst.end());\n    int i = 0, j = lst.size() - 1;\n\
    \    while (i <= j) {\n        res.push_back(lst[i]);\n        if (i != j) {\n\
    \            res.push_back(lst[j]);\n        }\n        i++;\n        j--;\n \
    \   }\n    return res;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        if (i != j) {\n            result.push_back(lst[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j =\
    \ lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n \
    \       i++;\n        if (i <= j) {\n            result.push_back(lst[j]);\n \
    \           j--;\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j =\
    \ lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n \
    \       i++;\n        if (i <= j) {\n            result.push_back(lst[j]);\n \
    \           j--;\n        }\n    }\n    return result;", "  std::vector<long>\
    \ result;\n  std::sort(lst.begin(), lst.end());\n  int i = 0;\n  int j = lst.size()\
    \ - 1;\n  while (i <= j) {\n    result.push_back(lst[i]);\n    if (i != j) {\n\
    \      result.push_back(lst[j]);\n    }\n    i++;\n    j--;\n  }\n  return result;",
  "    std::vector<long> result;\n    std::sort(lst.begin(), lst.end());\n    int\
    \ i = 0;\n    int j = lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n\
    \        i++;\n        if (i <= j) {\n            result.push_back(lst[j]);\n\
    \            j--;\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        if (i % 2 == 0) {\n            result.push_back(lst[i / 2]);\n\
    \        } else {\n            result.push_back(lst[lst.size() - i / 2 - 1]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0, j = lst.size() - 1;\n    while (i <= j) {\n    \
    \    res.push_back(lst[i]);\n        if (i != j)\n            res.push_back(lst[j]);\n\
    \        i++;\n        j--;\n    }\n    return res;", "  std::vector<long> result;\n\
    \  std::sort(lst.begin(), lst.end());\n  int i = 0;\n  int j = lst.size() - 1;\n\
    \  while (i <= j) {\n    result.push_back(lst[i]);\n    if (i != j) {\n      result.push_back(lst[j]);\n\
    \    }\n    i++;\n    j--;\n  }\n  return result;", "    std::vector<long> res;\n\
    \    std::sort(lst.begin(), lst.end());\n    int i = 0, j = lst.size() - 1;\n\
    \    while (i <= j) {\n        res.push_back(lst[i]);\n        if (i != j) {\n\
    \            res.push_back(lst[j]);\n        }\n        i++;\n        j--;\n \
    \   }\n    return res;", "    std::vector<long> sorted_list;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        sorted_list.push_back(lst[i]);\n        if (i != j) {\n         \
    \   sorted_list.push_back(lst[j]);\n        }\n        i++;\n        j--;\n  \
    \  }\n    return sorted_list;", "    std::vector<long> res;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0, j = lst.size() - 1;\n    while (i <= j) {\n    \
    \    res.push_back(lst[i]);\n        if (i != j) {\n            res.push_back(lst[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    std::sort(lst.begin(), lst.end());\n    int i = 0, j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        res.push_back(lst[i]);\n        if (i !=\
    \ j) {\n            res.push_back(lst[j]);\n        }\n        i++;\n        j--;\n\
    \    }\n    return res;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        if (i != j) {\n            result.push_back(lst[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j =\
    \ lst.size() - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n \
    \       if (i != j) {\n            result.push_back(lst[j]);\n        }\n    \
    \    i++;\n        j--;\n    }\n    return result;", "    std::vector<long> sorted_list;\n\
    \    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    while(!lst.empty())\
    \ {\n        if(i % 2 == 0) {\n            sorted_list.push_back(lst.front());\n\
    \            lst.erase(lst.begin());\n        } else {\n            sorted_list.push_back(lst.back());\n\
    \            lst.pop_back();\n        }\n        i++;\n    }\n    return sorted_list;",
  "    std::vector<long> res;\n    std::sort(lst.begin(), lst.end());\n    int i =\
    \ 0, j = lst.size() - 1;\n    while (i < j) {\n        res.push_back(lst[i]);\n\
    \        res.push_back(lst[j]);\n        i++;\n        j--;\n    }\n    if (i\
    \ == j) {\n        res.push_back(lst[i]);\n    }\n    return res;", "  std::vector<long>\
    \ result;\n  std::sort(lst.begin(), lst.end());\n  int i = 0;\n  int j = lst.size()\
    \ - 1;\n  while (i <= j) {\n    result.push_back(lst[i]);\n    if (i != j) {\n\
    \      result.push_back(lst[j]);\n    }\n    i++;\n    j--;\n  }\n  return result;",
  "    std::vector<long> res;\n    std::sort(lst.begin(), lst.end());\n    int i =\
    \ 0;\n    int j = lst.size() - 1;\n    while (i <= j) {\n        res.push_back(lst[i]);\n\
    \        i++;\n        if (i <= j) {\n            res.push_back(lst[j]);\n   \
    \         j--;\n        }\n    }\n    return res;", "    std::vector<long> result;\n\
    \    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push_back(lst[j]);\n            j--;\n\
    \        }\n    }\n    return result;", "  std::vector<long> result;\n  std::sort(lst.begin(),\
    \ lst.end());\n  int i = 0;\n  int j = lst.size() - 1;\n  while (i <= j) {\n \
    \   result.push_back(lst[i]);\n    if (i != j) {\n      result.push_back(lst[j]);\n\
    \    }\n    i++;\n    j--;\n  }\n  return result;", "    std::vector<long> result;\n\
    \    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push_back(lst[j]);\n            j--;\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        i++;\n        if (i <= j) {\n\
    \            result.push_back(lst[j]);\n            j--;\n        }\n    }\n \
    \   return result;", "    std::vector<long> result;\n    std::sort(lst.begin(),\
    \ lst.end());\n    int i = 0;\n    int j = lst.size() - 1;\n    while (i <= j)\
    \ {\n        result.push_back(lst[i]);\n        i++;\n        if (i <= j) {\n\
    \            result.push_back(lst[j]);\n            j--;\n        }\n    }\n \
    \   return result;", "    // Write your code here\n    std::vector<long> result;\n\
    \    std::sort(lst.begin(), lst.end());\n    int i = 0;\n    int j = lst.size()\
    \ - 1;\n    while (i <= j) {\n        result.push_back(lst[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push_back(lst[j]);\n            j--;\n\
    \        }\n    }\n    return result;"]
stop_tokens:
- "\n}"

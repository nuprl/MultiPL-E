name: HumanEval_6_parse_nested_parens
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function is\
  \ a string represented multiple groups for nested parentheses separated by spaces.\n\
  // For each of the group, output the deepest level of nesting of parentheses.\n\
  // E.g. (()()) has maximum two levels of nesting while ((())) has three.\nstd::vector<long>\
  \ parse_nested_parens(std::string paren_string) {\n"
tests: "}\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
  (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
  () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
  (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
completions: []
stop_tokens:
- "\n}"

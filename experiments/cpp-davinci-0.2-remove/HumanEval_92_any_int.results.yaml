language: cpp
name: HumanEval_92_any_int
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpucqmk8e4: /tmp/tmpucqmk8e4.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    } else {\n \
    \       return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpu7fgtloe: /tmp/tmpu7fgtloe.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    } else {\n \
    \       return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpu7fgtloe: /tmp/tmpu7fgtloe.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpucqmk8e4: /tmp/tmpucqmk8e4.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpucqmk8e4: /tmp/tmpucqmk8e4.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if ((x + y\
    \ == z) || (x + z == y) || (y + z == x)) {\n    return true;\n  } else {\n   \
    \ return false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp5pd84i05: /tmp/tmp5pd84i05.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    } else {\n \
    \       return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpu7fgtloe: /tmp/tmpu7fgtloe.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    } else {\n \
    \       return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpu7fgtloe: /tmp/tmpu7fgtloe.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    } else {\n \
    \       return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpu7fgtloe: /tmp/tmpu7fgtloe.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpucqmk8e4: /tmp/tmpucqmk8e4.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    } else {\n \
    \       return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpu7fgtloe: /tmp/tmpu7fgtloe.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpucqmk8e4: /tmp/tmpucqmk8e4.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpucqmk8e4: /tmp/tmpucqmk8e4.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpucqmk8e4: /tmp/tmpucqmk8e4.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    } else {\n \
    \       return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpu7fgtloe: /tmp/tmpu7fgtloe.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if ((x + y\
    \ == z) || (x + z == y) || (y + z == x)) {\n    return true;\n  } else {\n   \
    \ return false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp5pd84i05: /tmp/tmp5pd84i05.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if ((x + y\
    \ == z) || (x + z == y) || (y + z == x)) {\n    return true;\n  } else {\n   \
    \ return false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp5pd84i05: /tmp/tmp5pd84i05.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    } else {\n \
    \       return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpu7fgtloe: /tmp/tmpu7fgtloe.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpucqmk8e4: /tmp/tmpucqmk8e4.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    } else {\n \
    \       return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpu7fgtloe: /tmp/tmpu7fgtloe.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpucqmk8e4: /tmp/tmpucqmk8e4.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ (y + z) || y == (x + z) || z == (x + y)) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpqqetoppu: /tmp/tmpqqetoppu.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if ((x +\
    \ y == z) || (x + z == y) || (y + z == x)) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpdwndo0s7: /tmp/tmpdwndo0s7.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    } else {\n \
    \       return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpu7fgtloe: /tmp/tmpu7fgtloe.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  return (x\
    \ == y + z || y == x + z || z == x + y);\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp2_zrumtf: /tmp/tmp2_zrumtf.cpp:14: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpucqmk8e4: /tmp/tmpucqmk8e4.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if ((x + y\
    \ == z) || (x + z == y) || (y + z == x)) {\n    return true;\n  } else {\n   \
    \ return false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp5pd84i05: /tmp/tmp5pd84i05.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == (y\
    \ + z) || y == (x + z) || z == (x + y)) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp4xekuxj8: /tmp/tmp4xekuxj8.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpucqmk8e4: /tmp/tmpucqmk8e4.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    } else {\n \
    \       return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpu7fgtloe: /tmp/tmpu7fgtloe.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpucqmk8e4: /tmp/tmpucqmk8e4.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if ((x + y\
    \ == z) || (x + z == y) || (y + z == x)) {\n    return true;\n  } else {\n   \
    \ return false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp5pd84i05: /tmp/tmp5pd84i05.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if ((x + y\
    \ == z) || (x + z == y) || (y + z == x)) {\n    return true;\n  } else {\n   \
    \ return false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp5pd84i05: /tmp/tmp5pd84i05.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    } else {\n \
    \       return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpu7fgtloe: /tmp/tmpu7fgtloe.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    } else {\n \
    \       return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpu7fgtloe: /tmp/tmpu7fgtloe.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    } else {\n \
    \       return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpu7fgtloe: /tmp/tmpu7fgtloe.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    } else {\n \
    \       return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpu7fgtloe: /tmp/tmpu7fgtloe.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    } else {\n \
    \       return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpu7fgtloe: /tmp/tmpu7fgtloe.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpucqmk8e4: /tmp/tmpucqmk8e4.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpucqmk8e4: /tmp/tmpucqmk8e4.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if ((x +\
    \ y == z) || (x + z == y) || (y + z == x)) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpdwndo0s7: /tmp/tmpdwndo0s7.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpucqmk8e4: /tmp/tmpucqmk8e4.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  return (x\
    \ == y + z || y == x + z || z == x + y);\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp2_zrumtf: /tmp/tmp2_zrumtf.cpp:14: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpucqmk8e4: /tmp/tmpucqmk8e4.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    } else {\n \
    \       return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpu7fgtloe: /tmp/tmpu7fgtloe.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpucqmk8e4: /tmp/tmpucqmk8e4.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if ((x + y\
    \ == z) || (x + z == y) || (y + z == x)) {\n    return true;\n  } else {\n   \
    \ return false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp5pd84i05: /tmp/tmp5pd84i05.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if(x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpj8xkk1d9: /tmp/tmpj8xkk1d9.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    } else {\n \
    \       return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpu7fgtloe: /tmp/tmpu7fgtloe.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    } else {\n \
    \       return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpu7fgtloe: /tmp/tmpu7fgtloe.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    } else {\n \
    \       return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpu7fgtloe: /tmp/tmpu7fgtloe.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    } else {\n \
    \       return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpu7fgtloe: /tmp/tmpu7fgtloe.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpucqmk8e4: /tmp/tmpucqmk8e4.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpucqmk8e4: /tmp/tmpucqmk8e4.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if ((x + y\
    \ == z) || (x + z == y) || (y + z == x)) {\n    return true;\n  } else {\n   \
    \ return false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp5pd84i05: /tmp/tmp5pd84i05.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    return (x\
    \ == y + z || y == x + z || z == x + y);\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpvp5qhzt7: /tmp/tmpvp5qhzt7.cpp:14: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == (y\
    \ + z) || y == (x + z) || z == (x + y)) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp4xekuxj8: /tmp/tmp4xekuxj8.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    } else {\n \
    \       return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpu7fgtloe: /tmp/tmpu7fgtloe.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpucqmk8e4: /tmp/tmpucqmk8e4.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ (y + z) || y == (x + z) || z == (x + y)) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpqqetoppu: /tmp/tmpqqetoppu.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    } else {\n \
    \       return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpu7fgtloe: /tmp/tmpu7fgtloe.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpucqmk8e4: /tmp/tmpucqmk8e4.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpucqmk8e4: /tmp/tmpucqmk8e4.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpucqmk8e4: /tmp/tmpucqmk8e4.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  return (x\
    \ == y + z || y == x + z || z == x + y);\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp2_zrumtf: /tmp/tmp2_zrumtf.cpp:14: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpucqmk8e4: /tmp/tmpucqmk8e4.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    } else {\n \
    \       return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpu7fgtloe: /tmp/tmpu7fgtloe.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    } else {\n \
    \       return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpu7fgtloe: /tmp/tmpu7fgtloe.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    } else {\n \
    \       return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpu7fgtloe: /tmp/tmpu7fgtloe.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpucqmk8e4: /tmp/tmpucqmk8e4.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpucqmk8e4: /tmp/tmpucqmk8e4.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpucqmk8e4: /tmp/tmpucqmk8e4.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    } else {\n \
    \       return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpu7fgtloe: /tmp/tmpu7fgtloe.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    } else {\n \
    \       return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpu7fgtloe: /tmp/tmpu7fgtloe.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpucqmk8e4: /tmp/tmpucqmk8e4.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpucqmk8e4: /tmp/tmpucqmk8e4.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_2g_rzk: /tmp/tmpi_2g_rzk.cpp:18: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n  if (x == y\
    \ + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph50uvjg0: /tmp/tmph50uvjg0.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\nbool any_int(float x, float y, float z) {\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpucqmk8e4: /tmp/tmpucqmk8e4.cpp:17: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100108

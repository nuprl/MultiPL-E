name: HumanEval_103_rounded_avg
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_string_long{\n\
  \    std::string f0;\n    long f1;    Union_std_string_long(std::string _f0) : f0(_f0)\
  \ {}\n    Union_std_string_long(long _f1) : f1(_f1) {}\n    ~Union_std_string_long()\
  \ {}\n    bool operator==(Union_std_string_long u2) {\n        return f0 == u2.f0\
  \ || f1 == u2.f1 ;\n    }\n};\n// You are given two positive integers n and m, and\
  \ your task is to compute the\n// average of the integers from n through m (including\
  \ n and m). \n// Round the answer to the nearest integer and convert that to binary.\n\
  // If n is greater than m, return -1.\n// Example:\nUnion_std_string_long rounded_avg(long\
  \ n, long m) {\n"
tests: "}\nint main() {\n    auto candidate = rounded_avg;\n    assert(candidate((1),\
  \ (5)) == (Union_std_string_long(\"0b11\")));\n    assert(candidate((7), (13)) ==\
  \ (Union_std_string_long(\"0b1010\")));\n    assert(candidate((964), (977)) == (Union_std_string_long(\"\
  0b1111001010\")));\n    assert(candidate((996), (997)) == (Union_std_string_long(\"\
  0b1111100100\")));\n    assert(candidate((560), (851)) == (Union_std_string_long(\"\
  0b1011000010\")));\n    assert(candidate((185), (546)) == (Union_std_string_long(\"\
  0b101101110\")));\n    assert(candidate((362), (496)) == (Union_std_string_long(\"\
  0b110101101\")));\n    assert(candidate((350), (902)) == (Union_std_string_long(\"\
  0b1001110010\")));\n    assert(candidate((197), (233)) == (Union_std_string_long(\"\
  0b11010111\")));\n    assert(candidate((7), (5)) == (Union_std_string_long(-1)));\n\
  \    assert(candidate((5), (1)) == (Union_std_string_long(-1)));\n    assert(candidate((5),\
  \ (5)) == (Union_std_string_long(\"0b101\")));\n}\n"
completions: ["    if (n > m) {\n        return Union_std_string_long(-1);\n    }\n\
    \    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n \
    \   }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\";\n   \
    \ while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n    \
    \    avg /= 2;\n    }\n    return Union_std_string_long(binary);", "    if (n\
    \ > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n; i\
    \ <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n\
    \    std::string binary = std::bitset<32>(avg).to_string();\n    return binary;",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n    return\
    \ binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::stringstream ss;\n    ss << std::bitset<32>(avg);\n\
    \    return ss.str();", "    if (n > m) {\n        return -1;\n    }\n    long\
    \ sum = n + m;\n    long avg = sum / 2;\n    std::string binary = std::bitset<8>(avg).to_string();\n\
    \    return binary;", "    if (n > m) return -1;\n    long sum = 0;\n    for (long\
    \ i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n\
    \ + 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n    return\
    \ binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    int sum\
    \ = 0;\n    for (int i = n; i <= m; i++) {\n        sum += i;\n    }\n    int\
    \ avg = sum / (m - n + 1);\n    return std::bitset<8>(avg).to_string();", "  \
    \  if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n    return binary;",
  "    if (n > m) {\n        return Union_std_string_long(-1);\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0)\
    \ {\n        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n \
    \   }\n    return Union_std_string_long(binary);", "    if (n > m) return -1;\n\
    \    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n \
    \   }\n    long avg = sum / (m - n + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    long count = 0;\n    for (long i = n; i <= m; i++) {\n        sum\
    \ += i;\n        count++;\n    }\n    long avg = sum / count;\n    std::string\
    \ binary = \"\";\n    while (avg != 0) {\n        binary = std::to_string(avg\
    \ % 2) + binary;\n        avg /= 2;\n    }\n    return binary;", "    if (n >\
    \ m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <=\
    \ m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n   \
    \ std::string binary = std::bitset<8>(avg).to_string();\n    return binary;",
  "    if (n > m) return -1;\n    long avg = (n + m) / 2;\n    std::string binary\
    \ = std::bitset<8>(avg).to_string();\n    return binary;", "    if (n > m) {\n\
    \        return Union_std_string_long(-1);\n    }\n    long sum = 0;\n    for\
    \ (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum /\
    \ (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n      \
    \  binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n    return\
    \ Union_std_string_long(binary);", "    if (n > m) {\n        return -1;\n   \
    \ }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n\
    \    }\n    long avg = sum / (m - n + 1);\n    return std::bitset<32>(avg).to_string();",
  "    if (n > m) {\n        return -1;\n    }\n    long avg = (n + m) / 2;\n    std::string\
    \ binary = std::bitset<8>(avg).to_string();\n    return binary;", "    if (n >\
    \ m) {\n        return Union_std_string_long(-1);\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ (sum + (m - n + 1) / 2) / (m - n + 1);\n    std::string binary = \"\";\n   \
    \ while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n    \
    \    avg /= 2;\n    }\n    return Union_std_string_long(binary);", "    if (n\
    \ > m) {\n        return Union_std_string_long(-1);\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n\
    \        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n\
    \    return Union_std_string_long(binary);", "    if (n > m) return -1;\n    long\
    \ sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n  \
    \  long avg = sum / (m - n + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return Union_std_string_long(-1);\n\
    \    }\n    long sum = 0;\n    long count = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n        count++;\n    }\n    long avg = sum / count;\n\
    \    std::string binary = std::bitset<8>(avg).to_string();\n    return Union_std_string_long(binary);",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n    return binary;",
  "    if (n > m) {\n        return Union_std_string_long(-1);\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0)\
    \ {\n        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n \
    \   }\n    return Union_std_string_long(binary);", "    if (n > m) {\n       \
    \ return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n\
    \        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = std::bitset<8>(avg).to_string();\n    return binary;", "    if (n >\
    \ m) {\n        return Union_std_string_long(-1);\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n\
    \        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n\
    \    return Union_std_string_long(binary);", "    if (n > m) {\n        return\
    \ -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n       \
    \ sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary\
    \ = std::bitset<8>(avg).to_string();\n    return binary;", "    if (n > m) {\n\
    \        return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = std::bitset<8>(avg).to_string();\n    return binary;", "    if (n >\
    \ m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <=\
    \ m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n   \
    \ std::string binary = std::bitset<8>(avg).to_string();\n    return binary;",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n    return binary;",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n    return\
    \ binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n\
    \    return binary;", "    if (n > m) return -1;\n    long sum = 0;\n    for (long\
    \ i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n\
    \ + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n    return\
    \ binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n\
    \    return binary;", "    if (n > m) return -1;\n    long sum = 0;\n    for (long\
    \ i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n\
    \ + 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n    return\
    \ binary;", "    if (n > m) {\n        return -1;\n    }\n    long avg = (n +\
    \ m) / 2;\n    std::string binary = std::bitset<8>(avg).to_string();\n    return\
    \ binary;", "    if (n > m) {\n        return Union_std_string_long(-1);\n   \
    \ }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n\
    \    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\";\n  \
    \  while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n   \
    \     avg /= 2;\n    }\n    return Union_std_string_long(binary);", "    if (n\
    \ > m) {\n        return Union_std_string_long(-1);\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n\
    \        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n\
    \    return Union_std_string_long(binary);", "    if (n > m) {\n        return\
    \ -1;\n    }\n    double sum = 0;\n    for (long i = n; i <= m; i++) {\n     \
    \   sum += i;\n    }\n    double avg = sum / (m - n + 1);\n    long rounded_avg\
    \ = round(avg);\n    std::string binary = std::bitset<32>(rounded_avg).to_string();\n\
    \    return binary;", "    if (n > m) return -1;\n    long sum = 0;\n    for (long\
    \ i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n\
    \ + 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n    return\
    \ binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n\
    \    return binary;", "    if (n > m) return -1;\n    double avg = (n + m) / 2.0;\n\
    \    long rounded = round(avg);\n    std::string binary = std::bitset<32>(rounded).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    return std::bitset<8>(avg).to_string();", "  \
    \  if (n > m) {\n        return Union_std_string_long(std::string(\"-1\"));\n\
    \    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\"\
    ;\n    while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n\
    \        avg /= 2;\n    }\n    return Union_std_string_long(binary);", "    if\
    \ (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n\
    \    std::string binary = std::bitset<8>(avg).to_string();\n    return binary;",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n    return\
    \ binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n\
    \    return binary;", "    if (n > m) return -1;\n    long sum = 0;\n    for (long\
    \ i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n\
    \ + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n    return\
    \ binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return Union_std_string_long(-1);\n\
    \    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\"\
    ;\n    while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n\
    \        avg /= 2;\n    }\n    return Union_std_string_long(binary);", "    if\
    \ (n > m) return -1;\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n\
    \        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = std::bitset<32>(avg).to_string();\n    return binary;", "    if (n\
    \ > m) return -1;\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n  \
    \      sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    return std::bitset<32>(avg).to_string();",
  "    if (n > m) {\n        return Union_std_string_long(-1);\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0)\
    \ {\n        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n \
    \   }\n    return Union_std_string_long(binary);", "    if (n > m) {\n       \
    \ return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n\
    \        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::stringstream\
    \ ss;\n    ss << std::bitset<32>(avg);\n    return ss.str();", "    if (n > m)\
    \ {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m;\
    \ i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = std::bitset<32>(avg).to_string();\n    return binary;", "    if (n\
    \ > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n; i\
    \ <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n\
    \    std::string binary = std::bitset<8>(avg).to_string();\n    return binary;",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n    return\
    \ binary;", "    if (n > m) return -1;\n    long sum = 0;\n    for (long i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n\
    \    std::string binary = std::bitset<8>(avg).to_string();\n    return binary;",
  "    if (n > m) return -1;\n    long avg = (n + m) / 2;\n    std::string binary\
    \ = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n\
    \        avg /= 2;\n    }\n    return binary;", "    if (n > m) {\n        return\
    \ Union_std_string_long(-1);\n    }\n    long sum = 0;\n    for (long i = n; i\
    \ <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n\
    \    std::string binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg\
    \ % 2) + binary;\n        avg /= 2;\n    }\n    return Union_std_string_long(binary);",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n    return binary;",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n    return binary;",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n    return binary;",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n    return binary;",
  "    if (n > m) {\n        return Union_std_string_long(std::string(\"-1\"));\n\
    \    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    return Union_std_string_long(avg);",
  "    if (n > m) {\n        return Union_std_string_long(-1);\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ rounded_avg = std::round(sum / (m - n + 1));\n    std::string binary = std::bitset<8>(rounded_avg).to_string();\n\
    \    return Union_std_string_long(binary);", "    if (n > m) return -1;\n    long\
    \ sum = 0;\n    for (int i = n; i <= m; i++) {\n        sum += i;\n    }\n   \
    \ long avg = sum / (m - n + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n\
    \    return binary;", "    if (n > m) return -1;\n    long sum = 0;\n    for (long\
    \ i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n\
    \ + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n    return\
    \ binary;", "    if (n > m) {\n        return Union_std_string_long(-1);\n   \
    \ }\n    long sum = n;\n    for (long i = n + 1; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\"\
    ;\n    while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n\
    \        avg /= 2;\n    }\n    return Union_std_string_long(binary);", "    if\
    \ (n > m) return -1;\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n\
    \        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = std::bitset<32>(avg).to_string();\n    return binary;", "    if (n\
    \ > m) {\n        return Union_std_string_long(-1);\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::stringstream ss;\n    ss << std::bitset<32>(avg);\n\
    \    return Union_std_string_long(ss.str());", "    if (n > m) {\n        return\
    \ -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n       \
    \ sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary\
    \ = std::bitset<32>(avg).to_string();\n    return binary;", "    if (n > m) {\n\
    \        return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = std::bitset<8>(avg).to_string();\n    return binary;", "    if (n >\
    \ m) {\n        return Union_std_string_long(-1);\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n\
    \        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n\
    \    return Union_std_string_long(binary);", "    if (n > m) {\n        return\
    \ -1;\n    }\n    long avg = (n + m) / 2;\n    std::string binary = std::bitset<8>(avg).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    return std::bitset<32>(avg).to_string();", " \
    \   if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long\
    \ i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = round(sum /\
    \ (m - n + 1));\n    std::string binary = std::bitset<8>(avg).to_string();\n \
    \   return binary;", "    if (n > m) return -1;\n    long sum = 0;\n    for (long\
    \ i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n\
    \ + 1);\n    return std::bitset<32>(avg).to_string();", "    if (n > m) {\n  \
    \      return Union_std_string_long(-1);\n    }\n    long sum = 0;\n    for (long\
    \ i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n\
    \ + 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n        binary\
    \ = std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n    return Union_std_string_long(binary);",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n    return\
    \ binary;", "    if (n > m) {\n        return Union_std_string_long(-1);\n   \
    \ }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n\
    \    }\n    long avg = sum / (m - n + 1);\n    std::stringstream ss;\n    ss <<\
    \ std::bitset<8>(avg);\n    return Union_std_string_long(ss.str());", "    if\
    \ (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n\
    \    std::string binary = std::bitset<32>(avg).to_string();\n    return binary;",
  "    if (n > m) return -1;\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = std::bitset<8>(avg).to_string();\n    return binary;", "    if (n >\
    \ m) return -1;\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n    \
    \    sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary\
    \ = std::bitset<8>(avg).to_string();\n    return binary;", "    if (n > m) {\n\
    \        return -1;\n    }\n    long sum = 0;\n    long count = 0;\n    for (long\
    \ i = n; i <= m; i++) {\n        sum += i;\n        count++;\n    }\n    long\
    \ avg = sum / count;\n    std::string binary = \"\";\n    while (avg > 0) {\n\
    \        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long avg\
    \ = (n + m) / 2;\n    std::string binary = std::bitset<8>(avg).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::stringstream ss;\n    ss << std::bitset<32>(avg);\n\
    \    return ss.str();", "    if (n > m) {\n        return -1;\n    }\n    long\
    \ sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n  \
    \  long avg = sum / (m - n + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n\
    \    return binary;", "    if (n > m) return -1;\n    long sum = 0;\n    for (long\
    \ i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n\
    \ + 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n    return\
    \ binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return Union_std_string_long(-1);\n\
    \    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\"\
    ;\n    while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n\
    \        avg /= 2;\n    }\n    return Union_std_string_long(binary);", "    if\
    \ (n > m) return -1;\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n\
    \        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = std::bitset<8>(avg).to_string();\n    return binary;", "    if (n >\
    \ m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <=\
    \ m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n   \
    \ std::string binary = std::bitset<8>(avg).to_string();\n    return binary;",
  "    if (n > m) {\n        return Union_std_string_long(-1);\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0)\
    \ {\n        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n \
    \   }\n    return Union_std_string_long(binary);", "    if (n > m) {\n       \
    \ return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n\
    \        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    return std::bitset<32>(avg).to_string();",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n    return\
    \ binary;", "    if (n > m) return -1;\n    long avg = (n + m) / 2;\n    std::string\
    \ binary = std::bitset<8>(avg).to_string();\n    return binary;", "    if (n >\
    \ m) {\n        return Union_std_string_long(std::string(\"-1\"));\n    }\n  \
    \  long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n   \
    \ }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\";\n    while\
    \ (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n        avg\
    \ /= 2;\n    }\n    return Union_std_string_long(binary);", "    if (n > m) {\n\
    \        return Union_std_string_long(-1);\n    }\n    long sum = 0;\n    for\
    \ (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum /\
    \ (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n      \
    \  binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n    return\
    \ Union_std_string_long(binary);", "    if (n > m) {\n        return -1;\n   \
    \ }\n    double avg = (n + m) / 2.0;\n    long rounded = round(avg);\n    std::string\
    \ binary = std::bitset<8>(rounded).to_string();\n    return binary;", "    if\
    \ (n > m) return -1;\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n\
    \        sum += i;\n    }\n    long avg = (sum + (m - n + 1) / 2) / (m - n + 1);\n\
    \    std::string binary_avg = \"\";\n    while (avg > 0) {\n        binary_avg\
    \ = std::to_string(avg % 2) + binary_avg;\n        avg /= 2;\n    }\n    return\
    \ binary_avg;", "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::stringstream ss;\n    ss << std::bitset<32>(avg);\n\
    \    return ss.str();", "    if (n > m) {\n        return -1;\n    }\n    long\
    \ sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n  \
    \  long avg = sum / (m - n + 1);\n    return std::bitset<64>(avg).to_string();",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::stringstream ss;\n    ss << std::bitset<32>(avg);\n    return\
    \ ss.str();", "    if (n > m) return -1;\n    long avg = (n + m) / 2;\n    std::string\
    \ binary = std::bitset<8>(avg).to_string();\n    return binary;", "    if (n >\
    \ m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <=\
    \ m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n   \
    \ std::string binary = std::bitset<8>(avg).to_string();\n    return binary;",
  "    if (n > m) {\n        return Union_std_string_long(-1);\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0)\
    \ {\n        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n \
    \   }\n    return Union_std_string_long(binary);", "    if (n > m) {\n       \
    \ return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n\
    \        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = std::bitset<8>(avg).to_string();\n    return binary;", "    if (n >\
    \ m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <=\
    \ m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n   \
    \ std::string binary = std::bitset<8>(avg).to_string();\n    return binary;",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n    return\
    \ binary;", "    if (n > m) {\n        return Union_std_string_long(std::string(\"\
    -1\"));\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n     \
    \   sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary\
    \ = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n\
    \        avg /= 2;\n    }\n    return Union_std_string_long(binary);", "    if\
    \ (n > m) {\n        return Union_std_string_long(-1);\n    }\n    long sum =\
    \ 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = (sum + (m - n + 1) / 2) / (m - n + 1);\n    std::stringstream ss;\n  \
    \  ss << std::bitset<32>(avg);\n    return Union_std_string_long(ss.str());",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n    return binary;",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n    return binary;",
  "    if (n > m) return -1;\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = std::bitset<8>(avg).to_string();\n    return binary;", "    if (n >\
    \ m) {\n        return Union_std_string_long(-1);\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    return Union_std_string_long(avg);", "    if (n > m)\
    \ {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m;\
    \ i++) {\n        sum += i;\n    }\n    long rounded_avg = round(sum / (m - n\
    \ + 1));\n    std::string binary = std::bitset<32>(rounded_avg).to_string();\n\
    \    return binary;", "    if (n > m) return -1;\n    long sum = 0;\n    for (long\
    \ i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n\
    \ + 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n    return\
    \ binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n\
    \    return binary;", "    if (n > m) return -1;\n    long sum = 0;\n    for (long\
    \ i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n\
    \ + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n    return\
    \ binary;", "    if (n > m) {\n        return Union_std_string_long(-1);\n   \
    \ }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n\
    \    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\";\n  \
    \  while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n   \
    \     avg /= 2;\n    }\n    return Union_std_string_long(binary);", "    if (n\
    \ > m) {\n        return Union_std_string_long(-1);\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n\
    \        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n\
    \    return Union_std_string_long(binary);", "    if (n > m) return Union_std_string_long(-1);\n\
    \    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n \
    \   }\n    long avg = sum / (m - n + 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n\
    \    return Union_std_string_long(binary);", "    if (n > m) {\n        return\
    \ -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n       \
    \ sum += i;\n    }\n    long rounded_avg = round(sum / (m - n + 1));\n    return\
    \ std::bitset<8>(rounded_avg).to_string();", "    if (n > m) {\n        return\
    \ -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n       \
    \ sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary\
    \ = std::bitset<8>(avg).to_string();\n    return binary;", "    if (n > m) return\
    \ -1;\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n\
    \    return binary;", "    if (n > m) return -1;\n    double avg = (n + m) / 2.0;\n\
    \    long rounded = round(avg);\n    std::string binary = std::bitset<8>(rounded).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return Union_std_string_long(-1);\n\
    \    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    return Union_std_string_long(std::bitset<8>(avg).to_string());",
  "    if (n > m) return -1;\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = std::bitset<32>(avg).to_string();\n    return binary;", "    if (n\
    \ > m) {\n        return Union_std_string_long(-1);\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    return Union_std_string_long(std::bitset<8>(avg).to_string());",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = std::bitset<64>(avg).to_string();\n    return\
    \ binary;", "    if (n > m) {\n        return Union_std_string_long(-1);\n   \
    \ }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n\
    \    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\";\n  \
    \  while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n   \
    \     avg /= 2;\n    }\n    return Union_std_string_long(binary);", "    if (n\
    \ > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n; i\
    \ <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n\
    \    std::string binary = std::bitset<32>(avg).to_string();\n    return binary;",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::stringstream ss;\n    ss << std::bitset<8>(avg);\n    return ss.str();",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n    return\
    \ binary;", "    if (n > m) {\n        return Union_std_string_long(std::string(\"\
    -1\"));\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n     \
    \   sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    return Union_std_string_long(avg);",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long average = sum / (m -\
    \ n + 1);\n    std::string binary = std::bitset<8>(average).to_string();\n   \
    \ return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = n + m;\n    long avg = sum / 2;\n    std::string binary = std::bitset<8>(avg).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::stringstream ss;\n    ss << std::bitset<32>(avg);\n\
    \    return ss.str();", "    if (n > m) {\n        return -1;\n    }\n    long\
    \ sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n  \
    \  long avg = sum / (m - n + 1);\n    return std::bitset<32>(avg).to_string();",
  "    if (n > m) return -1;\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::stringstream\
    \ ss;\n    ss << std::bitset<8>(avg);\n    return ss.str();", "    if (n > m)\
    \ return -1;\n    long avg = (n + m) / 2;\n    std::string binary = std::bitset<8>(avg).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    return std::bitset<32>(avg).to_string();", " \
    \   if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long\
    \ i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n\
    \ + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n    return\
    \ binary;", "    if (n > m) {\n        return Union_std_string_long(-1);\n   \
    \ }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n\
    \    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\";\n  \
    \  while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n   \
    \     avg /= 2;\n    }\n    return Union_std_string_long(binary);", "    if (n\
    \ > m) {\n        return -1;\n    }\n    long sum = 0;\n    long count = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n        count++;\n  \
    \  }\n    long avg = sum / count;\n    std::string binary = \"\";\n    while (avg\
    \ > 0) {\n        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n\
    \    }\n    return binary;", "    if (n > m) {\n        return -1;\n    }\n  \
    \  long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n   \
    \ }\n    long avg = sum / (m - n + 1);\n    return std::bitset<32>(avg).to_string();",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    return std::bitset<32>(avg).to_string();", "    if (n > m) {\n    \
    \    return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n\
    \        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = std::bitset<8>(avg).to_string();\n    return binary;", "    if (n >\
    \ m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <=\
    \ m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n   \
    \ std::string binary = std::bitset<32>(avg).to_string();\n    return binary;",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n    return\
    \ binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    return std::bitset<32>(avg).to_string();", "    if (n\
    \ > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n; i\
    \ <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n\
    \    std::string binary = std::bitset<32>(avg).to_string();\n    return binary;",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n    return binary;",
  "    if (n > m) {\n        return Union_std_string_long(-1);\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0)\
    \ {\n        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n \
    \   }\n    return Union_std_string_long(binary);", "    if (n > m) return -1;\n\
    \    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n \
    \   }\n    long avg = sum / (m - n + 1);\n    return std::bitset<32>(avg).to_string();",
  "    if (n > m) {\n        return Union_std_string_long(-1);\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string bin = \"\";\n    while (avg > 0) {\n\
    \        if (avg % 2 == 0) {\n            bin = \"0\" + bin;\n        } else {\n\
    \            bin = \"1\" + bin;\n        }\n        avg /= 2;\n    }\n    return\
    \ Union_std_string_long(bin);", "    if (n > m) {\n        return -1;\n    }\n\
    \    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n \
    \   }\n    long rounded_avg = round(sum / (m - n + 1));\n    std::string binary\
    \ = std::bitset<8>(rounded_avg).to_string();\n    return binary;", "    if (n\
    \ > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n; i\
    \ <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n\
    \    std::string binary = std::bitset<32>(avg).to_string();\n    return binary;",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n    return\
    \ binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return Union_std_string_long(-1);\n\
    \    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = (sum + (m - n + 1) / 2) / (m - n + 1);\n    std::string\
    \ binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg %\
    \ 2) + binary;\n        avg /= 2;\n    }\n    return Union_std_string_long(binary);",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n    return\
    \ binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n\
    \    return binary;", "    if (n > m) return -1;\n    long sum = 0;\n    for (long\
    \ i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n\
    \ + 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n    return\
    \ binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return Union_std_string_long(-1);\n\
    \    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    return Union_std_string_long(avg);",
  "    if (n > m) return -1;\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ bin = \"\";\n    while (avg > 0) {\n        bin = std::to_string(avg % 2) +\
    \ bin;\n        avg /= 2;\n    }\n    return bin;", "    if (n > m) {\n      \
    \  return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n\
    \        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = std::bitset<8>(avg).to_string();\n    return binary;", "    if (n >\
    \ m) return -1;\n    long sum = 0;\n    for (long i = n; i <= m; i++) sum += i;\n\
    \    long avg = sum / (m - n + 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::stringstream ss;\n    ss << std::bitset<8>(avg);\n\
    \    return ss.str();", "    if (n > m) return -1;\n    long sum = 0;\n    for\
    \ (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum /\
    \ (m - n + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n \
    \   return binary;", "    if (n > m) return -1;\n    long sum = 0;\n    for (long\
    \ i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n\
    \ + 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n    return\
    \ binary;", "    if (n > m) {\n        return Union_std_string_long(-1);\n   \
    \ }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n\
    \    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\";\n  \
    \  while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n   \
    \     avg /= 2;\n    }\n    return Union_std_string_long(binary);", "    if (n\
    \ > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n; i\
    \ <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n\
    \    std::string binary = std::bitset<8>(avg).to_string();\n    return binary;",
  "    if (n > m) {\n        return Union_std_string_long(std::string(\"-1\"));\n\
    \    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\"\
    ;\n    while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n\
    \        avg /= 2;\n    }\n    return Union_std_string_long(binary);", "    if\
    \ (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n\
    \    std::string binary = std::bitset<32>(avg).to_string();\n    return binary;",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n    return binary;",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n    return\
    \ binary;", "    if (n > m) {\n        return -1;\n    }\n    long avg = (n +\
    \ m) / 2;\n    std::string binary_avg = std::bitset<8>(avg).to_string();\n   \
    \ return binary_avg;", "    if (n > m) {\n        return Union_std_string_long(-1);\n\
    \    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\"\
    ;\n    while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n\
    \        avg /= 2;\n    }\n    return Union_std_string_long(binary);", "    if\
    \ (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n\
    \    std::string binary = std::bitset<32>(avg).to_string();\n    return binary;",
  "    if (n > m) return -1;\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    return std::bitset<32>(avg).to_string();"]
stop_tokens:
- "\n}"

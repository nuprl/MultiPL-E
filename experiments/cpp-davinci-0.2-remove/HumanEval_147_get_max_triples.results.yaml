language: cpp
name: HumanEval_147_get_max_triples
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    //\
    \ Write your code here\n    long count = 0;\n    for(long i = 1; i < n; i++){\n\
    \        for(long j = i+1; j < n; j++){\n            for(long k = j+1; k < n;\
    \ k++){\n                if((i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0){\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp27vzhlcs: /tmp/tmp27vzhlcs.cpp:28: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    //\
    \ Write your code here\n    long count = 0;\n    for(long i = 1; i < n; i++){\n\
    \        for(long j = i+1; j < n; j++){\n            for(long k = j+1; k < n;\
    \ k++){\n                if((i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0){\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp27vzhlcs: /tmp/tmp27vzhlcs.cpp:28: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n - 1; i++) {\n        for(long j = i +\
    \ 1; j < n; j++) {\n            for(long k = j + 1; k <= n; k++) {\n         \
    \       if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n     \
    \               count++;\n                }\n            }\n        }\n    }\n\
    \    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n \
    \   assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    long a[n];\n    for(long i = 0; i < n; i++) {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    for(long i = 0; i < n; i++) {\n        for(long\
    \ j = i + 1; j < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n  \
    \              if((a[i] + a[j] + a[k]) % 3 == 0) {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nint\
    \ main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) ==\
    \ (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n\
    \    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp99a99612: /tmp/tmp99a99612.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i <= n; i++) {\n        for(long j = i + 1;\
    \ j <= n; j++) {\n            for(long k = j + 1; k <= n; k++) {\n           \
    \     if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n       \
    \             count++;\n                }\n            }\n        }\n    }\n \
    \   return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n  \
    \  assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n - 1; i++) {\n        for(long j = i +\
    \ 1; j < n; j++) {\n            for(long k = j + 1; k <= n; k++) {\n         \
    \       if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n     \
    \               count++;\n                }\n            }\n        }\n    }\n\
    \    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n \
    \   assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    //\
    \ Write your code here\n    long count = 0;\n    for(long i = 1; i < n; i++){\n\
    \        for(long j = i+1; j < n; j++){\n            for(long k = j+1; k < n;\
    \ k++){\n                if((i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0){\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp27vzhlcs: /tmp/tmp27vzhlcs.cpp:28: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113590
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n - 1; i++) {\n        for(long j = i +\
    \ 1; j < n; j++) {\n            for(long k = j + 1; k <= n; k++) {\n         \
    \       if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n     \
    \               count++;\n                }\n            }\n        }\n    }\n\
    \    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n \
    \   assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    //\
    \ Write your code here\n    long count = 0;\n    for(long i = 1; i < n; i++){\n\
    \        for(long j = i+1; j < n; j++){\n            for(long k = j+1; k < n;\
    \ k++){\n                if((i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0){\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp27vzhlcs: /tmp/tmp27vzhlcs.cpp:28: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count=0;\n    for(long i=1;i<n-1;i++){\n        for(long j=i+1;j<n;j++){\n \
    \           for(long k=j+1;k<=n;k++){\n                if((i*i-i+1+j*j-j+1+k*k-k+1)%3==0){\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n - 1; i++) {\n        for(long j = i +\
    \ 1; j < n; j++) {\n            for(long k = j + 1; k <= n; k++) {\n         \
    \       if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n     \
    \               count++;\n                }\n            }\n        }\n    }\n\
    \    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n \
    \   assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    long a[n];\n    for(long i = 0; i < n; i++) {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    for(long i = 0; i < n; i++) {\n        for(long\
    \ j = i + 1; j < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n  \
    \              if((a[i] + a[j] + a[k]) % 3 == 0) {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nint\
    \ main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) ==\
    \ (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n\
    \    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp99a99612: /tmp/tmp99a99612.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    //\
    \ Write your code here\n    long count = 0;\n    for(long i = 1; i < n; i++){\n\
    \        for(long j = i+1; j < n; j++){\n            for(long k = j+1; k < n;\
    \ k++){\n                if((i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0){\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp27vzhlcs: /tmp/tmp27vzhlcs.cpp:28: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    //\
    \ Write your code here\n    long count = 0;\n    for(long i = 1; i < n; i++){\n\
    \        for(long j = i+1; j < n; j++){\n            for(long k = j+1; k < n;\
    \ k++){\n                if((i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0){\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp27vzhlcs: /tmp/tmp27vzhlcs.cpp:28: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n - 1; i++) {\n        for(long j = i +\
    \ 1; j < n; j++) {\n            for(long k = j + 1; k <= n; k++) {\n         \
    \       if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n     \
    \               count++;\n                }\n            }\n        }\n    }\n\
    \    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n \
    \   assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n - 1; i++) {\n        for(long j = i +\
    \ 1; j < n; j++) {\n            for(long k = j + 1; k <= n; k++) {\n         \
    \       if(((i * i - i + 1) + (j * j - j + 1) + (k * k - k + 1)) % 3 == 0) {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ a[n];\n    for(long i=0;i<n;i++)\n    {\n        a[i]=i*i-i+1;\n    }\n    long\
    \ count=0;\n    for(long i=0;i<n;i++)\n    {\n        for(long j=i+1;j<n;j++)\n\
    \        {\n            for(long k=j+1;k<n;k++)\n            {\n             \
    \   if((a[i]+a[j]+a[k])%3==0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nint\
    \ main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) ==\
    \ (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n\
    \    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp1_izda1m: /tmp/tmp1_izda1m.cpp:35: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0) {\n                 \
    \   count++;\n                }\n            }\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpr4jm8w0u: /tmp/tmpr4jm8w0u.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n - 1; i++) {\n        for(long j = i +\
    \ 1; j < n; j++) {\n            for(long k = j + 1; k <= n; k++) {\n         \
    \       if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n     \
    \               count++;\n                }\n            }\n        }\n    }\n\
    \    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n \
    \   assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0) {\n                 \
    \   count++;\n                }\n            }\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpr4jm8w0u: /tmp/tmpr4jm8w0u.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i <= n; i++) {\n        for(long j = i + 1;\
    \ j <= n; j++) {\n            for(long k = j + 1; k <= n; k++) {\n           \
    \     if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n       \
    \             count++;\n                }\n            }\n        }\n    }\n \
    \   return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n  \
    \  assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    if(n\
    \ < 3) return 0;\n    long count = 0;\n    for(long i = 1; i < n - 1; i++) {\n\
    \        for(long j = i + 1; j < n; j++) {\n            if((i * i - i + 1 + j\
    \ * j - j + 1) % 3 == 0) {\n                count += n - j;\n            }\n \
    \       }\n    }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp0zsdf2vt: /tmp/tmp0zsdf2vt.cpp:25: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    //\
    \ Write your code here\n    long count = 0;\n    for(long i = 1; i < n; i++){\n\
    \        for(long j = i+1; j < n; j++){\n            for(long k = j+1; k < n;\
    \ k++){\n                if((i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0){\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp27vzhlcs: /tmp/tmp27vzhlcs.cpp:28: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i <= n; i++) {\n        for(long j = i + 1;\
    \ j <= n; j++) {\n            for(long k = j + 1; k <= n; k++) {\n           \
    \     if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n       \
    \             count++;\n                }\n            }\n        }\n    }\n \
    \   return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n  \
    \  assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    //\
    \ Write your code here\n    long count = 0;\n    for(long i = 1; i < n; i++){\n\
    \        for(long j = i+1; j < n; j++){\n            for(long k = j+1; k < n;\
    \ k++){\n                if((i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0){\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp27vzhlcs: /tmp/tmp27vzhlcs.cpp:28: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ ans = 0;\n    long sum = 0;\n    long count = 0;\n    for(long i = 1; i <= n;\
    \ i++) {\n        sum = i * i - i + 1;\n        if(sum % 3 == 0) {\n         \
    \   count++;\n        }\n        ans += count;\n    }\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) ==\
    \ (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n\
    \    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp10owy7_u: /tmp/tmp10owy7_u.cpp:26: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ long sum = i * i - i + 1 + j * j - j + 1 + k * k - k + 1;\n                if(sum\
    \ % 3 == 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpyprpje9l: /tmp/tmpyprpje9l.cpp:28: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n - 1; i++) {\n        for(long j = i +\
    \ 1; j < n; j++) {\n            for(long k = j + 1; k <= n; k++) {\n         \
    \       if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n     \
    \               count++;\n                }\n            }\n        }\n    }\n\
    \    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n \
    \   assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    //\
    \ Write your code here\n    long count = 0;\n    for(long i = 1; i < n; i++){\n\
    \        for(long j = i+1; j < n; j++){\n            for(long k = j+1; k < n;\
    \ k++){\n                if((i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0){\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp27vzhlcs: /tmp/tmp27vzhlcs.cpp:28: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    //\
    \ Write your code here\n    long count = 0;\n    long a[n];\n    for(long i =\
    \ 0; i < n; i++){\n        a[i] = i*i - i + 1;\n    }\n    for(long i = 0; i <\
    \ n; i++){\n        for(long j = i+1; j < n; j++){\n            for(long k = j+1;\
    \ k < n; k++){\n                if((a[i] + a[j] + a[k]) % 3 == 0){\n         \
    \           count++;\n                }\n            }\n        }\n    }\n   \
    \ return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpg448a9ye: /tmp/tmpg448a9ye.cpp:31: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    long a[n];\n    for(long i = 0; i < n; i++) {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    for(long i = 0; i < n; i++) {\n        for(long\
    \ j = i + 1; j < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n  \
    \              if((a[i] + a[j] + a[k]) % 3 == 0) {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nint\
    \ main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) ==\
    \ (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n\
    \    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp99a99612: /tmp/tmp99a99612.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    //\
    \ Write your code here\n    long count = 0;\n    for(long i = 1; i < n; i++){\n\
    \        for(long j = i+1; j < n; j++){\n            for(long k = j+1; k < n;\
    \ k++){\n                if((i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0){\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp27vzhlcs: /tmp/tmp27vzhlcs.cpp:28: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    long sum = 0;\n    for(long i = 1; i < n; i++) {\n        for(long\
    \ j = i + 1; j < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n  \
    \              sum = i * i - i + 1 + j * j - j + 1 + k * k - k + 1;\n        \
    \        if(sum % 3 == 0) {\n                    count++;\n                }\n\
    \            }\n        }\n    }\n    return count;\n}\nint main() {\n    auto\
    \ candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmppk932mtk: /tmp/tmppk932mtk.cpp:29: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    long a[n];\n    for(long i = 0; i < n; i++) {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    for(long i = 0; i < n; i++) {\n        for(long\
    \ j = i + 1; j < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n  \
    \              if((a[i] + a[j] + a[k]) % 3 == 0) {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nint\
    \ main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) ==\
    \ (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n\
    \    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp99a99612: /tmp/tmp99a99612.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    long i = 1;\n    while(i <= n) {\n        long j = i + 1;\n\
    \        while(j <= n) {\n            long k = j + 1;\n            while(k <=\
    \ n) {\n                if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3\
    \ == 0) {\n                    count++;\n                }\n                k++;\n\
    \            }\n            j++;\n        }\n        i++;\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i <= n; i++) {\n        for(long j = i + 1;\
    \ j <= n; j++) {\n            for(long k = j + 1; k <= n; k++) {\n           \
    \     if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n       \
    \             count++;\n                }\n            }\n        }\n    }\n \
    \   return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n  \
    \  assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660113590
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i <= n; i++) {\n        for(long j = i + 1;\
    \ j <= n; j++) {\n            for(long k = j + 1; k <= n; k++) {\n           \
    \     if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n       \
    \             count++;\n                }\n            }\n        }\n    }\n \
    \   return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n  \
    \  assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    long sum = 0;\n    for(long i = 1; i < n; i++) {\n        for(long\
    \ j = i + 1; j < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n  \
    \              sum = i * i - i + 1 + j * j - j + 1 + k * k - k + 1;\n        \
    \        if(sum % 3 == 0) {\n                    count++;\n                }\n\
    \            }\n        }\n    }\n    return count;\n}\nint main() {\n    auto\
    \ candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmppk932mtk: /tmp/tmppk932mtk.cpp:29: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    //\
    \ Write your code here\n    long count = 0;\n    for(long i = 1; i < n; i++){\n\
    \        for(long j = i+1; j < n; j++){\n            for(long k = j+1; k < n;\
    \ k++){\n                if((i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0){\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp27vzhlcs: /tmp/tmp27vzhlcs.cpp:28: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    //\
    \ Write your code here\n    long count = 0;\n    for(long i = 1; i < n; i++){\n\
    \        for(long j = i+1; j < n; j++){\n            for(long k = j+1; k < n;\
    \ k++){\n                if((i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0){\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp27vzhlcs: /tmp/tmp27vzhlcs.cpp:28: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    long a[n];\n    for(long i = 0; i < n; i++) {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    for(long i = 0; i < n; i++) {\n        for(long\
    \ j = i + 1; j < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n  \
    \              if((a[i] + a[j] + a[k]) % 3 == 0) {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nint\
    \ main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) ==\
    \ (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n\
    \    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp99a99612: /tmp/tmp99a99612.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmphqoq7f5k: /tmp/tmphqoq7f5k.cpp:26: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ long sum = i * i - i + 1 + j * j - j + 1 + k * k - k + 1;\n                if(sum\
    \ % 3 == 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpyprpje9l: /tmp/tmpyprpje9l.cpp:28: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n - 1; i++) {\n        for(long j = i +\
    \ 1; j < n; j++) {\n            for(long k = j + 1; k <= n; k++) {\n         \
    \       if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n     \
    \               count++;\n                }\n            }\n        }\n    }\n\
    \    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n \
    \   assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ ans = 0;\n    long a[n];\n    for(long i = 0; i < n; i++) {\n        a[i] =\
    \ i * i - i + 1;\n    }\n    for(long i = 0; i < n; i++) {\n        for(long j\
    \ = i + 1; j < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n    \
    \            if((a[i] + a[j] + a[k]) % 3 == 0) {\n                    ans++;\n\
    \                }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpgc9__n1v: /tmp/tmpgc9__n1v.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    //\
    \ Write your code here\n    long count = 0;\n    long sum = 0;\n    for(long i\
    \ = 1; i <= n; i++){\n        sum = i*i - i + 1;\n        if(sum % 3 == 0){\n\
    \            count++;\n        }\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n \
    \   assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n   \
    \ assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmps7mohwg1: /tmp/tmps7mohwg1.cpp:25: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    //\
    \ Write your code here\n    long count = 0;\n    for(long i = 1; i < n; i++){\n\
    \        for(long j = i+1; j < n; j++){\n            for(long k = j+1; k < n;\
    \ k++){\n                if((i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0){\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp27vzhlcs: /tmp/tmp27vzhlcs.cpp:28: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ long sum = i * i - i + 1 + j * j - j + 1 + k * k - k + 1;\n                if(sum\
    \ % 3 == 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpyprpje9l: /tmp/tmpyprpje9l.cpp:28: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum\
    \ = i * i - i + 1;\n        if(sum % 3 == 0) {\n            count++;\n       \
    \ }\n    }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpxsyo57mg: /tmp/tmpxsyo57mg.cpp:24: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    //\
    \ Write your code here\n    long count = 0;\n    for(long i = 1; i < n; i++){\n\
    \        for(long j = i+1; j < n; j++){\n            for(long k = j+1; k < n;\
    \ k++){\n                if((i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0){\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp27vzhlcs: /tmp/tmp27vzhlcs.cpp:28: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    //\
    \ Write your code here\n    long count = 0;\n    for(long i = 1; i < n; i++){\n\
    \        for(long j = i+1; j < n; j++){\n            for(long k = j+1; k < n;\
    \ k++){\n                if((i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0){\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp27vzhlcs: /tmp/tmp27vzhlcs.cpp:28: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    std::vector<long> a(n);\n    for(long i = 0; i < n; i++) {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for(long i = 0; i < n; i++) {\n   \
    \     for(long j = i + 1; j < n; j++) {\n            for(long k = j + 1; k < n;\
    \ k++) {\n                if((a[i] + a[j] + a[k]) % 3 == 0) {\n              \
    \      count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpiaw2sh9d: /tmp/tmpiaw2sh9d.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    return\
    \ (n-2)*(n-1)*n/6;\n}\nint main() {\n    auto candidate = get_max_triples;\n \
    \   assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpj3_sjkz6: /tmp/tmpj3_sjkz6.cpp:16: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n - 1; i++) {\n        for(long j = i +\
    \ 1; j < n; j++) {\n            for(long k = j + 1; k <= n; k++) {\n         \
    \       if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n     \
    \               count++;\n                }\n            }\n        }\n    }\n\
    \    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n \
    \   assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i <= n; i++) {\n        for(long j = i + 1;\
    \ j <= n; j++) {\n            for(long k = j + 1; k <= n; k++) {\n           \
    \     if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n       \
    \             count++;\n                }\n            }\n        }\n    }\n \
    \   return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n  \
    \  assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmphqoq7f5k: /tmp/tmphqoq7f5k.cpp:26: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n - 1; i++) {\n        for(long j = i +\
    \ 1; j < n; j++) {\n            for(long k = j + 1; k <= n; k++) {\n         \
    \       if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n     \
    \               count++;\n                }\n            }\n        }\n    }\n\
    \    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n \
    \   assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n - 1; i++) {\n        for(long j = i +\
    \ 1; j < n; j++) {\n            for(long k = j + 1; k <= n; k++) {\n         \
    \       if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n     \
    \               count++;\n                }\n            }\n        }\n    }\n\
    \    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n \
    \   assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    long *a = new long[n];\n    for(long i = 0; i < n; i++) {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for(long i = 0; i < n; i++) {\n   \
    \     for(long j = i + 1; j < n; j++) {\n            for(long k = j + 1; k < n;\
    \ k++) {\n                if((a[i] + a[j] + a[k]) % 3 == 0) {\n              \
    \      count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpibfr3utj: /tmp/tmpibfr3utj.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    long a[n];\n    for(long i = 0; i < n; i++) {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    for(long i = 0; i < n; i++) {\n        for(long\
    \ j = i + 1; j < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n  \
    \              if((a[i] + a[j] + a[k]) % 3 == 0) {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nint\
    \ main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) ==\
    \ (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n\
    \    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp99a99612: /tmp/tmp99a99612.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum\
    \ = i * i - i + 1;\n        if(sum % 3 == 0) {\n            count++;\n       \
    \ }\n    }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpxsyo57mg: /tmp/tmpxsyo57mg.cpp:24: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i <= n; i++) {\n        for(long j = i + 1;\
    \ j <= n; j++) {\n            for(long k = j + 1; k <= n; k++) {\n           \
    \     if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n       \
    \             count++;\n                }\n            }\n        }\n    }\n \
    \   return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n  \
    \  assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    long a[n];\n    for(long i = 0; i < n; i++) {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    for(long i = 0; i < n; i++) {\n        for(long\
    \ j = i + 1; j < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n  \
    \              if((a[i] + a[j] + a[k]) % 3 == 0) {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nint\
    \ main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) ==\
    \ (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n\
    \    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp99a99612: /tmp/tmp99a99612.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    long a[n];\n    for(long i = 0; i < n; i++) {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    for(long i = 0; i < n; i++) {\n        for(long\
    \ j = i + 1; j < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n  \
    \              if((a[i] + a[j] + a[k]) % 3 == 0) {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nint\
    \ main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) ==\
    \ (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n\
    \    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp99a99612: /tmp/tmp99a99612.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    std::vector<long> a(n);\n    for(long i = 0; i < n; i++) {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for(long i = 0; i < n; i++) {\n   \
    \     for(long j = i + 1; j < n; j++) {\n            for(long k = j + 1; k < n;\
    \ k++) {\n                if((a[i] + a[j] + a[k]) % 3 == 0) {\n              \
    \      count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpiaw2sh9d: /tmp/tmpiaw2sh9d.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    long sum = 0;\n    for(long i = 1; i < n; i++) {\n        sum\
    \ = i * i - i + 1;\n        for(long j = i + 1; j < n; j++) {\n            sum\
    \ += j * j - j + 1;\n            for(long k = j + 1; k < n; k++) {\n         \
    \       sum += k * k - k + 1;\n                if(sum % 3 == 0) {\n          \
    \          count++;\n                }\n                sum -= k * k - k + 1;\n\
    \            }\n            sum -= j * j - j + 1;\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpsc_86n00: /tmp/tmpsc_86n00.cpp:33: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    long a[n];\n    for(long i = 0; i < n; i++) {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    for(long i = 0; i < n; i++) {\n        for(long\
    \ j = i + 1; j < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n  \
    \              if((a[i] + a[j] + a[k]) % 3 == 0) {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nint\
    \ main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) ==\
    \ (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n\
    \    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp99a99612: /tmp/tmp99a99612.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n - 1; i++) {\n        for(long j = i +\
    \ 1; j < n; j++) {\n            for(long k = j + 1; k <= n; k++) {\n         \
    \       if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n     \
    \               count++;\n                }\n            }\n        }\n    }\n\
    \    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n \
    \   assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    long i = 1;\n    long j = 2;\n    long k = 3;\n    while(i <\
    \ n-2) {\n        j = i+1;\n        while(j < n-1) {\n            k = j+1;\n \
    \           while(k < n) {\n                if((i*i - i + 1 + j*j - j + 1 + k*k\
    \ - k + 1) % 3 == 0) {\n                    count++;\n                }\n    \
    \            k++;\n            }\n            j++;\n        }\n        i++;\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp7bbg1_9n: /tmp/tmp7bbg1_9n.cpp:35: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n - 1; i++) {\n        for(long j = i +\
    \ 1; j < n; j++) {\n            for(long k = j + 1; k <= n; k++) {\n         \
    \       if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n     \
    \               count++;\n                }\n            }\n        }\n    }\n\
    \    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n \
    \   assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n - 1; i++) {\n        for(long j = i +\
    \ 1; j < n; j++) {\n            for(long k = j + 1; k <= n; k++) {\n         \
    \       if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n     \
    \               count++;\n                }\n            }\n        }\n    }\n\
    \    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n \
    \   assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    //\
    \ Write your code here\n    long count = 0;\n    for(long i = 1; i < n; i++){\n\
    \        for(long j = i+1; j < n; j++){\n            for(long k = j+1; k < n;\
    \ k++){\n                if((i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0){\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp27vzhlcs: /tmp/tmp27vzhlcs.cpp:28: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        sum\
    \ = i * i - i + 1;\n        for(long j = i + 1; j < n; j++) {\n            sum\
    \ += j * j - j + 1;\n            for(long k = j + 1; k < n; k++) {\n         \
    \       sum += k * k - k + 1;\n                if(sum % 3 == 0) {\n          \
    \          count++;\n                }\n                sum -= k * k - k + 1;\n\
    \            }\n            sum -= j * j - j + 1;\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp4vj13gzh: /tmp/tmp4vj13gzh.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n - 1; i++) {\n        for(long j = i +\
    \ 1; j < n; j++) {\n            for(long k = j + 1; k <= n; k++) {\n         \
    \       if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n     \
    \               count++;\n                }\n            }\n        }\n    }\n\
    \    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n \
    \   assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    //\
    \ Write your code here\n    long count = 0;\n    for(long i = 1; i < n; i++){\n\
    \        for(long j = i+1; j < n; j++){\n            for(long k = j+1; k < n;\
    \ k++){\n                if((i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0){\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp27vzhlcs: /tmp/tmp27vzhlcs.cpp:28: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    long a[n];\n    for(long i = 0; i < n; i++) {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    for(long i = 0; i < n; i++) {\n        for(long\
    \ j = i + 1; j < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n  \
    \              if((a[i] + a[j] + a[k]) % 3 == 0) {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nint\
    \ main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) ==\
    \ (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n\
    \    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp99a99612: /tmp/tmp99a99612.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n - 1; i++) {\n        for(long j = i +\
    \ 1; j < n; j++) {\n            for(long k = j + 1; k <= n; k++) {\n         \
    \       if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n     \
    \               count++;\n                }\n            }\n        }\n    }\n\
    \    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n \
    \   assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ result = 0;\n    std::vector<long> a(n);\n    for (long i = 0; i < n; i++) {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n - 2; i++) {\n\
    \        for (long j = i + 1; j < n - 1; j++) {\n            for (long k = j +\
    \ 1; k < n; k++) {\n                if ((a[i] + a[j] + a[k]) % 3 == 0) {\n   \
    \                 result++;\n                }\n            }\n        }\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpva7mrbtq: /tmp/tmpva7mrbtq.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n - 1; i++) {\n        for(long j = i +\
    \ 1; j < n; j++) {\n            for(long k = j + 1; k <= n; k++) {\n         \
    \       if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n     \
    \               count++;\n                }\n            }\n        }\n    }\n\
    \    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n \
    \   assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660113590
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ count = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i + 1; j\
    \ < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n               \
    \ if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkzg5vczx: /tmp/tmpkzg5vczx.cpp:27: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113591

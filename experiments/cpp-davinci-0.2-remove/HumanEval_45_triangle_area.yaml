name: HumanEval_45_triangle_area
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given length of a side and\
  \ high return area for a triangle.\nfloat triangle_area(long a, long h) {\n"
tests: "}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((5),\
  \ (3)) == (7.5));\n    assert(candidate((2), (2)) == (2.0));\n    assert(candidate((10),\
  \ (8)) == (40.0));\n}\n"
completions: ['    return 0.5*a*h;', '    return 0.5*a*h;', '    return (a*h)/2;',
  '    return 0.5*a*h;', '  return 0.5*a*h;', '    return 0.5*a*h;', '    return 0.5*a*h;',
  '    return 0.5*a*h;', '    return 0.5 * a * h;', '    return 0.5 * a * h;', '    return
    0.5*a*h;', '  return 0.5*a*h;', '    return (float)a*h/2;', '    return 0.5*a*h;',
  '    return (float)a*h/2;', '    return (a*h)/2;', '    return 0.5 * a * h;', '    return
    0.5 * a * h;', '    return (0.5 * a * h);', '    return (a*h)/2;', '  return 0.5
    * a * h;', '  return 0.5*a*h;', '    return 0.5 * a * h;', '  return 0.5 * a *
    h;', '    return 0.5*a*h;', '    return (float)a*h/2;', '    return (float)0.5*a*h;',
  '    return 0.5*a*h;', '  return 0.5 * a * h;', '    return 0.5 * a * h;', '    return
    (float)a*h/2;', '    return 0.5*a*h;', '    return 0.5 * a * h;', '    return
    0.5*a*h;', '    return 0.5*a*h;', '    return (a*h)/2;', '    return 0.5*a*h;',
  '    return 0.5*a*h;', '    return 0.5*a*h;', '    return 0.5*a*h;', '    return
    0.5 * a * h;', '    return 0.5 * a * h;', '    return (float)(a*h)/2;', '    return
    0.5*a*h;', '    return 0.5*a*h;', '    return (a*h)/2;', '    return (float)a*h/2;',
  '    return 0.5*a*h;', '    return 0.5*a*h;', '    return 0.5*a*h;', '    return
    0.5*a*h;', '    return 0.5 * a * h;', '    return 0.5*a*h;', '    return 0.5*a*h;',
  '    return 0.5*a*h;', '    return 0.5*a*h;', '    return 0.5*a*h;', '    return
    (a*h)/2;', '  return 0.5 * a * h;', '  return 0.5*a*h;', "    float area = 0.5*a*h;\n\
    \    return area;", '    return 0.5*a*h;', '    return 0.5*a*h;', '    return
    0.5*a*h;', '  return 0.5*a*h;', '    return 0.5*a*h;', '    return (float)a*h/2;',
  '    return (a*h)/2;', '    return 0.5 * a * h;', '    return (float)a*h/2;', '    return
    0.5*a*h;', '    return 0.5 * a * h;', '    return 0.5*a*h;', '    return (a*h)/2;',
  '    return 0.5*a*h;', '  return (a*h)/2;', '  return (float)a*h/2;', '  return
    (float)(a*h)/2;', '    return 0.5*a*h;', '  return 0.5 * a * h;', '    return
    0.5 * a * h;', "    assert(a > 0 && h > 0);\n    return 0.5 * a * h;", '  return
    0.5*a*h;', '    return 0.5*a*h;', '    return (float)(a*h)/2;', '    return 0.5*a*h;',
  '    return 0.5*a*h;', '    return (float)a*h/2;', '    return a*h/2;', '  return
    0.5 * a * h;', '    return 0.5*a*h;', '    return 0.5*a*h;', '  return 0.5 * a
    * h;', '    return 0.5 * a * h;', '    return 0.5*a*h;', "    float area = 0.5\
    \ * a * h;\n    return area;", '    return (float)a*h/2;', '    return 0.5*a*h;',
  "    float area = 0.5 * a * h;\n    return area;", '    return (a*h)/2;', '    return
    (a*h)/2;', '    return (0.5 * a * h);', '    return (float)a*h/2;', '    return
    0.5*a*h;', '    return (a*h)/2;', '  return 0.5*a*h;', '    return (a*h)/2;',
  "    float area = 0.5 * a * h;\n    return area;", '    return (float)(a*h)/2;',
  '    return 0.5 * a * h;', '    return 0.5*a*h;', '    return 0.5*a*h;', '    return
    0.5*a*h;', '    return (float)a*h/2;', '    return (a*h)/2;', '    return (a*h)/2;',
  '  return (a*h)/2;', '    return (float)1/2*a*h;', '    return 0.5*a*h;', '    return
    0.5*a*h;', '  return 0.5*a*h;', '    return 0.5*a*h;', '    return 0.5 * a * h;',
  '  return 0.5*a*h;', '  return 0.5 * a * h;', '    return 0.5*a*h;', '  return 0.5*a*h;',
  '    return 0.5 * a * h;', '    return 0.5*a*h;', '  return (a*h)/2;', '    return
    (a*h)/2;', '    return 0.5 * a * h;', '    return 0.5 * a * h;', '    return 0.5*a*h;',
  "    float area = 0.5 * a * h;\n    return area;", '    return (a*h)/2;', '    return
    (float)a*h/2;', '    return (a*h)/2;', '    return (float)a*h/2;', '    return
    (a*h)/2;', '  return 0.5*a*h;', '    return 0.5*a*h;', '    return (float)0.5*a*h;',
  '    return (a*h)/2;', '    return 0.5*a*h;', '  return 0.5*a*h;', '  return (a*h)/2;',
  '    return 0.5*a*h;', '    return (float)(a*h)/2;', '    return (float)(a*h)/2;',
  '    return (float)a*h/2;', '    return 0.5 * a * h;', '    return 0.5*a*h;', '  return
    (float)a*h/2;', '    return 0.5*a*h;', '    return 0.5*a*h;', '    return 0.5*a*h;',
  '    return 0.5*a*h;', '    return 0.5 * a * h;', '    return 0.5*a*h;', '    return
    (a*h)/2;', '    return 0.5*a*h;', "    assert(a > 0 && h > 0);\n    return 0.5\
    \ * a * h;", '    return 0.5*a*h;', '    return 0.5 * a * h;', "    float area\
    \ = 0.5 * a * h;\n    return area;", '    return (float)a*h/2;', "    float area\
    \ = (a*h)/2;\n    return area;", '    return (a*h)/2;', '    return 0.5 * a *
    h;', '    return 0.5*a*h;', '    return 0.5 * a * h;', '    return 0.5*a*h;',
  '    return (float)a*h/2;', '    return (a*h)/2;', '    return 0.5*a*h;', '    return
    (a*h)/2;', '  return 0.5*a*h;', '  return 0.5*a*h;', '    return 0.5*a*h;', '    return
    (a*h)/2;', '    return 0.5 * a * h;', '    return (float)a*h/2;', '    return
    0.5*a*h;', '    return 0.5*a*h;', '  return 0.5 * a * h;', '    return (a*h)/2;',
  '    return 0.5*a*h;', '  return (float)a*h/2;', '  return 0.5*a*h;', '    return
    0.5 * a * h;', '    return 0.5*a*h;', "    float area = 0.5 * a * h;\n    return\
    \ area;", '    return 0.5*a*h;', '    return 0.5 * a * h;', '  return 0.5 * a
    * h;', '    return (a*h)/2;', '    return 0.5 * a * h;', '    return 0.5*a*h;',
  '    return 0.5*a*h;']
stop_tokens:
- "\n}"

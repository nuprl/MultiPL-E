name: HumanEval_76_is_simple_power
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Your task is to write a function\
  \ that returns true if a number x is a simple\n// power of n and false in other\
  \ cases.\n// x is a simple power of n if n**int=x\n// For example:\nbool is_simple_power(long\
  \ x, long n) {\n"
tests: "}\nint main() {\n    auto candidate = is_simple_power;\n    assert(candidate((16),\
  \ (2)) == (true));\n    assert(candidate((143214), (16)) == (false));\n    assert(candidate((4),\
  \ (2)) == (true));\n    assert(candidate((9), (3)) == (true));\n    assert(candidate((16),\
  \ (4)) == (true));\n    assert(candidate((24), (2)) == (false));\n    assert(candidate((128),\
  \ (4)) == (false));\n    assert(candidate((12), (6)) == (false));\n    assert(candidate((1),\
  \ (1)) == (true));\n    assert(candidate((1), (12)) == (true));\n}\n"
completions: ["  if (x == 1) return true;\n  if (x % n != 0) return false;\n  return\
    \ is_simple_power(x / n, n);", "    if (x == 1) return true;\n    if (x == 0)\
    \ return false;\n    if (n == 1) return true;\n    if (n == 0) return false;\n\
    \    if (x == n) return true;\n    if (x < n) return false;\n    if (x % n !=\
    \ 0) return false;\n    return is_simple_power(x / n, n);", "    if (x == 1) return\
    \ true;\n    if (x < n) return false;\n    if (x % n != 0) return false;\n   \
    \ return is_simple_power(x / n, n);", "    if (x == 1) {\n        return true;\n\
    \    }\n    if (n == 1) {\n        return false;\n    }\n    if (x == n) {\n \
    \       return true;\n    }\n    if (x % n != 0) {\n        return false;\n  \
    \  }\n    return is_simple_power(x / n, n);", "  if (x == 1) return true;\n  if\
    \ (x == 0) return false;\n  if (n == 1) return false;\n  if (n == 0) return false;\n\
    \  if (x < 0) return false;\n  if (n < 0) return false;\n  if (x == n) return\
    \ true;\n  if (x % n != 0) return false;\n  return is_simple_power(x / n, n);",
  "  if (x == 1) return true;\n  if (x % n != 0) return false;\n  return is_simple_power(x\
    \ / n, n);", "    if (x == 1) return true;\n    if (x == 0) return false;\n  \
    \  if (n == 1) return false;\n    if (n == 0) return false;\n    if (x == n) return\
    \ true;\n    if (x < n) return false;\n    if (x % n != 0) return false;\n   \
    \ return is_simple_power(x / n, n);", "    if (x == 1) return true;\n    if (x\
    \ == 0) return false;\n    if (n == 1) return true;\n    if (n == 0) return false;\n\
    \    if (x < 0) return false;\n    if (n < 0) return false;\n    if (x == n) return\
    \ true;\n    if (x % n != 0) return false;\n    return is_simple_power(x / n,\
    \ n);", "  if (x == 1) return true;\n  if (x == 0) return false;\n  if (n == 1)\
    \ return false;\n  if (n == 0) return false;\n  if (x < 0) return false;\n  if\
    \ (n < 0) return false;\n  if (x == n) return true;\n  if (x % n != 0) return\
    \ false;\n  if (x == n * n) return true;\n  return is_simple_power(x / n, n);",
  "  if (x == 1) return true;\n  if (x < 1 || n < 1) return false;\n  long i = 1;\n\
    \  while (pow(n, i) < x) {\n    i++;\n  }\n  return pow(n, i) == x;", "  if (x\
    \ == 1) return true;\n  if (x == 0) return false;\n  if (n == 1) return true;\n\
    \  if (n == 0) return false;\n  if (x == n) return true;\n  if (x < n) return\
    \ false;\n  if (x % n != 0) return false;\n  if (x == n * n) return true;\n  return\
    \ is_simple_power(x / n, n);", "  if (x == 1) {\n    return true;\n  }\n  if (n\
    \ == 1) {\n    return false;\n  }\n  long i = 1;\n  while (pow(n, i) <= x) {\n\
    \    if (pow(n, i) == x) {\n      return true;\n    }\n    i++;\n  }\n  return\
    \ false;", "  double result = log(x) / log(n);\n  return result == (int)result;",
  "  if (x == 1) return true;\n  if (x == n) return true;\n  if (x % n != 0) return\
    \ false;\n  return is_simple_power(x / n, n);", "    if (x == 1) return true;\n\
    \    if (x == n) return true;\n    if (x % n != 0) return false;\n    return is_simple_power(x\
    \ / n, n);", "  if (x == 1) return true;\n  long i = 2;\n  while (i <= n) {\n\
    \    long j = 2;\n    long p = pow(i, j);\n    while (p <= x && p > 0) {\n   \
    \   if (p == x) return true;\n      j++;\n      p = pow(i, j);\n    }\n    i++;\n\
    \  }\n  return false;", "  if (x == 1) return true;\n  if (x == 0) return false;\n\
    \  if (n == 1) return false;\n  if (n == 0) return false;\n  if (x < 0) return\
    \ false;\n  if (n < 0) return false;\n  if (x == n) return true;\n  if (x % n\
    \ != 0) return false;\n  return is_simple_power(x / n, n);", "    // your code\
    \ here\n    if(x==1) return true;\n    if(x==0) return false;\n    if(n==0) return\
    \ false;\n    if(n==1) return false;\n    if(x==n) return true;\n    if(x<n) return\
    \ false;\n    while(x>n){\n        if(x%n!=0) return false;\n        x/=n;\n \
    \   }\n    if(x==n) return true;\n    return false;", "    if (x == 1) return\
    \ true;\n    if (x == 0) return false;\n    if (n == 1) return true;\n    if (n\
    \ == 0) return false;\n    if (x < 0) return false;\n    if (n < 0) return false;\n\
    \    if (x == n) return true;\n    if (x < n) return false;\n    if (x % n !=\
    \ 0) return false;\n    return is_simple_power(x / n, n);", "  if (x == 1) return\
    \ true;\n  if (x == n) return true;\n  if (x % n != 0) return false;\n  return\
    \ is_simple_power(x / n, n);", "    if (x == 1) return true;\n    if (x < n) return\
    \ false;\n    if (x % n != 0) return false;\n    return is_simple_power(x / n,\
    \ n);", "  if (x == 1) return true;\n  if (x < n) return false;\n  if (x % n !=\
    \ 0) return false;\n  return is_simple_power(x / n, n);", "  if (x == 1) return\
    \ true;\n  if (x < n) return false;\n  if (x % n != 0) return false;\n  return\
    \ is_simple_power(x / n, n);", "  if (x == 1) return true;\n  if (x == n) return\
    \ true;\n  if (x < n) return false;\n  if (x % n != 0) return false;\n  return\
    \ is_simple_power(x / n, n);", "  long i = 1;\n  while (pow(n, i) < x) {\n   \
    \ i++;\n  }\n  if (pow(n, i) == x) {\n    return true;\n  }\n  return false;",
  "  if (x == 1) return true;\n  if (x == 0) return false;\n  if (n == 1) return false;\n\
    \  if (n == 0) return false;\n  if (x == n) return true;\n  if (x < n) return\
    \ false;\n  if (x % n != 0) return false;\n  return is_simple_power(x / n, n);",
  "  if (x == 1) return true;\n  if (x == 0) return false;\n  if (n == 1) return false;\n\
    \  if (n == 0) return false;\n  if (x < 0) return false;\n  if (n < 0) return\
    \ false;\n  if (x == n) return true;\n  if (x < n) return false;\n  if (x % n\
    \ != 0) return false;\n  return is_simple_power(x / n, n);", "  if (x == 1) return\
    \ true;\n  if (x == 0) return false;\n  if (n == 1) return false;\n  if (n ==\
    \ 0) return false;\n  if (x == n) return true;\n  if (x < n) return false;\n \
    \ if (x % n != 0) return false;\n  return is_simple_power(x / n, n);", "  if (x\
    \ == 1) return true;\n  if (x == 0) return false;\n  if (n == 1) return true;\n\
    \  if (n == 0) return false;\n  if (x % n != 0) return false;\n  return is_simple_power(x\
    \ / n, n);", "  if (x == 1) return true;\n  if (x < n) return false;\n  if (x\
    \ % n != 0) return false;\n  return is_simple_power(x / n, n);", "  if (x == 1)\
    \ return true;\n  if (x == 0) return false;\n  if (n == 1) return false;\n  if\
    \ (n == 0) return false;\n  if (x == n) return true;\n  if (x % n != 0) return\
    \ false;\n  return is_simple_power(x / n, n);", "  // your code here\n  if(x==1)\n\
    \    return true;\n  if(x==n)\n    return true;\n  if(x%n!=0)\n    return false;\n\
    \  else\n    return is_simple_power(x/n,n);", "  if (x == 1) return true;\n  if\
    \ (x % n != 0) return false;\n  return is_simple_power(x / n, n);", "  if (x ==\
    \ 1) return true;\n  if (x == 0) return false;\n  if (n == 1) return false;\n\
    \  if (n == 0) return false;\n  if (x == n) return true;\n  if (x < n) return\
    \ false;\n  if (x % n != 0) return false;\n  return is_simple_power(x / n, n);",
  "  if (x == 1) return true;\n  if (x < n) return false;\n  if (x % n != 0) return\
    \ false;\n  return is_simple_power(x / n, n);", "  if (x == 1) return true;\n\
    \  if (x == n) return true;\n  if (x % n != 0) return false;\n  return is_simple_power(x\
    \ / n, n);", "  if (x == 1) return true;\n  if (x == 0) return false;\n  if (n\
    \ == 1) return true;\n  if (n == 0) return false;\n  if (x < 0) return false;\n\
    \  if (n < 0) return false;\n  if (x == n) return true;\n  if (x < n) return false;\n\
    \  if (x % n != 0) return false;\n  return is_simple_power(x / n, n);", "  if\
    \ (x == 1) return true;\n  if (x == n) return true;\n  if (x % n != 0) return\
    \ false;\n  return is_simple_power(x / n, n);", "  if (x == 1) return true;\n\
    \  if (x == n) return true;\n  if (x % n != 0) return false;\n  return is_simple_power(x\
    \ / n, n);", "    if (x == 1) return true;\n    if (x == n) return true;\n   \
    \ if (x < n) return false;\n    if (x % n != 0) return false;\n    return is_simple_power(x\
    \ / n, n);", "  if (x == 1) return true;\n  if (x == n) return true;\n  if (x\
    \ % n != 0) return false;\n  return is_simple_power(x / n, n);", "    if (x ==\
    \ 1) return true;\n    if (x % n != 0) return false;\n    return is_simple_power(x\
    \ / n, n);", "  if (x == 1) return true;\n  if (x == n) return true;\n  if (x\
    \ % n != 0) return false;\n  return is_simple_power(x / n, n);", "    if (n ==\
    \ 1) {\n        return x == 1;\n    }\n    if (x == 1) {\n        return false;\n\
    \    }\n    if (x == n) {\n        return true;\n    }\n    if (x < n) {\n   \
    \     return false;\n    }\n    double log_x = log(x) / log(n);\n    return log_x\
    \ == (int)log_x;", "  if (x == 1) {\n    return true;\n  }\n  if (n == 1) {\n\
    \    return false;\n  }\n  if (x == n) {\n    return true;\n  }\n  if (x < n)\
    \ {\n    return false;\n  }\n  if (x % n != 0) {\n    return false;\n  }\n  return\
    \ is_simple_power(x / n, n);", "  if (x == 1) return true;\n  if (x == n) return\
    \ true;\n  if (x % n != 0) return false;\n  return is_simple_power(x / n, n);",
  "  if (x == 1) return true;\n  if (x == n) return true;\n  if (x % n != 0) return\
    \ false;\n  return is_simple_power(x / n, n);", "  if (x == 1) return true;\n\
    \  if (x < n) return false;\n  if (x % n != 0) return false;\n  return is_simple_power(x\
    \ / n, n);", "    if (x == 1) return true;\n    if (x == n) return true;\n   \
    \ if (x % n != 0) return false;\n    return is_simple_power(x / n, n);", "   \
    \ if (x == 1) return true;\n    if (x == 0) return false;\n    if (n == 1) return\
    \ true;\n    if (n == 0) return false;\n    if (x < 0) return false;\n    if (n\
    \ < 0) return false;\n    if (x == n) return true;\n    if (x < n) return false;\n\
    \    if (x % n != 0) return false;\n    if (x == n * n) return true;\n    return\
    \ is_simple_power(x / n, n);", "    if (x == 1) return true;\n    if (x == 0)\
    \ return false;\n    if (n == 1) return false;\n    if (n == 0) return false;\n\
    \    if (x < 0) return false;\n    if (n < 0) return false;\n    if (x == n) return\
    \ true;\n    if (x % n != 0) return false;\n    return is_simple_power(x / n,\
    \ n);", "  if (x == 1) {\n    return true;\n  }\n  if (x % n != 0) {\n    return\
    \ false;\n  }\n  return is_simple_power(x / n, n);", "  if (x == 1) return true;\n\
    \  if (x == n) return true;\n  if (x % n != 0) return false;\n  return is_simple_power(x\
    \ / n, n);", "  if (x == 1) return true;\n  if (x == 0) return false;\n  if (n\
    \ == 1) return true;\n  if (n == 0) return false;\n  if (x == n) return true;\n\
    \  if (x < n) return false;\n  if (x % n != 0) return false;\n  return is_simple_power(x\
    \ / n, n);", "  if (x == 1) return true;\n  if (x == 0) return false;\n  if (n\
    \ == 1) return false;\n  if (n == 0) return false;\n  if (x == n) return true;\n\
    \  if (x < n) return false;\n  if (x % n != 0) return false;\n  return is_simple_power(x\
    \ / n, n);", "  if (x == 1) return true;\n  if (x == 0) return false;\n  if (n\
    \ == 1) return false;\n  if (n == 0) return false;\n  if (x < 0) return false;\n\
    \  if (n < 0) return false;\n  if (x == n) return true;\n  long i = 2;\n  while\
    \ (pow(n, i) <= x) {\n    if (pow(n, i) == x) return true;\n    i++;\n  }\n  return\
    \ false;", "  if (x == 1) return true;\n  if (x < n) return false;\n  if (x %\
    \ n != 0) return false;\n  return is_simple_power(x / n, n);", "  if (x == 1)\
    \ return true;\n  if (x == 0) return false;\n  if (n == 1) return false;\n  if\
    \ (n == 0) return false;\n  if (x == n) return true;\n  if (x < n) return false;\n\
    \  if (x % n != 0) return false;\n  return is_simple_power(x / n, n);", "  if\
    \ (x == 1) return true;\n  if (x < 1 || n < 1) return false;\n  long i = 1;\n\
    \  while (pow(n, i) < x) {\n    i++;\n  }\n  return pow(n, i) == x;", "  if (x\
    \ == 1) return true;\n  if (x == 0) return false;\n  if (n == 1) return false;\n\
    \  if (n == 0) return false;\n  if (x == n) return true;\n  if (x < n) return\
    \ false;\n  if (x % n != 0) return false;\n  return is_simple_power(x / n, n);",
  "  // your code here\n  if(x==1)\n    return true;\n  if(x==n)\n    return true;\n\
    \  if(x%n!=0)\n    return false;\n  return is_simple_power(x/n,n);", "    if (x\
    \ == 1) {\n        return true;\n    }\n    if (x == 0) {\n        return false;\n\
    \    }\n    if (n == 1) {\n        return false;\n    }\n    if (n == 0) {\n \
    \       return false;\n    }\n    if (x < 0) {\n        return false;\n    }\n\
    \    if (n < 0) {\n        return false;\n    }\n    if (x == n) {\n        return\
    \ true;\n    }\n    if (x % n != 0) {\n        return false;\n    }\n    return\
    \ is_simple_power(x / n, n);", "  // your code here\n  double a = log(x)/log(n);\n\
    \  if(a == (int)a)\n  return true;\n  else\n  return false;", "  if (x == 1) return\
    \ true;\n  if (x < n) return false;\n  if (x % n != 0) return false;\n  return\
    \ is_simple_power(x / n, n);", "  if (x == 1) return true;\n  if (x % n != 0)\
    \ return false;\n  return is_simple_power(x / n, n);", "  if (n == 1) return x\
    \ == 1;\n  if (x == 1) return n == 1;\n  if (x == n) return true;\n  if (x % n\
    \ != 0) return false;\n  return is_simple_power(x / n, n);", "    if (x == 1)\
    \ return true;\n    if (x == n) return true;\n    if (x % n != 0) return false;\n\
    \    return is_simple_power(x / n, n);", "  if (x == n) return true;\n  if (x\
    \ < n) return false;\n  if (x % n != 0) return false;\n  return is_simple_power(x\
    \ / n, n);", "  if (x == 1) return true;\n  if (x % n != 0) return false;\n  return\
    \ is_simple_power(x / n, n);", "  if (x == 1) return true;\n  if (x % n != 0)\
    \ return false;\n  return is_simple_power(x / n, n);", "  if (x == 1) {\n    return\
    \ true;\n  }\n  if (n == 1) {\n    return false;\n  }\n  if (x == n) {\n    return\
    \ true;\n  }\n  if (x < n) {\n    return false;\n  }\n  long i = 2;\n  while (pow(n,\
    \ i) <= x) {\n    if (pow(n, i) == x) {\n      return true;\n    }\n    i++;\n\
    \  }\n  return false;", "  // your code here\n  long i = 1;\n  while (pow(n, i)\
    \ < x) {\n    i++;\n  }\n  if (pow(n, i) == x) {\n    return true;\n  }\n  return\
    \ false;", "    if (x == 1) return true;\n    if (x < n) return false;\n    if\
    \ (x % n != 0) return false;\n    return is_simple_power(x / n, n);", "  if (x\
    \ == 1) return true;\n  if (x % n != 0) return false;\n  return is_simple_power(x\
    \ / n, n);", "  if (x == 1) return true;\n  if (x == 0) return false;\n  if (n\
    \ == 1) return false;\n  if (n == 0) return false;\n  if (x == n) return true;\n\
    \  if (x % n != 0) return false;\n  return is_simple_power(x / n, n);", "    if\
    \ (x == 1) {\n        return true;\n    }\n    long i = 2;\n    while (i < x)\
    \ {\n        i *= n;\n        if (i == x) {\n            return true;\n      \
    \  }\n    }\n    return false;", "  if (x == 1) return true;\n  if (x < n) return\
    \ false;\n  if (x % n != 0) return false;\n  return is_simple_power(x / n, n);",
  "  if (x == 1) return true;\n  if (x == n) return true;\n  if (x % n != 0) return\
    \ false;\n  return is_simple_power(x / n, n);", "  if (x == 1) return true;\n\
    \  if (x == 0) return false;\n  if (n == 1) return true;\n  if (n == 0) return\
    \ false;\n  if (x == n) return true;\n  if (x < n) return false;\n  if (x % n\
    \ != 0) return false;\n  return is_simple_power(x / n, n);", "    if (x == 1)\
    \ return true;\n    if (x == n) return true;\n    if (x % n != 0) return false;\n\
    \    return is_simple_power(x / n, n);", "  // your code here\n  if(x==1)\n  \
    \  return true;\n  if(x==0)\n    return false;\n  if(n==1)\n    return false;\n\
    \  if(n==0)\n    return false;\n  if(x==n)\n    return true;\n  if(x%n!=0)\n \
    \   return false;\n  return is_simple_power(x/n,n);", "    if (x == 1) return\
    \ true;\n    if (x < n) return false;\n    if (x % n != 0) return false;\n   \
    \ return is_simple_power(x / n, n);", "  // your code here\n  if(x==1)\n    return\
    \ true;\n  if(n==1)\n    return false;\n  if(x==n)\n    return true;\n  if(x%n==0)\n\
    \    return is_simple_power(x/n,n);\n  return false;", "    if (x == 1) return\
    \ true;\n    if (x == n) return true;\n    if (x % n != 0) return false;\n   \
    \ return is_simple_power(x / n, n);", "  if (x == 1) return true;\n  if (x ==\
    \ 0) return false;\n  if (n == 1) return false;\n  if (n == 0) return false;\n\
    \  if (x == n) return true;\n  if (x % n != 0) return false;\n  return is_simple_power(x\
    \ / n, n);", "  // your code here\n  if(x==1)\n    return true;\n  if(n==1)\n\
    \    return false;\n  if(x%n!=0)\n    return false;\n  return is_simple_power(x/n,n);",
  "  if (x == 1) return true;\n  if (x % n != 0) return false;\n  return is_simple_power(x\
    \ / n, n);", "  if (x == 1) return true;\n  if (x == 0) return false;\n  if (n\
    \ == 1) return false;\n  if (n == 0) return false;\n  if (x < 0) return false;\n\
    \  if (n < 0) return false;\n  if (x == n) return true;\n  if (x % n != 0) return\
    \ false;\n  return is_simple_power(x / n, n);", "  if (x == 1) return true;\n\
    \  if (x < n) return false;\n  while (x % n == 0) {\n    x /= n;\n  }\n  return\
    \ x == 1;", "  if (x == 1) return true;\n  if (x == 0) return false;\n  if (n\
    \ == 1) return true;\n  if (n == 0) return false;\n  if (x < 0) return false;\n\
    \  if (n < 0) return false;\n  if (n == 2) return (x & (x - 1)) == 0;\n  if (x\
    \ == n) return true;\n  if (x % n != 0) return false;\n  return is_simple_power(x\
    \ / n, n);", "    if (x == 1) return true;\n    if (x == n) return true;\n   \
    \ if (x % n != 0) return false;\n    return is_simple_power(x / n, n);", "  if\
    \ (x == 1) return true;\n  if (x == 0) return false;\n  if (n == 1) return true;\n\
    \  if (n == 0) return false;\n  if (x % n != 0) return false;\n  return is_simple_power(x\
    \ / n, n);", "  if (x == 1) return true;\n  if (x == n) return true;\n  if (x\
    \ % n != 0) return false;\n  return is_simple_power(x / n, n);", "  // your code\
    \ here\n  if(x==1) return true;\n  if(n==1) return false;\n  if(x==n) return true;\n\
    \  if(x%n!=0) return false;\n  return is_simple_power(x/n,n);", "  if (x == 1)\
    \ return true;\n  if (x == n) return true;\n  if (x % n != 0) return false;\n\
    \  return is_simple_power(x / n, n);", "    if (x == 1) return true;\n    if (x\
    \ < n) return false;\n    if (x % n != 0) return false;\n    return is_simple_power(x\
    \ / n, n);", "  if (x == 1) return true;\n  if (x == 0) return false;\n  if (n\
    \ == 1) return false;\n  if (n == 0) return false;\n  if (x == n) return true;\n\
    \  if (x < n) return false;\n  while (x > n) {\n    if (x % n != 0) return false;\n\
    \    x /= n;\n  }\n  return x == n;", "  // your code here\n  if(x==1) return\
    \ true;\n  if(n==1) return false;\n  if(x==n) return true;\n  if(x<n) return false;\n\
    \  long temp=n;\n  while(temp<x){\n    temp*=n;\n  }\n  if(temp==x) return true;\n\
    \  return false;", "  if (x == 1) {\n    return true;\n  }\n  if (n == 1) {\n\
    \    return false;\n  }\n  long i = 1;\n  while (pow(n, i) < x) {\n    i++;\n\
    \  }\n  if (pow(n, i) == x) {\n    return true;\n  }\n  return false;", "  if\
    \ (x == 1) return true;\n  if (x == n) return true;\n  if (x < n) return false;\n\
    \  if (x % n != 0) return false;\n  return is_simple_power(x / n, n);", "  if\
    \ (x == 1) return true;\n  if (x == 0) return false;\n  if (n == 1) return false;\n\
    \  if (n == 0) return false;\n  if (x < 0) return false;\n  if (n < 0) return\
    \ false;\n  if (x == n) return true;\n  if (x % n != 0) return false;\n  return\
    \ is_simple_power(x / n, n);", "    if (x == 1) {\n        return true;\n    }\n\
    \    if (n == 1) {\n        return false;\n    }\n    if (x == n) {\n        return\
    \ true;\n    }\n    if (x < n) {\n        return false;\n    }\n    if (x % n\
    \ != 0) {\n        return false;\n    }\n    return is_simple_power(x / n, n);",
  "  // your code here\n  if(x==1)\n  return true;\n  else if(x<1)\n  return false;\n\
    \  else\n  {\n    while(x>1)\n    {\n      if(x%n!=0)\n      return false;\n \
    \     x=x/n;\n    }\n    return true;\n  }", "  if (x == 1) return true;\n  if\
    \ (x % n != 0) return false;\n  return is_simple_power(x / n, n);", "  if (x ==\
    \ 1) return true;\n  if (x < n) return false;\n  if (x % n != 0) return false;\n\
    \  return is_simple_power(x / n, n);", "  if (x == 1) return true;\n  if (x <\
    \ n) return false;\n  if (x % n != 0) return false;\n  return is_simple_power(x\
    \ / n, n);", "  if (x == 1) return true;\n  if (x == 0) return false;\n  if (n\
    \ == 1) return false;\n  if (n == 0) return false;\n  if (x < 0) return false;\n\
    \  if (n < 0) return false;\n  double a = log(x) / log(n);\n  if (a == (int)a)\
    \ return true;\n  return false;", "  if (x == 1) return true;\n  if (x < n) return\
    \ false;\n  if (x % n != 0) return false;\n  return is_simple_power(x / n, n);",
  "  if (x == 1) return true;\n  if (x < n) return false;\n  double log_x = log(x)\
    \ / log(n);\n  return log_x == (int)log_x;", "  if (x == 1) return true;\n  if\
    \ (x == 0) return false;\n  if (n == 1) return false;\n  if (n == 0) return false;\n\
    \  if (x < 0) return false;\n  if (n < 0) return false;\n  if (x == n) return\
    \ true;\n  if (x < n) return false;\n  long i = 2;\n  long n_pow = n;\n  while\
    \ (n_pow < x) {\n    n_pow *= n;\n    if (n_pow == x) return true;\n  }\n  return\
    \ false;", "  if (x == 1) return true;\n  if (x == 0) return false;\n  if (n ==\
    \ 1) return false;\n  if (n == 0) return false;\n  if (x == n) return true;\n\
    \  if (x < n) return false;\n  long temp = n;\n  while (temp < x) {\n    temp\
    \ *= n;\n  }\n  if (temp == x)\n    return true;\n  else\n    return false;",
  "  if (x == 1) return true;\n  if (x < n) return false;\n  if (x % n != 0) return\
    \ false;\n  return is_simple_power(x / n, n);", "  if (x == 1) {\n    return true;\n\
    \  }\n  if (n == 1) {\n    return false;\n  }\n  if (x == n) {\n    return true;\n\
    \  }\n  if (x % n != 0) {\n    return false;\n  }\n  return is_simple_power(x\
    \ / n, n);", "  if (x == 1) return true;\n  if (x == 0) return false;\n  if (n\
    \ == 1) return false;\n  if (n == 0) return false;\n  if (x < 0) return false;\n\
    \  if (n < 0) return false;\n  if (x == n) return true;\n  if (x % n != 0) return\
    \ false;\n  if (x / n == 1) return true;\n  return is_simple_power(x / n, n);",
  "    if (x == 1) return true;\n    long i = 2;\n    while (i <= x) {\n        if\
    \ (i == x) return true;\n        i *= n;\n    }\n    return false;", "  if (x\
    \ == 1) return true;\n  if (x == 0) return false;\n  if (n == 1) return false;\n\
    \  if (n == 0) return false;\n  if (x == n) return true;\n  if (x < n) return\
    \ false;\n  if (x % n != 0) return false;\n  return is_simple_power(x / n, n);",
  "  long power = 1;\n  for (int i = 0; i < 100; i++) {\n    power *= n;\n    if (power\
    \ == x) {\n      return true;\n    }\n  }\n  return false;", "  if (x == 1) return\
    \ true;\n  if (x == 0) return false;\n  if (n == 1) return false;\n  if (n ==\
    \ 0) return false;\n  if (x == n) return true;\n  if (x < n) return false;\n \
    \ if (x % n != 0) return false;\n  return is_simple_power(x / n, n);", "  if (x\
    \ == 1) return true;\n  if (x == n) return true;\n  if (x < n) return false;\n\
    \  if (x % n != 0) return false;\n  return is_simple_power(x / n, n);", "  if\
    \ (x == 1) return true;\n  if (x < n) return false;\n  if (x % n != 0) return\
    \ false;\n  return is_simple_power(x / n, n);", "  if (x == 1) return true;\n\
    \  if (x == 0) return false;\n  if (n == 1) return true;\n  if (n == 0) return\
    \ false;\n  if (x == n) return true;\n  if (x < n) return false;\n  if (x % n\
    \ != 0) return false;\n  return is_simple_power(x / n, n);", "  // your code here\n\
    \  if(x==1)\n    return true;\n  if(x==n)\n    return true;\n  if(x%n!=0)\n  \
    \  return false;\n  return is_simple_power(x/n,n);", "    if (x == 1) {\n    \
    \    return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n  \
    \  long temp = n;\n    while (temp < x) {\n        temp *= n;\n    }\n    if (temp\
    \ == x) {\n        return true;\n    }\n    return false;", "    if (x == 1) return\
    \ true;\n    if (x == 0) return false;\n    if (n == 1) return false;\n    if\
    \ (n == 0) return false;\n    if (x == n) return true;\n    if (x % n != 0) return\
    \ false;\n    return is_simple_power(x / n, n);", "  if(x==1) return true;\n \
    \ if(x%n!=0) return false;\n  return is_simple_power(x/n,n);", "  if (x == 1)\
    \ return true;\n  if (x == n) return true;\n  if (x < n) return false;\n  return\
    \ is_simple_power(x / n, n);", "  if (x == 1) return true;\n  if (x == 0) return\
    \ false;\n  if (n == 1) return false;\n  if (n == 0) return false;\n  if (x <\
    \ 0) return false;\n  if (n < 0) return false;\n  long i = 1;\n  while (pow(n,\
    \ i) <= x) {\n    if (pow(n, i) == x) return true;\n    i++;\n  }\n  return false;",
  "  if (x == 1) return true;\n  if (x == 0) return false;\n  if (n == 1) return true;\n\
    \  if (n == 0) return false;\n  if (x < 0) return false;\n  if (n < 0) return\
    \ false;\n  if (x == n) return true;\n  if (x % n != 0) return false;\n  return\
    \ is_simple_power(x / n, n);", "  if (x == 1) return true;\n  if (x == 0) return\
    \ false;\n  if (n == 1) return true;\n  if (n == 0) return false;\n  if (x ==\
    \ n) return true;\n  if (x % n != 0) return false;\n  return is_simple_power(x\
    \ / n, n);", "  if (x == 1) {\n    return true;\n  }\n  if (x == 0) {\n    return\
    \ false;\n  }\n  if (n == 1) {\n    return true;\n  }\n  if (n == 0) {\n    return\
    \ false;\n  }\n  if (x % n != 0) {\n    return false;\n  }\n  return is_simple_power(x\
    \ / n, n);", "  if (x == 1) return true;\n  if (x == 0) return false;\n  if (n\
    \ == 1) return true;\n  if (n == 0) return false;\n  if (x == n) return true;\n\
    \  if (x % n != 0) return false;\n  return is_simple_power(x / n, n);", "    if\
    \ (x == 1) return true;\n    if (x < 1) return false;\n    while (x % n == 0)\
    \ {\n        x /= n;\n    }\n    return x == 1;", "  if (x == 1) return true;\n\
    \  if (x == n) return true;\n  if (x % n != 0) return false;\n  return is_simple_power(x\
    \ / n, n);", "    if (x == 1) return true;\n    if (x == n) return true;\n   \
    \ if (x < n) return false;\n    if (x % n != 0) return false;\n    return is_simple_power(x\
    \ / n, n);", "  if (x == 1) return true;\n  if (x < n) return false;\n  if (x\
    \ % n != 0) return false;\n  return is_simple_power(x / n, n);", "    if (x ==\
    \ 1) return true;\n    if (x < n) return false;\n    if (x % n != 0) return false;\n\
    \    return is_simple_power(x / n, n);", "  if (x == 1) return true;\n  if (x\
    \ % n != 0) return false;\n  return is_simple_power(x / n, n);", "  if (x == 1)\
    \ return true;\n  if (x % n != 0) return false;\n  return is_simple_power(x /\
    \ n, n);", "  if (x == 1) return true;\n  if (x % n != 0) return false;\n  return\
    \ is_simple_power(x / n, n);", "  if (x == 1) return true;\n  if (x % n != 0)\
    \ return false;\n  return is_simple_power(x / n, n);", "  if (x == 1) return true;\n\
    \  if (x == 0) return false;\n  if (n == 1) return true;\n  if (n == 0) return\
    \ false;\n  if (x == n) return true;\n  if (x < n) return false;\n  if (x % n\
    \ != 0) return false;\n  return is_simple_power(x / n, n);", "  if (x == 1) {\n\
    \    return true;\n  }\n  if (n == 1) {\n    return false;\n  }\n  if (x == n)\
    \ {\n    return true;\n  }\n  if (x % n != 0) {\n    return false;\n  }\n  return\
    \ is_simple_power(x / n, n);", "  if (x == 1) {\n    return true;\n  }\n  if (x\
    \ < n) {\n    return false;\n  }\n  if (x % n != 0) {\n    return false;\n  }\n\
    \  return is_simple_power(x / n, n);", "  // your code here\n  if(x==1)\n    return\
    \ true;\n  if(n==1)\n    return false;\n  if(x==n)\n    return true;\n  if(x%n!=0)\n\
    \    return false;\n  return is_simple_power(x/n,n);", "  if (x == 1) {\n    return\
    \ true;\n  }\n  if (x % n != 0) {\n    return false;\n  }\n  return is_simple_power(x\
    \ / n, n);", "  if (x == 1) return true;\n  if (x % n != 0) return false;\n  return\
    \ is_simple_power(x / n, n);", "    if (x == 1) return true;\n    if (x == 0)\
    \ return false;\n    if (n == 1) return true;\n    if (n == 0) return false;\n\
    \    if (x == n) return true;\n    if (x < n) return false;\n    if (x % n !=\
    \ 0) return false;\n    return is_simple_power(x / n, n);", "    if (x == 1) return\
    \ true;\n    if (x == 0) return false;\n    if (n == 1) return false;\n    if\
    \ (n == 0) return false;\n    if (x % n != 0) return false;\n    if (x == n) return\
    \ true;\n    return is_simple_power(x / n, n);", "  if (x == 1) return true;\n\
    \  if (x == 0) return false;\n  if (n == 1) return false;\n  if (n == 0) return\
    \ false;\n  if (x == n) return true;\n  if (x < n) return false;\n  if (x % n\
    \ != 0) return false;\n  return is_simple_power(x / n, n);", "  // your code here\n\
    \  if(x==1) return true;\n  if(x%n!=0) return false;\n  return is_simple_power(x/n,n);",
  "  if (x == 1) return true;\n  if (x < n) return false;\n  if (x % n != 0) return\
    \ false;\n  return is_simple_power(x / n, n);", "  if (x == 1) return true;\n\
    \  if (x == 0) return false;\n  if (n == 1) return true;\n  if (n == 0) return\
    \ false;\n  if (x < 0) return false;\n  if (n < 0) return false;\n  if (x == n)\
    \ return true;\n  if (x % n != 0) return false;\n  return is_simple_power(x /\
    \ n, n);", "  // your code here\n  if(x==1)\n    return true;\n  if(x==n)\n  \
    \  return true;\n  if(x%n!=0)\n    return false;\n  else\n    return is_simple_power(x/n,n);",
  "    if (x == 1) return true;\n    if (x % n != 0) return false;\n    return is_simple_power(x\
    \ / n, n);", "  if (x == 1) {\n    return true;\n  }\n  if (x % n != 0) {\n  \
    \  return false;\n  }\n  return is_simple_power(x / n, n);", "  long i = 1;\n\
    \  while (pow(n, i) < x) {\n    i++;\n  }\n  if (pow(n, i) == x) {\n    return\
    \ true;\n  }\n  return false;", "  if (x == 1) return true;\n  if (x == 0) return\
    \ false;\n  if (n == 1) return true;\n  if (n == 0) return false;\n  if (x ==\
    \ n) return true;\n  if (x % n != 0) return false;\n  return is_simple_power(x\
    \ / n, n);", "    if (x == 1) return true;\n    if (x == n) return true;\n   \
    \ if (x < n) return false;\n    if (x % n != 0) return false;\n    return is_simple_power(x\
    \ / n, n);", "  if (x == 1) return true;\n  if (x % n != 0) return false;\n  return\
    \ is_simple_power(x / n, n);", "  if (x == 1) return true;\n  if (x % n != 0)\
    \ return false;\n  return is_simple_power(x / n, n);", "  if (x == 1) return true;\n\
    \  if (x < n) return false;\n  if (x % n != 0) return false;\n  return is_simple_power(x\
    \ / n, n);", "  if (x == 1) return true;\n  if (x < n) return false;\n  if (x\
    \ % n != 0) return false;\n  return is_simple_power(x / n, n);", "    if (x ==\
    \ 1) return true;\n    if (x == n) return true;\n    if (x < n) return false;\n\
    \    if (x % n != 0) return false;\n    return is_simple_power(x / n, n);", " \
    \   if (x == 1) return true;\n    if (x == 0) return false;\n    if (n == 1) return\
    \ false;\n    if (n == 0) return false;\n    if (x == n) return true;\n    if\
    \ (x < n) return false;\n    long r = x / n;\n    if (r == n) return true;\n \
    \   if (r < n) return false;\n    return is_simple_power(r, n);", "  if (x ==\
    \ 1) return true;\n  if (x % n != 0) return false;\n  return is_simple_power(x\
    \ / n, n);", "    if (x == 1) return true;\n    if (x == n) return true;\n   \
    \ if (x % n != 0) return false;\n    return is_simple_power(x / n, n);", "  if\
    \ (x == 1) return true;\n  if (x == 0) return false;\n  if (n == 1) return true;\n\
    \  if (n == 0) return false;\n  if (x == n) return true;\n  if (x < n) return\
    \ false;\n  if (x % n != 0) return false;\n  return is_simple_power(x / n, n);",
  "  if (x == 1) return true;\n  if (x == n) return true;\n  if (x == 0) return false;\n\
    \  if (x % n != 0) return false;\n  return is_simple_power(x / n, n);", "  if\
    \ (x == 1) return true;\n  if (x % n != 0) return false;\n  return is_simple_power(x\
    \ / n, n);", "  if (x == 1) return true;\n  if (x == 0) return false;\n  if (n\
    \ == 1) return true;\n  if (n == 0) return false;\n  if (x == n) return true;\n\
    \  if (x < n) return false;\n  if (x % n != 0) return false;\n  return is_simple_power(x\
    \ / n, n);", "    if (x == 1) return true;\n    if (x == 0) return false;\n  \
    \  if (n == 1) return false;\n    if (n == 0) return false;\n    if (n == x) return\
    \ true;\n    if (x % n != 0) return false;\n    return is_simple_power(x / n,\
    \ n);", "  if (x == 1) return true;\n  if (x < n) return false;\n  if (n == 1)\
    \ return false;\n  if (x % n != 0) return false;\n  return is_simple_power(x /\
    \ n, n);", "  if (x == 1) return true;\n  if (x == n) return true;\n  if (x %\
    \ n != 0) return false;\n  return is_simple_power(x / n, n);", "  if (x == 1)\
    \ {\n    return true;\n  }\n  if (n == 1) {\n    return false;\n  }\n  while (x\
    \ % n == 0) {\n    x /= n;\n  }\n  return x == 1;", "  if (x == 1) return true;\n\
    \  if (x == n) return true;\n  if (x < n) return false;\n  if (x % n != 0) return\
    \ false;\n  return is_simple_power(x / n, n);", "  if (x == 1) return true;\n\
    \  if (x == n) return true;\n  if (x % n != 0) return false;\n  return is_simple_power(x\
    \ / n, n);", "  if (x == 1) {\n    return true;\n  }\n  long temp = n;\n  while\
    \ (temp < x) {\n    temp *= n;\n  }\n  if (temp == x) {\n    return true;\n  }\n\
    \  return false;", "  if (x == 1) return true;\n  if (x % n != 0) return false;\n\
    \  return is_simple_power(x / n, n);", "    if (x == 1) return true;\n    if (x\
    \ < n) return false;\n    if (x % n != 0) return false;\n    return is_simple_power(x\
    \ / n, n);", "    if (x == 1) return true;\n    if (x == 0) return false;\n  \
    \  if (n == 1) return false;\n    if (n == 0) return false;\n    if (x == n) return\
    \ true;\n    if (x % n != 0) return false;\n    return is_simple_power(x / n,\
    \ n);", "  if (x == 1) return true;\n  if (x % n != 0) return false;\n  return\
    \ is_simple_power(x / n, n);", "    if (x == 1) return true;\n    if (x == n)\
    \ return true;\n    if (x % n != 0) return false;\n    return is_simple_power(x\
    \ / n, n);", "  if (x == 1) {\n    return true;\n  }\n  if (x == n) {\n    return\
    \ true;\n  }\n  if (x % n != 0) {\n    return false;\n  }\n  return is_simple_power(x\
    \ / n, n);", "  // your code here\n  if(x==1) return true;\n  if(n==1) return\
    \ false;\n  if(x==n) return true;\n  if(x<n) return false;\n  if(x%n!=0) return\
    \ false;\n  return is_simple_power(x/n,n);", "  if (x == 1) return true;\n  if\
    \ (x == 0) return false;\n  if (n == 1) return false;\n  if (n == 0) return false;\n\
    \  if (x == n) return true;\n  if (x < n) return false;\n  if (x % n != 0) return\
    \ false;\n  return is_simple_power(x / n, n);", "  if (x == 1) return true;\n\
    \  if (x == 0) return false;\n  if (n == 1) return false;\n  if (n == 0) return\
    \ false;\n  if (x == n) return true;\n  if (x < n) return false;\n  if (x % n\
    \ != 0) return false;\n  if (x % n == 0) {\n    return is_simple_power(x / n,\
    \ n);\n  }\n  return false;", "  if (x == 1) return true;\n  if (x == n) return\
    \ true;\n  if (x < n) return false;\n  if (x % n != 0) return false;\n  return\
    \ is_simple_power(x / n, n);", "  if (x == 1) return true;\n  if (x == 0) return\
    \ false;\n  if (n == 1) return true;\n  if (n == 0) return false;\n  if (x ==\
    \ n) return true;\n  if (x < n) return false;\n  if (x % n != 0) return false;\n\
    \  return is_simple_power(x / n, n);", "  if (x == 1) return true;\n  if (x ==\
    \ 0) return false;\n  if (n == 1) return false;\n  if (n == 0) return false;\n\
    \  if (x == n) return true;\n  if (x % n != 0) return false;\n  return is_simple_power(x\
    \ / n, n);", "  if (x == 1) return true;\n  if (x == 0) return false;\n  if (n\
    \ == 1) return false;\n  if (n == 0) return false;\n  if (x % n != 0) return false;\n\
    \  if (x == n) return true;\n  return is_simple_power(x / n, n);", "  if (x ==\
    \ 1) return true;\n  if (x < n) return false;\n  if (x % n != 0) return false;\n\
    \  return is_simple_power(x / n, n);", "  if (x == 1) return true;\n  if (x <\
    \ n) return false;\n  if (x % n != 0) return false;\n  return is_simple_power(x\
    \ / n, n);", "  if (n == 1) return x == 1;\n  if (x == 1) return n == 1;\n  if\
    \ (x == n) return true;\n  if (x % n != 0) return false;\n  return is_simple_power(x\
    \ / n, n);", "    if (x == 1) {\n        return true;\n    }\n    if (x % n !=\
    \ 0) {\n        return false;\n    }\n    return is_simple_power(x / n, n);",
  "    if (x == 1) return true;\n    if (x % n != 0) return false;\n    return is_simple_power(x\
    \ / n, n);", "  if (x == 1) {\n    return true;\n  }\n  if (n == 1) {\n    return\
    \ false;\n  }\n  if (x == n) {\n    return true;\n  }\n  if (x % n != 0) {\n \
    \   return false;\n  }\n  return is_simple_power(x / n, n);", "    if (x == 1)\
    \ return true;\n    if (x < 1) return false;\n    if (n == 1) return false;\n\
    \    if (n == x) return true;\n    if (n == 0) return false;\n    if (n == -1)\
    \ return false;\n    if (n == -x) return true;\n    if (n < -1) return is_simple_power(x,\
    \ -n);\n    if (x % n != 0) return false;\n    return is_simple_power(x / n, n);",
  "  if (x == 1) return true;\n  if (x % n != 0) return false;\n  return is_simple_power(x\
    \ / n, n);", "  if (x == n) {\n    return true;\n  }\n  if (x < n) {\n    return\
    \ false;\n  }\n  if (x % n != 0) {\n    return false;\n  }\n  return is_simple_power(x\
    \ / n, n);", "    if (x == 1) return true;\n    if (x < n) return false;\n   \
    \ if (x % n != 0) return false;\n    return is_simple_power(x / n, n);"]
stop_tokens:
- "\n}"

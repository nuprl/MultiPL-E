name: HumanEval_17_parse_music
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function is\
  \ a string representing musical notes in a special ASCII format.\n// Your task is\
  \ to parse this string and return list of integers corresponding to how many beats\
  \ does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts four\
  \ beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts one\
  \ beat\nstd::vector<long> parse_music(std::string music_string) {\n"
tests: "}\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\
  \")) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({4,\
  \ 4, 4, 4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({1,\
  \ 1, 1, 1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({2,\
  \ 2, 1, 1, 4, 4, 4, 4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
  \ (std::vector<long>({2, 1, 2, 1, 4, 2, 4, 2})));\n}\n"
completions: ["    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string token;\n    while (std::getline(ss, token, ' ')) {\n        if\
    \ (token == \"o\") {\n            result.push_back(4);\n        } else if (token\
    \ == \"o|\") {\n            result.push_back(2);\n        } else if (token ==\
    \ \".|\") {\n            result.push_back(1);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, ' ')) {\n        if (token == \"\
    o\") {\n            result.push_back(4);\n        } else if (token == \"o|\")\
    \ {\n            result.push_back(2);\n        } else if (token == \".|\") {\n\
    \            result.push_back(1);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> beats;\n    long count = 0;\n    for(int i = 0; i < music_string.size();\
    \ i++) {\n        if(music_string[i] == 'o') {\n            beats.push_back(4);\n\
    \        }\n        else if(music_string[i] == '|') {\n            beats.push_back(count);\n\
    \            count = 0;\n        }\n        else if(music_string[i] == '.') {\n\
    \            count++;\n        }\n    }\n    return beats;", "    std::vector<long>\
    \ beats;\n    std::stringstream ss(music_string);\n    std::string token;\n  \
    \  while (std::getline(ss, token, ' ')) {\n        if (token == \"o\") {\n   \
    \         beats.push_back(4);\n        } else if (token == \"o|\") {\n       \
    \     beats.push_back(2);\n        } else if (token == \".|\") {\n           \
    \ beats.push_back(1);\n        }\n    }\n    return beats;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, ' ')) {\n        if (token == \"o\") {\n  \
    \          result.push_back(4);\n        } else if (token == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (token == \".|\") {\n        \
    \    result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, ' ')) {\n        if (token == \"o\") {\n  \
    \          result.push_back(4);\n        } else if (token == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (token == \".|\") {\n        \
    \    result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, ' ')) {\n        if (token == \"o\") {\n  \
    \          result.push_back(4);\n        } else if (token == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (token == \".|\") {\n        \
    \    result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, ' ')) {\n        if (token == \"o\") {\n  \
    \          result.push_back(4);\n        } else if (token == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (token == \".|\") {\n        \
    \    result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    int i = 0;\n    while (i < music_string.size()) {\n        if (music_string[i]\
    \ == 'o') {\n            result.push_back(4);\n            i += 2;\n        }\
    \ else if (music_string[i] == '.') {\n            result.push_back(1);\n     \
    \       i += 3;\n        } else {\n            result.push_back(2);\n        \
    \    i += 3;\n        }\n    }\n    return result;", "    std::vector<long> beats;\n\
    \    std::stringstream ss(music_string);\n    std::string token;\n    while (std::getline(ss,\
    \ token, ' ')) {\n        if (token == \"o\") {\n            beats.push_back(4);\n\
    \        } else if (token == \"o|\") {\n            beats.push_back(2);\n    \
    \    } else if (token == \".|\") {\n            beats.push_back(1);\n        }\n\
    \    }\n    return beats;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string token;\n    while (std::getline(ss, token,\
    \ ' ')) {\n        if (token == \"o\") {\n            result.push_back(4);\n \
    \       } else if (token == \"o|\") {\n            result.push_back(2);\n    \
    \    } else if (token == \".|\") {\n            result.push_back(1);\n       \
    \ }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string token;\n    while (std::getline(ss, token,\
    \ ' ')) {\n        if (token == \"o\") {\n            result.push_back(4);\n \
    \       } else if (token == \"o|\") {\n            result.push_back(2);\n    \
    \    } else if (token == \".|\") {\n            result.push_back(1);\n       \
    \ }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    while (std::getline(ss, note,\
    \ ' ')) {\n        if (note == \"o\") {\n            result.push_back(4);\n  \
    \      } else if (note == \"o|\") {\n            result.push_back(2);\n      \
    \  } else if (note == \".|\") {\n            result.push_back(1);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string token;\n    while (std::getline(ss, token,\
    \ ' ')) {\n        if (token == \"o\") {\n            result.push_back(4);\n \
    \       } else if (token == \"o|\") {\n            result.push_back(2);\n    \
    \    } else if (token == \".|\") {\n            result.push_back(1);\n       \
    \ }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string token;\n    while (std::getline(ss, token,\
    \ ' ')) {\n        if (token == \"o\") {\n            result.push_back(4);\n \
    \       } else if (token == \"o|\") {\n            result.push_back(2);\n    \
    \    } else if (token == \".|\") {\n            result.push_back(1);\n       \
    \ }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string token;\n    while (std::getline(ss, token,\
    \ ' ')) {\n        if (token == \"o\") {\n            result.push_back(4);\n \
    \       } else if (token == \"o|\") {\n            result.push_back(2);\n    \
    \    } else if (token == \".|\") {\n            result.push_back(1);\n       \
    \ }\n    }\n    return result;", "    std::vector<long> result;\n    long beats\
    \ = 0;\n    for (char c : music_string) {\n        if (c == 'o') {\n         \
    \   beats += 4;\n        } else if (c == '|') {\n            result.push_back(beats);\n\
    \            beats = 0;\n        } else if (c == '.') {\n            beats +=\
    \ 1;\n        }\n    }\n    result.push_back(beats);\n    return result;", " \
    \   std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, ' ')) {\n        if (token == \"\
    o\") {\n            result.push_back(4);\n        } else if (token == \"o|\")\
    \ {\n            result.push_back(2);\n        } else if (token == \".|\") {\n\
    \            result.push_back(1);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, ' ')) {\n        if (token == \"\
    o\") {\n            result.push_back(4);\n        } else if (token == \"o|\")\
    \ {\n            result.push_back(2);\n        } else if (token == \".|\") {\n\
    \            result.push_back(1);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, ' ')) {\n        if (token == \"\
    o\") {\n            result.push_back(4);\n        } else if (token == \"o|\")\
    \ {\n            result.push_back(2);\n        } else if (token == \".|\") {\n\
    \            result.push_back(1);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    while (std::getline(ss, note, ' ')) {\n        if (note == \"o\"\
    ) {\n            result.push_back(4);\n        } else if (note == \"o|\") {\n\
    \            result.push_back(2);\n        } else if (note == \".|\") {\n    \
    \        result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, '|')) {\n        if (token == \"o\") {\n  \
    \          result.push_back(4);\n        } else if (token == \"o\") {\n      \
    \      result.push_back(2);\n        } else if (token == \".\") {\n          \
    \  result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string note;\n  \
    \  while (std::getline(ss, note, ' ')) {\n        if (note == \"o\") {\n     \
    \       result.push_back(4);\n        } else if (note == \"o|\") {\n         \
    \   result.push_back(2);\n        } else if (note == \".|\") {\n            result.push_back(1);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string token;\n    while (std::getline(ss, token,\
    \ ' ')) {\n        if (token == \"o\") {\n            result.push_back(4);\n \
    \       } else if (token == \"o|\") {\n            result.push_back(2);\n    \
    \    } else if (token == \".|\") {\n            result.push_back(1);\n       \
    \ }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string token;\n    while (std::getline(ss, token,\
    \ ' ')) {\n        if (token == \"o\") {\n            result.push_back(4);\n \
    \       } else if (token == \"o|\") {\n            result.push_back(2);\n    \
    \    } else if (token == \".|\") {\n            result.push_back(1);\n       \
    \ }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    while (ss >> note) {\n       \
    \ if (note == \"o\") {\n            result.push_back(4);\n        } else if (note\
    \ == \"o|\") {\n            result.push_back(2);\n        } else if (note == \"\
    .|\") {\n            result.push_back(1);\n        }\n    }\n    return result;",
  "\tstd::vector<long> result;\n\tstd::stringstream ss(music_string);\n\tstd::string\
    \ token;\n\twhile (std::getline(ss, token, ' ')) {\n\t\tif (token == \"o\") {\n\
    \t\t\tresult.push_back(4);\n\t\t}\n\t\telse if (token == \"o|\") {\n\t\t\tresult.push_back(2);\n\
    \t\t}\n\t\telse if (token == \".|\") {\n\t\t\tresult.push_back(1);\n\t\t}\n\t\
    }\n\treturn result;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string token;\n    while (std::getline(ss, token, ' ')) {\n        if\
    \ (token == \"o\") {\n            result.push_back(4);\n        } else if (token\
    \ == \"o|\") {\n            result.push_back(2);\n        } else if (token ==\
    \ \".|\") {\n            result.push_back(1);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    for (int i = 0; i < music_string.size(); ++i)\
    \ {\n        if (music_string[i] == 'o') {\n            result.push_back(4);\n\
    \        } else if (music_string[i] == '.') {\n            result.push_back(1);\n\
    \        } else if (music_string[i] == '|') {\n            result.push_back(2);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    while (std::getline(ss, note,\
    \ ' ')) {\n        if (note == \"o\") {\n            result.push_back(4);\n  \
    \      } else if (note == \"o|\") {\n            result.push_back(2);\n      \
    \  } else if (note == \".|\") {\n            result.push_back(1);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string token;\n    while (std::getline(ss, token,\
    \ '|')) {\n        if (token == \"o\") {\n            result.push_back(4);\n \
    \       } else if (token == \"o\") {\n            result.push_back(2);\n     \
    \   } else if (token == \".\") {\n            result.push_back(1);\n        }\n\
    \    }\n    return result;", "    std::vector<long> beats;\n    long beat = 0;\n\
    \    for (int i = 0; i < music_string.size(); i++) {\n        if (music_string[i]\
    \ == 'o') {\n            beat += 4;\n        } else if (music_string[i] == '|')\
    \ {\n            if (music_string[i - 1] == 'o') {\n                beat += 2;\n\
    \            } else {\n                beat += 1;\n            }\n        }\n\
    \        if (music_string[i] == ' ') {\n            beats.push_back(beat);\n \
    \           beat = 0;\n        }\n    }\n    beats.push_back(beat);\n    return\
    \ beats;", "    std::vector<long> result;\n    long count = 0;\n    for(int i\
    \ = 0; i < music_string.size(); i++) {\n        if(music_string[i] == 'o') {\n\
    \            result.push_back(4);\n        }\n        else if(music_string[i]\
    \ == '.') {\n            result.push_back(1);\n        }\n        else if(music_string[i]\
    \ == '|') {\n            result.push_back(2);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    while (std::getline(ss, note, ' ')) {\n        if (note == \"o\"\
    ) {\n            result.push_back(4);\n        } else if (note == \"o|\") {\n\
    \            result.push_back(2);\n        } else if (note == \".|\") {\n    \
    \        result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, ' ')) {\n        if (token == \"o\") {\n  \
    \          result.push_back(4);\n        } else if (token == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (token == \".|\") {\n        \
    \    result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string note;\n  \
    \  while (std::getline(ss, note, ' ')) {\n        if (note == \"o\") {\n     \
    \       result.push_back(4);\n        } else if (note == \"o|\") {\n         \
    \   result.push_back(2);\n        } else if (note == \".|\") {\n            result.push_back(1);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string token;\n    while (std::getline(ss, token,\
    \ ' ')) {\n        if (token == \"o\") {\n            result.push_back(4);\n \
    \       } else if (token == \"o|\") {\n            result.push_back(2);\n    \
    \    } else if (token == \".|\") {\n            result.push_back(1);\n       \
    \ }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string token;\n    while (std::getline(ss, token,\
    \ ' ')) {\n        if (token == \"o\") {\n            result.push_back(4);\n \
    \       } else if (token == \"o|\") {\n            result.push_back(2);\n    \
    \    } else if (token == \".|\") {\n            result.push_back(1);\n       \
    \ }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string token;\n    while (std::getline(ss, token,\
    \ ' ')) {\n        if (token == \"o\") {\n            result.push_back(4);\n \
    \       } else if (token == \"o|\") {\n            result.push_back(2);\n    \
    \    } else if (token == \".|\") {\n            result.push_back(1);\n       \
    \ }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string token;\n    while (std::getline(ss, token,\
    \ ' ')) {\n        if (token == \"o\") {\n            result.push_back(4);\n \
    \       } else if (token == \"o|\") {\n            result.push_back(2);\n    \
    \    } else if (token == \".|\") {\n            result.push_back(1);\n       \
    \ }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string token;\n    while (std::getline(ss, token,\
    \ ' ')) {\n        if (token == \"o\") {\n            result.push_back(4);\n \
    \       } else if (token == \"o|\") {\n            result.push_back(2);\n    \
    \    } else if (token == \".|\") {\n            result.push_back(1);\n       \
    \ }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string line;\n    while (std::getline(ss, line,\
    \ '\\n')) {\n        std::stringstream ss2(line);\n        std::string note;\n\
    \        while (std::getline(ss2, note, ' ')) {\n            if (note == \"o\"\
    ) {\n                result.push_back(4);\n            } else if (note == \"o|\"\
    ) {\n                result.push_back(2);\n            } else if (note == \".|\"\
    ) {\n                result.push_back(1);\n            }\n        }\n    }\n \
    \   return result;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string token;\n    while (std::getline(ss, token, ' ')) {\n        if\
    \ (token == \"o\") {\n            result.push_back(4);\n        } else if (token\
    \ == \"o|\") {\n            result.push_back(2);\n        } else if (token ==\
    \ \".|\") {\n            result.push_back(1);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, ' ')) {\n        if (token == \"\
    o\") {\n            result.push_back(4);\n        } else if (token == \"o|\")\
    \ {\n            result.push_back(2);\n        } else if (token == \".|\") {\n\
    \            result.push_back(1);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    while (ss >> note) {\n        if (note == \"o\") {\n            result.push_back(4);\n\
    \        } else if (note == \"o|\") {\n            result.push_back(2);\n    \
    \    } else if (note == \".|\") {\n            result.push_back(1);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    long count =\
    \ 0;\n    for(auto i : music_string) {\n        if(i == 'o') {\n            result.push_back(4);\n\
    \        }\n        else if(i == '|') {\n            result.push_back(count);\n\
    \            count = 0;\n        }\n        else if(i == '.') {\n            count++;\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    while (std::getline(ss, note,\
    \ ' ')) {\n        if (note == \"o\") {\n            result.push_back(4);\n  \
    \      } else if (note == \"o|\") {\n            result.push_back(2);\n      \
    \  } else if (note == \".|\") {\n            result.push_back(1);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    long count =\
    \ 0;\n    for(int i = 0; i < music_string.size(); i++) {\n        if(music_string[i]\
    \ == 'o') {\n            count += 4;\n        }\n        else if(music_string[i]\
    \ == '|') {\n            result.push_back(count);\n            count = 0;\n  \
    \      }\n        else if(music_string[i] == '.') {\n            count += 1;\n\
    \        }\n    }\n    result.push_back(count);\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, ' ')) {\n        if (token == \"o\") {\n  \
    \          result.push_back(4);\n        } else if (token == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (token == \".|\") {\n        \
    \    result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    int i = 0;\n    while (i < music_string.size()) {\n        if (music_string[i]\
    \ == 'o') {\n            result.push_back(4);\n            i++;\n        } else\
    \ if (music_string[i] == '.') {\n            result.push_back(1);\n          \
    \  i += 2;\n        } else if (music_string[i] == 'o') {\n            result.push_back(2);\n\
    \            i += 2;\n        } else {\n            assert(false);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    while (ss >> note) {\n       \
    \ if (note == \"o\") {\n            result.push_back(4);\n        } else if (note\
    \ == \"o|\") {\n            result.push_back(2);\n        } else if (note == \"\
    .|\") {\n            result.push_back(1);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, ' ')) {\n        if (token == \"\
    o\") {\n            result.push_back(4);\n        } else if (token == \"o|\")\
    \ {\n            result.push_back(2);\n        } else if (token == \".|\") {\n\
    \            result.push_back(1);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, ' ')) {\n        if (token == \"\
    o\") {\n            result.push_back(4);\n        } else if (token == \"o|\")\
    \ {\n            result.push_back(2);\n        } else if (token == \".|\") {\n\
    \            result.push_back(1);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    while (std::getline(ss, note, ' ')) {\n        if (note == \"o\"\
    ) {\n            result.push_back(4);\n        } else if (note == \"o|\") {\n\
    \            result.push_back(2);\n        } else if (note == \".|\") {\n    \
    \        result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, '|')) {\n        if (token == \"o\") {\n  \
    \          result.push_back(4);\n        } else if (token == \"o\") {\n      \
    \      result.push_back(2);\n        } else if (token == \".\") {\n          \
    \  result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, ' ')) {\n        if (token == \"o\") {\n  \
    \          result.push_back(4);\n        } else if (token == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (token == \".|\") {\n        \
    \    result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, ' ')) {\n        if (token == \"o\") {\n  \
    \          result.push_back(4);\n        } else if (token == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (token == \".|\") {\n        \
    \    result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    long count = 0;\n    for(int i = 0; i < music_string.size(); i++)\
    \ {\n        if(music_string[i] == 'o') {\n            count += 4;\n        }\n\
    \        else if(music_string[i] == '|') {\n            result.push_back(count);\n\
    \            count = 0;\n        }\n        else if(music_string[i] == '.') {\n\
    \            count += 1;\n        }\n    }\n    result.push_back(count);\n   \
    \ return result;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string token;\n    while (std::getline(ss, token, ' ')) {\n        if\
    \ (token == \"o\") {\n            result.push_back(4);\n        } else if (token\
    \ == \"o|\") {\n            result.push_back(2);\n        } else if (token ==\
    \ \".|\") {\n            result.push_back(1);\n        }\n    }\n    return result;",
  "    std::vector<long> beats;\n    long beat = 0;\n    for (int i = 0; i < music_string.size();\
    \ i++) {\n        if (music_string[i] == 'o') {\n            beat += 4;\n    \
    \    } else if (music_string[i] == '|') {\n            beats.push_back(beat);\n\
    \            beat = 0;\n        } else if (music_string[i] == '.') {\n       \
    \     beat += 1;\n        }\n    }\n    beats.push_back(beat);\n    return beats;",
  "    std::vector<long> beats;\n    long beat_count = 0;\n    for (char c : music_string)\
    \ {\n        if (c == 'o') {\n            beat_count += 4;\n        } else if\
    \ (c == '|') {\n            beats.push_back(beat_count);\n            beat_count\
    \ = 0;\n        } else if (c == '.') {\n            beat_count += 1;\n       \
    \ }\n    }\n    beats.push_back(beat_count);\n    return beats;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, ' ')) {\n        if (token == \"o\") {\n  \
    \          result.push_back(4);\n        } else if (token == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (token == \".|\") {\n        \
    \    result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    long count = 0;\n    for(int i = 0; i < music_string.size(); i++)\
    \ {\n        if(music_string[i] == 'o') {\n            count += 4;\n        }\n\
    \        else if(music_string[i] == '|') {\n            result.push_back(count);\n\
    \            count = 0;\n        }\n        else if(music_string[i] == '.') {\n\
    \            count += 1;\n        }\n    }\n    result.push_back(count);\n   \
    \ return result;", "    std::vector<long> beats;\n    long beat = 0;\n    for\
    \ (int i = 0; i < music_string.size(); i++) {\n        if (music_string[i] ==\
    \ 'o') {\n            beat += 4;\n        } else if (music_string[i] == '|') {\n\
    \            if (music_string[i - 1] == 'o') {\n                beat += 2;\n \
    \           } else if (music_string[i - 1] == '.') {\n                beat +=\
    \ 1;\n            }\n        } else if (music_string[i] == '.') {\n          \
    \  beats.push_back(beat);\n            beat = 0;\n        }\n    }\n    beats.push_back(beat);\n\
    \    return beats;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string token;\n    while (std::getline(ss, token, ' ')) {\n        if\
    \ (token == \"o\") {\n            result.push_back(4);\n        } else if (token\
    \ == \"o|\") {\n            result.push_back(2);\n        } else if (token ==\
    \ \".|\") {\n            result.push_back(1);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ line;\n    while (std::getline(ss, line, '\\n')) {\n        for (auto c : line)\
    \ {\n            if (c == 'o') {\n                result.push_back(4);\n     \
    \       } else if (c == '|') {\n                result.push_back(1);\n       \
    \     }\n        }\n    }\n    return result;", "    std::vector<long> result;\n\
    \    std::stringstream ss(music_string);\n    std::string token;\n    while (std::getline(ss,\
    \ token, ' ')) {\n        if (token == \"o\") {\n            result.push_back(4);\n\
    \        } else if (token == \"o|\") {\n            result.push_back(2);\n   \
    \     } else if (token == \".|\") {\n            result.push_back(1);\n      \
    \  }\n    }\n    return result;", "    std::vector<long> result;\n    long count\
    \ = 0;\n    for(int i = 0; i < music_string.size(); i++) {\n        if(music_string[i]\
    \ == 'o') {\n            result.push_back(4);\n        }\n        else if(music_string[i]\
    \ == '.') {\n            result.push_back(1);\n        }\n        else if(music_string[i]\
    \ == '|') {\n            result.push_back(2);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, ' ')) {\n        if (token == \"\
    o\") {\n            result.push_back(4);\n        } else if (token == \"o|\")\
    \ {\n            result.push_back(2);\n        } else if (token == \".|\") {\n\
    \            result.push_back(1);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    long count = 0;\n    for(auto i : music_string)\
    \ {\n        if(i == 'o') {\n            result.push_back(4);\n        }\n   \
    \     else if(i == '|') {\n            result.push_back(count);\n            count\
    \ = 0;\n        }\n        else {\n            count++;\n        }\n    }\n  \
    \  return result;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string token;\n    while (std::getline(ss, token, ' ')) {\n        if\
    \ (token == \"o\") {\n            result.push_back(4);\n        } else if (token\
    \ == \"o|\") {\n            result.push_back(2);\n        } else if (token ==\
    \ \".|\") {\n            result.push_back(1);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    long count = 0;\n    for(int i = 0; i < music_string.size();\
    \ i++) {\n        if(music_string[i] == 'o') {\n            count += 4;\n    \
    \    }\n        else if(music_string[i] == '|') {\n            result.push_back(count);\n\
    \            count = 0;\n        }\n        else {\n            count += 1;\n\
    \        }\n    }\n    result.push_back(count);\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, ' ')) {\n        if (token == \"o\") {\n  \
    \          result.push_back(4);\n        } else if (token == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (token == \".|\") {\n        \
    \    result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ beats;\n    std::stringstream ss(music_string);\n    std::string token;\n  \
    \  while (std::getline(ss, token, ' ')) {\n        if (token == \"o\") {\n   \
    \         beats.push_back(4);\n        } else if (token == \"o|\") {\n       \
    \     beats.push_back(2);\n        } else if (token == \".|\") {\n           \
    \ beats.push_back(1);\n        }\n    }\n    return beats;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, ' ')) {\n        if (token == \"o\") {\n  \
    \          result.push_back(4);\n        } else if (token == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (token == \".|\") {\n        \
    \    result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, ' ')) {\n        if (token == \"o\") {\n  \
    \          result.push_back(4);\n        } else if (token == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (token == \".|\") {\n        \
    \    result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    long count = 0;\n    for(int i = 0; i < music_string.size(); i++)\
    \ {\n        if(music_string[i] == 'o') {\n            count += 4;\n        }\n\
    \        else if(music_string[i] == '|') {\n            result.push_back(count);\n\
    \            count = 0;\n        }\n        else if(music_string[i] == '.') {\n\
    \            count += 1;\n        }\n    }\n    result.push_back(count);\n   \
    \ return result;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    while (std::getline(ss, note, ' ')) {\n        if\
    \ (note == \"o\") {\n            result.push_back(4);\n        } else if (note\
    \ == \"o|\") {\n            result.push_back(2);\n        } else if (note == \"\
    .|\") {\n            result.push_back(1);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, ' ')) {\n        if (token == \"\
    o\") {\n            result.push_back(4);\n        } else if (token == \"o|\")\
    \ {\n            result.push_back(2);\n        } else if (token == \".|\") {\n\
    \            result.push_back(1);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    long count = 0;\n    for(int i = 0; i < music_string.size();\
    \ i++) {\n        if(music_string[i] == 'o') {\n            count += 4;\n    \
    \    }\n        else if(music_string[i] == '|') {\n            result.push_back(count);\n\
    \            count = 0;\n        }\n        else if(music_string[i] == '.') {\n\
    \            count += 1;\n        }\n    }\n    result.push_back(count);\n   \
    \ return result;", "    std::vector<long> result;\n    long count = 0;\n    for(int\
    \ i = 0; i < music_string.size(); i++) {\n        if(music_string[i] == 'o') {\n\
    \            count += 4;\n        }\n        else if(music_string[i] == '|') {\n\
    \            result.push_back(count);\n            count = 0;\n        }\n   \
    \     else {\n            count += 1;\n        }\n    }\n    result.push_back(count);\n\
    \    return result;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    while (std::getline(ss, note, ' ')) {\n        if\
    \ (note == \"o\") {\n            result.push_back(4);\n        } else if (note\
    \ == \"o|\") {\n            result.push_back(2);\n        } else if (note == \"\
    .|\") {\n            result.push_back(1);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    long count = 0;\n    for(int i = 0; i < music_string.size();\
    \ i++) {\n        if(music_string[i] == 'o') {\n            count += 4;\n    \
    \    }\n        else if(music_string[i] == '|') {\n            result.push_back(count);\n\
    \            count = 0;\n        }\n        else if(music_string[i] == '.') {\n\
    \            count += 1;\n        }\n    }\n    result.push_back(count);\n   \
    \ return result;", "    std::vector<long> result;\n    long count = 0;\n    for(int\
    \ i = 0; i < music_string.size(); i++) {\n        if(music_string[i] == 'o') {\n\
    \            count += 4;\n        }\n        else if(music_string[i] == '|') {\n\
    \            result.push_back(count);\n            count = 0;\n        }\n   \
    \     else if(music_string[i] == '.') {\n            count += 1;\n        }\n\
    \    }\n    result.push_back(count);\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, ' ')) {\n        if (token == \"o\") {\n  \
    \          result.push_back(4);\n        } else if (token == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (token == \".|\") {\n        \
    \    result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, ' ')) {\n        if (token == \"o\") {\n  \
    \          result.push_back(4);\n        } else if (token == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (token == \".|\") {\n        \
    \    result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    long count = 0;\n    for(int i = 0; i < music_string.size(); i++)\
    \ {\n        if(music_string[i] == 'o') {\n            count += 4;\n        }\n\
    \        else if(music_string[i] == '|') {\n            result.push_back(count);\n\
    \            count = 0;\n        }\n        else if(music_string[i] == '.') {\n\
    \            count += 1;\n        }\n    }\n    result.push_back(count);\n   \
    \ return result;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    while (std::getline(ss, note, ' ')) {\n        if\
    \ (note == \"o\") {\n            result.push_back(4);\n        } else if (note\
    \ == \"o|\") {\n            result.push_back(2);\n        } else if (note == \"\
    .|\") {\n            result.push_back(1);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    while (std::getline(ss, note, '|')) {\n        if (note.size() ==\
    \ 1) {\n            result.push_back(4);\n        } else if (note.size() == 2)\
    \ {\n            result.push_back(2);\n        } else if (note.size() == 3) {\n\
    \            result.push_back(1);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, ' ')) {\n        if (token == \"\
    o\") {\n            result.push_back(4);\n        } else if (token == \"o|\")\
    \ {\n            result.push_back(2);\n        } else if (token == \".|\") {\n\
    \            result.push_back(1);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    while (std::getline(ss, note, ' ')) {\n        if (note == \"o\"\
    ) {\n            result.push_back(4);\n        } else if (note == \"o|\") {\n\
    \            result.push_back(2);\n        } else if (note == \".|\") {\n    \
    \        result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ beats;\n    std::stringstream ss(music_string);\n    std::string token;\n  \
    \  while (std::getline(ss, token, ' ')) {\n        if (token == \"o\") {\n   \
    \         beats.push_back(4);\n        } else if (token == \"o|\") {\n       \
    \     beats.push_back(2);\n        } else if (token == \".|\") {\n           \
    \ beats.push_back(1);\n        }\n    }\n    return beats;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, ' ')) {\n        if (token == \"o\") {\n  \
    \          result.push_back(4);\n        } else if (token == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (token == \".|\") {\n        \
    \    result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, ' ')) {\n        if (token == \"o\") {\n  \
    \          result.push_back(4);\n        } else if (token == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (token == \".|\") {\n        \
    \    result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    long count = 0;\n    for(int i = 0; i < music_string.size(); i++)\
    \ {\n        if(music_string[i] == 'o') {\n            count += 4;\n        }\n\
    \        else if(music_string[i] == '|') {\n            result.push_back(count);\n\
    \            count = 0;\n        }\n        else if(music_string[i] == '.') {\n\
    \            count += 1;\n        }\n    }\n    result.push_back(count);\n   \
    \ return result;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string token;\n    while (std::getline(ss, token, ' ')) {\n        if\
    \ (token == \"o\") {\n            result.push_back(4);\n        } else if (token\
    \ == \"o|\") {\n            result.push_back(2);\n        } else if (token ==\
    \ \".|\") {\n            result.push_back(1);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, ' ')) {\n        if (token == \"\
    o\") {\n            result.push_back(4);\n        } else if (token == \"o|\")\
    \ {\n            result.push_back(2);\n        } else if (token == \".|\") {\n\
    \            result.push_back(1);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    while (std::getline(ss, note, ' ')) {\n        if (note == \"o\"\
    ) {\n            result.push_back(4);\n        } else if (note == \"o|\") {\n\
    \            result.push_back(2);\n        } else if (note == \".|\") {\n    \
    \        result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string note;\n  \
    \  while (std::getline(ss, note, ' ')) {\n        if (note == \"o\") {\n     \
    \       result.push_back(4);\n        } else if (note == \"o|\") {\n         \
    \   result.push_back(2);\n        } else if (note == \".|\") {\n            result.push_back(1);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string token;\n    while (std::getline(ss, token,\
    \ ' ')) {\n        if (token == \"o\") {\n            result.push_back(4);\n \
    \       } else if (token == \"o|\") {\n            result.push_back(2);\n    \
    \    } else if (token == \".|\") {\n            result.push_back(1);\n       \
    \ }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string token;\n    while (std::getline(ss, token,\
    \ ' ')) {\n        if (token == \"o\") {\n            result.push_back(4);\n \
    \       } else if (token == \"o|\") {\n            result.push_back(2);\n    \
    \    } else if (token == \".|\") {\n            result.push_back(1);\n       \
    \ }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    while (std::getline(ss, note,\
    \ ' ')) {\n        if (note == \"o\") {\n            result.push_back(4);\n  \
    \      } else if (note == \"o|\") {\n            result.push_back(2);\n      \
    \  } else if (note == \".|\") {\n            result.push_back(1);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    while (ss >> note) {\n       \
    \ if (note == \"o\") {\n            result.push_back(4);\n        } else if (note\
    \ == \"o|\") {\n            result.push_back(2);\n        } else if (note == \"\
    .|\") {\n            result.push_back(1);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, ' ')) {\n        if (token == \"\
    o\") {\n            result.push_back(4);\n        } else if (token == \"o|\")\
    \ {\n            result.push_back(2);\n        } else if (token == \".|\") {\n\
    \            result.push_back(1);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, ' ')) {\n        if (token == \"\
    o\") {\n            result.push_back(4);\n        } else if (token == \"o|\")\
    \ {\n            result.push_back(2);\n        } else if (token == \".|\") {\n\
    \            result.push_back(1);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, ' ')) {\n        if (token == \"\
    o\") {\n            result.push_back(4);\n        } else if (token == \"o|\")\
    \ {\n            result.push_back(2);\n        } else if (token == \".|\") {\n\
    \            result.push_back(1);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, ' ')) {\n        if (token == \"\
    o\") {\n            result.push_back(4);\n        } else if (token == \"o|\")\
    \ {\n            result.push_back(2);\n        } else if (token == \".|\") {\n\
    \            result.push_back(1);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, ' ')) {\n        if (token == \"\
    o\") {\n            result.push_back(4);\n        } else if (token == \"o|\")\
    \ {\n            result.push_back(2);\n        } else if (token == \".|\") {\n\
    \            result.push_back(1);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    long beats = 0;\n    for (int i = 0; i < music_string.size();\
    \ i++) {\n        if (music_string[i] == 'o') {\n            beats += 4;\n   \
    \     } else if (music_string[i] == '|') {\n            result.push_back(beats);\n\
    \            beats = 0;\n        } else if (music_string[i] == '.') {\n      \
    \      beats += 1;\n        }\n    }\n    result.push_back(beats);\n    return\
    \ result;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string token;\n    while (std::getline(ss, token, ' ')) {\n        if\
    \ (token == \"o\") {\n            result.push_back(4);\n        } else if (token\
    \ == \"o|\") {\n            result.push_back(2);\n        } else if (token ==\
    \ \".|\") {\n            result.push_back(1);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, ' ')) {\n        if (token == \"\
    o\") {\n            result.push_back(4);\n        } else if (token == \"o|\")\
    \ {\n            result.push_back(2);\n        } else if (token == \".|\") {\n\
    \            result.push_back(1);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    long count = 0;\n    for(int i = 0; i < music_string.size();\
    \ i++) {\n        if(music_string[i] == 'o') {\n            count += 4;\n    \
    \    }\n        else if(music_string[i] == '|') {\n            result.push_back(count);\n\
    \            count = 0;\n        }\n        else if(music_string[i] == '.') {\n\
    \            count += 1;\n        }\n    }\n    result.push_back(count);\n   \
    \ return result;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string token;\n    while (std::getline(ss, token, ' ')) {\n        if\
    \ (token == \"o\") {\n            result.push_back(4);\n        } else if (token\
    \ == \"o|\") {\n            result.push_back(2);\n        } else if (token ==\
    \ \".|\") {\n            result.push_back(1);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    int i = 0;\n    while (i < music_string.size())\
    \ {\n        if (music_string[i] == 'o') {\n            result.push_back(4);\n\
    \            i++;\n        } else if (music_string[i] == '.') {\n            result.push_back(1);\n\
    \            i += 2;\n        } else if (music_string[i] == 'o') {\n         \
    \   result.push_back(2);\n            i += 2;\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, ' ')) {\n        if (token == \"\
    o\") {\n            result.push_back(4);\n        } else if (token == \"o|\")\
    \ {\n            result.push_back(2);\n        } else if (token == \".|\") {\n\
    \            result.push_back(1);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, ' ')) {\n        if (token == \"\
    o\") {\n            result.push_back(4);\n        } else if (token == \"o|\")\
    \ {\n            result.push_back(2);\n        } else if (token == \".|\") {\n\
    \            result.push_back(1);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, ' ')) {\n        if (token == \"\
    o\") {\n            result.push_back(4);\n        } else if (token == \"o|\")\
    \ {\n            result.push_back(2);\n        } else if (token == \".|\") {\n\
    \            result.push_back(1);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, '|')) {\n        if (token == \"\
    o\") {\n            result.push_back(4);\n        } else if (token == \"o\") {\n\
    \            result.push_back(2);\n        } else if (token == \".\") {\n    \
    \        result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ beats;\n    std::stringstream ss(music_string);\n    std::string note;\n   \
    \ while (std::getline(ss, note, ' ')) {\n        if (note == \"o\") {\n      \
    \      beats.push_back(4);\n        } else if (note == \"o|\") {\n           \
    \ beats.push_back(2);\n        } else if (note == \".|\") {\n            beats.push_back(1);\n\
    \        }\n    }\n    return beats;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string token;\n    while (std::getline(ss, token,\
    \ ' ')) {\n        if (token == \"o\") {\n            result.push_back(4);\n \
    \       } else if (token == \"o|\") {\n            result.push_back(2);\n    \
    \    } else if (token == \".|\") {\n            result.push_back(1);\n       \
    \ }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string token;\n    while (std::getline(ss, token,\
    \ ' ')) {\n        if (token == \"o\") {\n            result.push_back(4);\n \
    \       } else if (token == \"o|\") {\n            result.push_back(2);\n    \
    \    } else if (token == \".|\") {\n            result.push_back(1);\n       \
    \ }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    while (std::getline(ss, note,\
    \ '|')) {\n        if (note == \"o\") {\n            result.push_back(4);\n  \
    \      } else if (note == \"o\") {\n            result.push_back(2);\n       \
    \ } else if (note == \".\") {\n            result.push_back(1);\n        }\n \
    \   }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    while (std::getline(ss, note,\
    \ ' ')) {\n        if (note == \"o\") {\n            result.push_back(4);\n  \
    \      } else if (note == \"o|\") {\n            result.push_back(2);\n      \
    \  } else if (note == \".|\") {\n            result.push_back(1);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string temp;\n    while(std::getline(ss, temp, '\
    \ ')) {\n        if(temp == \"o\") {\n            result.push_back(4);\n     \
    \   } else if(temp == \"o|\") {\n            result.push_back(2);\n        } else\
    \ if(temp == \".|\") {\n            result.push_back(1);\n        }\n    }\n \
    \   return result;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string token;\n    while (std::getline(ss, token, ' ')) {\n        if\
    \ (token == \"o\") {\n            result.push_back(4);\n        } else if (token\
    \ == \"o|\") {\n            result.push_back(2);\n        } else if (token ==\
    \ \".|\") {\n            result.push_back(1);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, ' ')) {\n        if (token == \"\
    o\") {\n            result.push_back(4);\n        } else if (token == \"o|\")\
    \ {\n            result.push_back(2);\n        } else if (token == \".|\") {\n\
    \            result.push_back(1);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, ' ')) {\n        if (token == \"\
    o\") {\n            result.push_back(4);\n        } else if (token == \"o|\")\
    \ {\n            result.push_back(2);\n        } else if (token == \".|\") {\n\
    \            result.push_back(1);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, ' ')) {\n        if (token == \"\
    o\") {\n            result.push_back(4);\n        } else if (token == \"o|\")\
    \ {\n            result.push_back(2);\n        } else if (token == \".|\") {\n\
    \            result.push_back(1);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    long i = 0;\n    while (i < music_string.size())\
    \ {\n        if (music_string[i] == 'o') {\n            result.push_back(4);\n\
    \            i += 2;\n        } else if (music_string[i] == '.') {\n         \
    \   result.push_back(1);\n            i += 3;\n        } else {\n            result.push_back(2);\n\
    \            i += 3;\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, '|')) {\n        if (token == \"o\") {\n  \
    \          result.push_back(4);\n        } else if (token == \"o\") {\n      \
    \      result.push_back(2);\n        } else if (token == \".\") {\n          \
    \  result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    long count = 0;\n    for(int i = 0; i < music_string.size(); i++)\
    \ {\n        if(music_string[i] == 'o') {\n            count += 4;\n        }\n\
    \        else if(music_string[i] == '|') {\n            result.push_back(count);\n\
    \            count = 0;\n        }\n        else if(music_string[i] == '.') {\n\
    \            count += 1;\n        }\n    }\n    result.push_back(count);\n   \
    \ return result;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string token;\n    while (std::getline(ss, token, ' ')) {\n        if\
    \ (token == \"o\") {\n            result.push_back(4);\n        } else if (token\
    \ == \"o|\") {\n            result.push_back(2);\n        } else if (token ==\
    \ \".|\") {\n            result.push_back(1);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    while (ss >> note) {\n        if (note == \"o\") {\n            result.push_back(4);\n\
    \        } else if (note == \"o|\") {\n            result.push_back(2);\n    \
    \    } else if (note == \".|\") {\n            result.push_back(1);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    int i = 0;\n\
    \    while (i < music_string.size()) {\n        if (music_string[i] == 'o') {\n\
    \            result.push_back(4);\n            i++;\n        } else if (music_string[i]\
    \ == '.') {\n            result.push_back(1);\n            i += 2;\n        }\
    \ else if (music_string[i] == 'o') {\n            result.push_back(2);\n     \
    \       i += 2;\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, '|')) {\n        if (token.size() == 1) {\n\
    \            result.push_back(4);\n        } else if (token.size() == 2) {\n \
    \           result.push_back(2);\n        } else if (token.size() == 3) {\n  \
    \          result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (int i = 0; i < music_string.size(); i++) {\n        if (music_string[i]\
    \ == 'o') {\n            result.push_back(4);\n        } else if (music_string[i]\
    \ == '.') {\n            result.push_back(1);\n        } else if (music_string[i]\
    \ == '|') {\n            result.push_back(2);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, ' ')) {\n        if (token == \"\
    o\") {\n            result.push_back(4);\n        } else if (token == \"o|\")\
    \ {\n            result.push_back(2);\n        } else if (token == \".|\") {\n\
    \            result.push_back(1);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, ' ')) {\n        if (token == \"\
    o\") {\n            result.push_back(4);\n        } else if (token == \"o|\")\
    \ {\n            result.push_back(2);\n        } else if (token == \".|\") {\n\
    \            result.push_back(1);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, ' ')) {\n        if (token == \"\
    o\") {\n            result.push_back(4);\n        } else if (token == \"o|\")\
    \ {\n            result.push_back(2);\n        } else if (token == \".|\") {\n\
    \            result.push_back(1);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    int i = 0;\n    while (i < music_string.size())\
    \ {\n        if (music_string[i] == 'o') {\n            result.push_back(4);\n\
    \            i += 2;\n        } else if (music_string[i] == '.') {\n         \
    \   result.push_back(1);\n            i += 3;\n        } else {\n            result.push_back(2);\n\
    \            i += 3;\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    long count = 0;\n    for(int i = 0; i < music_string.size(); i++)\
    \ {\n        if(music_string[i] == 'o') {\n            count += 4;\n        }\n\
    \        else if(music_string[i] == '|') {\n            result.push_back(count);\n\
    \            count = 0;\n        }\n        else if(music_string[i] == '.') {\n\
    \            count += 1;\n        }\n    }\n    result.push_back(count);\n   \
    \ return result;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string token;\n    while (std::getline(ss, token, ' ')) {\n        if\
    \ (token == \"o\") {\n            result.push_back(4);\n        } else if (token\
    \ == \"o|\") {\n            result.push_back(2);\n        } else if (token ==\
    \ \".|\") {\n            result.push_back(1);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ item;\n    while (std::getline(ss, item, ' ')) {\n        if (item == \"o\"\
    ) {\n            result.push_back(4);\n        } else if (item == \"o|\") {\n\
    \            result.push_back(2);\n        } else if (item == \".|\") {\n    \
    \        result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, ' ')) {\n        if (token == \"o\") {\n  \
    \          result.push_back(4);\n        } else if (token == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (token == \".|\") {\n        \
    \    result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, ' ')) {\n        if (token == \"o\") {\n  \
    \          result.push_back(4);\n        } else if (token == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (token == \".|\") {\n        \
    \    result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, '|')) {\n        if (token.size() == 1) {\n\
    \            result.push_back(4);\n        } else if (token.size() == 2) {\n \
    \           result.push_back(2);\n        } else if (token.size() == 3) {\n  \
    \          result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, ' ')) {\n        if (token == \"o\") {\n  \
    \          result.push_back(4);\n        } else if (token == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (token == \".|\") {\n        \
    \    result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, ' ')) {\n        if (token == \"o\") {\n  \
    \          result.push_back(4);\n        } else if (token == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (token == \".|\") {\n        \
    \    result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string note;\n  \
    \  while (std::getline(ss, note, ' ')) {\n        if (note == \"o\") {\n     \
    \       result.push_back(4);\n        } else if (note == \"o|\") {\n         \
    \   result.push_back(2);\n        } else if (note == \".|\") {\n            result.push_back(1);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string token;\n    while (std::getline(ss, token,\
    \ ' ')) {\n        if (token == \"o\") {\n            result.push_back(4);\n \
    \       } else if (token == \"o|\") {\n            result.push_back(2);\n    \
    \    } else if (token == \".|\") {\n            result.push_back(1);\n       \
    \ }\n    }\n    return result;", "    std::vector<long> result;\n    long count\
    \ = 0;\n    for(int i = 0; i < music_string.size(); i++) {\n        if(music_string[i]\
    \ == 'o') {\n            count += 4;\n        }\n        else if(music_string[i]\
    \ == '|') {\n            result.push_back(count);\n            count = 0;\n  \
    \      }\n        else if(music_string[i] == '.') {\n            count += 1;\n\
    \        }\n    }\n    result.push_back(count);\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string item;\n  \
    \  while (std::getline(ss, item, ' ')) {\n        if (item == \"o\") {\n     \
    \       result.push_back(4);\n        } else if (item == \"o|\") {\n         \
    \   result.push_back(2);\n        } else if (item == \".|\") {\n            result.push_back(1);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    long\
    \ count = 0;\n    for(int i = 0; i < music_string.size(); i++) {\n        if(music_string[i]\
    \ == 'o') {\n            count += 4;\n        }\n        else if(music_string[i]\
    \ == '|') {\n            result.push_back(count);\n            count = 0;\n  \
    \      }\n        else if(music_string[i] == '.') {\n            count += 1;\n\
    \        }\n    }\n    result.push_back(count);\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string note;\n  \
    \  while (std::getline(ss, note, ' ')) {\n        if (note == \"o\") {\n     \
    \       result.push_back(4);\n        } else if (note == \"o|\") {\n         \
    \   result.push_back(2);\n        } else if (note == \".|\") {\n            result.push_back(1);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string token;\n    while (std::getline(ss, token,\
    \ ' ')) {\n        if (token == \"o\") {\n            result.push_back(4);\n \
    \       } else if (token == \"o|\") {\n            result.push_back(2);\n    \
    \    } else if (token == \".|\") {\n            result.push_back(1);\n       \
    \ }\n    }\n    return result;", "    std::vector<long> result;\n    long count\
    \ = 0;\n    for(int i = 0; i < music_string.size(); i++) {\n        if(music_string[i]\
    \ == 'o') {\n            count += 4;\n        }\n        else if(music_string[i]\
    \ == '|') {\n            result.push_back(count);\n            count = 0;\n  \
    \      }\n        else if(music_string[i] == '.') {\n            count += 1;\n\
    \        }\n    }\n    result.push_back(count);\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, ' ')) {\n        if (token == \"o\") {\n  \
    \          result.push_back(4);\n        } else if (token == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (token == \".|\") {\n        \
    \    result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    long count = 0;\n    for(int i = 0; i < music_string.size(); i++)\
    \ {\n        if(music_string[i] == 'o') {\n            result.push_back(4);\n\
    \        }\n        else if(music_string[i] == '|') {\n            result.push_back(count);\n\
    \            count = 0;\n        }\n        else if(music_string[i] == '.') {\n\
    \            count++;\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string note;\n  \
    \  while (std::getline(ss, note, ' ')) {\n        if (note == \"o\") {\n     \
    \       result.push_back(4);\n        } else if (note == \"o|\") {\n         \
    \   result.push_back(2);\n        } else if (note == \".|\") {\n            result.push_back(1);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    while (ss >> note) {\n       \
    \ if (note == \"o\") {\n            result.push_back(4);\n        } else if (note\
    \ == \"o|\") {\n            result.push_back(2);\n        } else if (note == \"\
    .|\") {\n            result.push_back(1);\n        }\n    }\n    return result;",
  "    std::vector<long> beats;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    while (std::getline(ss, note, ' ')) {\n        if (note == \"o\"\
    ) {\n            beats.push_back(4);\n        } else if (note == \"o|\") {\n \
    \           beats.push_back(2);\n        } else if (note == \".|\") {\n      \
    \      beats.push_back(1);\n        }\n    }\n    return beats;", "    std::vector<long>\
    \ result;\n    int i = 0;\n    while (i < music_string.size()) {\n        if (music_string[i]\
    \ == 'o') {\n            result.push_back(4);\n            i++;\n        } else\
    \ if (music_string[i] == '.') {\n            result.push_back(1);\n          \
    \  i += 2;\n        } else if (music_string[i] == 'o') {\n            result.push_back(2);\n\
    \            i += 2;\n        }\n    }\n    return result;", "    std::vector<long>\
    \ beats;\n    std::stringstream ss(music_string);\n    std::string note;\n   \
    \ while (ss >> note) {\n        if (note == \"o\") {\n            beats.push_back(4);\n\
    \        } else if (note == \"o|\") {\n            beats.push_back(2);\n     \
    \   } else if (note == \".|\") {\n            beats.push_back(1);\n        }\n\
    \    }\n    return beats;", "    std::vector<long> result;\n    long count = 0;\n\
    \    for(int i = 0; i < music_string.size(); i++) {\n        if(music_string[i]\
    \ == 'o') {\n            result.push_back(4);\n        }\n        else if(music_string[i]\
    \ == '.') {\n            result.push_back(1);\n        }\n        else if(music_string[i]\
    \ == '|') {\n            result.push_back(count);\n            count = 0;\n  \
    \      }\n        else {\n            count++;\n        }\n    }\n    return result;",
  "\tstd::vector<long> beats;\n\tfor (int i = 0; i < music_string.size(); i++) {\n\
    \t\tif (music_string[i] == 'o') {\n\t\t\tbeats.push_back(4);\n\t\t}\n\t\telse\
    \ if (music_string[i] == '.') {\n\t\t\tbeats.push_back(1);\n\t\t}\n\t\telse if\
    \ (music_string[i] == '|') {\n\t\t\tbeats.push_back(2);\n\t\t}\n\t}\n\treturn\
    \ beats;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string token;\n    while (std::getline(ss, token, ' ')) {\n        if\
    \ (token == \"o\") {\n            result.push_back(4);\n        } else if (token\
    \ == \"o|\") {\n            result.push_back(2);\n        } else if (token ==\
    \ \".|\") {\n            result.push_back(1);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, ' ')) {\n        if (token == \"\
    o\") {\n            result.push_back(4);\n        } else if (token == \"o|\")\
    \ {\n            result.push_back(2);\n        } else if (token == \".|\") {\n\
    \            result.push_back(1);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, '|')) {\n        if (token.length()\
    \ == 1) {\n            result.push_back(4);\n        } else if (token.length()\
    \ == 2) {\n            result.push_back(2);\n        } else if (token.length()\
    \ == 3) {\n            result.push_back(1);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, ' ')) {\n        if (token == \"\
    o\") {\n            result.push_back(4);\n        } else if (token == \"o|\")\
    \ {\n            result.push_back(2);\n        } else if (token == \".|\") {\n\
    \            result.push_back(1);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ token;\n    while (std::getline(ss, token, ' ')) {\n        if (token == \"\
    o\") {\n            result.push_back(4);\n        } else if (token == \"o|\")\
    \ {\n            result.push_back(2);\n        } else if (token == \".|\") {\n\
    \            result.push_back(1);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    while (ss >> note) {\n        if (note == \"o\") {\n            result.push_back(4);\n\
    \        } else if (note == \"o|\") {\n            result.push_back(2);\n    \
    \    } else if (note == \".|\") {\n            result.push_back(1);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    long count =\
    \ 0;\n    for(auto i : music_string) {\n        if(i == 'o') {\n            result.push_back(4);\n\
    \        }\n        else if(i == '|') {\n            result.push_back(count);\n\
    \            count = 0;\n        }\n        else if(i == '.') {\n            count++;\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string token;\n    while (std::getline(ss, token,\
    \ ' ')) {\n        if (token == \"o\") {\n            result.push_back(4);\n \
    \       } else if (token == \"o|\") {\n            result.push_back(2);\n    \
    \    } else if (token == \".|\") {\n            result.push_back(1);\n       \
    \ }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string token;\n    while (std::getline(ss, token,\
    \ ' ')) {\n        if (token == \"o\") {\n            result.push_back(4);\n \
    \       } else if (token == \"o|\") {\n            result.push_back(2);\n    \
    \    } else if (token == \".|\") {\n            result.push_back(1);\n       \
    \ }\n    }\n    return result;", "    std::vector<long> beats;\n    std::stringstream\
    \ ss(music_string);\n    std::string token;\n    while (std::getline(ss, token,\
    \ ' ')) {\n        if (token == \"o\") {\n            beats.push_back(4);\n  \
    \      } else if (token == \"o|\") {\n            beats.push_back(2);\n      \
    \  } else if (token == \".|\") {\n            beats.push_back(1);\n        }\n\
    \    }\n    return beats;", "    std::vector<long> result;\n    // TODO: implement\
    \ this function\n    // Hint: you can use std::string::find_first_of function\
    \ to find a character in a string\n    // Hint: you can use std::string::substr\
    \ function to get a substring from a string\n    // Hint: you can use std::string::length\
    \ function to get a length of a string\n    // Hint: you can use std::stol function\
    \ to convert a string to a long\n    // Hint: you can use std::vector::push_back\
    \ function to add an element to a vector\n    // Hint: you can use std::vector::size\
    \ function to get a size of a vector\n    // Hint: you can use std::vector::at\
    \ function to get an element from a vector\n    // Hint: you can use std::vector::clear\
    \ function to clear a vector\n    // Hint: you can use std::vector::begin function\
    \ to get an iterator to the beginning of a vector\n    // Hint: you can use std::vector::end\
    \ function to get an iterator to the end of a vector\n    // Hint: you can use\
    \ std::vector::insert function to insert an element to a vector\n    // Hint:\
    \ you can use std::vector::erase function to erase an element from a vector\n\
    \    // Hint: you can use std::vector::const_iterator to iterate over a vector\n\
    \    // Hint: you can use std::vector::iterator to modify a vector\n    // Hint:\
    \ you can use std::vector::reverse_iterator to iterate over a vector in reverse\
    \ order\n    // Hint: you can use std::vector::const_reverse_iterator to iterate\
    \ over a vector in reverse order\n    // Hint: you can use std::vector::cbegin\
    \ function to get a const iterator to the beginning of a vector\n    // Hint:\
    \ you can use std::vector::cend function to get a const iterator to the end of\
    \ a vector\n    // Hint: you can use std::vector::crbegin function to get a const\
    \ reverse iterator to the beginning of a vector\n    // Hint: you can use std::vector::crend\
    \ function to get a const reverse iterator to the end of a vector\n    // Hint:\
    \ you can use std::vector::emplace_back", "    std::vector<long> result;\n   \
    \ std::stringstream ss(music_string);\n    std::string token;\n    while (std::getline(ss,\
    \ token, ' ')) {\n        if (token == \"o\") {\n            result.push_back(4);\n\
    \        } else if (token == \"o|\") {\n            result.push_back(2);\n   \
    \     } else if (token == \".|\") {\n            result.push_back(1);\n      \
    \  }\n    }\n    return result;", "    std::vector<long> result;\n    for (char\
    \ c : music_string) {\n        if (c == 'o') {\n            result.push_back(4);\n\
    \        } else if (c == '|') {\n            result.back() /= 2;\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string token;\n    while (std::getline(ss, token,\
    \ ' ')) {\n        if (token == \"o\") {\n            result.push_back(4);\n \
    \       } else if (token == \"o|\") {\n            result.push_back(2);\n    \
    \    } else if (token == \".|\") {\n            result.push_back(1);\n       \
    \ }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    while (std::getline(ss, note,\
    \ ' ')) {\n        if (note == \"o\") {\n            result.push_back(4);\n  \
    \      } else if (note == \"o|\") {\n            result.push_back(2);\n      \
    \  } else if (note == \".|\") {\n            result.push_back(1);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    // TODO: implement\
    \ this function\n    std::stringstream ss(music_string);\n    std::string note;\n\
    \    while(std::getline(ss, note, ' ')) {\n        if(note == \"o\") {\n     \
    \       result.push_back(4);\n        } else if(note == \"o|\") {\n          \
    \  result.push_back(2);\n        } else if(note == \".|\") {\n            result.push_back(1);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string token;\n    while (std::getline(ss, token,\
    \ ' ')) {\n        if (token == \"o\") {\n            result.push_back(4);\n \
    \       } else if (token == \"o|\") {\n            result.push_back(2);\n    \
    \    } else if (token == \".|\") {\n            result.push_back(1);\n       \
    \ }\n    }\n    return result;", "    std::vector<long> result;\n    long beats\
    \ = 0;\n    for (int i = 0; i < music_string.size(); i++) {\n        if (music_string[i]\
    \ == 'o') {\n            beats += 4;\n        } else if (music_string[i] == '|')\
    \ {\n            result.push_back(beats);\n            beats = 0;\n        } else\
    \ if (music_string[i] == '.') {\n            beats += 1;\n        }\n    }\n \
    \   result.push_back(beats);\n    return result;", "    std::vector<long> beats;\n\
    \    std::stringstream ss(music_string);\n    std::string note;\n    while (std::getline(ss,\
    \ note, ' ')) {\n        if (note == \"o\") {\n            beats.push_back(4);\n\
    \        } else if (note == \"o|\") {\n            beats.push_back(2);\n     \
    \   } else if (note == \".|\") {\n            beats.push_back(1);\n        }\n\
    \    }\n    return beats;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string token;\n    while (std::getline(ss, token,\
    \ ' ')) {\n        if (token == \"o\") {\n            result.push_back(4);\n \
    \       } else if (token == \"o|\") {\n            result.push_back(2);\n    \
    \    } else if (token == \".|\") {\n            result.push_back(1);\n       \
    \ }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    while (std::getline(ss, note,\
    \ ' ')) {\n        if (note == \"o\") {\n            result.push_back(4);\n  \
    \      } else if (note == \"o|\") {\n            result.push_back(2);\n      \
    \  } else if (note == \".|\") {\n            result.push_back(1);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string line;\n    while (std::getline(ss, line,\
    \ '|')) {\n        if (line.length() == 1) {\n            result.push_back(4);\n\
    \        } else if (line.length() == 2) {\n            result.push_back(2);\n\
    \        } else if (line.length() == 3) {\n            result.push_back(1);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string token;\n    while (std::getline(ss, token,\
    \ ' ')) {\n        if (token == \"o\") {\n            result.push_back(4);\n \
    \       } else if (token == \"o|\") {\n            result.push_back(2);\n    \
    \    } else if (token == \".|\") {\n            result.push_back(1);\n       \
    \ }\n    }\n    return result;", "    std::vector<long> res;\n    int i = 0;\n\
    \    while (i < music_string.size()) {\n        if (music_string[i] == 'o') {\n\
    \            res.push_back(4);\n            i++;\n        } else if (music_string[i]\
    \ == '.') {\n            res.push_back(1);\n            i += 2;\n        } else\
    \ if (music_string[i] == 'o') {\n            res.push_back(2);\n            i\
    \ += 2;\n        }\n    }\n    return res;", "    std::vector<long> beats;\n \
    \   long beat = 0;\n    for (auto c : music_string) {\n        if (c == 'o') {\n\
    \            beat += 4;\n        } else if (c == '|') {\n            beats.push_back(beat);\n\
    \            beat = 0;\n        } else if (c == '.') {\n            beat += 1;\n\
    \        }\n    }\n    beats.push_back(beat);\n    return beats;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, ' ')) {\n        if (token == \"o\") {\n  \
    \          result.push_back(4);\n        } else if (token == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (token == \".|\") {\n        \
    \    result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, ' ')) {\n        if (token == \"o\") {\n  \
    \          result.push_back(4);\n        } else if (token == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (token == \".|\") {\n        \
    \    result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string temp;\n  \
    \  while(std::getline(ss, temp, ' ')) {\n        if(temp == \"o\") {\n       \
    \     result.push_back(4);\n        } else if(temp == \"o|\") {\n            result.push_back(2);\n\
    \        } else if(temp == \".|\") {\n            result.push_back(1);\n     \
    \   }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    while (std::getline(ss, note,\
    \ ' ')) {\n        if (note == \"o\") {\n            result.push_back(4);\n  \
    \      } else if (note == \"o|\") {\n            result.push_back(2);\n      \
    \  } else if (note == \".|\") {\n            result.push_back(1);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    // TODO: implement\
    \ this function\n    //std::cout << music_string << std::endl;\n    std::stringstream\
    \ ss(music_string);\n    std::string token;\n    while(std::getline(ss, token,\
    \ ' ')) {\n        //std::cout << token << std::endl;\n        if(token == \"\
    o\") {\n            result.push_back(4);\n        } else if(token == \"o|\") {\n\
    \            result.push_back(2);\n        } else if(token == \".|\") {\n    \
    \        result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, ' ')) {\n        if (token == \"o\") {\n  \
    \          result.push_back(4);\n        } else if (token == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (token == \".|\") {\n        \
    \    result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, ' ')) {\n        if (token == \"o\") {\n  \
    \          result.push_back(4);\n        } else if (token == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (token == \".|\") {\n        \
    \    result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, '|')) {\n        if (token == \"o\") {\n  \
    \          result.push_back(4);\n        } else if (token == \"o\") {\n      \
    \      result.push_back(2);\n        } else if (token == \".\") {\n          \
    \  result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, ' ')) {\n        if (token == \"o\") {\n  \
    \          result.push_back(4);\n        } else if (token == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (token == \".|\") {\n        \
    \    result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string token;\n \
    \   while (std::getline(ss, token, '|')) {\n        if (token.size() == 1) {\n\
    \            result.push_back(4);\n        } else if (token.size() == 2) {\n \
    \           result.push_back(2);\n        } else if (token.size() == 3) {\n  \
    \          result.push_back(1);\n        }\n    }\n    return result;"]
stop_tokens:
- "\n}"

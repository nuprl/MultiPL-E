name: HumanEval_159_eat
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// You're a hungry rabbit, and\
  \ you already have eaten a certain number of carrots,\n// but now you need to eat\
  \ more carrots to complete the day's meals.\n// you should return an array of [\
  \ total number of eaten carrots after your meals,\n// the number of carrots left\
  \ after your meals ]\n// if there are not enough remaining carrots, you will eat\
  \ all remaining carrots, but will still be hungry.\n// Example:\n// Variables:\n\
  // @number : integer\n// the number of carrots that you have eaten.\n// @need :\
  \ integer\n// the number of carrots that you need to eat.\n// @remaining : integer\n\
  // the number of remaining carrots thet exist in stock\n// Constrain:\n// * 0 <=\
  \ number <= 1000\n// * 0 <= need <= 1000\n// * 0 <= remaining <= 1000\n// Have fun\
  \ :)\nstd::vector<long> eat(long number, long need, long remaining) {\n"
tests: "}\nint main() {\n    auto candidate = eat;\n    assert(candidate((5), (6),\
  \ (10)) == (std::vector<long>({(long)11, (long)4})));\n    assert(candidate((4),\
  \ (8), (9)) == (std::vector<long>({(long)12, (long)1})));\n    assert(candidate((1),\
  \ (10), (10)) == (std::vector<long>({(long)11, (long)0})));\n    assert(candidate((2),\
  \ (11), (5)) == (std::vector<long>({(long)7, (long)0})));\n    assert(candidate((4),\
  \ (5), (7)) == (std::vector<long>({(long)9, (long)2})));\n    assert(candidate((4),\
  \ (5), (1)) == (std::vector<long>({(long)5, (long)0})));\n}\n"
completions: ["    std::vector<long> result;\n    if (remaining >= need) {\n     \
    \   result.push_back(number + need);\n        result.push_back(remaining - need);\n\
    \    } else {\n        result.push_back(number + remaining);\n        result.push_back(0);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if(remaining\
    \ >= need) {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    } else {\n        result.push_back(number + remaining);\n    \
    \    result.push_back(0);\n    }\n    return result;", "\tstd::vector<long> result;\n\
    \tif (number + need <= remaining) {\n\t\tresult.push_back(number + need);\n\t\t\
    result.push_back(remaining - (number + need));\n\t}\n\telse {\n\t\tresult.push_back(remaining);\n\
    \t\tresult.push_back(0);\n\t}\n\treturn result;", "  std::vector<long> result;\n\
    \  if (number + remaining < need) {\n    result.push_back(number + remaining);\n\
    \    result.push_back(0);\n  } else {\n    result.push_back(need);\n    result.push_back(number\
    \ + remaining - need);\n  }\n  return result;", "  std::vector<long> result;\n\
    \  if(number + remaining < need) {\n    result.push_back(number + remaining);\n\
    \    result.push_back(0);\n  } else {\n    result.push_back(need);\n    result.push_back(number\
    \ + remaining - need);\n  }\n  return result;", "  std::vector<long> result;\n\
    \  if (remaining < need) {\n    result.push_back(number + remaining);\n    result.push_back(0);\n\
    \  } else {\n    result.push_back(number + need);\n    result.push_back(remaining\
    \ - need);\n  }\n  return result;", "    std::vector<long> result;\n    if (remaining\
    \ < need) {\n        result.push_back(number + remaining);\n        result.push_back(0);\n\
    \    } else {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    }\n    return result;", "  std::vector<long> result;\n  if (remaining\
    \ >= need) {\n    result.push_back(number + need);\n    result.push_back(remaining\
    \ - need);\n  } else {\n    result.push_back(number + remaining);\n    result.push_back(0);\n\
    \  }\n  return result;", "  std::vector<long> result;\n  if (remaining >= need)\
    \ {\n    result.push_back(number + need);\n    result.push_back(remaining - need);\n\
    \  } else {\n    result.push_back(number + remaining);\n    result.push_back(0);\n\
    \  }\n  return result;", "    std::vector<long> result;\n    if(remaining >= need)\n\
    \    {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    }\n    else\n    {\n        result.push_back(number + remaining);\n\
    \        result.push_back(0);\n    }\n    return result;", "  std::vector<long>\
    \ result;\n  long total = number + remaining;\n  if (total >= need) {\n    result.push_back(need);\n\
    \    result.push_back(total - need);\n  } else {\n    result.push_back(total);\n\
    \    result.push_back(0);\n  }\n  return result;", "    std::vector<long> result;\n\
    \    if (need > remaining) {\n        result.push_back(number + remaining);\n\
    \        result.push_back(0);\n    } else {\n        result.push_back(number +\
    \ need);\n        result.push_back(remaining - need);\n    }\n    return result;",
  "    std::vector<long> result;\n    if(remaining >= need)\n    {\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    }\n    else\n   \
    \ {\n        result.push_back(number + remaining);\n        result.push_back(0);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if(remaining\
    \ < need) {\n        result.push_back(number + remaining);\n        result.push_back(0);\n\
    \    } else {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    }\n    return result;", "    std::vector<long> result;\n    if\
    \ (number + remaining < need) {\n        result.push_back(number + remaining);\n\
    \        result.push_back(0);\n    } else {\n        result.push_back(need);\n\
    \        result.push_back(number + remaining - need);\n    }\n    return result;",
  "    std::vector<long> result;\n    if(number >= need)\n    {\n        result.push_back(need);\n\
    \        result.push_back(remaining);\n    }\n    else if(number + remaining >=\
    \ need)\n    {\n        result.push_back(need);\n        result.push_back(remaining\
    \ - (need - number));\n    }\n    else\n    {\n        result.push_back(number\
    \ + remaining);\n        result.push_back(0);\n    }\n    return result;", " \
    \   std::vector<long> result;\n    if(remaining >= need) {\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    }\n    else {\n \
    \       result.push_back(number + remaining);\n        result.push_back(0);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if (remaining\
    \ >= need) {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    } else {\n        result.push_back(number + remaining);\n    \
    \    result.push_back(0);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if(remaining < need) {\n        result.push_back(number + remaining);\n\
    \        result.push_back(0);\n    } else {\n        result.push_back(number +\
    \ need);\n        result.push_back(remaining - need);\n    }\n    return result;",
  "    std::vector<long> result;\n    if(remaining < need) {\n        result.push_back(number\
    \ + remaining);\n        result.push_back(0);\n    } else {\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    }\n    return result;",
  "  std::vector<long> result;\n  if (remaining < need) {\n    result.push_back(number\
    \ + remaining);\n    result.push_back(0);\n  } else {\n    result.push_back(number\
    \ + need);\n    result.push_back(remaining - need);\n  }\n  return result;", " \
    \ std::vector<long> result;\n  if (number + remaining < need) {\n    result.push_back(number\
    \ + remaining);\n    result.push_back(0);\n  } else {\n    result.push_back(need);\n\
    \    result.push_back(number + remaining - need);\n  }\n  return result;", " \
    \ std::vector<long> result;\n  if(remaining >= need){\n    result.push_back(number\
    \ + need);\n    result.push_back(remaining - need);\n  }\n  else{\n    result.push_back(number\
    \ + remaining);\n    result.push_back(0);\n  }\n  return result;", "  std::vector<long>\
    \ result;\n  if (remaining >= need) {\n    result.push_back(number + need);\n\
    \    result.push_back(remaining - need);\n  } else {\n    result.push_back(number\
    \ + remaining);\n    result.push_back(0);\n  }\n  return result;", "  std::vector<long>\
    \ result;\n  if (remaining >= need) {\n    result.push_back(number + need);\n\
    \    result.push_back(remaining - need);\n  } else {\n    result.push_back(number\
    \ + remaining);\n    result.push_back(0);\n  }\n  return result;", "    std::vector<long>\
    \ result;\n    if(remaining<need){\n        result.push_back(number+remaining);\n\
    \        result.push_back(0);\n    }\n    else{\n        result.push_back(number+need);\n\
    \        result.push_back(remaining-need);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (remaining >= need) {\n        result.push_back(number + need);\n\
    \        result.push_back(remaining - need);\n    } else {\n        result.push_back(number\
    \ + remaining);\n        result.push_back(0);\n    }\n    return result;", " \
    \   std::vector<long> result;\n    if(remaining < need) {\n        result.push_back(number\
    \ + remaining);\n        result.push_back(0);\n    } else {\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    }\n    return result;",
  "    std::vector<long> result;\n    if(remaining >= need) {\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    } else {\n      \
    \  result.push_back(number + remaining);\n        result.push_back(0);\n    }\n\
    \    return result;", "    std::vector<long> result;\n    if (remaining >= need)\
    \ {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    } else {\n        result.push_back(number + remaining);\n    \
    \    result.push_back(0);\n    }\n    return result;", "  std::vector<long> result;\n\
    \  if (number + remaining < need) {\n    result.push_back(number + remaining);\n\
    \    result.push_back(0);\n  } else {\n    result.push_back(need);\n    result.push_back(number\
    \ + remaining - need);\n  }\n  return result;", "    std::vector<long> result;\n\
    \    if(remaining < need) {\n        result.push_back(number + remaining);\n \
    \       result.push_back(0);\n    } else {\n        result.push_back(number +\
    \ need);\n        result.push_back(remaining - need);\n    }\n    return result;",
  "    std::vector<long> result;\n    if(remaining >= need){\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    }\n    else{\n  \
    \      result.push_back(number + remaining);\n        result.push_back(0);\n \
    \   }\n    return result;", "  std::vector<long> result;\n  if (remaining >= need)\
    \ {\n    result.push_back(number + need);\n    result.push_back(remaining - need);\n\
    \  } else {\n    result.push_back(number + remaining);\n    result.push_back(0);\n\
    \  }\n  return result;", "    std::vector<long> result;\n    if(need <= remaining)\
    \ {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    } else {\n        result.push_back(number + remaining);\n    \
    \    result.push_back(0);\n    }\n    return result;", "  // your code here\n\
    \  std::vector<long> result;\n  if(remaining >= need){\n    result.push_back(number\
    \ + need);\n    result.push_back(remaining - need);\n  }\n  else{\n    result.push_back(number\
    \ + remaining);\n    result.push_back(0);\n  }\n  return result;", "  std::vector<long>\
    \ result;\n  if (remaining >= need) {\n    result.push_back(number + need);\n\
    \    result.push_back(remaining - need);\n  } else {\n    result.push_back(number\
    \ + remaining);\n    result.push_back(0);\n  }\n  return result;", "  std::vector<long>\
    \ result;\n  if (number + remaining < need) {\n    result.push_back(number + remaining);\n\
    \    result.push_back(0);\n  } else {\n    result.push_back(need);\n    result.push_back(number\
    \ + remaining - need);\n  }\n  return result;", "    std::vector<long> result;\n\
    \    if (number + remaining >= need) {\n        result.push_back(need);\n    \
    \    result.push_back(number + remaining - need);\n    } else {\n        result.push_back(number\
    \ + remaining);\n        result.push_back(0);\n    }\n    return result;", " \
    \   std::vector<long> result;\n    if(remaining >= need){\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    }\n    else{\n  \
    \      result.push_back(number + remaining);\n        result.push_back(0);\n \
    \   }\n    return result;", "    std::vector<long> result;\n    if (remaining\
    \ < need) {\n        result.push_back(number + remaining);\n        result.push_back(0);\n\
    \    } else {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    }\n    return result;", "  std::vector<long> result;\n  result.push_back(number\
    \ + std::min(need, remaining));\n  result.push_back(std::max(remaining - need,\
    \ 0L));\n  return result;", "    std::vector<long> result;\n    if(remaining >=\
    \ need){\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    }\n    else{\n        result.push_back(number + remaining);\n\
    \        result.push_back(0);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if(remaining >= need)\n    {\n        result.push_back(number +\
    \ need);\n        result.push_back(remaining - need);\n    }\n    else\n    {\n\
    \        result.push_back(number + remaining);\n        result.push_back(0);\n\
    \    }\n    return result;", "  std::vector<long> result;\n  if(remaining >= need)\
    \ {\n    result.push_back(number + need);\n    result.push_back(remaining - need);\n\
    \  } else {\n    result.push_back(number + remaining);\n    result.push_back(0);\n\
    \  }\n  return result;", "  std::vector<long> result;\n  if (need > remaining)\
    \ {\n    result.push_back(number + remaining);\n    result.push_back(0);\n  }\
    \ else {\n    result.push_back(number + need);\n    result.push_back(remaining\
    \ - need);\n  }\n  return result;", "    std::vector<long> result;\n    if(remaining\
    \ >= need) {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    } else {\n        result.push_back(number + remaining);\n    \
    \    result.push_back(0);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (number + remaining >= need) {\n        result.push_back(need);\n\
    \        result.push_back(number + remaining - need);\n    } else {\n        result.push_back(number\
    \ + remaining);\n        result.push_back(0);\n    }\n    return result;", " \
    \   std::vector<long> result;\n    if (remaining >= need) {\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    } else {\n      \
    \  result.push_back(number + remaining);\n        result.push_back(0);\n    }\n\
    \    return result;", "    std::vector<long> result;\n    if(remaining >= need){\n\
    \        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    }\n    else{\n        result.push_back(number + remaining);\n\
    \        result.push_back(0);\n    }\n    return result;", "    // your code here\n\
    \    std::vector<long> result;\n    if(remaining >= need) {\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    } else {\n      \
    \  result.push_back(number + remaining);\n        result.push_back(0);\n    }\n\
    \    return result;", "  std::vector<long> result;\n  if (number + remaining <\
    \ need) {\n    result.push_back(number + remaining);\n    result.push_back(0);\n\
    \  } else {\n    result.push_back(need);\n    result.push_back(number + remaining\
    \ - need);\n  }\n  return result;", "  std::vector<long> result;\n  if(remaining\
    \ < need) {\n    result.push_back(number + remaining);\n    result.push_back(0);\n\
    \  } else {\n    result.push_back(number + need);\n    result.push_back(remaining\
    \ - need);\n  }\n  return result;", "    std::vector<long> result;\n    if(remaining\
    \ >= need){\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    }\n    else{\n        result.push_back(number + remaining);\n\
    \        result.push_back(0);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if(remaining >= need)\n    {\n        result.push_back(number +\
    \ need);\n        result.push_back(remaining - need);\n    }\n    else\n    {\n\
    \        result.push_back(number + remaining);\n        result.push_back(0);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if(remaining\
    \ >= need) {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    } else {\n        result.push_back(number + remaining);\n    \
    \    result.push_back(0);\n    }\n    return result;", "    std::vector<long>\
    \ ans;\n    if(remaining >= need){\n        ans.push_back(number + need);\n  \
    \      ans.push_back(remaining - need);\n    }\n    else{\n        ans.push_back(number\
    \ + remaining);\n        ans.push_back(0);\n    }\n    return ans;", "  std::vector<long>\
    \ result;\n  if(remaining < need) {\n    result.push_back(number + remaining);\n\
    \    result.push_back(0);\n  } else {\n    result.push_back(number + need);\n\
    \    result.push_back(remaining - need);\n  }\n  return result;", "    std::vector<long>\
    \ result;\n    if(remaining < need) {\n        result.push_back(number + remaining);\n\
    \        result.push_back(0);\n    } else {\n        result.push_back(number +\
    \ need);\n        result.push_back(remaining - need);\n    }\n    return result;",
  "    std::vector<long> result;\n    if(remaining >= need){\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    }\n    else{\n  \
    \      result.push_back(number + remaining);\n        result.push_back(0);\n \
    \   }\n    return result;", "    std::vector<long> result;\n    if(remaining >=\
    \ need)\n    {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    }\n    else\n    {\n        result.push_back(number + remaining);\n\
    \        result.push_back(0);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if(remaining >= need){\n        result.push_back(number + need);\n\
    \        result.push_back(remaining - need);\n    }\n    else{\n        result.push_back(number\
    \ + remaining);\n        result.push_back(0);\n    }\n    return result;", " \
    \   std::vector<long> result;\n    if(remaining >= need){\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    }\n    else{\n  \
    \      result.push_back(number + remaining);\n        result.push_back(0);\n \
    \   }\n    return result;", "    std::vector<long> result;\n    if(remaining >=\
    \ need) {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    } else {\n        result.push_back(number + remaining);\n    \
    \    result.push_back(0);\n    }\n    return result;", "  std::vector<long> result;\n\
    \  if (remaining >= need) {\n    result.push_back(number + need);\n    result.push_back(remaining\
    \ - need);\n  } else {\n    result.push_back(number + remaining);\n    result.push_back(0);\n\
    \  }\n  return result;", "    std::vector<long> result;\n    if(remaining < need)\
    \ {\n        result.push_back(number + remaining);\n        result.push_back(0);\n\
    \    } else {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    }\n    return result;", "    std::vector<long> result;\n    if\
    \ (remaining >= need) {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    } else {\n        result.push_back(number + remaining);\n    \
    \    result.push_back(0);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (number + remaining < need) {\n        result.push_back(number\
    \ + remaining);\n        result.push_back(0);\n    } else {\n        result.push_back(need);\n\
    \        result.push_back(number + remaining - need);\n    }\n    return result;",
  "    std::vector<long> result;\n    if(remaining == 0) {\n        result.push_back(number);\n\
    \        result.push_back(need);\n        return result;\n    }\n    if(remaining\
    \ < need) {\n        result.push_back(number + remaining);\n        result.push_back(need\
    \ - remaining);\n        return result;\n    }\n    result.push_back(number +\
    \ need);\n    result.push_back(0);\n    return result;", "  std::vector<long>\
    \ res;\n  if (remaining < need) {\n    res.push_back(number + remaining);\n  \
    \  res.push_back(0);\n  } else {\n    res.push_back(number + need);\n    res.push_back(remaining\
    \ - need);\n  }\n  return res;", "  std::vector<long> result;\n  if (remaining\
    \ < need) {\n    result.push_back(number + remaining);\n    result.push_back(0);\n\
    \  } else {\n    result.push_back(number + need);\n    result.push_back(remaining\
    \ - need);\n  }\n  return result;", "    std::vector<long> result;\n    if (number\
    \ >= need) {\n        result.push_back(need);\n        result.push_back(remaining);\n\
    \    } else {\n        if (remaining >= need - number) {\n            result.push_back(need);\n\
    \            result.push_back(remaining - (need - number));\n        } else {\n\
    \            result.push_back(number + remaining);\n            result.push_back(0);\n\
    \        }\n    }\n    return result;", "  std::vector<long> result;\n  if (remaining\
    \ >= need) {\n    result.push_back(number + need);\n    result.push_back(remaining\
    \ - need);\n  } else {\n    result.push_back(number + remaining);\n    result.push_back(0);\n\
    \  }\n  return result;", "    std::vector<long> result;\n    if (remaining >=\
    \ need) {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    } else {\n        result.push_back(number + remaining);\n    \
    \    result.push_back(0);\n    }\n    return result;", "  std::vector<long> result;\n\
    \  if (remaining >= need) {\n    result.push_back(number + need);\n    result.push_back(remaining\
    \ - need);\n  } else {\n    result.push_back(number + remaining);\n    result.push_back(0);\n\
    \  }\n  return result;", "    std::vector<long> result;\n    if(number + need\
    \ <= remaining){\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - (number + need));\n    }\n    else{\n        result.push_back(remaining);\n\
    \        result.push_back(0);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (need > remaining) {\n        result.push_back(number + remaining);\n\
    \        result.push_back(0);\n    } else {\n        result.push_back(number +\
    \ need);\n        result.push_back(remaining - need);\n    }\n    return result;",
  "    std::vector<long> result;\n    if(remaining >= need){\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    }\n    else{\n  \
    \      result.push_back(number + remaining);\n        result.push_back(0);\n \
    \   }\n    return result;", "  std::vector<long> result;\n  if (remaining >= need)\
    \ {\n    result.push_back(number + need);\n    result.push_back(remaining - need);\n\
    \  } else {\n    result.push_back(number + remaining);\n    result.push_back(0);\n\
    \  }\n  return result;", "  std::vector<long> result;\n  if (remaining < need)\
    \ {\n    result.push_back(number + remaining);\n    result.push_back(0);\n  }\
    \ else {\n    result.push_back(number + need);\n    result.push_back(remaining\
    \ - need);\n  }\n  return result;", "  std::vector<long> res;\n  if (remaining\
    \ >= need) {\n    res.push_back(number + need);\n    res.push_back(remaining -\
    \ need);\n  } else {\n    res.push_back(number + remaining);\n    res.push_back(0);\n\
    \  }\n  return res;", "  std::vector<long> result;\n  long total = number + remaining;\n\
    \  if (total >= need) {\n    result.push_back(need);\n    result.push_back(total\
    \ - need);\n  } else {\n    result.push_back(total);\n    result.push_back(0);\n\
    \  }\n  return result;", "    std::vector<long> result;\n    if(number >= need)\n\
    \    {\n        result.push_back(need);\n        result.push_back(remaining);\n\
    \    }\n    else if(number + remaining >= need)\n    {\n        result.push_back(need);\n\
    \        result.push_back(remaining - (need - number));\n    }\n    else\n   \
    \ {\n        result.push_back(number + remaining);\n        result.push_back(0);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if(number + remaining\
    \ < need) {\n        result.push_back(number + remaining);\n        result.push_back(0);\n\
    \    } else {\n        result.push_back(need);\n        result.push_back(number\
    \ + remaining - need);\n    }\n    return result;", "    std::vector<long> result;\n\
    \    if (remaining >= need) {\n        result.push_back(number + need);\n    \
    \    result.push_back(remaining - need);\n    } else {\n        result.push_back(number\
    \ + remaining);\n        result.push_back(0);\n    }\n    return result;", " \
    \   std::vector<long> result;\n    if(remaining >= need)\n    {\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    }\n    else\n   \
    \ {\n        result.push_back(number + remaining);\n        result.push_back(0);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if(remaining\
    \ < need) {\n        result.push_back(number + remaining);\n        result.push_back(0);\n\
    \    } else {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    }\n    return result;", "\tstd::vector<long> result;\n\tif (remaining\
    \ < need) {\n\t\tresult.push_back(number + remaining);\n\t\tresult.push_back(0);\n\
    \t}\n\telse {\n\t\tresult.push_back(number + need);\n\t\tresult.push_back(remaining\
    \ - need);\n\t}\n\treturn result;", "    std::vector<long> result;\n    if(remaining\
    \ < need) {\n        result.push_back(number + remaining);\n        result.push_back(0);\n\
    \    } else {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    }\n    return result;", "    std::vector<long> result;\n    if(remaining\
    \ < need) {\n        result.push_back(number + remaining);\n        result.push_back(0);\n\
    \    } else {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    }\n    return result;", "    std::vector<long> result;\n    if\
    \ (need >= remaining) {\n        result.push_back(remaining + number);\n     \
    \   result.push_back(0);\n    } else {\n        result.push_back(need + number);\n\
    \        result.push_back(remaining - need);\n    }\n    return result;", "  std::vector<long>\
    \ result;\n  if (remaining >= need) {\n    result.push_back(number + need);\n\
    \    result.push_back(remaining - need);\n  } else {\n    result.push_back(number\
    \ + remaining);\n    result.push_back(0);\n  }\n  return result;", "    std::vector<long>\
    \ result;\n    if (remaining < need) {\n        result.push_back(number + remaining);\n\
    \        result.push_back(0);\n    } else {\n        result.push_back(number +\
    \ need);\n        result.push_back(remaining - need);\n    }\n    return result;",
  "  std::vector<long> result;\n  if (remaining >= need) {\n    result.push_back(number\
    \ + need);\n    result.push_back(remaining - need);\n  } else {\n    result.push_back(number\
    \ + remaining);\n    result.push_back(0);\n  }\n  return result;", "  std::vector<long>\
    \ result;\n  if (remaining >= need) {\n    result.push_back(number + need);\n\
    \    result.push_back(remaining - need);\n  } else {\n    result.push_back(number\
    \ + remaining);\n    result.push_back(0);\n  }\n  return result;", "    std::vector<long>\
    \ result;\n    if (remaining >= need) {\n        result.push_back(number + need);\n\
    \        result.push_back(remaining - need);\n    } else {\n        result.push_back(number\
    \ + remaining);\n        result.push_back(0);\n    }\n    return result;", " \
    \   std::vector<long> result;\n    if(remaining >= need) {\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    }\n    else {\n \
    \       result.push_back(number + remaining);\n        result.push_back(0);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if(remaining\
    \ < need) {\n        result.push_back(number + remaining);\n        result.push_back(0);\n\
    \    } else {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    }\n    return result;", "  std::vector<long> result;\n  if (remaining\
    \ >= need) {\n    result.push_back(number + need);\n    result.push_back(remaining\
    \ - need);\n  } else {\n    result.push_back(number + remaining);\n    result.push_back(0);\n\
    \  }\n  return result;", "    std::vector<long> result;\n    if(need > remaining)\
    \ {\n        result.push_back(remaining);\n        result.push_back(0);\n    }\
    \ else {\n        result.push_back(need);\n        result.push_back(remaining\
    \ - need);\n    }\n    return result;", "  std::vector<long> result;\n  if(remaining\
    \ >= need){\n    result.push_back(number + need);\n    result.push_back(remaining\
    \ - need);\n  }else{\n    result.push_back(number + remaining);\n    result.push_back(0);\n\
    \  }\n  return result;", "    std::vector<long> result;\n    if (remaining >=\
    \ need) {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    } else {\n        result.push_back(number + remaining);\n    \
    \    result.push_back(0);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if(remaining < need) {\n        result.push_back(number + remaining);\n\
    \        result.push_back(0);\n    } else {\n        result.push_back(number +\
    \ need);\n        result.push_back(remaining - need);\n    }\n    return result;",
  "    std::vector<long> result;\n    if(remaining >= need) {\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    } else {\n      \
    \  result.push_back(number + remaining);\n        result.push_back(0);\n    }\n\
    \    return result;", "    std::vector<long> result;\n    if(remaining >= need){\n\
    \        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    }\n    else{\n        result.push_back(number + remaining);\n\
    \        result.push_back(0);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if(remaining >= need){\n        result.push_back(number + need);\n\
    \        result.push_back(remaining - need);\n    }\n    else{\n        result.push_back(number\
    \ + remaining);\n        result.push_back(0);\n    }\n    return result;", " \
    \   std::vector<long> result;\n    if(remaining < need)\n    {\n        result.push_back(number\
    \ + remaining);\n        result.push_back(0);\n    }\n    else\n    {\n      \
    \  result.push_back(number + need);\n        result.push_back(remaining - need);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if(remaining\
    \ < need) {\n        result.push_back(number + remaining);\n        result.push_back(0);\n\
    \    }\n    else {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    }\n    return result;", "    std::vector<long> v;\n    if(remaining\
    \ >= need)\n    {\n        v.push_back(number + need);\n        v.push_back(remaining\
    \ - need);\n    }\n    else\n    {\n        v.push_back(number + remaining);\n\
    \        v.push_back(0);\n    }\n    return v;", "    std::vector<long> result;\n\
    \    if (remaining < need) {\n        result.push_back(number + remaining);\n\
    \        result.push_back(0);\n    } else {\n        result.push_back(number +\
    \ need);\n        result.push_back(remaining - need);\n    }\n    return result;",
  "    std::vector<long> result;\n    if (remaining >= need) {\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    } else {\n      \
    \  result.push_back(number + remaining);\n        result.push_back(0);\n    }\n\
    \    return result;", "  std::vector<long> result;\n  if (number + remaining <\
    \ need) {\n    result.push_back(number + remaining);\n    result.push_back(0);\n\
    \  } else {\n    result.push_back(need);\n    result.push_back(number + remaining\
    \ - need);\n  }\n  return result;", "    std::vector<long> result;\n    if(remaining\
    \ < need)\n    {\n        result.push_back(number + remaining);\n        result.push_back(0);\n\
    \    }\n    else\n    {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    }\n    return result;", "    std::vector<long> result;\n    if(remaining\
    \ >= need){\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    }\n    else{\n        result.push_back(number + remaining);\n\
    \        result.push_back(0);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if(remaining >= need){\n        result.push_back(number + need);\n\
    \        result.push_back(remaining - need);\n    }\n    else{\n        result.push_back(number\
    \ + remaining);\n        result.push_back(0);\n    }\n    return result;", " \
    \   std::vector<long> result;\n    if (remaining >= need) {\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    } else {\n      \
    \  result.push_back(number + remaining);\n        result.push_back(0);\n    }\n\
    \    return result;", "    std::vector<long> result;\n    if(number + remaining\
    \ >= need){\n        result.push_back(need);\n        result.push_back(number\
    \ + remaining - need);\n    }\n    else{\n        result.push_back(number + remaining);\n\
    \        result.push_back(0);\n    }\n    return result;", "\tstd::vector<long>\
    \ result;\n\tif (remaining >= need) {\n\t\tresult.push_back(number + need);\n\t\
    \tresult.push_back(remaining - need);\n\t}\n\telse {\n\t\tresult.push_back(number\
    \ + remaining);\n\t\tresult.push_back(0);\n\t}\n\treturn result;", "    std::vector<long>\
    \ result;\n    if(remaining < need) {\n        result.push_back(number + remaining);\n\
    \        result.push_back(0);\n    } else {\n        result.push_back(number +\
    \ need);\n        result.push_back(remaining - need);\n    }\n    return result;",
  "    std::vector<long> result;\n    if(remaining >= need) {\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    } else {\n      \
    \  result.push_back(number + remaining);\n        result.push_back(0);\n    }\n\
    \    return result;", "  std::vector<long> result;\n  if (remaining < need) {\n\
    \    result.push_back(number + remaining);\n    result.push_back(0);\n  } else\
    \ {\n    result.push_back(number + need);\n    result.push_back(remaining - need);\n\
    \  }\n  return result;", "    std::vector<long> result;\n    if (number + remaining\
    \ >= need) {\n        result.push_back(need);\n        result.push_back(number\
    \ + remaining - need);\n    } else {\n        result.push_back(number + remaining);\n\
    \        result.push_back(0);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if(remaining >= need) {\n        result.push_back(number + need);\n\
    \        result.push_back(remaining - need);\n    }\n    else {\n        result.push_back(number\
    \ + remaining);\n        result.push_back(0);\n    }\n    return result;", " \
    \   std::vector<long> result;\n    if (number >= need) {\n        result.push_back(need);\n\
    \        result.push_back(remaining);\n    } else {\n        if (remaining >=\
    \ need - number) {\n            result.push_back(need);\n            result.push_back(remaining\
    \ - (need - number));\n        } else {\n            result.push_back(number +\
    \ remaining);\n            result.push_back(0);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    if(need > remaining) {\n     \
    \   result.push_back(remaining + number);\n        result.push_back(0);\n    }\
    \ else {\n        result.push_back(need + number);\n        result.push_back(remaining\
    \ - need);\n    }\n    return result;", "  std::vector<long> result;\n  if(remaining\
    \ >= need){\n    result.push_back(number + need);\n    result.push_back(remaining\
    \ - need);\n  }\n  else{\n    result.push_back(number + remaining);\n    result.push_back(0);\n\
    \  }\n  return result;", "  std::vector<long> result;\n  if (need > remaining)\
    \ {\n    result.push_back(remaining);\n    result.push_back(0);\n  } else {\n\
    \    result.push_back(need);\n    result.push_back(remaining - need);\n  }\n \
    \ return result;", "    std::vector<long> result;\n    if(remaining >= need)\n\
    \    {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    }\n    else\n    {\n        result.push_back(number + remaining);\n\
    \        result.push_back(0);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    result.push_back(number + std::min(need, remaining));\n    result.push_back(std::max(remaining\
    \ - need, 0L));\n    return result;", "    // your code here\n    std::vector<long>\
    \ result;\n    if(remaining < need) {\n        result.push_back(number + remaining);\n\
    \        result.push_back(0);\n    } else {\n        result.push_back(number +\
    \ need);\n        result.push_back(remaining - need);\n    }\n    return result;",
  "  std::vector<long> result;\n  if(remaining >= need){\n    result.push_back(number\
    \ + need);\n    result.push_back(remaining - need);\n  }\n  else{\n    result.push_back(number\
    \ + remaining);\n    result.push_back(0);\n  }\n  return result;", "    std::vector<long>\
    \ result;\n    if(remaining >= need){\n        result.push_back(number + need);\n\
    \        result.push_back(remaining - need);\n    }\n    else{\n        result.push_back(number\
    \ + remaining);\n        result.push_back(0);\n    }\n    return result;", " \
    \   std::vector<long> result;\n    if(remaining >= need)\n    {\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    }\n    else\n   \
    \ {\n        result.push_back(number + remaining);\n        result.push_back(0);\n\
    \    }\n    return result;", "  std::vector<long> result;\n  if(remaining >= need)\
    \ {\n    result.push_back(number + need);\n    result.push_back(remaining - need);\n\
    \  } else {\n    result.push_back(number + remaining);\n    result.push_back(0);\n\
    \  }\n  return result;", "    std::vector<long> result;\n    if (remaining < need)\
    \ {\n        result.push_back(number + remaining);\n        result.push_back(0);\n\
    \    } else {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    }\n    return result;", "  // your code here\n  std::vector<long>\
    \ result;\n  result.push_back(number);\n  result.push_back(need);\n  result.push_back(remaining);\n\
    \  return result;", "  std::vector<long> result;\n  if(remaining < need) {\n \
    \   result.push_back(number + remaining);\n    result.push_back(0);\n  } else\
    \ {\n    result.push_back(number + need);\n    result.push_back(remaining - need);\n\
    \  }\n  return result;", "  std::vector<long> result;\n  if (number + remaining\
    \ >= need) {\n    result.push_back(need);\n    result.push_back(number + remaining\
    \ - need);\n  } else {\n    result.push_back(number + remaining);\n    result.push_back(0);\n\
    \  }\n  return result;", "    std::vector<long> result;\n    if(remaining >= need)\n\
    \    {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    }\n    else\n    {\n        result.push_back(number + remaining);\n\
    \        result.push_back(0);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (remaining >= need) {\n        result.push_back(number + need);\n\
    \        result.push_back(remaining - need);\n    } else {\n        result.push_back(number\
    \ + remaining);\n        result.push_back(0);\n    }\n    return result;", " \
    \   std::vector<long> result;\n    if(remaining < need) {\n        result.push_back(number\
    \ + remaining);\n        result.push_back(0);\n    } else {\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    }\n    return result;",
  "    std::vector<long> result;\n    if(remaining >= need)\n    {\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    }\n    else\n   \
    \ {\n        result.push_back(number + remaining);\n        result.push_back(0);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if(remaining\
    \ >= need){\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    }\n    else{\n        result.push_back(number + remaining);\n\
    \        result.push_back(0);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (remaining >= need) {\n        result.push_back(number + need);\n\
    \        result.push_back(remaining - need);\n    } else {\n        result.push_back(number\
    \ + remaining);\n        result.push_back(0);\n    }\n    return result;", " \
    \   std::vector<long> result;\n    if(remaining >= need)\n    {\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    }\n    else\n   \
    \ {\n        result.push_back(number + remaining);\n        result.push_back(0);\n\
    \    }\n    return result;", "  std::vector<long> result;\n  if (number + remaining\
    \ < need) {\n    result.push_back(number + remaining);\n    result.push_back(0);\n\
    \  } else {\n    result.push_back(need);\n    result.push_back(number + remaining\
    \ - need);\n  }\n  return result;", "    std::vector<long> result;\n    if(need\
    \ > remaining){\n        result.push_back(remaining + number);\n        result.push_back(0);\n\
    \    }\n    else{\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    }\n    return result;", "  std::vector<long> result;\n  if (remaining\
    \ >= need) {\n    result.push_back(number + need);\n    result.push_back(remaining\
    \ - need);\n  } else {\n    result.push_back(number + remaining);\n    result.push_back(0);\n\
    \  }\n  return result;", "    std::vector<long> result;\n    if(need > remaining)\
    \ {\n        result.push_back(remaining);\n        result.push_back(0);\n    }\
    \ else {\n        result.push_back(need);\n        result.push_back(remaining\
    \ - need);\n    }\n    return result;", "  std::vector<long> result;\n  if (number\
    \ + remaining < need) {\n    result.push_back(number + remaining);\n    result.push_back(0);\n\
    \  } else {\n    result.push_back(need);\n    result.push_back(number + remaining\
    \ - need);\n  }\n  return result;", "\tstd::vector<long> result;\n\tif (remaining\
    \ < need) {\n\t\tresult.push_back(number + remaining);\n\t\tresult.push_back(0);\n\
    \t}\n\telse {\n\t\tresult.push_back(number + need);\n\t\tresult.push_back(remaining\
    \ - need);\n\t}\n\treturn result;", "    std::vector<long> result;\n    if (remaining\
    \ >= need) {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    } else {\n        result.push_back(number + remaining);\n    \
    \    result.push_back(0);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    result.push_back(number + need);\n    result.push_back(remaining\
    \ - need);\n    return result;", "    std::vector<long> result;\n    if (number\
    \ >= need) {\n        result.push_back(need);\n        result.push_back(remaining);\n\
    \    } else {\n        if (remaining >= need - number) {\n            result.push_back(need);\n\
    \            result.push_back(remaining - (need - number));\n        } else {\n\
    \            result.push_back(number + remaining);\n            result.push_back(0);\n\
    \        }\n    }\n    return result;", "  std::vector<long> result;\n  if (number\
    \ + remaining >= need) {\n    result.push_back(need);\n    result.push_back(number\
    \ + remaining - need);\n  } else {\n    result.push_back(number + remaining);\n\
    \    result.push_back(0);\n  }\n  return result;", "    std::vector<long> result;\n\
    \    if(remaining < need)\n    {\n        result.push_back(number + remaining);\n\
    \        result.push_back(0);\n    }\n    else\n    {\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    }\n    return result;",
  "    std::vector<long> result;\n    if(remaining < need){\n        result.push_back(remaining);\n\
    \        result.push_back(0);\n    }\n    else{\n        result.push_back(need);\n\
    \        result.push_back(remaining - need);\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    if(remaining >= need){\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    }\n    else{\n  \
    \      result.push_back(number + remaining);\n        result.push_back(0);\n \
    \   }\n    return result;", "    std::vector<long> result;\n    if (remaining\
    \ >= need) {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    } else {\n        result.push_back(number + remaining);\n    \
    \    result.push_back(0);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (remaining >= need) {\n        result.push_back(number + need);\n\
    \        result.push_back(remaining - need);\n    } else {\n        result.push_back(number\
    \ + remaining);\n        result.push_back(0);\n    }\n    return result;", " \
    \   std::vector<long> result;\n    if(remaining >= need){\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    }\n    else{\n  \
    \      result.push_back(number + remaining);\n        result.push_back(0);\n \
    \   }\n    return result;", "    std::vector<long> result;\n    if (remaining\
    \ >= need) {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    } else {\n        result.push_back(number + remaining);\n    \
    \    result.push_back(0);\n    }\n    return result;", "\tstd::vector<long> result;\n\
    \tif (number < 0 || need < 0 || remaining < 0) {\n\t\tresult.push_back(-1);\n\t\
    \tresult.push_back(-1);\n\t\treturn result;\n\t}\n\tif (remaining < need) {\n\t\
    \tresult.push_back(number + remaining);\n\t\tresult.push_back(0);\n\t\treturn\
    \ result;\n\t}\n\tresult.push_back(number + need);\n\tresult.push_back(remaining\
    \ - need);\n\treturn result;", "    std::vector<long> result;\n    if(number +\
    \ need <= remaining){\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - (number + need));\n    }\n    else{\n        result.push_back(remaining);\n\
    \        result.push_back(0);\n    }\n    return result;", "  std::vector<long>\
    \ result;\n  if (remaining < need) {\n    result.push_back(number + remaining);\n\
    \    result.push_back(0);\n  } else {\n    result.push_back(number + need);\n\
    \    result.push_back(remaining - need);\n  }\n  return result;", "    std::vector<long>\
    \ result;\n    if (number + remaining >= need) {\n        result.push_back(need);\n\
    \        result.push_back(number + remaining - need);\n    } else {\n        result.push_back(number\
    \ + remaining);\n        result.push_back(0);\n    }\n    return result;", " \
    \ std::vector<long> result;\n  if(remaining >= need) {\n    result.push_back(number\
    \ + need);\n    result.push_back(remaining - need);\n  } else {\n    result.push_back(number\
    \ + remaining);\n    result.push_back(0);\n  }\n  return result;", "    std::vector<long>\
    \ result;\n    if(remaining >= need){\n        result.push_back(number + need);\n\
    \        result.push_back(remaining - need);\n    }\n    else{\n        result.push_back(number\
    \ + remaining);\n        result.push_back(0);\n    }\n    return result;", " \
    \   std::vector<long> result;\n    if(remaining >= need){\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    }\n    else{\n  \
    \      result.push_back(number + remaining);\n        result.push_back(0);\n \
    \   }\n    return result;", "  std::vector<long> result;\n  if (need <= remaining)\
    \ {\n    result.push_back(number + need);\n    result.push_back(remaining - need);\n\
    \  } else {\n    result.push_back(number + remaining);\n    result.push_back(0);\n\
    \  }\n  return result;", "    std::vector<long> result;\n    if (remaining >=\
    \ need) {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    } else {\n        result.push_back(number + remaining);\n    \
    \    result.push_back(0);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (number >= need) {\n        result.push_back(need);\n      \
    \  result.push_back(remaining);\n    } else {\n        result.push_back(number\
    \ + remaining);\n        result.push_back(0);\n    }\n    return result;", " \
    \   std::vector<long> result;\n    if(remaining >= need){\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    }\n    else{\n  \
    \      result.push_back(number + remaining);\n        result.push_back(0);\n \
    \   }\n    return result;", "    std::vector<long> result;\n    if (remaining\
    \ >= need) {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    } else {\n        result.push_back(number + remaining);\n    \
    \    result.push_back(0);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if(remaining >= need){\n        result.push_back(number + need);\n\
    \        result.push_back(remaining - need);\n    }\n    else{\n        result.push_back(number\
    \ + remaining);\n        result.push_back(0);\n    }\n    return result;", " \
    \   std::vector<long> result;\n    if (remaining >= need) {\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    } else {\n      \
    \  result.push_back(number + remaining);\n        result.push_back(0);\n    }\n\
    \    return result;", "    long total = number + remaining;\n    if (total < need)\
    \ {\n        return {total, 0};\n    }\n    return {need, total - need};", " \
    \   std::vector<long> result;\n    if (remaining >= need) {\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    } else {\n      \
    \  result.push_back(number + remaining);\n        result.push_back(0);\n    }\n\
    \    return result;", "    std::vector<long> result;\n    if (remaining < need)\
    \ {\n        result.push_back(number + remaining);\n        result.push_back(0);\n\
    \    } else {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    }\n    return result;", "    std::vector<long> result;\n    if(remaining\
    \ >= need){\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    }\n    else{\n        result.push_back(number + remaining);\n\
    \        result.push_back(0);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if(remaining >= need){\n        result.push_back(number + need);\n\
    \        result.push_back(remaining - need);\n    }\n    else{\n        result.push_back(number\
    \ + remaining);\n        result.push_back(0);\n    }\n    return result;", " \
    \   std::vector<long> result;\n    if(remaining > need)\n    {\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    }\n    else\n   \
    \ {\n        result.push_back(number + remaining);\n        result.push_back(0);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if (number +\
    \ remaining < need) {\n        result.push_back(number + remaining);\n       \
    \ result.push_back(0);\n    } else {\n        result.push_back(need);\n      \
    \  result.push_back(number + remaining - need);\n    }\n    return result;", " \
    \   std::vector<long> result;\n    if (remaining < need) {\n        result.push_back(number\
    \ + remaining);\n        result.push_back(0);\n    } else {\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    }\n    return result;",
  "    std::vector<long> result;\n    if (remaining >= need) {\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    } else {\n      \
    \  result.push_back(number + remaining);\n        result.push_back(0);\n    }\n\
    \    return result;", "    std::vector<long> result;\n    if (remaining < need)\
    \ {\n        result.push_back(number + remaining);\n        result.push_back(0);\n\
    \    } else {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    }\n    return result;", "    std::vector<long> result;\n    if(remaining\
    \ >= need) {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    }\n    else {\n        result.push_back(number + remaining);\n\
    \        result.push_back(0);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if(remaining < need) {\n        result.push_back(number + remaining);\n\
    \        result.push_back(0);\n    } else {\n        result.push_back(number +\
    \ need);\n        result.push_back(remaining - need);\n    }\n    return result;",
  "    std::vector<long> result;\n    if(remaining >= need)\n    {\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    }\n    else\n   \
    \ {\n        result.push_back(number + remaining);\n        result.push_back(0);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if (remaining\
    \ < need) {\n        result.push_back(number + remaining);\n        result.push_back(0);\n\
    \    } else {\n        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    }\n    return result;", "  std::vector<long> result;\n  if (remaining\
    \ >= need) {\n    result.push_back(number + need);\n    result.push_back(remaining\
    \ - need);\n  } else {\n    result.push_back(number + remaining);\n    result.push_back(0);\n\
    \  }\n  return result;", "    std::vector<long> result;\n    if(remaining >= need){\n\
    \        result.push_back(number + need);\n        result.push_back(remaining\
    \ - need);\n    }\n    else{\n        result.push_back(number + remaining);\n\
    \        result.push_back(0);\n    }\n    return result;", "  std::vector<long>\
    \ result;\n  if (remaining >= need) {\n    result.push_back(number + need);\n\
    \    result.push_back(remaining - need);\n  } else {\n    result.push_back(number\
    \ + remaining);\n    result.push_back(0);\n  }\n  return result;", "  std::vector<long>\
    \ result;\n  if (number + remaining < need) {\n    result.push_back(number + remaining);\n\
    \    result.push_back(0);\n  } else {\n    result.push_back(need);\n    result.push_back(number\
    \ + remaining - need);\n  }\n  return result;", "  std::vector<long> result;\n\
    \  if (number >= need) {\n    result.push_back(need);\n    result.push_back(remaining);\n\
    \  } else {\n    if (remaining >= need - number) {\n      result.push_back(need);\n\
    \      result.push_back(remaining - (need - number));\n    } else {\n      result.push_back(remaining\
    \ + number);\n      result.push_back(0);\n    }\n  }\n  return result;", "   \
    \ std::vector<long> result;\n    if(remaining < need) {\n        result.push_back(number\
    \ + remaining);\n        result.push_back(0);\n    } else {\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    }\n    return result;",
  "  std::vector<long> result;\n  if (remaining >= need) {\n    result.push_back(number\
    \ + need);\n    result.push_back(remaining - need);\n  } else {\n    result.push_back(number\
    \ + remaining);\n    result.push_back(0);\n  }\n  return result;", "    std::vector<long>\
    \ result;\n    if (remaining >= need) {\n        result.push_back(number + need);\n\
    \        result.push_back(remaining - need);\n    } else {\n        result.push_back(number\
    \ + remaining);\n        result.push_back(0);\n    }\n    return result;", " \
    \   std::vector<long> result;\n    if (remaining >= need) {\n        result.push_back(number\
    \ + need);\n        result.push_back(remaining - need);\n    } else {\n      \
    \  result.push_back(number + remaining);\n        result.push_back(0);\n    }\n\
    \    return result;", "  std::vector<long> result;\n  if (number >= need) {\n\
    \    result.push_back(need);\n    result.push_back(remaining);\n  } else {\n \
    \   if (remaining >= need - number) {\n      result.push_back(need);\n      result.push_back(remaining\
    \ - (need - number));\n    } else {\n      result.push_back(number + remaining);\n\
    \      result.push_back(0);\n    }\n  }\n  return result;"]
stop_tokens:
- "\n}"

name: HumanEval_8_sum_product
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given list of integers,\
  \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
  // Empty sum should be equal to 0 and empty product should be equal to 1.\nstd::tuple<long,\
  \ long> sum_product(std::vector<long> numbers) {\n"
tests: "}\nint main() {\n    auto candidate = sum_product;\n    assert(candidate((std::vector<long>()))\
  \ == (std::make_tuple(0, 1)));\n    assert(candidate((std::vector<long>({1, 1, 1})))\
  \ == (std::make_tuple(3, 1)));\n    assert(candidate((std::vector<long>({100, 0})))\
  \ == (std::make_tuple(100, 0)));\n    assert(candidate((std::vector<long>({3, 5,\
  \ 7}))) == (std::make_tuple(15, 105)));\n    assert(candidate((std::vector<long>({10})))\
  \ == (std::make_tuple(10, 10)));\n}\n"
completions: []
stop_tokens:
- "\n}"

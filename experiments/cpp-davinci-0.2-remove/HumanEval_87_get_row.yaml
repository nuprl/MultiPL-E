name: HumanEval_87_get_row
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a 2 dimensional\
  \ data, as a nested lists,\n// which is similar to matrix, however, unlike matrices,\n\
  // each row may contain a different number of columns.\n// Given lst, and integer\
  \ x, find integers x in the list,\n// and return list of tuples, [(x1, y1), (x2,\
  \ y2) ...] such that\n// each tuple is a coordinate - (row, columns), starting with\
  \ 0.\n// Sort coordinates initially by rows in ascending order.\n// Also, sort coordinates\
  \ of the row by columns in descending order.\n// Examples:\nstd::vector<long> get_row(std::vector<std::vector<long>>\
  \ lst, long x) {\n"
tests: "}\nint main() {\n    auto candidate = get_row;\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)1,\
  \ (long)2, (long)3, (long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)1,\
  \ (long)2, (long)3, (long)4, (long)1, (long)6}), (std::vector<long>)std::vector<long>({(long)1,\
  \ (long)2, (long)3, (long)4, (long)5, (long)1})})), (1)) == (std::vector<long>(2,\
  \ 0)})));\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)1,\
  \ (long)2, (long)3, (long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)1,\
  \ (long)2, (long)3, (long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)1,\
  \ (long)2, (long)3, (long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)1,\
  \ (long)2, (long)3, (long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)1,\
  \ (long)2, (long)3, (long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)1,\
  \ (long)2, (long)3, (long)4, (long)5, (long)6})})), (2)) == (std::vector<long>(5,\
  \ 1)})));\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)1,\
  \ (long)2, (long)3, (long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)1,\
  \ (long)2, (long)3, (long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)1,\
  \ (long)1, (long)3, (long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)1,\
  \ (long)2, (long)1, (long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)1,\
  \ (long)2, (long)3, (long)1, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)1,\
  \ (long)2, (long)3, (long)4, (long)1, (long)6}), (std::vector<long>)std::vector<long>({(long)1,\
  \ (long)2, (long)3, (long)4, (long)5, (long)1})})), (1)) == (std::vector<long>(6,\
  \ 0)})));\n    assert(candidate((std::vector<std::vector<long>>()), (1)) == (std::vector<long>()));\n\
  \    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)1})})),\
  \ (2)) == (std::vector<long>()));\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>(),\
  \ (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)1,\
  \ (long)2, (long)3})})), (3)) == (std::vector<long>(2, 2)})));\n}\n"
completions: ["    std::vector<long> result;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        for (int j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (int i = 0; i < lst.size(); i++) {\n        for (int j = 0;\
    \ j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n             \
    \   result.push_back(i);\n                result.push_back(j);\n            }\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        for (long j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (long i = 0; i < lst.size(); i++) {\n        for (long j =\
    \ 0; j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n          \
    \      result.push_back(i);\n                result.push_back(j);\n          \
    \  }\n        }\n    }\n    return result;", "  std::vector<long> result;\n  for\
    \ (int i = 0; i < lst.size(); i++) {\n    for (int j = 0; j < lst[i].size(); j++)\
    \ {\n      if (lst[i][j] == x) {\n        result.push_back(i);\n        result.push_back(j);\n\
    \      }\n    }\n  }\n  return result;", "  std::vector<long> result;\n  for (int\
    \ i = 0; i < lst.size(); i++) {\n    for (int j = 0; j < lst[i].size(); j++) {\n\
    \      if (lst[i][j] == x) {\n        result.push_back(i);\n        result.push_back(j);\n\
    \      }\n    }\n  }\n  return result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        for (int j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (long i = 0; i < lst.size(); i++) {\n        for (long j =\
    \ 0; j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n          \
    \      result.push_back(i);\n                result.push_back(j);\n          \
    \  }\n        }\n    }\n    return result;", "  std::vector<long> res;\n  for\
    \ (long i = 0; i < lst.size(); i++) {\n    for (long j = 0; j < lst[i].size();\
    \ j++) {\n      if (lst[i][j] == x) {\n        res.push_back(i);\n        res.push_back(j);\n\
    \      }\n    }\n  }\n  return res;", "  std::vector<long> result;\n  for (long\
    \ i = 0; i < lst.size(); i++) {\n    for (long j = 0; j < lst[i].size(); j++)\
    \ {\n      if (lst[i][j] == x) {\n        result.push_back(i);\n        result.push_back(j);\n\
    \      }\n    }\n  }\n  return result;", "  std::vector<long> result;\n  for (long\
    \ i = 0; i < lst.size(); i++) {\n    for (long j = 0; j < lst[i].size(); j++)\
    \ {\n      if (lst[i][j] == x) {\n        result.push_back(i);\n        result.push_back(j);\n\
    \      }\n    }\n  }\n  return result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "\tstd::vector<long> result;\n\tfor (int i = 0; i < lst.size(); i++)\
    \ {\n\t\tfor (int j = 0; j < lst[i].size(); j++) {\n\t\t\tif (lst[i][j] == x)\
    \ {\n\t\t\t\tresult.push_back(i);\n\t\t\t\tresult.push_back(j);\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn result;", "  std::vector<long> result;\n  for (long i = 0; i\
    \ < lst.size(); i++) {\n    for (long j = 0; j < lst[i].size(); j++) {\n     \
    \ if (lst[i][j] == x) {\n        result.push_back(i);\n        result.push_back(j);\n\
    \      }\n    }\n  }\n  return result;", "  std::vector<long> result;\n  for (int\
    \ i = 0; i < lst.size(); i++) {\n    for (int j = 0; j < lst[i].size(); j++) {\n\
    \      if (lst[i][j] == x) {\n        result.push_back(i);\n        result.push_back(j);\n\
    \      }\n    }\n  }\n  return result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        for (long j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (int i = 0; i < lst.size(); i++) {\n        for (int j = 0;\
    \ j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n             \
    \   result.push_back(i);\n                result.push_back(j);\n            }\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < lst.size(); i++) {\n        for (int j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        for (int j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (long i = 0; i < lst.size(); i++) {\n        for (long j =\
    \ 0; j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n          \
    \      result.push_back(i);\n                result.push_back(j);\n          \
    \  }\n        }\n    }\n    return result;", "    std::vector<long> result;\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        for (long j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (long i = 0; i < lst.size(); i++) {\n        for (long j =\
    \ 0; j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n          \
    \      result.push_back(i);\n                result.push_back(j);\n          \
    \  }\n        }\n    }\n    return result;", "    std::vector<long> result;\n\
    \    std::vector<std::vector<long>> result_2d;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        for (int j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \                result_2d.push_back(result);\n                result.clear();\n\
    \            }\n        }\n    }\n    std::sort(result_2d.begin(), result_2d.end());\n\
    \    std::vector<long> final_result;\n    for (int i = 0; i < result_2d.size();\
    \ i++) {\n        for (int j = 0; j < result_2d[i].size(); j++) {\n          \
    \  final_result.push_back(result_2d[i][j]);\n        }\n    }\n    return final_result;",
  "    std::vector<long> result;\n    for (long i = 0; i < lst.size(); i++) {\n  \
    \      for (long j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j] ==\
    \ x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "  std::vector<long> result;\n\
    \  for (int i = 0; i < lst.size(); i++) {\n    for (int j = 0; j < lst[i].size();\
    \ j++) {\n      if (lst[i][j] == x) {\n        result.push_back(i);\n        result.push_back(j);\n\
    \      }\n    }\n  }\n  return result;", "  std::vector<long> result;\n  for (int\
    \ i = 0; i < lst.size(); i++) {\n    for (int j = 0; j < lst[i].size(); j++) {\n\
    \      if (lst[i][j] == x) {\n        result.push_back(i);\n        result.push_back(j);\n\
    \      }\n    }\n  }\n  return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < lst.size(); i++) {\n        for (int j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        for (long j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (int i = 0; i < lst.size(); i++) {\n        for (int j = 0;\
    \ j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n             \
    \   result.push_back(i);\n                result.push_back(j);\n            }\n\
    \        }\n    }\n    return result;", "  std::vector<long> result;\n  for (int\
    \ i = 0; i < lst.size(); i++) {\n    for (int j = 0; j < lst[i].size(); j++) {\n\
    \      if (lst[i][j] == x) {\n        result.push_back(i);\n        result.push_back(j);\n\
    \      }\n    }\n  }\n  return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < lst.size(); i++) {\n        for (int j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "  std::vector<long> result;\n  for (int i = 0; i < lst.size(); i++)\
    \ {\n    for (int j = 0; j < lst[i].size(); j++) {\n      if (lst[i][j] == x)\
    \ {\n        result.push_back(i);\n        result.push_back(j);\n      }\n   \
    \ }\n  }\n  return result;", "    std::vector<long> result;\n    for (long i =\
    \ 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size(); j++)\
    \ {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "  std::vector<long> result;\n  for (long i = 0; i < lst.size(); i++)\
    \ {\n    for (long j = 0; j < lst[i].size(); j++) {\n      if (lst[i][j] == x)\
    \ {\n        result.push_back(i);\n        result.push_back(j);\n      }\n   \
    \ }\n  }\n  return result;", "\tstd::vector<long> result;\n\tfor (int i = 0; i\
    \ < lst.size(); i++) {\n\t\tfor (int j = 0; j < lst[i].size(); j++) {\n\t\t\t\
    if (lst[i][j] == x) {\n\t\t\t\tresult.push_back(i);\n\t\t\t\tresult.push_back(j);\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "\tstd::vector<long> result;\n\tfor (int i = 0; i < lst.size(); i++)\
    \ {\n\t\tfor (int j = 0; j < lst[i].size(); j++) {\n\t\t\tif (lst[i][j] == x)\
    \ {\n\t\t\t\tresult.push_back(i);\n\t\t\t\tresult.push_back(j);\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn result;", "    std::vector<long> result;\n    for (int i = 0;\
    \ i < lst.size(); i++) {\n        for (int j = 0; j < lst[i].size(); j++) {\n\
    \            if (lst[i][j] == x) {\n                result.push_back(i);\n   \
    \             result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        for (int j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (long i = 0; i < lst.size(); i++) {\n        for (long j =\
    \ 0; j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n          \
    \      result.push_back(i);\n                result.push_back(j);\n          \
    \  }\n        }\n    }\n    return result;", "    std::vector<long> result;\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        for (long j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::vector<std::vector<long>> coordinates;\n    for (int i = 0;\
    \ i < lst.size(); i++) {\n        for (int j = 0; j < lst[i].size(); j++) {\n\
    \            if (lst[i][j] == x) {\n                coordinates.push_back({i,\
    \ j});\n            }\n        }\n    }\n    std::sort(coordinates.begin(), coordinates.end());\n\
    \    for (int i = 0; i < coordinates.size(); i++) {\n        result.push_back(coordinates[i][0]);\n\
    \        result.push_back(coordinates[i][1]);\n    }\n    return result;", " \
    \   std::vector<long> result;\n    for (int i = 0; i < lst.size(); i++) {\n  \
    \      for (int j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j] ==\
    \ x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (long i = 0; i < lst.size(); i++) {\n        for (long j =\
    \ 0; j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n          \
    \      result.push_back(i);\n                result.push_back(j);\n          \
    \  }\n        }\n    }\n    return result;", "  std::vector<long> result;\n  for\
    \ (int i = 0; i < lst.size(); i++) {\n    for (int j = 0; j < lst[i].size(); j++)\
    \ {\n      if (lst[i][j] == x) {\n        result.push_back(i);\n        result.push_back(j);\n\
    \      }\n    }\n  }\n  return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < lst.size(); i++) {\n        for (int j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "  std::vector<long> result;\n  for (int i = 0; i < lst.size(); i++)\
    \ {\n    for (int j = 0; j < lst[i].size(); j++) {\n      if (lst[i][j] == x)\
    \ {\n        result.push_back(i);\n        result.push_back(j);\n      }\n   \
    \ }\n  }\n  return result;", "    std::vector<long> result;\n    if (lst.size()\
    \ == 0) {\n        return result;\n    }\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        for (int j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "  std::vector<long> result;\n\
    \  for (long i = 0; i < lst.size(); i++) {\n    for (long j = 0; j < lst[i].size();\
    \ j++) {\n      if (lst[i][j] == x) {\n        result.push_back(i);\n        result.push_back(j);\n\
    \      }\n    }\n  }\n  return result;", "\tstd::vector<long> result;\n\tfor (int\
    \ i = 0; i < lst.size(); i++) {\n\t\tfor (int j = 0; j < lst[i].size(); j++) {\n\
    \t\t\tif (lst[i][j] == x) {\n\t\t\t\tresult.push_back(i);\n\t\t\t\tresult.push_back(j);\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "  std::vector<long> result;\n  std::vector<std::vector<long>> temp;\n\
    \  for (int i = 0; i < lst.size(); i++) {\n    for (int j = 0; j < lst[i].size();\
    \ j++) {\n      if (lst[i][j] == x) {\n        std::vector<long> temp2;\n    \
    \    temp2.push_back(i);\n        temp2.push_back(j);\n        temp.push_back(temp2);\n\
    \      }\n    }\n  }\n  std::sort(temp.begin(), temp.end());\n  for (int i = 0;\
    \ i < temp.size(); i++) {\n    result.push_back(temp[i][0]);\n    result.push_back(temp[i][1]);\n\
    \  }\n  return result;", "    std::vector<long> result;\n    for (int i = 0; i\
    \ < lst.size(); i++) {\n        for (int j = 0; j < lst[i].size(); j++) {\n  \
    \          if (lst[i][j] == x) {\n                result.push_back(i);\n     \
    \           result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        for (int j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ ans;\n    for (long i = 0; i < lst.size(); i++) {\n        for (long j = 0;\
    \ j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n             \
    \   ans.push_back(i);\n                ans.push_back(j);\n            }\n    \
    \    }\n    }\n    return ans;", "    std::vector<long> result;\n    for (int\
    \ i = 0; i < lst.size(); i++) {\n        for (int j = 0; j < lst[i].size(); j++)\
    \ {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "  std::vector<long> result;\n  for (int i = 0; i < lst.size(); i++)\
    \ {\n    for (int j = 0; j < lst[i].size(); j++) {\n      if (lst[i][j] == x)\
    \ {\n        result.push_back(i);\n        result.push_back(j);\n      }\n   \
    \ }\n  }\n  return result;", "    std::vector<long> result;\n    for (long i =\
    \ 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size(); j++)\
    \ {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "  std::vector<long> result;\n  for (long i = 0; i < lst.size(); i++)\
    \ {\n    for (long j = 0; j < lst[i].size(); j++) {\n      if (lst[i][j] == x)\
    \ {\n        result.push_back(i);\n        result.push_back(j);\n      }\n   \
    \ }\n  }\n  return result;", "    std::vector<long> result;\n    for (int i =\
    \ 0; i < lst.size(); i++) {\n        for (int j = 0; j < lst[i].size(); j++) {\n\
    \            if (lst[i][j] == x) {\n                result.push_back(i);\n   \
    \             result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        for (int j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "  std::vector<long> result;\n\
    \  for (int i = 0; i < lst.size(); i++) {\n    for (int j = 0; j < lst[i].size();\
    \ j++) {\n      if (lst[i][j] == x) {\n        result.push_back(i);\n        result.push_back(j);\n\
    \      }\n    }\n  }\n  return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < lst.size(); i++) {\n        for (int j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        for (long j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (long i = 0; i < lst.size(); i++) {\n        for (long j =\
    \ 0; j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n          \
    \      result.push_back(i);\n                result.push_back(j);\n          \
    \  }\n        }\n    }\n    return result;", "    std::vector<long> result;\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        for (long j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "  std::vector<long> result;\n\
    \  for (long i = 0; i < lst.size(); i++) {\n    for (long j = 0; j < lst[i].size();\
    \ j++) {\n      if (lst[i][j] == x) {\n        result.push_back(i);\n        result.push_back(j);\n\
    \      }\n    }\n  }\n  return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < lst.size(); i++) {\n        for (int j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        for (int j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::vector<std::pair<long, long>> coordinates;\n    for (long\
    \ i = 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size(); j++)\
    \ {\n            if (lst[i][j] == x) {\n                coordinates.push_back(std::make_pair(i,\
    \ j));\n            }\n        }\n    }\n    std::sort(coordinates.begin(), coordinates.end());\n\
    \    for (long i = 0; i < coordinates.size(); i++) {\n        result.push_back(coordinates[i].first);\n\
    \        result.push_back(coordinates[i].second);\n    }\n    return result;",
  "    std::vector<long> result;\n    for (long i = 0; i < lst.size(); i++) {\n  \
    \      for (long j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j] ==\
    \ x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    for (int i = 0; i < lst.size(); i++) {\n        for (int j = 0; j\
    \ < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n               \
    \ res.push_back(i);\n                res.push_back(j);\n            }\n      \
    \  }\n    }\n    return res;", "    std::vector<long> result;\n    for (long i\
    \ = 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size(); j++)\
    \ {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        for (long j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (long i = 0; i < lst.size(); i++) {\n        for (long j =\
    \ 0; j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n          \
    \      result.push_back(i);\n                result.push_back(j);\n          \
    \  }\n        }\n    }\n    return result;", "  std::vector<long> result;\n  for\
    \ (long i = 0; i < lst.size(); i++) {\n    for (long j = 0; j < lst[i].size();\
    \ j++) {\n      if (lst[i][j] == x) {\n        result.push_back(i);\n        result.push_back(j);\n\
    \      }\n    }\n  }\n  return result;", "    std::vector<long> result;\n    std::vector<std::vector<long>>\
    \ result_vector;\n    for (int i = 0; i < lst.size(); i++) {\n        for (int\
    \ j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n      \
    \          result.push_back(i);\n                result.push_back(j);\n      \
    \          result_vector.push_back(result);\n                result.clear();\n\
    \            }\n        }\n    }\n    std::sort(result_vector.begin(), result_vector.end());\n\
    \    std::reverse(result_vector.begin(), result_vector.end());\n    std::vector<long>\
    \ result_vector_2;\n    for (int i = 0; i < result_vector.size(); i++) {\n   \
    \     for (int j = 0; j < result_vector[i].size(); j++) {\n            result_vector_2.push_back(result_vector[i][j]);\n\
    \        }\n    }\n    return result_vector_2;", "\tstd::vector<long> result;\n\
    \tfor (long i = 0; i < lst.size(); i++) {\n\t\tfor (long j = 0; j < lst[i].size();\
    \ j++) {\n\t\t\tif (lst[i][j] == x) {\n\t\t\t\tresult.push_back(i);\n\t\t\t\t\
    result.push_back(j);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;", "    std::vector<long>\
    \ result;\n    for (int i = 0; i < lst.size(); i++) {\n        for (int j = 0;\
    \ j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n             \
    \   result.push_back(i);\n                result.push_back(j);\n            }\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        for (long j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "  std::vector<long> result;\n\
    \  for (long i = 0; i < lst.size(); i++) {\n    for (long j = 0; j < lst[i].size();\
    \ j++) {\n      if (lst[i][j] == x) {\n        result.push_back(i);\n        result.push_back(j);\n\
    \      }\n    }\n  }\n  return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < lst.size(); i++) {\n        for (int j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    std::vector<std::pair<long, long>>\
    \ coordinates;\n    for (long i = 0; i < lst.size(); i++) {\n        for (long\
    \ j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n      \
    \          coordinates.push_back(std::make_pair(i, j));\n            }\n     \
    \   }\n    }\n    std::sort(coordinates.begin(), coordinates.end());\n    for\
    \ (long i = 0; i < coordinates.size(); i++) {\n        result.push_back(coordinates[i].first);\n\
    \        result.push_back(coordinates[i].second);\n    }\n    return result;",
  "  std::vector<long> result;\n  for (int i = 0; i < lst.size(); i++) {\n    for\
    \ (int j = 0; j < lst[i].size(); j++) {\n      if (lst[i][j] == x) {\n       \
    \ result.push_back(i);\n        result.push_back(j);\n      }\n    }\n  }\n  return\
    \ result;", "\tstd::vector<long> result;\n\tfor (long i = 0; i < lst.size(); i++)\
    \ {\n\t\tfor (long j = 0; j < lst[i].size(); j++) {\n\t\t\tif (lst[i][j] == x)\
    \ {\n\t\t\t\tresult.push_back(i);\n\t\t\t\tresult.push_back(j);\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn result;", "    std::vector<long> result;\n    for (int i = 0;\
    \ i < lst.size(); i++) {\n        for (int j = 0; j < lst[i].size(); j++) {\n\
    \            if (lst[i][j] == x) {\n                result.push_back(i);\n   \
    \             result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        for (long j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (long i = 0; i < lst.size(); i++) {\n        for (long j =\
    \ 0; j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n          \
    \      result.push_back(i);\n                result.push_back(j);\n          \
    \  }\n        }\n    }\n    return result;", "    std::vector<long> result;\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    std::vector<std::pair<long, long>>\
    \ coordinates;\n    for (long i = 0; i < lst.size(); i++) {\n        for (long\
    \ j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n      \
    \          coordinates.push_back(std::make_pair(i, j));\n            }\n     \
    \   }\n    }\n    std::sort(coordinates.begin(), coordinates.end());\n    for\
    \ (long i = 0; i < coordinates.size(); i++) {\n        result.push_back(coordinates[i].first);\n\
    \        result.push_back(coordinates[i].second);\n    }\n    return result;",
  "    std::vector<long> result;\n    for (int i = 0; i < lst.size(); i++) {\n   \
    \     for (int j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j] ==\
    \ x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (long i = 0; i < lst.size(); i++) {\n        for (long j =\
    \ 0; j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n          \
    \      result.push_back(i);\n                result.push_back(j);\n          \
    \  }\n        }\n    }\n    return result;", "    std::vector<long> result;\n\
    \    for (int i = 0; i < lst.size(); i++) {\n        for (int j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "  std::vector<long> result;\n  for (int i = 0; i < lst.size(); i++)\
    \ {\n    for (int j = 0; j < lst[i].size(); j++) {\n      if (lst[i][j] == x)\
    \ {\n        result.push_back(i);\n        result.push_back(j);\n      }\n   \
    \ }\n  }\n  return result;", "    std::vector<long> result;\n    for (long i =\
    \ 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size(); j++)\
    \ {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "  std::vector<long> result;\n  for (int i = 0; i < lst.size(); i++)\
    \ {\n    for (int j = 0; j < lst[i].size(); j++) {\n      if (lst[i][j] == x)\
    \ {\n        result.push_back(i);\n        result.push_back(j);\n      }\n   \
    \ }\n  }\n  return result;", "    std::vector<long> result;\n    for (long i =\
    \ 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size(); j++)\
    \ {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    long row = 0;\n    for (auto i\
    \ : lst) {\n        long col = 0;\n        for (auto j : i) {\n            if\
    \ (j == x) {\n                result.push_back(row);\n                result.push_back(col);\n\
    \            }\n            col++;\n        }\n        row++;\n    }\n    return\
    \ result;", "  std::vector<long> result;\n  for (int i = 0; i < lst.size(); i++)\
    \ {\n    for (int j = 0; j < lst[i].size(); j++) {\n      if (lst[i][j] == x)\
    \ {\n        result.push_back(i);\n        result.push_back(j);\n      }\n   \
    \ }\n  }\n  return result;", "    std::vector<long> result;\n    for (long i =\
    \ 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size(); j++)\
    \ {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        for (int j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (long i = 0; i < lst.size(); i++) {\n        for (long j =\
    \ 0; j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n          \
    \      result.push_back(i);\n                result.push_back(j);\n          \
    \  }\n        }\n    }\n    return result;", "    std::vector<long> result;\n\
    \    for (int i = 0; i < lst.size(); i++) {\n        for (int j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "  std::vector<long> result;\n  for (long i = 0; i < lst.size(); i++)\
    \ {\n    for (long j = 0; j < lst[i].size(); j++) {\n      if (lst[i][j] == x)\
    \ {\n        result.push_back(i);\n        result.push_back(j);\n      }\n   \
    \ }\n  }\n  return result;", "    std::vector<long> result;\n    for (long i =\
    \ 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size(); j++)\
    \ {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> res;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        for (long j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                res.push_back(i);\n                res.push_back(j);\n\
    \            }\n        }\n    }\n    return res;", "    std::vector<long> result;\n\
    \    for (int i = 0; i < lst.size(); i++) {\n        for (int j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        for (int j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (long i = 0; i < lst.size(); i++) {\n        for (long j =\
    \ 0; j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n          \
    \      result.push_back(i);\n                result.push_back(j);\n          \
    \  }\n        }\n    }\n    return result;", "    std::vector<long> result;\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    std::vector<std::vector<long>>::iterator\
    \ itr;\n    std::vector<long>::iterator itr2;\n    long i = 0;\n    long j = 0;\n\
    \    for (itr = lst.begin(); itr != lst.end(); itr++) {\n        for (itr2 = (*itr).begin();\
    \ itr2 != (*itr).end(); itr2++) {\n            if (*itr2 == x) {\n           \
    \     result.push_back(i);\n                result.push_back(j);\n           \
    \ }\n            j++;\n        }\n        j = 0;\n        i++;\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        for (int j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (long i = 0; i < lst.size(); i++) {\n        for (long j =\
    \ 0; j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n          \
    \      result.push_back(i);\n                result.push_back(j);\n          \
    \  }\n        }\n    }\n    return result;", "    std::vector<long> result;\n\
    \    for (int i = 0; i < lst.size(); i++) {\n        for (int j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "  std::vector<long> result;\n  for (int i = 0; i < lst.size(); i++)\
    \ {\n    for (int j = 0; j < lst[i].size(); j++) {\n      if (lst[i][j] == x)\
    \ {\n        result.push_back(i);\n        result.push_back(j);\n      }\n   \
    \ }\n  }\n  return result;", "    std::vector<long> result;\n    for (long i =\
    \ 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size(); j++)\
    \ {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        for (long j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (long i = 0; i < lst.size(); i++) {\n        for (long j =\
    \ 0; j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n          \
    \      result.push_back(i);\n                result.push_back(j);\n          \
    \  }\n        }\n    }\n    return result;", "    std::vector<long> result;\n\
    \    for (int i = 0; i < lst.size(); i++) {\n        for (int j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "\tstd::vector<long> result;\n\tfor (long i = 0; i < lst.size(); i++)\
    \ {\n\t\tfor (long j = 0; j < lst[i].size(); j++) {\n\t\t\tif (lst[i][j] == x)\
    \ {\n\t\t\t\tresult.push_back(i);\n\t\t\t\tresult.push_back(j);\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn result;", "    std::vector<long> result;\n    for (long i = 0;\
    \ i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size(); j++) {\n\
    \            if (lst[i][j] == x) {\n                result.push_back(i);\n   \
    \             result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        for (long j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (long i = 0; i < lst.size(); i++) {\n        for (long j =\
    \ 0; j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n          \
    \      result.push_back(i);\n                result.push_back(j);\n          \
    \  }\n        }\n    }\n    return result;", "    std::vector<long> result;\n\
    \    for (int i = 0; i < lst.size(); i++) {\n        for (int j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    std::vector<std::vector<long>>\
    \ result_vector;\n    for (int i = 0; i < lst.size(); i++) {\n        for (int\
    \ j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n      \
    \          result.push_back(i);\n                result.push_back(j);\n      \
    \          result_vector.push_back(result);\n                result.clear();\n\
    \            }\n        }\n    }\n    std::sort(result_vector.begin(), result_vector.end());\n\
    \    for (int i = 0; i < result_vector.size(); i++) {\n        for (int j = 0;\
    \ j < result_vector[i].size(); j++) {\n            result.push_back(result_vector[i][j]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "  std::vector<long> result;\n  for (long i = 0; i < lst.size(); i++)\
    \ {\n    for (long j = 0; j < lst[i].size(); j++) {\n      if (lst[i][j] == x)\
    \ {\n        result.push_back(i);\n        result.push_back(j);\n      }\n   \
    \ }\n  }\n  return result;", "  std::vector<long> result;\n  for (long i = 0;\
    \ i < lst.size(); i++) {\n    for (long j = 0; j < lst[i].size(); j++) {\n   \
    \   if (lst[i][j] == x) {\n        result.push_back(i);\n        result.push_back(j);\n\
    \      }\n    }\n  }\n  return result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        for (long j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (int i = 0; i < lst.size(); i++) {\n        for (int j = 0;\
    \ j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n             \
    \   result.push_back(i);\n                result.push_back(j);\n            }\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "\tstd::vector<long> result;\n\tfor (long i = 0; i < lst.size(); i++)\
    \ {\n\t\tfor (long j = 0; j < lst[i].size(); j++) {\n\t\t\tif (lst[i][j] == x)\
    \ {\n\t\t\t\tresult.push_back(i);\n\t\t\t\tresult.push_back(j);\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn result;", "  std::vector<long> result;\n  for (long i = 0; i\
    \ < lst.size(); i++) {\n    for (long j = 0; j < lst[i].size(); j++) {\n     \
    \ if (lst[i][j] == x) {\n        result.push_back(i);\n        result.push_back(j);\n\
    \      }\n    }\n  }\n  return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < lst.size(); i++) {\n        for (int j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        for (long j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (int i = 0; i < lst.size(); i++) {\n        for (int j = 0;\
    \ j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n             \
    \   result.push_back(i);\n                result.push_back(j);\n            }\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < lst.size(); i++) {\n        for (int j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        for (long j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "\tstd::vector<long> result;\n\
    \tfor (long i = 0; i < lst.size(); i++) {\n\t\tfor (long j = 0; j < lst[i].size();\
    \ j++) {\n\t\t\tif (lst[i][j] == x) {\n\t\t\t\tresult.push_back(i);\n\t\t\t\t\
    result.push_back(j);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;", "    std::vector<long>\
    \ result;\n    for (long i = 0; i < lst.size(); i++) {\n        for (long j =\
    \ 0; j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n          \
    \      result.push_back(i);\n                result.push_back(j);\n          \
    \  }\n        }\n    }\n    return result;", "    std::vector<long> result;\n\
    \    for (int i = 0; i < lst.size(); i++) {\n        for (int j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "  std::vector<long> result;\n  for (long i = 0; i < lst.size(); i++)\
    \ {\n    for (long j = 0; j < lst[i].size(); j++) {\n      if (lst[i][j] == x)\
    \ {\n        result.push_back(i);\n        result.push_back(j);\n      }\n   \
    \ }\n  }\n  return result;", "    std::vector<long> result;\n    for (int i =\
    \ 0; i < lst.size(); i++) {\n        for (int j = 0; j < lst[i].size(); j++) {\n\
    \            if (lst[i][j] == x) {\n                result.push_back(i);\n   \
    \             result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        for (int j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (int i = 0; i < lst.size(); i++) {\n        for (int j = 0;\
    \ j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n             \
    \   result.push_back(i);\n                result.push_back(j);\n            }\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        for (long j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (long i = 0; i < lst.size(); i++) {\n        for (long j =\
    \ 0; j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n          \
    \      result.push_back(i);\n                result.push_back(j);\n          \
    \  }\n        }\n    }\n    return result;", "    std::vector<long> result;\n\
    \    for (int i = 0; i < lst.size(); i++) {\n        for (int j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "\tstd::vector<long> result;\n\tfor (int i = 0; i < lst.size(); i++)\
    \ {\n\t\tfor (int j = 0; j < lst[i].size(); j++) {\n\t\t\tif (lst[i][j] == x)\
    \ {\n\t\t\t\tresult.push_back(i);\n\t\t\t\tresult.push_back(j);\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn result;", "    std::vector<long> result;\n    for (long i = 0;\
    \ i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size(); j++) {\n\
    \            if (lst[i][j] == x) {\n                result.push_back(i);\n   \
    \             result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        for (long j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (long i = 0; i < lst.size(); i++) {\n        for (long j =\
    \ 0; j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n          \
    \      result.push_back(i);\n                result.push_back(j);\n          \
    \  }\n        }\n    }\n    return result;", "    std::vector<long> result;\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    std::vector<std::vector<long>>\
    \ temp;\n    for (int i = 0; i < lst.size(); i++) {\n        for (int j = 0; j\
    \ < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n               \
    \ std::vector<long> temp1;\n                temp1.push_back(i);\n            \
    \    temp1.push_back(j);\n                temp.push_back(temp1);\n           \
    \ }\n        }\n    }\n    std::sort(temp.begin(), temp.end());\n    for (int\
    \ i = 0; i < temp.size(); i++) {\n        result.push_back(temp[i][0]);\n    \
    \    result.push_back(temp[i][1]);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (long i = 0; i < lst.size(); i++) {\n        for (long j =\
    \ 0; j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n          \
    \      result.push_back(i);\n                result.push_back(j);\n          \
    \  }\n        }\n    }\n    return result;", "    std::vector<long> result;\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        for (int j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::vector<std::vector<long>> temp;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        for (int j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                std::vector<long> temp1;\n                temp1.push_back(i);\n\
    \                temp1.push_back(j);\n                temp.push_back(temp1);\n\
    \            }\n        }\n    }\n    std::sort(temp.begin(), temp.end());\n \
    \   for (int i = 0; i < temp.size(); i++) {\n        result.push_back(temp[i][0]);\n\
    \        result.push_back(temp[i][1]);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::vector<std::pair<long, long>> coordinates;\n    for (long\
    \ i = 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size(); j++)\
    \ {\n            if (lst[i][j] == x) {\n                coordinates.push_back(std::make_pair(i,\
    \ j));\n            }\n        }\n    }\n    std::sort(coordinates.begin(), coordinates.end());\n\
    \    for (long i = 0; i < coordinates.size(); i++) {\n        result.push_back(coordinates[i].first);\n\
    \        result.push_back(coordinates[i].second);\n    }\n    return result;",
  "  std::vector<long> result;\n  for (int i = 0; i < lst.size(); i++) {\n    for\
    \ (int j = 0; j < lst[i].size(); j++) {\n      if (lst[i][j] == x) {\n       \
    \ result.push_back(i);\n        result.push_back(j);\n      }\n    }\n  }\n  return\
    \ result;", "    std::vector<long> result;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        for (int j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "  std::vector<long> result;\n\
    \  for (int i = 0; i < lst.size(); i++) {\n    for (int j = 0; j < lst[i].size();\
    \ j++) {\n      if (lst[i][j] == x) {\n        result.push_back(i);\n        result.push_back(j);\n\
    \      }\n    }\n  }\n  return result;", "  std::vector<long> result;\n  for (long\
    \ i = 0; i < lst.size(); i++) {\n    for (long j = 0; j < lst[i].size(); j++)\
    \ {\n      if (lst[i][j] == x) {\n        result.push_back(i);\n        result.push_back(j);\n\
    \      }\n    }\n  }\n  return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < lst.size(); i++) {\n        for (int j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        for (long j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (long i = 0; i < lst.size(); i++) {\n        for (long j =\
    \ 0; j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n          \
    \      result.push_back(i);\n                result.push_back(j);\n          \
    \  }\n        }\n    }\n    return result;", "    std::vector<long> result;\n\
    \    for (int i = 0; i < lst.size(); i++) {\n        for (int j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        for (int j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "  std::vector<long> result;\n\
    \  for (long i = 0; i < lst.size(); i++) {\n    for (long j = 0; j < lst[i].size();\
    \ j++) {\n      if (lst[i][j] == x) {\n        result.push_back(i);\n        result.push_back(j);\n\
    \      }\n    }\n  }\n  return result;", "  std::vector<long> result;\n  for (int\
    \ i = 0; i < lst.size(); i++) {\n    for (int j = 0; j < lst[i].size(); j++) {\n\
    \      if (lst[i][j] == x) {\n        result.push_back(i);\n        result.push_back(j);\n\
    \      }\n    }\n  }\n  return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < lst.size(); i++) {\n        for (int j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        for (long j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (long i = 0; i < lst.size(); i++) {\n        for (long j =\
    \ 0; j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n          \
    \      result.push_back(i);\n                result.push_back(j);\n          \
    \  }\n        }\n    }\n    return result;", "  std::vector<long> result;\n  for\
    \ (long i = 0; i < lst.size(); i++) {\n    for (long j = 0; j < lst[i].size();\
    \ j++) {\n      if (lst[i][j] == x) {\n        result.push_back(i);\n        result.push_back(j);\n\
    \      }\n    }\n  }\n  return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < lst.size(); i++) {\n        for (int j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        for (long j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "  std::vector<long> result;\n\
    \  for (long i = 0; i < lst.size(); i++) {\n    for (long j = 0; j < lst[i].size();\
    \ j++) {\n      if (lst[i][j] == x) {\n        result.push_back(i);\n        result.push_back(j);\n\
    \      }\n    }\n  }\n  return result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        for (long j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (long i = 0; i < lst.size(); i++) {\n        for (long j =\
    \ 0; j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n          \
    \      result.push_back(i);\n                result.push_back(j);\n          \
    \  }\n        }\n    }\n    return result;", "    std::vector<long> result;\n\
    \    for (int i = 0; i < lst.size(); i++) {\n        for (int j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "\tstd::vector<long> result;\n\tfor (long i = 0; i < lst.size(); i++)\
    \ {\n\t\tfor (long j = 0; j < lst[i].size(); j++) {\n\t\t\tif (lst[i][j] == x)\
    \ {\n\t\t\t\tresult.push_back(i);\n\t\t\t\tresult.push_back(j);\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn result;", "    std::vector<long> result;\n    for (int i = 0;\
    \ i < lst.size(); i++) {\n        for (int j = 0; j < lst[i].size(); j++) {\n\
    \            if (lst[i][j] == x) {\n                result.push_back(i);\n   \
    \             result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        for (long j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (int i = 0; i < lst.size(); i++) {\n        for (int j = 0;\
    \ j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n             \
    \   result.push_back(i);\n                result.push_back(j);\n            }\n\
    \        }\n    }\n    return result;", "  std::vector<long> result;\n  for (long\
    \ i = 0; i < lst.size(); i++) {\n    for (long j = 0; j < lst[i].size(); j++)\
    \ {\n      if (lst[i][j] == x) {\n        result.push_back(i);\n        result.push_back(j);\n\
    \      }\n    }\n  }\n  return result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        for (int j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (long i = 0; i < lst.size(); i++) {\n        for (long j =\
    \ 0; j < lst[i].size(); j++) {\n            if (lst[i][j] == x) {\n          \
    \      result.push_back(i);\n                result.push_back(j);\n          \
    \  }\n        }\n    }\n    return result;", "    std::vector<long> result;\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        for (long j = 0; j < lst[i].size();\
    \ j++) {\n            if (lst[i][j] == x) {\n                result.push_back(i);\n\
    \                result.push_back(j);\n            }\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        for (long j = 0; j < lst[i].size(); j++) {\n            if (lst[i][j]\
    \ == x) {\n                result.push_back(i);\n                result.push_back(j);\n\
    \            }\n        }\n    }\n    return result;"]
stop_tokens:
- "\n}"

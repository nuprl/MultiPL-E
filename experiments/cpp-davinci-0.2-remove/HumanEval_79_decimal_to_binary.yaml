name: HumanEval_79_decimal_to_binary
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
  \ in decimal form and your task is to convert it to\n// binary format. The function\
  \ should return a string, with each character representing a binary\n// number.\
  \ Each character in the string will be '0' or '1'.\n// There will be an extra couple\
  \ of characters 'db' at the beginning and at the end of the string.\n// The extra\
  \ characters are there to help with the format.\n// Examples:\nstd::string decimal_to_binary(long\
  \ decimal) {\n"
tests: "}\nint main() {\n    auto candidate = decimal_to_binary;\n    assert(candidate((0))\
  \ == (\"db0db\"));\n    assert(candidate((32)) == (\"db100000db\"));\n    assert(candidate((103))\
  \ == (\"db1100111db\"));\n    assert(candidate((15)) == (\"db1111db\"));\n}\n"
completions: ["  std::string binary = \"db\";\n  while (decimal > 0) {\n    binary\
    \ += std::to_string(decimal % 2);\n    decimal /= 2;\n  }\n  binary += \"db\"\
    ;\n  std::reverse(binary.begin() + 2, binary.end() - 2);\n  return binary;", " \
    \   std::string binary = \"db\";\n    while (decimal > 0) {\n        if (decimal\
    \ % 2 == 0) {\n            binary += \"0\";\n        } else {\n            binary\
    \ += \"1\";\n        }\n        decimal /= 2;\n    }\n    binary += \"db\";\n\
    \    std::reverse(binary.begin() + 2, binary.end() - 2);\n    return binary;",
  "  std::string binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 ==\
    \ 0) {\n      binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n\
    \    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n \
    \ binary += \"db\";\n  return binary;", "  std::string binary = \"db\";\n  while\
    \ (decimal > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal /=\
    \ 2;\n  }\n  binary += \"db\";\n  return binary;", "    std::string binary = \"\
    db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal % 2);\n\
    \        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;", "  std::string binary = \"db\";\n\
    \  while (decimal != 0) {\n    if (decimal % 2 == 0) {\n      binary += \"0\"\
    ;\n    } else {\n      binary += \"1\";\n    }\n    decimal /= 2;\n  }\n  binary\
    \ += \"db\";\n  return binary;", "  std::string binary = \"db\";\n  while (decimal\
    \ > 0) {\n    if (decimal % 2 == 0) {\n      binary += \"0\";\n    } else {\n\
    \      binary += \"1\";\n    }\n    decimal /= 2;\n  }\n  binary += \"db\";\n\
    \  std::reverse(binary.begin() + 2, binary.end() - 2);\n  return binary;", " \
    \   std::string binary = \"db\";\n    while (decimal > 0) {\n        if (decimal\
    \ % 2 == 0) {\n            binary += \"0\";\n        } else {\n            binary\
    \ += \"1\";\n        }\n        decimal /= 2;\n    }\n    std::reverse(binary.begin()\
    \ + 2, binary.end());\n    binary += \"db\";\n    return binary;", "  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;", "    std::string binary = \"db\";\n    while (decimal\
    \ > 0) {\n        binary += std::to_string(decimal % 2);\n        decimal /= 2;\n\
    \    }\n    binary += \"db\";\n    std::reverse(binary.begin() + 2, binary.end()\
    \ - 2);\n    return binary;", "  std::string binary = \"db\";\n  while (decimal\
    \ > 0) {\n    if (decimal % 2 == 0) {\n      binary += \"0\";\n    } else {\n\
    \      binary += \"1\";\n    }\n    decimal /= 2;\n  }\n  binary += \"db\";\n\
    \  std::reverse(binary.begin() + 2, binary.end() - 2);\n  return binary;", " \
    \   std::string binary = \"db\";\n    while (decimal > 0) {\n        if (decimal\
    \ % 2 == 0) {\n            binary += \"0\";\n        } else {\n            binary\
    \ += \"1\";\n        }\n        decimal /= 2;\n    }\n    std::reverse(binary.begin()\
    \ + 2, binary.end());\n    binary += \"db\";\n    return binary;", "  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin() + 2, binary.end()\
    \ - 2);\n  return binary;", "  std::string binary = \"db\";\n  while (decimal\
    \ > 0) {\n    if (decimal % 2 == 0) {\n      binary += \"0\";\n    } else {\n\
    \      binary += \"1\";\n    }\n    decimal /= 2;\n  }\n  binary += \"db\";\n\
    \  std::reverse(binary.begin() + 2, binary.end() - 2);\n  return binary;", " \
    \ std::string result = \"db\";\n  while (decimal > 0) {\n    result += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  result += \"db\";\n  std::reverse(result.begin()\
    \ + 2, result.end() - 2);\n  return result;", "  std::string binary = \"\";\n\
    \  while (decimal > 0) {\n    binary = std::to_string(decimal % 2) + binary;\n\
    \    decimal /= 2;\n  }\n  return \"db\" + binary + \"db\";", "  std::string binary\
    \ = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n      binary\
    \ += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal /= 2;\n\
    \  }\n  binary += \"db\";\n  std::reverse(binary.begin() + 2, binary.end() - 2);\n\
    \  return binary;", "    std::string binary = \"db\";\n    while (decimal > 0)\
    \ {\n        binary += std::to_string(decimal % 2);\n        decimal /= 2;\n \
    \   }\n    std::reverse(binary.begin() + 2, binary.end());\n    binary += \"db\"\
    ;\n    return binary;", "    std::string binary = \"db\";\n    while (decimal\
    \ > 0) {\n        binary += std::to_string(decimal % 2);\n        decimal /= 2;\n\
    \    }\n    std::reverse(binary.begin() + 2, binary.end());\n    binary += \"\
    db\";\n    return binary;", "    std::string binary = \"db\";\n    while (decimal\
    \ > 0) {\n        if (decimal % 2 == 0) {\n            binary += \"0\";\n    \
    \    } else {\n            binary += \"1\";\n        }\n        decimal /= 2;\n\
    \    }\n    std::reverse(binary.begin() + 2, binary.end());\n    binary += \"\
    db\";\n    return binary;", "  std::string binary = \"db\";\n  while (decimal\
    \ > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal /= 2;\n  }\n\
    \  binary += \"db\";\n  return binary;", "  std::string binary = \"db\";\n  while\
    \ (decimal > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal /=\
    \ 2;\n  }\n  binary += \"db\";\n  return binary;", "    std::string binary = \"\
    db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal % 2);\n\
    \        decimal /= 2;\n    }\n    binary += \"db\";\n    std::reverse(binary.begin()\
    \ + 2, binary.end() - 2);\n    return binary;", "    std::string binary = \"db\"\
    ;\n    while (decimal > 0) {\n        if (decimal % 2 == 0) {\n            binary\
    \ += \"0\";\n        } else {\n            binary += \"1\";\n        }\n     \
    \   decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;", "    std::string binary;\n    while\
    \ (decimal > 0) {\n        binary.push_back((decimal % 2) + '0');\n        decimal\
    \ /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return \"\
    db\" + binary + \"db\";", "  std::string binary = \"db\";\n  while (decimal >\
    \ 0) {\n    if (decimal % 2 == 0) {\n      binary += \"0\";\n    } else {\n  \
    \    binary += \"1\";\n    }\n    decimal /= 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin()\
    \ + 2, binary.end() - 2);\n  return binary;", "  std::string binary = \"db\";\n\
    \  while (decimal != 0) {\n    binary += std::to_string(decimal % 2);\n    decimal\
    \ /= 2;\n  }\n  binary += \"db\";\n  return binary;", "    std::string result\
    \ = \"db\";\n    while (decimal > 0) {\n        result += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    result += \"db\";\n    std::reverse(result.begin()\
    \ + 2, result.end() - 2);\n    return result;", "  std::string binary = \"\";\n\
    \  while (decimal > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin(), binary.end());\n  return \"db\" +\
    \ binary + \"db\";", "    std::string result = \"db\";\n    while (decimal > 0)\
    \ {\n        result += std::to_string(decimal % 2);\n        decimal /= 2;\n \
    \   }\n    result += \"db\";\n    std::reverse(result.begin() + 2, result.end()\
    \ - 2);\n    return result;", "    std::string binary = \"\";\n    while (decimal\
    \ > 0) {\n        binary = std::to_string(decimal % 2) + binary;\n        decimal\
    \ /= 2;\n    }\n    return \"db\" + binary + \"db\";", "    std::string binary\
    \ = \"db\";\n    while (decimal != 0) {\n        if (decimal % 2 == 0) {\n   \
    \         binary += \"0\";\n        } else {\n            binary += \"1\";\n \
    \       }\n        decimal /= 2;\n    }\n    binary += \"db\";\n    std::reverse(binary.begin()\
    \ + 2, binary.end() - 2);\n    return binary;", "  std::string result = \"db\"\
    ;\n  while (decimal > 0) {\n    result += std::to_string(decimal % 2);\n    decimal\
    \ /= 2;\n  }\n  result += \"db\";\n  std::reverse(result.begin() + 2, result.end()\
    \ - 2);\n  return result;", "  std::string binary = \"db\";\n  while (decimal\
    \ > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal /= 2;\n  }\n\
    \  binary += \"db\";\n  std::reverse(binary.begin() + 2, binary.end() - 2);\n\
    \  return binary;", "  std::string binary = \"db\";\n  while (decimal > 0) {\n\
    \    if (decimal % 2 == 0) {\n      binary += \"0\";\n    } else {\n      binary\
    \ += \"1\";\n    }\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2,\
    \ binary.end());\n  binary += \"db\";\n  return binary;", "  std::string result\
    \ = \"db\";\n  while (decimal > 0) {\n    result += std::to_string(decimal % 2);\n\
    \    decimal /= 2;\n  }\n  std::reverse(result.begin() + 2, result.end());\n \
    \ result += \"db\";\n  return result;", "  std::string result = \"db\";\n  while\
    \ (decimal != 0) {\n    if (decimal % 2 == 0) {\n      result += \"0\";\n    }\
    \ else {\n      result += \"1\";\n    }\n    decimal /= 2;\n  }\n  std::reverse(result.begin()\
    \ + 2, result.end());\n  result += \"db\";\n  return result;", "  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin()\
    \ + 2, binary.end() - 2);\n  return binary;", "  std::string binary = \"db\";\n\
    \  while (decimal > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal\
    \ /= 2;\n  }\n  binary += \"db\";\n  return binary;", "  std::string binary =\
    \ \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal % 2);\n\
    \    decimal /= 2;\n  }\n  binary += \"db\";\n  return binary;", "    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;", "  std::string binary = \"\";\n \
    \ while (decimal > 0) {\n    binary = std::to_string(decimal % 2) + binary;\n\
    \    decimal /= 2;\n  }\n  return \"db\" + binary + \"db\";", "  std::string binary\
    \ = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal % 2);\n\
    \    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n \
    \ binary += \"db\";\n  return binary;", "    std::string binary = \"db\";\n  \
    \  while (decimal > 0) {\n        if (decimal % 2 == 0) {\n            binary\
    \ += \"0\";\n        } else {\n            binary += \"1\";\n        }\n     \
    \   decimal /= 2;\n    }\n    binary += \"db\";\n    std::reverse(binary.begin()\
    \ + 2, binary.end() - 2);\n    return binary;", "  std::string binary = \"db\"\
    ;\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n      binary += \"0\"\
    ;\n    } else {\n      binary += \"1\";\n    }\n    decimal /= 2;\n  }\n  binary\
    \ += \"db\";\n  std::reverse(binary.begin() + 2, binary.end() - 2);\n  return\
    \ binary;", "  std::string binary = \"db\";\n  while (decimal > 0) {\n    binary\
    \ += std::to_string(decimal % 2);\n    decimal /= 2;\n  }\n  binary += \"db\"\
    ;\n  return binary;", "  std::string binary = \"db\";\n  while (decimal > 0) {\n\
    \    binary += std::to_string(decimal % 2);\n    decimal /= 2;\n  }\n  binary\
    \ += \"db\";\n  std::reverse(binary.begin() + 2, binary.end() - 2);\n  return\
    \ binary;", "  std::string binary = \"\";\n  while (decimal > 0) {\n    binary\
    \ = std::to_string(decimal % 2) + binary;\n    decimal /= 2;\n  }\n  return \"\
    db\" + binary + \"db\";", "    std::string binary = \"db\";\n    while (decimal\
    \ != 0) {\n        if (decimal % 2 == 0) {\n            binary += \"0\";\n   \
    \     } else {\n            binary += \"1\";\n        }\n        decimal /= 2;\n\
    \    }\n    std::reverse(binary.begin() + 2, binary.end());\n    binary += \"\
    db\";\n    return binary;", "  std::string binary = \"db\";\n  while (decimal\
    \ > 0) {\n    if (decimal % 2 == 0) {\n      binary += \"0\";\n    } else {\n\
    \      binary += \"1\";\n    }\n    decimal /= 2;\n  }\n  binary += \"db\";\n\
    \  std::reverse(binary.begin() + 2, binary.end() - 2);\n  return binary;", " \
    \ std::string binary = \"db\";\n  while (decimal != 0) {\n    if (decimal % 2\
    \ == 0) {\n      binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n\
    \    decimal /= 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin() +\
    \ 2, binary.end() - 2);\n  return binary;", "  std::string binary = \"db\";\n\
    \  while (decimal > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;", "    std::string binary = \"db\";\n    while (decimal\
    \ > 0) {\n        if (decimal % 2 == 0) {\n            binary += \"0\";\n    \
    \    } else {\n            binary += \"1\";\n        }\n        decimal /= 2;\n\
    \    }\n    std::reverse(binary.begin() + 2, binary.end());\n    binary += \"\
    db\";\n    return binary;", "  std::string binary = \"\";\n  while (decimal >\
    \ 0) {\n    binary = std::to_string(decimal % 2) + binary;\n    decimal /= 2;\n\
    \  }\n  return \"db\" + binary + \"db\";", "    std::string binary = \"db\";\n\
    \    while (decimal > 0) {\n        if (decimal % 2 == 0) {\n            binary\
    \ += \"0\";\n        } else {\n            binary += \"1\";\n        }\n     \
    \   decimal /= 2;\n    }\n    binary += \"db\";\n    std::reverse(binary.begin()\
    \ + 2, binary.end() - 2);\n    return binary;", "  std::string binary = \"db\"\
    ;\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n      binary += \"0\"\
    ;\n    } else {\n      binary += \"1\";\n    }\n    decimal /= 2;\n  }\n  binary\
    \ += \"db\";\n  std::reverse(binary.begin() + 2, binary.end() - 2);\n  return\
    \ binary;", "  std::string binary = \"db\";\n  while (decimal != 0) {\n    if\
    \ (decimal % 2 == 0) {\n      binary += \"0\";\n    } else {\n      binary +=\
    \ \"1\";\n    }\n    decimal /= 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin()\
    \ + 2, binary.end() - 2);\n  return binary;", "    std::string binary = \"db\"\
    ;\n    while (decimal > 0) {\n        binary += std::to_string(decimal % 2);\n\
    \        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;", "  std::string binary = \"db\";\n\
    \  while (decimal) {\n    binary += decimal % 2 + '0';\n    decimal /= 2;\n  }\n\
    \  binary += \"db\";\n  return binary;", "    std::string binary;\n    while (decimal\
    \ != 0) {\n        binary += (decimal % 2 == 0) ? '0' : '1';\n        decimal\
    \ /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return \"\
    db\" + binary + \"db\";", "  std::string binary = \"db\";\n  while (decimal >\
    \ 0) {\n    binary += std::to_string(decimal % 2);\n    decimal /= 2;\n  }\n \
    \ std::reverse(binary.begin() + 2, binary.end());\n  binary += \"db\";\n  return\
    \ binary;", "  std::string binary;\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin(), binary.end());\n\
    \  return \"db\" + binary + \"db\";", "    std::string binary = \"db\";\n    while\
    \ (decimal > 0) {\n        if (decimal % 2 == 0) {\n            binary += \"0\"\
    ;\n        } else {\n            binary += \"1\";\n        }\n        decimal\
    \ /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n    binary\
    \ += \"db\";\n    return binary;", "    std::string result;\n    while (decimal\
    \ > 0) {\n        result.push_back((decimal % 2) + '0');\n        decimal /= 2;\n\
    \    }\n    std::reverse(result.begin(), result.end());\n    return \"db\" + result\
    \ + \"db\";", "    std::string binary = \"db\";\n    while (decimal > 0) {\n \
    \       binary += std::to_string(decimal % 2);\n        decimal /= 2;\n    }\n\
    \    std::reverse(binary.begin() + 2, binary.end());\n    binary += \"db\";\n\
    \    return binary;", "  std::string binary = \"db\";\n  while (decimal > 0) {\n\
    \    if (decimal % 2 == 0) {\n      binary += \"0\";\n    } else {\n      binary\
    \ += \"1\";\n    }\n    decimal /= 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin()\
    \ + 2, binary.end() - 2);\n  return binary;", "  std::string binary = \"db\";\n\
    \  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n      binary += \"0\";\n\
    \    } else {\n      binary += \"1\";\n    }\n    decimal /= 2;\n  }\n  binary\
    \ += \"db\";\n  std::reverse(binary.begin() + 2, binary.end() - 2);\n  return\
    \ binary;", "  std::string result;\n  while (decimal > 0) {\n    result += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(result.begin(), result.end());\n\
    \  return \"db\" + result + \"db\";", "    std::string binary = \"db\";\n    while\
    \ (decimal > 0) {\n        binary += std::to_string(decimal % 2);\n        decimal\
    \ /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n    binary\
    \ += \"db\";\n    return binary;", "    std::string binary = \"db\";\n    while\
    \ (decimal > 0) {\n        binary += std::to_string(decimal % 2);\n        decimal\
    \ /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n    binary\
    \ += \"db\";\n    return binary;", "  std::string binary = \"db\";\n  while (decimal\
    \ > 0) {\n    if (decimal % 2 == 0) {\n      binary += \"0\";\n    } else {\n\
    \      binary += \"1\";\n    }\n    decimal /= 2;\n  }\n  binary += \"db\";\n\
    \  std::reverse(binary.begin() + 2, binary.end() - 2);\n  return binary;", " \
    \   std::string binary = \"db\";\n    while (decimal > 0) {\n        if (decimal\
    \ % 2 == 0) {\n            binary += \"0\";\n        } else {\n            binary\
    \ += \"1\";\n        }\n        decimal /= 2;\n    }\n    std::reverse(binary.begin()\
    \ + 2, binary.end());\n    binary += \"db\";\n    return binary;", "  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;", "  std::string binary = \"db\";\n  while\
    \ (decimal > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal /=\
    \ 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"db\"\
    ;\n  return binary;", "    std::string binary;\n    while (decimal > 0) {\n  \
    \      binary.push_back((decimal % 2) + '0');\n        decimal /= 2;\n    }\n\
    \    std::reverse(binary.begin(), binary.end());\n    return \"db\" + binary +\
    \ \"db\";", "  std::string binary = \"db\";\n  while (decimal > 0) {\n    binary\
    \ += std::to_string(decimal % 2);\n    decimal /= 2;\n  }\n  binary += \"db\"\
    ;\n  std::reverse(binary.begin() + 2, binary.end() - 2);\n  return binary;", " \
    \   std::string binary = \"db\";\n    while (decimal > 0) {\n        binary +=\
    \ std::to_string(decimal % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin()\
    \ + 2, binary.end());\n    binary += \"db\";\n    return binary;", "  std::string\
    \ binary = \"db\";\n  while (decimal != 0) {\n    if (decimal % 2 == 0) {\n  \
    \    binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin() + 2, binary.end()\
    \ - 2);\n  return binary;", "    std::string binary = \"db\";\n    while (decimal\
    \ > 0) {\n        binary += (decimal % 2 == 0) ? \"0\" : \"1\";\n        decimal\
    \ /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n    binary\
    \ += \"db\";\n    return binary;", "    std::string binary = \"db\";\n    while\
    \ (decimal > 0) {\n        if (decimal % 2 == 0) {\n            binary += \"0\"\
    ;\n        } else {\n            binary += \"1\";\n        }\n        decimal\
    \ /= 2;\n    }\n    binary += \"db\";\n    std::reverse(binary.begin() + 2, binary.end()\
    \ - 2);\n    return binary;", "    std::string binary = \"db\";\n    while (decimal\
    \ > 0) {\n        binary += std::to_string(decimal % 2);\n        decimal /= 2;\n\
    \    }\n    std::reverse(binary.begin() + 2, binary.end());\n    binary += \"\
    db\";\n    return binary;", "  std::string binary = \"db\";\n  while (decimal\
    \ != 0) {\n    if (decimal % 2 == 0) {\n      binary += \"0\";\n    } else {\n\
    \      binary += \"1\";\n    }\n    decimal /= 2;\n  }\n  binary += \"db\";\n\
    \  std::reverse(binary.begin() + 2, binary.end() - 2);\n  return binary;", " \
    \ std::string binary = \"\";\n  while (decimal > 0) {\n    binary = std::to_string(decimal\
    \ % 2) + binary;\n    decimal /= 2;\n  }\n  return \"db\" + binary + \"db\";",
  "    std::string binary = \"db\";\n    while (decimal > 0) {\n        if (decimal\
    \ % 2 == 0) {\n            binary += \"0\";\n        } else {\n            binary\
    \ += \"1\";\n        }\n        decimal /= 2;\n    }\n    std::reverse(binary.begin()\
    \ + 2, binary.end());\n    binary += \"db\";\n    return binary;", "  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;", "    std::string binary = \"db\";\n \
    \   while (decimal > 0) {\n        binary += std::to_string(decimal % 2);\n  \
    \      decimal /= 2;\n    }\n    binary += \"db\";\n    std::reverse(binary.begin()\
    \ + 2, binary.end() - 2);\n    return binary;", "  std::string binary = \"db\"\
    ;\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n      binary += \"0\"\
    ;\n    } else {\n      binary += \"1\";\n    }\n    decimal /= 2;\n  }\n  binary\
    \ += \"db\";\n  std::reverse(binary.begin() + 2, binary.end() - 2);\n  return\
    \ binary;", "  std::string binary = \"db\";\n  while (decimal != 0) {\n    if\
    \ (decimal % 2 == 0) {\n      binary += \"0\";\n    } else {\n      binary +=\
    \ \"1\";\n    }\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;", "    std::string binary = \"db\";\n \
    \   while (decimal > 0) {\n        binary += std::to_string(decimal % 2);\n  \
    \      decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;", "    std::string result = \"db\"\
    ;\n    while (decimal > 0) {\n        result += std::to_string(decimal % 2);\n\
    \        decimal /= 2;\n    }\n    result += \"db\";\n    std::reverse(result.begin()\
    \ + 2, result.end() - 2);\n    return result;", "  std::string binary = \"db\"\
    ;\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n      binary += \"0\"\
    ;\n    } else {\n      binary += \"1\";\n    }\n    decimal /= 2;\n  }\n  binary\
    \ += \"db\";\n  return binary;", "  std::string binary = \"db\";\n  while (decimal\
    \ > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal /= 2;\n  }\n\
    \  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"db\";\n  return\
    \ binary;", "  std::string binary = \"db\";\n  while (decimal > 0) {\n    if (decimal\
    \ % 2 == 0) {\n      binary += \"0\";\n    } else {\n      binary += \"1\";\n\
    \    }\n    decimal /= 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin()\
    \ + 2, binary.end() - 2);\n  return binary;", "    std::string binary = \"db\"\
    ;\n    while (decimal > 0) {\n        binary += std::to_string(decimal % 2);\n\
    \        decimal /= 2;\n    }\n    binary += \"db\";\n    std::reverse(binary.begin()\
    \ + 2, binary.end() - 2);\n    return binary;", "  std::string result = \"db\"\
    ;\n  while (decimal > 0) {\n    result += std::to_string(decimal % 2);\n    decimal\
    \ /= 2;\n  }\n  result += \"db\";\n  std::reverse(result.begin() + 2, result.end()\
    \ - 2);\n  return result;", "  std::string binary = \"db\";\n  while (decimal\
    \ > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal /= 2;\n  }\n\
    \  binary += \"db\";\n  return binary;", "    std::string binary = \"db\";\n \
    \   while (decimal > 0) {\n        binary += std::to_string(decimal % 2);\n  \
    \      decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;", "  std::string binary = \"db\";\n\
    \  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n      binary += \"0\";\n\
    \    } else {\n      binary += \"1\";\n    }\n    decimal /= 2;\n  }\n  binary\
    \ += \"db\";\n  std::reverse(binary.begin() + 2, binary.end() - 2);\n  return\
    \ binary;", "  std::string binary = \"db\";\n  while (decimal > 0) {\n    binary\
    \ += std::to_string(decimal % 2);\n    decimal /= 2;\n  }\n  binary += \"db\"\
    ;\n  return binary;", "  std::string binary = \"db\";\n  while (decimal > 0) {\n\
    \    binary += std::to_string(decimal % 2);\n    decimal /= 2;\n  }\n  binary\
    \ += \"db\";\n  return binary;", "  std::string binary = \"db\";\n  while (decimal\
    \ > 0) {\n    if (decimal % 2 == 0) {\n      binary += \"0\";\n    } else {\n\
    \      binary += \"1\";\n    }\n    decimal /= 2;\n  }\n  std::reverse(binary.begin()\
    \ + 2, binary.end());\n  binary += \"db\";\n  return binary;", "  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  binary += \"db\";\n  return binary;", "   \
    \ std::string result = \"db\";\n    while (decimal > 0) {\n        result += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    result += \"db\";\n    std::reverse(result.begin()\
    \ + 2, result.end() - 2);\n    return result;", "  std::string binary = \"db\"\
    ;\n  while (decimal > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;", "    std::string binary = \"db\";\n    while (decimal\
    \ > 0) {\n        if (decimal % 2 == 0) {\n            binary += \"0\";\n    \
    \    } else {\n            binary += \"1\";\n        }\n        decimal /= 2;\n\
    \    }\n    std::reverse(binary.begin() + 2, binary.end());\n    binary += \"\
    db\";\n    return binary;", "  std::string binary = \"db\";\n  while (decimal\
    \ > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal /= 2;\n  }\n\
    \  binary += \"db\";\n  std::reverse(binary.begin() + 2, binary.end() - 2);\n\
    \  return binary;", "  std::string binary = \"db\";\n  while (decimal > 0) {\n\
    \    binary += std::to_string(decimal % 2);\n    decimal /= 2;\n  }\n  binary\
    \ += \"db\";\n  return binary;", "  std::string binary = \"db\";\n  while (decimal\
    \ != 0) {\n    binary += std::to_string(decimal % 2);\n    decimal /= 2;\n  }\n\
    \  binary += \"db\";\n  std::reverse(binary.begin() + 2, binary.end() - 2);\n\
    \  return binary;", "    std::string binary = \"\";\n    while (decimal > 0) {\n\
    \        binary = std::to_string(decimal % 2) + binary;\n        decimal /= 2;\n\
    \    }\n    return \"db\" + binary + \"db\";", "  std::string binary = \"db\"\
    ;\n  while (decimal > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal\
    \ /= 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin() + 2, binary.end()\
    \ - 2);\n  return binary;", "  std::string binary = \"db\";\n  while (decimal\
    \ > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal /= 2;\n  }\n\
    \  binary += \"db\";\n  return binary;", "  std::string binary = \"db\";\n  while\
    \ (decimal > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal /=\
    \ 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin() + 2, binary.end()\
    \ - 2);\n  return binary;", "  std::string binary = \"\";\n  while (decimal >\
    \ 0) {\n    binary = std::to_string(decimal % 2) + binary;\n    decimal /= 2;\n\
    \  }\n  return \"db\" + binary + \"db\";", "  std::string binary = \"db\";\n \
    \ while (decimal > 0) {\n    if (decimal % 2 == 0) {\n      binary += \"0\";\n\
    \    } else {\n      binary += \"1\";\n    }\n    decimal /= 2;\n  }\n  binary\
    \ += \"db\";\n  std::reverse(binary.begin() + 2, binary.end() - 2);\n  return\
    \ binary;", "  std::string binary = \"db\";\n  while (decimal > 0) {\n    if (decimal\
    \ % 2 == 0) {\n      binary += \"0\";\n    } else {\n      binary += \"1\";\n\
    \    }\n    decimal /= 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin()\
    \ + 2, binary.end() - 2);\n  return binary;", "    std::string result = \"db\"\
    ;\n    while (decimal > 0) {\n        result += std::to_string(decimal % 2);\n\
    \        decimal /= 2;\n    }\n    result += \"db\";\n    std::reverse(result.begin()\
    \ + 2, result.end() - 2);\n    return result;", "  std::string binary = \"db\"\
    ;\n  while (decimal > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal\
    \ /= 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin() + 2, binary.end()\
    \ - 2);\n  return binary;", "  std::string binary = \"db\";\n  while (decimal\
    \ > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal /= 2;\n  }\n\
    \  binary += \"db\";\n  return binary;", "  std::string binary = \"db\";\n  while\
    \ (decimal > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal /=\
    \ 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin() + 2, binary.end()\
    \ - 2);\n  return binary;", "    std::string binary;\n    while (decimal > 0)\
    \ {\n        binary.insert(binary.begin(), (decimal % 2) + '0');\n        decimal\
    \ /= 2;\n    }\n    return \"db\" + binary + \"db\";", "  std::string binary =\
    \ \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n      binary\
    \ += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal /= 2;\n\
    \  }\n  binary += \"db\";\n  std::reverse(binary.begin() + 2, binary.end() - 2);\n\
    \  return binary;", "  std::string binary = \"db\";\n  while (decimal > 0) {\n\
    \    binary += std::to_string(decimal % 2);\n    decimal /= 2;\n  }\n  binary\
    \ += \"db\";\n  return binary;", "  std::string binary = \"db\";\n  while (decimal\
    \ > 0) {\n    if (decimal % 2 == 0) {\n      binary += \"0\";\n    } else {\n\
    \      binary += \"1\";\n    }\n    decimal /= 2;\n  }\n  binary += \"db\";\n\
    \  std::reverse(binary.begin() + 2, binary.end() - 2);\n  return binary;", " \
    \ std::string binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 ==\
    \ 0) {\n      binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n\
    \    decimal /= 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin() +\
    \ 2, binary.end() - 2);\n  return binary;", "    std::string binary = \"db\";\n\
    \    while (decimal > 0) {\n        binary += std::to_string(decimal % 2);\n \
    \       decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;", "    std::string binary;\n    while\
    \ (decimal > 0) {\n        binary.push_back(decimal % 2 + '0');\n        decimal\
    \ /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return \"\
    db\" + binary + \"db\";", "  std::string binary = \"db\";\n  while (decimal >\
    \ 0) {\n    binary += std::to_string(decimal % 2);\n    decimal /= 2;\n  }\n \
    \ binary += \"db\";\n  return binary;", "    std::string binary = \"db\";\n  \
    \  while (decimal > 0) {\n        if (decimal % 2 == 0) {\n            binary\
    \ += \"0\";\n        } else {\n            binary += \"1\";\n        }\n     \
    \   decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;", "  std::string binary = \"db\";\n\
    \  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n      binary += \"0\";\n\
    \    } else {\n      binary += \"1\";\n    }\n    decimal /= 2;\n  }\n  std::reverse(binary.begin()\
    \ + 2, binary.end());\n  binary += \"db\";\n  return binary;", "  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary.push_back(decimal % 2\
    \ + '0');\n    decimal /= 2;\n  }\n  binary.push_back('b');\n  std::reverse(binary.begin()\
    \ + 2, binary.end() - 1);\n  return binary;", "  std::string binary = \"db\";\n\
    \  while (decimal > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal\
    \ /= 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin() + 2, binary.end()\
    \ - 2);\n  return binary;", "  std::string binary = \"db\";\n  while (decimal\
    \ > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal /= 2;\n  }\n\
    \  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"db\";\n  return\
    \ binary;", "  std::string binary = \"db\";\n  while (decimal > 0) {\n    binary\
    \ += std::to_string(decimal % 2);\n    decimal /= 2;\n  }\n  binary += \"db\"\
    ;\n  return binary;", "  std::string binary = \"db\";\n  while (decimal > 0) {\n\
    \    if (decimal % 2 == 0) {\n      binary += \"0\";\n    } else {\n      binary\
    \ += \"1\";\n    }\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2,\
    \ binary.end());\n  binary += \"db\";\n  return binary;", "  std::string binary\
    \ = \"\";\n  while (decimal > 0) {\n    binary = std::to_string(decimal % 2) +\
    \ binary;\n    decimal /= 2;\n  }\n  return \"db\" + binary + \"db\";", "    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;", "  std::string binary = \"db\";\n\
    \  while (decimal > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal\
    \ /= 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin() + 2, binary.end()\
    \ - 2);\n  return binary;", "  std::string binary = \"db\";\n  while (decimal\
    \ > 0) {\n    if (decimal % 2 == 0) {\n      binary += \"0\";\n    } else {\n\
    \      binary += \"1\";\n    }\n    decimal /= 2;\n  }\n  std::reverse(binary.begin()\
    \ + 2, binary.end());\n  binary += \"db\";\n  return binary;", "  std::string\
    \ binary;\n  while (decimal > 0) {\n    binary.insert(0, std::to_string(decimal\
    \ % 2));\n    decimal /= 2;\n  }\n  return \"db\" + binary + \"db\";", "  std::string\
    \ binary = \"\";\n  while (decimal > 0) {\n    binary = std::to_string(decimal\
    \ % 2) + binary;\n    decimal /= 2;\n  }\n  return \"db\" + binary + \"db\";",
  "  std::string binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  binary += \"db\";\n  return binary;", "  std::string\
    \ binary_string = \"db\";\n  while (decimal > 0) {\n    binary_string += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary_string.begin() + 2, binary_string.end());\n\
    \  binary_string += \"db\";\n  return binary_string;", "    std::string binary\
    \ = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    binary += \"db\";\n    return binary;",
  "  std::string binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 ==\
    \ 0) {\n      binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n\
    \    decimal /= 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin() +\
    \ 2, binary.end() - 2);\n  return binary;", "  std::string binary = \"db\";\n\
    \  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n      binary += \"0\";\n\
    \    } else {\n      binary += \"1\";\n    }\n    decimal /= 2;\n  }\n  binary\
    \ += \"db\";\n  std::reverse(binary.begin() + 2, binary.end() - 2);\n  return\
    \ binary;", "  std::string binary;\n  binary.push_back('d');\n  binary.push_back('b');\n\
    \  while (decimal != 0) {\n    binary.push_back(decimal % 2 + '0');\n    decimal\
    \ /= 2;\n  }\n  binary.push_back('b');\n  binary.push_back('d');\n  std::reverse(binary.begin()\
    \ + 2, binary.end() - 2);\n  return binary;", "    std::string binary = \"db\"\
    ;\n    while (decimal > 0) {\n        if (decimal % 2 == 0) {\n            binary\
    \ += \"0\";\n        } else {\n            binary += \"1\";\n        }\n     \
    \   decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;", "  std::string binary = \"db\";\n\
    \  while (decimal > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal\
    \ /= 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin() + 2, binary.end()\
    \ - 2);\n  return binary;", "  std::string binary = \"db\";\n  while (decimal\
    \ > 0) {\n    if (decimal % 2 == 0) {\n      binary += \"0\";\n    } else {\n\
    \      binary += \"1\";\n    }\n    decimal /= 2;\n  }\n  binary += \"db\";\n\
    \  std::reverse(binary.begin() + 2, binary.end() - 2);\n  return binary;", " \
    \   std::string binary = \"db\";\n    while (decimal > 0) {\n        binary +=\
    \ std::to_string(decimal % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin()\
    \ + 2, binary.end());\n    binary += \"db\";\n    return binary;", "  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;", "  std::string binary = \"db\";\n  while\
    \ (decimal > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal /=\
    \ 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin() + 2, binary.end()\
    \ - 2);\n  return binary;", "  std::string binary = \"db\";\n  while (decimal\
    \ > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal /= 2;\n  }\n\
    \  binary += \"db\";\n  return binary;", "  std::string binary = \"db\";\n  while\
    \ (decimal > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal /=\
    \ 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin() + 2, binary.end()\
    \ - 2);\n  return binary;", "  std::string binary = \"db\";\n  while (decimal\
    \ > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal /= 2;\n  }\n\
    \  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"db\";\n  return\
    \ binary;", "  std::string binary = \"db\";\n  while (decimal > 0) {\n    if (decimal\
    \ % 2 == 0) {\n      binary += \"0\";\n    } else {\n      binary += \"1\";\n\
    \    }\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;", "  std::string binary = \"db\";\n  while\
    \ (decimal > 0) {\n    if (decimal % 2 == 0) {\n      binary += \"0\";\n    }\
    \ else {\n      binary += \"1\";\n    }\n    decimal /= 2;\n  }\n  binary += \"\
    db\";\n  std::reverse(binary.begin() + 2, binary.end() - 2);\n  return binary;",
  "  std::string binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 ==\
    \ 0) {\n      binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n\
    \    decimal /= 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin() +\
    \ 2, binary.end() - 2);\n  return binary;", "  std::string binary = \"db\";\n\
    \  while (decimal > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal\
    \ /= 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin() + 2, binary.end()\
    \ - 2);\n  return binary;", "    std::string binary = \"db\";\n    while (decimal\
    \ > 0) {\n        binary += std::to_string(decimal % 2);\n        decimal /= 2;\n\
    \    }\n    binary += \"db\";\n    std::reverse(binary.begin() + 2, binary.end()\
    \ - 2);\n    return binary;", "  std::string binary;\n  while (decimal != 0) {\n\
    \    binary += std::to_string(decimal % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin(),\
    \ binary.end());\n  return \"db\" + binary + \"db\";", "  std::string binary =\
    \ \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n      binary\
    \ += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal /= 2;\n\
    \  }\n  binary += \"db\";\n  std::reverse(binary.begin() + 2, binary.end() - 2);\n\
    \  return binary;", "  std::string binary = \"db\";\n  while (decimal > 0) {\n\
    \    binary += std::to_string(decimal % 2);\n    decimal /= 2;\n  }\n  binary\
    \ += \"db\";\n  std::reverse(binary.begin() + 2, binary.end() - 2);\n  return\
    \ binary;", "  std::string binary = \"db\";\n  while (decimal > 0) {\n    binary\
    \ += std::to_string(decimal % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin()\
    \ + 2, binary.end());\n  binary += \"db\";\n  return binary;", "  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin() + 2, binary.end()\
    \ - 2);\n  return binary;", "    std::string binary = \"db\";\n    while (decimal\
    \ > 0) {\n        if (decimal % 2 == 0) {\n            binary += \"0\";\n    \
    \    } else {\n            binary += \"1\";\n        }\n        decimal /= 2;\n\
    \    }\n    std::reverse(binary.begin() + 2, binary.end());\n    binary += \"\
    db\";\n    return binary;", "  std::string binary = \"db\";\n  while (decimal\
    \ > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal /= 2;\n  }\n\
    \  binary += \"db\";\n  return binary;", "    std::string binary = \"db\";\n \
    \   while (decimal > 0) {\n        binary += std::to_string(decimal % 2);\n  \
    \      decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;", "  std::string result = \"db\";\n\
    \  while (decimal > 0) {\n    result += std::to_string(decimal % 2);\n    decimal\
    \ /= 2;\n  }\n  result += \"db\";\n  std::reverse(result.begin() + 2, result.end()\
    \ - 2);\n  return result;", "  std::string binary;\n  while (decimal > 0) {\n\
    \    binary.push_back(decimal % 2 + '0');\n    decimal /= 2;\n  }\n  std::reverse(binary.begin(),\
    \ binary.end());\n  return \"db\" + binary + \"db\";", "  std::string binary =\
    \ \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal % 2);\n\
    \    decimal /= 2;\n  }\n  binary += \"db\";\n  return binary;", "  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin() + 2, binary.end()\
    \ - 2);\n  return binary;", "    std::string binary;\n    while (decimal > 0)\
    \ {\n        binary.push_back((decimal % 2) + '0');\n        decimal /= 2;\n \
    \   }\n    std::reverse(binary.begin(), binary.end());\n    return \"db\" + binary\
    \ + \"db\";", "    std::string binary;\n    while (decimal > 0) {\n        binary.push_back(decimal\
    \ % 2 + '0');\n        decimal /= 2;\n    }\n    std::reverse(binary.begin(),\
    \ binary.end());\n    return binary;", "  std::string binary = \"db\";\n  while\
    \ (decimal > 0) {\n    if (decimal % 2 == 0) {\n      binary += \"0\";\n    }\
    \ else {\n      binary += \"1\";\n    }\n    decimal /= 2;\n  }\n  binary += \"\
    db\";\n  std::reverse(binary.begin() + 2, binary.end() - 2);\n  return binary;",
  "    std::string binary;\n    while (decimal > 0) {\n        binary.push_back(decimal\
    \ % 2 + '0');\n        decimal /= 2;\n    }\n    std::reverse(binary.begin(),\
    \ binary.end());\n    return \"db\" + binary + \"db\";", "  std::string binary\
    \ = \"db\";\n  while (decimal != 0) {\n    binary += std::to_string(decimal %\
    \ 2);\n    decimal /= 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin()\
    \ + 2, binary.end() - 2);\n  return binary;", "    std::string result = \"db\"\
    ;\n    while (decimal > 0) {\n        result += std::to_string(decimal % 2);\n\
    \        decimal /= 2;\n    }\n    result += \"db\";\n    std::reverse(result.begin()\
    \ + 2, result.end() - 2);\n    return result;", "  std::string binary = \"db\"\
    ;\n  while (decimal > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal\
    \ /= 2;\n  }\n  binary += \"db\";\n  return binary;", "    std::string binary\
    \ = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;", "  std::string binary = \"db\";\n\
    \  while (decimal > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal\
    \ /= 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin() + 2, binary.end()\
    \ - 2);\n  return binary;", "  std::string binary = \"db\";\n  while (decimal\
    \ > 0) {\n    if (decimal % 2 == 0) {\n      binary += \"0\";\n    } else {\n\
    \      binary += \"1\";\n    }\n    decimal /= 2;\n  }\n  binary += \"db\";\n\
    \  std::reverse(binary.begin() + 2, binary.end() - 2);\n  return binary;", " \
    \   std::string binary = \"db\";\n    while (decimal > 0) {\n        binary +=\
    \ std::to_string(decimal % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin()\
    \ + 2, binary.end());\n    binary += \"db\";\n    return binary;", "    std::string\
    \ binary = \"db\";\n    while (decimal) {\n        binary += (decimal % 2) ? '1'\
    \ : '0';\n        decimal /= 2;\n    }\n    reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;", "    std::string binary;\n    while\
    \ (decimal > 0) {\n        binary.push_back(decimal % 2 + '0');\n        decimal\
    \ /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return \"\
    db\" + binary + \"db\";", "    std::string binary = \"db\";\n    while (decimal\
    \ > 0) {\n        if (decimal % 2 == 0) {\n            binary += \"0\";\n    \
    \    } else {\n            binary += \"1\";\n        }\n        decimal /= 2;\n\
    \    }\n    std::reverse(binary.begin() + 2, binary.end());\n    binary += \"\
    db\";\n    return binary;", "  std::string binary = \"\";\n  while (decimal >\
    \ 0) {\n    binary = std::to_string(decimal % 2) + binary;\n    decimal /= 2;\n\
    \  }\n  return binary;", "  std::string binary = \"db\";\n  while (decimal > 0)\
    \ {\n    binary += std::to_string(decimal % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin()\
    \ + 2, binary.end());\n  binary += \"db\";\n  return binary;", "  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin()\
    \ + 2, binary.end() - 2);\n  return binary;", "  std::string binary = \"\";\n\
    \  while (decimal > 0) {\n    binary = std::to_string(decimal % 2) + binary;\n\
    \    decimal /= 2;\n  }\n  return \"db\" + binary + \"db\";", "  std::string binary\
    \ = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal % 2);\n\
    \    decimal /= 2;\n  }\n  binary += \"db\";\n  return binary;", "  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin() + 2, binary.end()\
    \ - 2);\n  return binary;", "    std::string binary = \"db\";\n    while (decimal\
    \ > 0) {\n        binary += std::to_string(decimal % 2);\n        decimal /= 2;\n\
    \    }\n    std::reverse(binary.begin() + 2, binary.end());\n    binary += \"\
    db\";\n    return binary;", "    std::string binary = \"db\";\n    while (decimal\
    \ > 0) {\n        binary += std::to_string(decimal % 2);\n        decimal /= 2;\n\
    \    }\n    binary += \"db\";\n    std::reverse(binary.begin() + 2, binary.end()\
    \ - 2);\n    return binary;", "  std::string binary = \"db\";\n  while (decimal\
    \ > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal /= 2;\n  }\n\
    \  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"db\";\n  return\
    \ binary;", "    std::string binary = \"db\";\n    while (decimal > 0) {\n   \
    \     binary.push_back('0' + (decimal % 2));\n        decimal /= 2;\n    }\n \
    \   binary.push_back('b');\n    std::reverse(binary.begin() + 2, binary.end()\
    \ - 1);\n    return binary;", "  std::string binary = \"db\";\n  while (decimal\
    \ > 0) {\n    if (decimal % 2 == 0) {\n      binary += \"0\";\n    } else {\n\
    \      binary += \"1\";\n    }\n    decimal /= 2;\n  }\n  binary += \"db\";\n\
    \  std::reverse(binary.begin() + 2, binary.end() - 2);\n  return binary;", " \
    \ std::string binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 ==\
    \ 0) {\n      binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n\
    \    decimal /= 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin() +\
    \ 2, binary.end() - 2);\n  return binary;", "  std::string binary = \"db\";\n\
    \  while (decimal > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal\
    \ /= 2;\n  }\n  binary += \"db\";\n  return binary;", "  std::string binary =\
    \ \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n      binary\
    \ += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal /= 2;\n\
    \  }\n  binary += \"db\";\n  std::reverse(binary.begin() + 2, binary.end() - 2);\n\
    \  return binary;"]
stop_tokens:
- "\n}"

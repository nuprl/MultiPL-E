name: HumanEval_113_odd_count
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of strings,\
  \ where each string consists of only digits, return a list.\n// Each element i of\
  \ the output should be \"the number of odd elements in the\n// string i of the input.\"\
  \ where all the i's should be replaced by the number\n// of odd digits in the i'th\
  \ string of the input.\nstd::string odd_count(std::vector<std::string> lst) {\n"
tests: "}\nint main() {\n    auto candidate = odd_count;\n    assert(candidate((std::vector<std::string>({(std::string)\"\
  1234567\"}))) == (std::string(std::string)\"the number of odd elements 4n the str4ng\
  \ 4 of the 4nput.\"})));\n    assert(candidate((std::vector<std::string>({(std::string)\"\
  3\", (std::string)\"11111111\"}))) == (std::string(std::string)\"the number of odd\
  \ elements 8n the str8ng 8 of the 8nput.\"})));\n    assert(candidate((std::vector<std::string>({(std::string)\"\
  271\", (std::string)\"137\", (std::string)\"314\"}))) == (std::string(std::string)\"\
  the number of odd elements 2n the str2ng 2 of the 2nput.\"})));\n}\n"
completions: []
stop_tokens:
- "\n}"

name: HumanEval_30_get_positive
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
  \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n"
tests: "}\nint main() {\n    auto candidate = get_positive;\n    assert(candidate((std::vector<long>({(long)-1,\
  \ (long)-2, (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5,\
  \ (long)6})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
  \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10})))\
  \ == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3, (long)9, (long)123,\
  \ (long)1})));\n    assert(candidate((std::vector<long>({(long)-1, (long)-2})))\
  \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
  }\n"
completions: ["    std::vector<long> res;\n    for (auto i : l) {\n        if (i >\
    \ 0) {\n            res.push_back(i);\n        }\n    }\n    return res;", " \
    \   std::vector<long> result;\n    for (int i = 0; i < l.size(); i++) {\n    \
    \    if (l[i] > 0) {\n            result.push_back(l[i]);\n        }\n    }\n\
    \    return result;", "    std::vector<long> result;\n    for (auto i : l) {\n\
    \        if (i > 0) {\n            result.push_back(i);\n        }\n    }\n  \
    \  return result;", "    std::vector<long> result;\n    for (int i = 0; i < l.size();\
    \ i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n     \
    \   }\n    }\n    return result;", "    std::vector<long> result;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    for (long\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            res.push_back(l[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    for (int i =\
    \ 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> positive;\n   \
    \ for (long i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n           \
    \ positive.push_back(l[i]);\n        }\n    }\n    return positive;", "    std::vector<long>\
    \ positive_list;\n    for (auto i : l) {\n        if (i > 0) {\n            positive_list.push_back(i);\n\
    \        }\n    }\n    return positive_list;", "    std::vector<long> result;\n\
    \    for (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n         \
    \   result.push_back(l[i]);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    for (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n  \
    \          res.push_back(l[i]);\n        }\n    }\n    return res;", "    std::vector<long>\
    \ result;\n    for (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n\
    \            result.push_back(l[i]);\n        }\n    }\n    return result;", " \
    \   std::vector<long> result;\n    for (long i = 0; i < l.size(); i++) {\n   \
    \     if (l[i] > 0) {\n            result.push_back(l[i]);\n        }\n    }\n\
    \    return result;", "    std::vector<long> res;\n    for (long i = 0; i < l.size();\
    \ i++) {\n        if (l[i] > 0) {\n            res.push_back(l[i]);\n        }\n\
    \    }\n    return res;", "    std::vector<long> result;\n    for (auto i : l)\
    \ {\n        if (i > 0) {\n            result.push_back(i);\n        }\n    }\n\
    \    return result;", "    std::vector<long> result;\n    for (long i = 0; i <\
    \ l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "\tstd::vector<long> result;\n\tfor (auto\
    \ i : l) {\n\t\tif (i > 0) {\n\t\t\tresult.push_back(i);\n\t\t}\n\t}\n\treturn\
    \ result;", "    std::vector<long> result;\n    for (int i = 0; i < l.size();\
    \ i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n     \
    \   }\n    }\n    return result;", "    std::vector<long> result;\n    for (long\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    for (long\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            res.push_back(l[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> positive;\n   \
    \ for (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            positive.push_back(l[i]);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> result;\n   \
    \ for (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n\
    \        }\n    }\n    return result;", "  std::vector<long> result;\n  for (auto\
    \ i : l) {\n    if (i > 0) {\n      result.push_back(i);\n    }\n  }\n  return\
    \ result;", "    std::vector<long> ret;\n    for (auto i : l) {\n        if (i\
    \ > 0) {\n            ret.push_back(i);\n        }\n    }\n    return ret;", " \
    \   std::vector<long> ret;\n    for (auto i : l) {\n        if (i > 0) {\n   \
    \         ret.push_back(i);\n        }\n    }\n    return ret;", "    std::vector<long>\
    \ res;\n    for (auto x : l) {\n        if (x > 0) {\n            res.push_back(x);\n\
    \        }\n    }\n    return res;", "    std::vector<long> ret;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            ret.push_back(i);\n        }\n \
    \   }\n    return ret;", "    std::vector<long> positive;\n    for (long i = 0;\
    \ i < l.size(); i++) {\n        if (l[i] > 0) {\n            positive.push_back(l[i]);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> result;\n   \
    \ for (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    for (long\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            res.push_back(l[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            res.push_back(i);\n        }\n \
    \   }\n    return res;", "    std::vector<long> r;\n    for (auto i : l) {\n \
    \       if (i > 0) {\n            r.push_back(i);\n        }\n    }\n    return\
    \ r;", "    std::vector<long> result;\n    for (int i = 0; i < l.size(); i++)\
    \ {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    for (int i =\
    \ 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto x : l) {\n        if (x > 0) {\n            result.push_back(x);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (long\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> ans;\n    for(long\
    \ i=0;i<l.size();i++) {\n        if(l[i]>0) {\n            ans.push_back(l[i]);\n\
    \        }\n    }\n    return ans;", "    std::vector<long> ans;\n    for(int\
    \ i=0;i<l.size();i++) {\n        if(l[i]>0) {\n            ans.push_back(l[i]);\n\
    \        }\n    }\n    return ans;", "    std::vector<long> result;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "    std::vector<long> res;\n    for (auto i : l)\
    \ {\n        if (i > 0) {\n            res.push_back(i);\n        }\n    }\n \
    \   return res;", "    std::vector<long> result;\n    for (int i = 0; i < l.size();\
    \ i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n     \
    \   }\n    }\n    return result;", "    std::vector<long> result;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> v;\n    for(int\
    \ i=0;i<l.size();i++)\n    {\n        if(l[i]>0)\n        {\n            v.push_back(l[i]);\n\
    \        }\n    }\n    return v;", "    std::vector<long> res;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            res.push_back(i);\n        }\n \
    \   }\n    return res;", "    std::vector<long> result;\n    for (auto i : l)\
    \ {\n        if (i > 0) {\n            result.push_back(i);\n        }\n    }\n\
    \    return result;", "    std::vector<long> result;\n    for (long i = 0; i <\
    \ l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> positive_numbers;\n\
    \    for (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n         \
    \   positive_numbers.push_back(l[i]);\n        }\n    }\n    return positive_numbers;",
  "    std::vector<long> result;\n    for (int i = 0; i < l.size(); i++) {\n     \
    \   if (l[i] > 0) {\n            result.push_back(l[i]);\n        }\n    }\n \
    \   return result;", "  std::vector<long> res;\n  for (int i = 0; i < l.size();\
    \ i++) {\n    if (l[i] > 0) {\n      res.push_back(l[i]);\n    }\n  }\n  return\
    \ res;", "    std::vector<long> result;\n    for (auto i : l) {\n        if (i\
    \ > 0) {\n            result.push_back(i);\n        }\n    }\n    return result;",
  "    std::vector<long> v;\n    for(int i=0;i<l.size();i++)\n    {\n        if(l[i]>0)\n\
    \        {\n            v.push_back(l[i]);\n        }\n    }\n    return v;",
  "    std::vector<long> result;\n    for (auto i : l) {\n        if (i > 0) {\n \
    \           result.push_back(i);\n        }\n    }\n    return result;", "   \
    \ std::vector<long> result;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  if (l[i] > 0) {\n            result.push_back(l[i]);\n        }\n    }\n  \
    \  return result;", "    std::vector<long> result;\n    for (int i = 0; i < l.size();\
    \ i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n     \
    \   }\n    }\n    return result;", "    std::vector<long> result;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            res.push_back(i);\n        }\n \
    \   }\n    return res;", "    std::vector<long> res;\n    for (int i = 0; i <\
    \ l.size(); i++) {\n        if (l[i] > 0) {\n            res.push_back(l[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> ans;\n    for(int\
    \ i=0;i<l.size();i++) {\n        if(l[i]>0) {\n            ans.push_back(l[i]);\n\
    \        }\n    }\n    return ans;", "    std::vector<long> positive;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            positive.push_back(l[i]);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> result;\n   \
    \ for (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            res.push_back(i);\n        }\n \
    \   }\n    return res;", "    std::vector<long> result;\n    for (long i = 0;\
    \ i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (long\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            res.push_back(l[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    for (long\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto x : l) {\n        if (x > 0) {\n            result.push_back(x);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    for (long i =\
    \ 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> positive;\n   \
    \ for (auto i : l) {\n        if (i > 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> result;\n   \
    \ for (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            res.push_back(l[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    for (long\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> ret;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            ret.push_back(l[i]);\n\
    \        }\n    }\n    return ret;", "    std::vector<long> result;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            res.push_back(i);\n        }\n \
    \   }\n    return res;", "    std::vector<long> result;\n    for (long i = 0;\
    \ i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            res.push_back(l[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    for (long\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            res.push_back(l[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    for (int i =\
    \ 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "  std::vector<long> res;\n  for (auto\
    \ i : l) {\n    if (i > 0) {\n      res.push_back(i);\n    }\n  }\n  return res;",
  "    std::vector<long> ret;\n    for (auto i : l) {\n        if (i > 0) {\n    \
    \        ret.push_back(i);\n        }\n    }\n    return ret;", "    std::vector<long>\
    \ result;\n    for (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n\
    \            result.push_back(l[i]);\n        }\n    }\n    return result;", " \
    \   std::vector<long> result;\n    for (int i = 0; i < l.size(); i++) {\n    \
    \    if (l[i] > 0) {\n            result.push_back(l[i]);\n        }\n    }\n\
    \    return result;", "    std::vector<long> res;\n    for (auto i : l) {\n  \
    \      if (i > 0) {\n            res.push_back(i);\n        }\n    }\n    return\
    \ res;", "    std::vector<long> result;\n    for (int i = 0; i < l.size(); i++)\
    \ {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    for (auto i :\
    \ l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n  \
    \  }\n    return result;", "    std::vector<long> result;\n    for (int i = 0;\
    \ i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    for (auto i :\
    \ l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n  \
    \  }\n    return result;", "    std::vector<long> result;\n    for (long i = 0;\
    \ i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "\tstd::vector<long> result;\n\tfor (long\
    \ i = 0; i < l.size(); i++) {\n\t\tif (l[i] > 0) {\n\t\t\tresult.push_back(l[i]);\n\
    \t\t}\n\t}\n\treturn result;", "    std::vector<long> result;\n    for (long i\
    \ = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> res;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            res.push_back(l[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            res.push_back(i);\n        }\n \
    \   }\n    return res;", "    std::vector<long> result;\n    for (auto i : l)\
    \ {\n        if (i > 0) {\n            result.push_back(i);\n        }\n    }\n\
    \    return result;", "    std::vector<long> result;\n    for (long i = 0; i <\
    \ l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> pos;\n    for (long\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            pos.push_back(l[i]);\n\
    \        }\n    }\n    return pos;", "    std::vector<long> res;\n    for (long\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            res.push_back(l[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            res.push_back(i);\n        }\n \
    \   }\n    return res;", "  std::vector<long> result;\n  for (int i = 0; i < l.size();\
    \ i++) {\n    if (l[i] > 0) {\n      result.push_back(l[i]);\n    }\n  }\n  return\
    \ result;", "    std::vector<long> result;\n    for (long i = 0; i < l.size();\
    \ i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n     \
    \   }\n    }\n    return result;", "    std::vector<long> result;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "    std::vector<long> res;\n    for (long i = 0;\
    \ i < l.size(); i++) {\n        if (l[i] > 0) {\n            res.push_back(l[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> positive;\n   \
    \ for (long i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n           \
    \ positive.push_back(l[i]);\n        }\n    }\n    return positive;", "    std::vector<long>\
    \ result;\n    for (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n\
    \            result.push_back(l[i]);\n        }\n    }\n    return result;", " \
    \   std::vector<long> result;\n    for (int i = 0; i < l.size(); i++) {\n    \
    \    if (l[i] > 0) {\n            result.push_back(l[i]);\n        }\n    }\n\
    \    return result;", "    std::vector<long> result;\n    for (auto i : l) {\n\
    \        if (i > 0) {\n            result.push_back(i);\n        }\n    }\n  \
    \  return result;", "    std::vector<long> result;\n    for (long i = 0; i < l.size();\
    \ i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n     \
    \   }\n    }\n    return result;", "    std::vector<long> result;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (long\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            res.push_back(i);\n        }\n \
    \   }\n    return res;", "    std::vector<long> result;\n    for (int i = 0; i\
    \ < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            res.push_back(l[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    for (int i =\
    \ 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    for (long\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            res.push_back(l[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    for (long\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            res.push_back(i);\n        }\n \
    \   }\n    return res;", "    std::vector<long> v;\n    for(int i=0;i<l.size();i++)\n\
    \    {\n        if(l[i]>0)\n        {\n            v.push_back(l[i]);\n      \
    \  }\n    }\n    return v;", "    std::vector<long> result;\n    for (int i =\
    \ 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i: l) {\n        if (i > 0) {\n            result.push_back(i);\n    \
    \    }\n    }\n    return result;", "    std::vector<long> result;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    for (auto\
    \ x : l) {\n        if (x > 0) {\n            res.push_back(x);\n        }\n \
    \   }\n    return res;", "    std::vector<long> result;\n    for (long i = 0;\
    \ i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> positive;\n   \
    \ for (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            positive.push_back(l[i]);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> result;\n   \
    \ for (long i : l) {\n        if (i > 0) {\n            result.push_back(i);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    for (auto\
    \ x : l) {\n        if (x > 0) {\n            res.push_back(x);\n        }\n \
    \   }\n    return res;", "    std::vector<long> result;\n    for (long i = 0;\
    \ i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> res;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            res.push_back(l[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    for (long\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> positive;\n   \
    \ for (long i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n           \
    \ positive.push_back(l[i]);\n        }\n    }\n    return positive;", "    std::vector<long>\
    \ res;\n    for (auto i: l) {\n        if (i > 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    for (long\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (long\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            res.push_back(i);\n        }\n \
    \   }\n    return res;", "    std::vector<long> result;\n    for (long i = 0;\
    \ i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            res.push_back(i);\n        }\n \
    \   }\n    return res;", "    std::vector<long> result;\n    for (long i = 0;\
    \ i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> res;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            res.push_back(l[i]);\n\
    \        }\n    }\n    return res;"]
stop_tokens:
- "\n}"

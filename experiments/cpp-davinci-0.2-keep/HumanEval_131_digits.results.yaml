name: HumanEval_131_digits
language: cpp
results:
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmppbe05yja: /tmp/tmppbe05yja.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n != 0) {\n        if(n\
    \ % 2 != 0) {\n            product *= n % 10;\n        }\n        n /= 10;\n \
    \   }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n  \
    \  assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpz1lforsi: /tmp/tmpz1lforsi.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp4iiy2hfn: /tmp/tmp4iiy2hfn.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpl_7u9y1l: /tmp/tmpl_7u9y1l.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n > 0) {\n        if(n\
    \ % 2 == 1) {\n            product *= n % 10;\n        }\n        n /= 10;\n \
    \   }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n  \
    \  assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpjmih9zmu: /tmp/tmpjmih9zmu.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    long digit =\
    \ n % 10;\n    if (digit % 2 != 0) {\n      result *= digit;\n    }\n    n /=\
    \ 10;\n  }\n  return result;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpvujwkt92: /tmp/tmpvujwkt92.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpn8yke7n9: /tmp/tmpn8yke7n9.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n) {\n    if (n % 2) {\n \
    \     result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpnjg6b4v9: /tmp/tmpnjg6b4v9.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpa_91fox8: /tmp/tmpa_91fox8.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp1iyk1e_x: /tmp/tmp1iyk1e_x.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpabmz2xak: /tmp/tmpabmz2xak.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 ==\
    \ 1) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpk3_icy2o: /tmp/tmpk3_icy2o.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp1hwf_c3r: /tmp/tmp1hwf_c3r.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    long digit\
    \ = n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n    }\n    n\
    \ /= 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp8znqos5_: /tmp/tmp8znqos5_.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    long digit =\
    \ n % 10;\n    if (digit % 2 != 0) {\n      result *= digit;\n    }\n    n /=\
    \ 10;\n  }\n  return result;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp28d4ra2t: /tmp/tmp28d4ra2t.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n > 0) {\n        if(n\
    \ % 2 == 1) {\n            product *= n % 10;\n        }\n        n /= 10;\n \
    \   }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n  \
    \  assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpy1ovf4y9: /tmp/tmpy1ovf4y9.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n > 0) {\n        long\
    \ digit = n % 10;\n        if(digit % 2 != 0) {\n            product *= digit;\n\
    \        }\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpd57udnbt: /tmp/tmpd57udnbt.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpxi6tx85n: /tmp/tmpxi6tx85n.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpucxnhwg5: /tmp/tmpucxnhwg5.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 ==\
    \ 1) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmptpoy62ob: /tmp/tmptpoy62ob.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp3vw_ytl_: /tmp/tmp3vw_ytl_.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n != 0) {\n    int digit\
    \ = n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n    }\n    n\
    \ /= 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp0uzfsht9: /tmp/tmp0uzfsht9.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long prod = 1;\n  while (n > 0) {\n    if (n % 2 != 0)\
    \ {\n      prod *= n % 10;\n    }\n    n /= 10;\n  }\n  return prod;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmprx57g2un: /tmp/tmprx57g2un.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 ==\
    \ 1) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpyfawsz2w: /tmp/tmpyfawsz2w.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    int digit =\
    \ n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n    }\n    n /=\
    \ 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpbd3ltaw6: /tmp/tmpbd3ltaw6.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmphf9v1qyf: /tmp/tmphf9v1qyf.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    int digit =\
    \ n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n    }\n    n /=\
    \ 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpyhy11cyw: /tmp/tmpyhy11cyw.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n>0){\n        long digit\
    \ = n%10;\n        if(digit%2!=0){\n            product *= digit;\n        }\n\
    \        n /= 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpu8g0r7tl: /tmp/tmpu8g0r7tl.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp89spibyy: /tmp/tmp89spibyy.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    long digit\
    \ = n % 10;\n    if (digit % 2 == 1) {\n      product *= digit;\n    }\n    n\
    \ /= 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpqm6zukc4: /tmp/tmpqm6zukc4.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long result = 1;\n    while (n > 0) {\n        if (n\
    \ % 2 != 0) {\n            result *= n % 10;\n        }\n        n /= 10;\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpl0vgpidv: /tmp/tmpl0vgpidv.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp02ubqd_6: /tmp/tmp02ubqd_6.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    long digit\
    \ = n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n    }\n    n\
    \ /= 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpif9dxdp3: /tmp/tmpif9dxdp3.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp_hf4cbvc: /tmp/tmp_hf4cbvc.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmptpr03yia: /tmp/tmptpr03yia.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    int digit =\
    \ n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n    }\n    n /=\
    \ 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp0eq6jlg2: /tmp/tmp0eq6jlg2.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long ans = 1;\n  while(n > 0){\n    if(n % 2 != 0){\n\
    \      ans *= n % 10;\n    }\n    n /= 10;\n  }\n  return ans;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpxw9n81e2: /tmp/tmpxw9n81e2.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long prod = 1;\n  while (n > 0) {\n    if (n % 2 == 1)\
    \ {\n      prod *= n % 10;\n    }\n    n /= 10;\n  }\n  return prod;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp_ac4e2xa: /tmp/tmp_ac4e2xa.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    long digit\
    \ = n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n    }\n    n\
    \ /= 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmprtgrmk6r: /tmp/tmprtgrmk6r.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long prod = 1;\n    while(n > 0) {\n        if(n %\
    \ 2 == 1) {\n            prod *= n % 10;\n        }\n        n /= 10;\n    }\n\
    \    return prod;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpgoninw8n: /tmp/tmpgoninw8n.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpj3cq2lf6: /tmp/tmpj3cq2lf6.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long prod = 1;\n  while (n > 0) {\n    if (n % 2 != 0)\
    \ {\n      prod *= n % 10;\n    }\n    n /= 10;\n  }\n  return prod;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp1ix6zkmg: /tmp/tmp1ix6zkmg.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpnf9yyqd1: /tmp/tmpnf9yyqd1.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n > 0) {\n        long\
    \ digit = n % 10;\n        if(digit % 2 != 0) {\n            product *= digit;\n\
    \        }\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpat45jfbg: /tmp/tmpat45jfbg.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    long digit =\
    \ n % 10;\n    if (digit % 2 == 1) {\n      result *= digit;\n    }\n    n /=\
    \ 10;\n  }\n  return result;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp4ym67fp2: /tmp/tmp4ym67fp2.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpmz7a2t9s: /tmp/tmpmz7a2t9s.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 ==\
    \ 1) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpyyc9l1nb: /tmp/tmpyyc9l1nb.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long prod = 1;\n  while (n > 0) {\n    if (n % 2 != 0)\
    \ {\n      prod *= n % 10;\n    }\n    n /= 10;\n  }\n  return prod;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpa0492i6u: /tmp/tmpa0492i6u.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpfhd7z9ce: /tmp/tmpfhd7z9ce.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    long digit =\
    \ n % 10;\n    if (digit % 2 != 0) {\n      result *= digit;\n    }\n    n /=\
    \ 10;\n  }\n  return result;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpyjla0lvy: /tmp/tmpyjla0lvy.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    int prod = 1;\n    while(n > 0) {\n        int digit\
    \ = n % 10;\n        if(digit % 2 != 0) {\n            prod *= digit;\n      \
    \  }\n        n /= 10;\n    }\n    return prod;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpg8xoupwo: /tmp/tmpg8xoupwo.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 ==\
    \ 1) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp906xhudh: /tmp/tmp906xhudh.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 ==\
    \ 1) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpti2niak5: /tmp/tmpti2niak5.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 1;\n    while(n > 0) {\n        int digit\
    \ = n % 10;\n        if(digit % 2 != 0) {\n            ans *= digit;\n       \
    \ }\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpe2t1hbqe: /tmp/tmpe2t1hbqe.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long prod = 1;\n  while (n > 0) {\n    long digit = n\
    \ % 10;\n    if (digit % 2 != 0) prod *= digit;\n    n /= 10;\n  }\n  return prod;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpeaxk5few: /tmp/tmpeaxk5few.cpp:26: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 ==\
    \ 1) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpi9uwltt2: /tmp/tmpi9uwltt2.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpn5bgvowk: /tmp/tmpn5bgvowk.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    long digit\
    \ = n % 10;\n    if (digit % 2 == 1) {\n      product *= digit;\n    }\n    n\
    \ /= 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpgkrs8hpz: /tmp/tmpgkrs8hpz.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    int digit =\
    \ n % 10;\n    if (digit % 2 != 0) {\n      result *= digit;\n    }\n    n /=\
    \ 10;\n  }\n  return result;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpd0mwru_9: /tmp/tmpd0mwru_9.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    long digit =\
    \ n % 10;\n    if (digit % 2 != 0) {\n      result *= digit;\n    }\n    n /=\
    \ 10;\n  }\n  return result;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpsqs81no2: /tmp/tmpsqs81no2.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpfuomhkw1: /tmp/tmpfuomhkw1.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    int digit =\
    \ n % 10;\n    if (digit % 2 != 0) {\n      result *= digit;\n    }\n    n /=\
    \ 10;\n  }\n  return result;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp_c40bzad: /tmp/tmp_c40bzad.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long prod = 1;\n  while (n > 0) {\n    long digit = n\
    \ % 10;\n    if (digit % 2 != 0) {\n      prod *= digit;\n    }\n    n /= 10;\n\
    \  }\n  return prod;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp89mldy4z: /tmp/tmp89mldy4z.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpem08755u: /tmp/tmpem08755u.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long prod = 1;\n  while (n > 0) {\n    if (n % 2 != 0)\
    \ {\n      prod *= n % 10;\n    }\n    n /= 10;\n  }\n  return prod;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp5pm6njx1: /tmp/tmp5pm6njx1.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long prod = 1;\n  while (n > 0) {\n    if (n % 2 != 0)\
    \ {\n      prod *= n % 10;\n    }\n    n /= 10;\n  }\n  return prod;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpyp0wjv5a: /tmp/tmpyp0wjv5a.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpuv5z5ws7: /tmp/tmpuv5z5ws7.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    long digit =\
    \ n % 10;\n    if (digit % 2 != 0) {\n      result *= digit;\n    }\n    n /=\
    \ 10;\n  }\n  return result;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpnpqtc_3s: /tmp/tmpnpqtc_3s.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n > 0) {\n        if(n\
    \ % 2 == 1) {\n            product *= n % 10;\n        }\n        n /= 10;\n \
    \   }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n  \
    \  assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpwh_ao590: /tmp/tmpwh_ao590.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 ==\
    \ 1) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmplo493q5l: /tmp/tmplo493q5l.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    long digit\
    \ = n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n    }\n    n\
    \ /= 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp24wkxksd: /tmp/tmp24wkxksd.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long prod = 1;\n  while (n > 0) {\n    if (n % 2 != 0)\
    \ {\n      prod *= n % 10;\n    }\n    n /= 10;\n  }\n  return prod;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpapwyqqe9: /tmp/tmpapwyqqe9.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n > 0) {\n        if(n\
    \ % 2 != 0) {\n            product *= n % 10;\n        }\n        n /= 10;\n \
    \   }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n  \
    \  assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp5kb53gvp: /tmp/tmp5kb53gvp.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    long digit\
    \ = n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n    }\n    n\
    \ /= 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpxvgabguv: /tmp/tmpxvgabguv.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    int digit =\
    \ n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n    }\n    n /=\
    \ 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpmpos78zb: /tmp/tmpmpos78zb.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmph49vskm6: /tmp/tmph49vskm6.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp2aj0ksm4: /tmp/tmp2aj0ksm4.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp7r6z8bmr: /tmp/tmp7r6z8bmr.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 ==\
    \ 1) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmppse_p7x3: /tmp/tmppse_p7x3.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpybppvfob: /tmp/tmpybppvfob.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpiv0v4wny: /tmp/tmpiv0v4wny.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n > 0) {\n        if(n\
    \ % 2 != 0) {\n            product *= n % 10;\n        }\n        n /= 10;\n \
    \   }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n  \
    \  assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpb19ndzhw: /tmp/tmpb19ndzhw.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp8y2u0lw6: /tmp/tmp8y2u0lw6.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    int digit =\
    \ n % 10;\n    if (digit % 2 == 1) {\n      result *= digit;\n    }\n    n /=\
    \ 10;\n  }\n  return result;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpowxbx9d7: /tmp/tmpowxbx9d7.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long prod = 1;\n  while (n > 0) {\n    long digit = n\
    \ % 10;\n    if (digit % 2 != 0) {\n      prod *= digit;\n    }\n    n /= 10;\n\
    \  }\n  return prod;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpjeet31fa: /tmp/tmpjeet31fa.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    int digit =\
    \ n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n    }\n    n /=\
    \ 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpfp5oc5w7: /tmp/tmpfp5oc5w7.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpnd1p8jaw: /tmp/tmpnd1p8jaw.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp_4mgf9zz: /tmp/tmp_4mgf9zz.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long prod = 1;\n  while (n > 0) {\n    long digit = n\
    \ % 10;\n    if (digit % 2 != 0) {\n      prod *= digit;\n    }\n    n /= 10;\n\
    \  }\n  return prod;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpf3aekomw: /tmp/tmpf3aekomw.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    long digit\
    \ = n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n    }\n    n\
    \ /= 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpaay5hslb: /tmp/tmpaay5hslb.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 ==\
    \ 1) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpwmqlt54a: /tmp/tmpwmqlt54a.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    int digit =\
    \ n % 10;\n    if (digit % 2 != 0) {\n      result *= digit;\n    }\n    n /=\
    \ 10;\n  }\n  return result;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp_xs4bjqf: /tmp/tmp_xs4bjqf.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp0acec8n3: /tmp/tmp0acec8n3.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long prod = 1;\n  while (n > 0) {\n    if (n % 2 == 1)\
    \ {\n      prod *= n % 10;\n    }\n    n /= 10;\n  }\n  return prod;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmptowxlszc: /tmp/tmptowxlszc.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpbx1zsaoc: /tmp/tmpbx1zsaoc.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmprlwgwtjv: /tmp/tmprlwgwtjv.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpnw8sxvk9: /tmp/tmpnw8sxvk9.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp0zowt6in: /tmp/tmp0zowt6in.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpc224bymg: /tmp/tmpc224bymg.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    long digit =\
    \ n % 10;\n    if (digit % 2 == 1) {\n      result *= digit;\n    }\n    n /=\
    \ 10;\n  }\n  return result;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpveulmt9e: /tmp/tmpveulmt9e.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp0jjnepsk: /tmp/tmp0jjnepsk.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    long digit =\
    \ n % 10;\n    if (digit % 2 != 0) {\n      result *= digit;\n    }\n    n /=\
    \ 10;\n  }\n  return result;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpy8ty5drm: /tmp/tmpy8ty5drm.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpcq6c0m64: /tmp/tmpcq6c0m64.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp6s77t1i7: /tmp/tmp6s77t1i7.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    long digit\
    \ = n % 10;\n    if (digit % 2 == 1) {\n      product *= digit;\n    }\n    n\
    \ /= 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpl9z9tj5a: /tmp/tmpl9z9tj5a.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpwyppskwl: /tmp/tmpwyppskwl.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    long digit\
    \ = n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n    }\n    n\
    \ /= 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpubo6j58e: /tmp/tmpubo6j58e.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    long digit\
    \ = n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n    }\n    n\
    \ /= 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpm4gf8byn: /tmp/tmpm4gf8byn.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    long digit\
    \ = n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n    }\n    n\
    \ /= 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpy4rfw607: /tmp/tmpy4rfw607.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n > 0) {\n        long\
    \ digit = n % 10;\n        if(digit % 2 != 0) {\n            product *= digit;\n\
    \        }\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp81_1t9hq: /tmp/tmp81_1t9hq.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    long digit\
    \ = n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n    }\n    n\
    \ /= 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpdtrb4v9x: /tmp/tmpdtrb4v9x.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpfma8jwtx: /tmp/tmpfma8jwtx.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n > 0) {\n        if (n\
    \ % 2 != 0) {\n            product *= n % 10;\n        }\n        n /= 10;\n \
    \   }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n  \
    \  assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpg9i8n_hb: /tmp/tmpg9i8n_hb.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n > 0) {\n        long\
    \ digit = n % 10;\n        if(digit % 2 != 0) {\n            product *= digit;\n\
    \        }\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp2j7g7gwd: /tmp/tmp2j7g7gwd.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 1;\n    while(n > 0) {\n        if(n % 2\
    \ != 0) {\n            ans *= n % 10;\n        }\n        n /= 10;\n    }\n  \
    \  return ans;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpdhpjfued: /tmp/tmpdhpjfued.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n > 0) {\n        if(n\
    \ % 2 != 0) {\n            product *= n % 10;\n        }\n        n /= 10;\n \
    \   }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n  \
    \  assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpokq7_6vo: /tmp/tmpokq7_6vo.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpzhia6jwb: /tmp/tmpzhia6jwb.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpyq_970ym: /tmp/tmpyq_970ym.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp77bvmzed: /tmp/tmp77bvmzed.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n>0){\n        long digit\
    \ = n%10;\n        if(digit%2!=0){\n            product *= digit;\n        }\n\
    \        n /= 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp9spf7kzp: /tmp/tmp9spf7kzp.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n > 0) {\n        if(n\
    \ % 2 != 0) {\n            product *= n % 10;\n        }\n        n /= 10;\n \
    \   }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n  \
    \  assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp117zyelp: /tmp/tmp117zyelp.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n > 0) {\n        long\
    \ digit = n % 10;\n        if(digit % 2 != 0) {\n            product *= digit;\n\
    \        }\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpdp0a840x: /tmp/tmpdp0a840x.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n > 0) {\n        long\
    \ digit = n % 10;\n        if(digit % 2 != 0) {\n            product *= digit;\n\
    \        }\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpnn_0tdj9: /tmp/tmpnn_0tdj9.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n > 0) {\n        if(n\
    \ % 2 != 0) {\n            product *= n % 10;\n        }\n        n /= 10;\n \
    \   }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n  \
    \  assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpi495f8ac: /tmp/tmpi495f8ac.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n > 0) {\n        if(n\
    \ % 2 != 0) {\n            product *= n % 10;\n        }\n        n /= 10;\n \
    \   }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n  \
    \  assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmplfh_racb: /tmp/tmplfh_racb.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long prod = 1;\n    while(n > 0) {\n        long digit\
    \ = n % 10;\n        if(digit % 2 != 0) {\n            prod *= digit;\n      \
    \  }\n        n /= 10;\n    }\n    return prod;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpv__hhe10: /tmp/tmpv__hhe10.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n > 0) {\n        long\
    \ digit = n % 10;\n        if(digit % 2 != 0) {\n            product *= digit;\n\
    \        }\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp90z8xyt8: /tmp/tmp90z8xyt8.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpoczcyjph: /tmp/tmpoczcyjph.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpsuoavsrh: /tmp/tmpsuoavsrh.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 1;\n    while(n){\n        int digit = n%10;\n\
    \        if(digit%2 != 0)\n            ans *= digit;\n        n /= 10;\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpvpkxi0dz: /tmp/tmpvpkxi0dz.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp2x6yk6oq: /tmp/tmp2x6yk6oq.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    int digit =\
    \ n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n    }\n    n /=\
    \ 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp06w8aosc: /tmp/tmp06w8aosc.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpkgnzda5k: /tmp/tmpkgnzda5k.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp_mm__cg9: /tmp/tmp_mm__cg9.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    long digit\
    \ = n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n    }\n    n\
    \ /= 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp5rcbyhzt: /tmp/tmp5rcbyhzt.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    long digit\
    \ = n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n    }\n    n\
    \ /= 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp386rlrk7: /tmp/tmp386rlrk7.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long prod = 1;\n  while (n > 0) {\n    long digit = n\
    \ % 10;\n    if (digit % 2 != 0) {\n      prod *= digit;\n    }\n    n /= 10;\n\
    \  }\n  return prod;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpa280d_yo: /tmp/tmpa280d_yo.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    long digit =\
    \ n % 10;\n    if (digit % 2 == 1) {\n      result *= digit;\n    }\n    n /=\
    \ 10;\n  }\n  return result;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpdum48szz: /tmp/tmpdum48szz.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    int digit =\
    \ n % 10;\n    if (digit % 2 != 0) {\n      result *= digit;\n    }\n    n /=\
    \ 10;\n  }\n  return result;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpcqx9d_22: /tmp/tmpcqx9d_22.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp69ios_p4: /tmp/tmp69ios_p4.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmphxh5e7vp: /tmp/tmphxh5e7vp.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp27u1wc_5: /tmp/tmp27u1wc_5.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 ==\
    \ 1) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp64tb0vn1: /tmp/tmp64tb0vn1.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 1;\n    while(n > 0) {\n        int d =\
    \ n % 10;\n        if(d % 2 == 1) {\n            res *= d;\n        }\n      \
    \  n /= 10;\n    }\n    return res;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmph4pilc8a: /tmp/tmph4pilc8a.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 ==\
    \ 1) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp42s1axnq: /tmp/tmp42s1axnq.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long prod = 1;\n    while(n > 0) {\n        if(n %\
    \ 2 != 0) {\n            prod *= n % 10;\n        }\n        n /= 10;\n    }\n\
    \    return prod;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpwq9bsr56: /tmp/tmpwq9bsr56.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 1;\n    while(n){\n        int digit = n\
    \ % 10;\n        if(digit % 2 != 0)\n            res *= digit;\n        n /= 10;\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpmmqumebc: /tmp/tmpmmqumebc.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpxp6mj431: /tmp/tmpxp6mj431.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long prod = 1;\n  while (n > 0) {\n    long digit = n\
    \ % 10;\n    if (digit % 2 != 0) {\n      prod *= digit;\n    }\n    n /= 10;\n\
    \  }\n  return prod;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpr9ycf387: /tmp/tmpr9ycf387.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long result = 1;\n    while (n > 0) {\n        if (n\
    \ % 2 == 1) {\n            result *= n % 10;\n        }\n        n /= 10;\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmplgrk_bg3: /tmp/tmplgrk_bg3.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpv2rwatxf: /tmp/tmpv2rwatxf.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long prod = 1;\n  while (n > 0) {\n    if (n % 2 == 1)\
    \ {\n      prod *= n % 10;\n    }\n    n /= 10;\n  }\n  return prod;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpm26lp2ct: /tmp/tmpm26lp2ct.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n != 0) {\n    long digit\
    \ = n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n    }\n    n\
    \ /= 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpdcpg_wfh: /tmp/tmpdcpg_wfh.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp0ltj5829: /tmp/tmp0ltj5829.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpnc5idppv: /tmp/tmpnc5idppv.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    long digit\
    \ = n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n    }\n    n\
    \ /= 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpihlaidsy: /tmp/tmpihlaidsy.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long result = 1;\n    while (n > 0) {\n        if (n\
    \ % 2 != 0) {\n            result *= n % 10;\n        }\n        n /= 10;\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpo4fg_o26: /tmp/tmpo4fg_o26.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    long digit\
    \ = n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n    }\n    n\
    \ /= 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp4ov2fwe3: /tmp/tmp4ov2fwe3.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    long digit\
    \ = n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n    }\n    n\
    \ /= 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpt9o74doc: /tmp/tmpt9o74doc.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n > 0) {\n        if(n\
    \ % 2 != 0) {\n            product *= n % 10;\n        }\n        n /= 10;\n \
    \   }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n  \
    \  assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmphp9lij9d: /tmp/tmphp9lij9d.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long prod = 1;\n  while (n > 0) {\n    if (n % 2 == 1)\
    \ {\n      prod *= n % 10;\n    }\n    n /= 10;\n  }\n  return prod;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpzrbuddqc: /tmp/tmpzrbuddqc.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long prod = 1;\n  while (n > 0) {\n    if (n % 2 != 0)\
    \ {\n      prod *= n % 10;\n    }\n    n /= 10;\n  }\n  return prod;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpydxijmjb: /tmp/tmpydxijmjb.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long result = 1;\n    while (n > 0) {\n        if (n\
    \ % 2 != 0) {\n            result *= n % 10;\n        }\n        n /= 10;\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp1qvmgg56: /tmp/tmp1qvmgg56.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp6mosgggv: /tmp/tmp6mosgggv.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpa7ihn3mb: /tmp/tmpa7ihn3mb.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp08v95u7v: /tmp/tmp08v95u7v.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    long digit\
    \ = n % 10;\n    if (digit % 2 == 1) {\n      product *= digit;\n    }\n    n\
    \ /= 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmptn_y5cz_: /tmp/tmptn_y5cz_.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    long digit =\
    \ n % 10;\n    if (digit % 2 == 1) {\n      result *= digit;\n    }\n    n /=\
    \ 10;\n  }\n  return result;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpmx_7ncxv: /tmp/tmpmx_7ncxv.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 1;\n    while(n > 0) {\n        if(n % 2\
    \ != 0) {\n            res *= n % 10;\n        }\n        n /= 10;\n    }\n  \
    \  return res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpjv6q8evc: /tmp/tmpjv6q8evc.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    int digit =\
    \ n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n    }\n    n /=\
    \ 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpi_eu7ro_: /tmp/tmpi_eu7ro_.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n > 0) {\n        if(n\
    \ % 2 != 0) {\n            product *= n % 10;\n        }\n        n /= 10;\n \
    \   }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n  \
    \  assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpzrbqyp7m: /tmp/tmpzrbqyp7m.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long result = 1;\n    while (n > 0) {\n        if (n\
    \ % 2 != 0) {\n            result *= n % 10;\n        }\n        n /= 10;\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp30vwy6ey: /tmp/tmp30vwy6ey.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpleotkl4g: /tmp/tmpleotkl4g.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long prod = 1;\n  while (n > 0) {\n    if (n % 2 != 0)\
    \ {\n      prod *= n % 10;\n    }\n    n /= 10;\n  }\n  return prod;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpeo2mp960: /tmp/tmpeo2mp960.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpz9feeg90: /tmp/tmpz9feeg90.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n > 0) {\n        if(n\
    \ % 2 != 0) {\n            product *= n % 10;\n        }\n        n /= 10;\n \
    \   }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n  \
    \  assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpp7rc8itc: /tmp/tmpp7rc8itc.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 ==\
    \ 1) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpiwhi1flw: /tmp/tmpiwhi1flw.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpyta2dkq7: /tmp/tmpyta2dkq7.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n > 0) {\n        if(n\
    \ % 2 != 0) {\n            product *= n % 10;\n        }\n        n /= 10;\n \
    \   }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n  \
    \  assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpd7h1_ebc: /tmp/tmpd7h1_ebc.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long prod = 1;\n    while(n > 0) {\n        if(n %\
    \ 2 != 0) {\n            prod *= n % 10;\n        }\n        n /= 10;\n    }\n\
    \    return prod;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpjbtm2nkd: /tmp/tmpjbtm2nkd.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    int digit =\
    \ n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n    }\n    n /=\
    \ 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp7bgdr90k: /tmp/tmp7bgdr90k.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpgwit4ny_: /tmp/tmpgwit4ny_.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 ==\
    \ 1) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp19bq1vr7: /tmp/tmp19bq1vr7.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpu4b1m8uj: /tmp/tmpu4b1m8uj.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpcbgkj40p: /tmp/tmpcbgkj40p.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    int digit =\
    \ n % 10;\n    if (digit % 2 == 1) {\n      result *= digit;\n    }\n    n /=\
    \ 10;\n  }\n  return result;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpp_zz6bp0: /tmp/tmpp_zz6bp0.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    long digit\
    \ = n % 10;\n    if (digit % 2 == 1) {\n      product *= digit;\n    }\n    n\
    \ /= 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmplow7sg9i: /tmp/tmplow7sg9i.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpo90ngs68: /tmp/tmpo90ngs68.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long prod = 1;\n  while (n > 0) {\n    if (n % 2 == 1)\
    \ {\n      prod *= n % 10;\n    }\n    n /= 10;\n  }\n  return prod;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmphupbx32n: /tmp/tmphupbx32n.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    int digit =\
    \ n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n    }\n    n /=\
    \ 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp0db7ew92: /tmp/tmp0db7ew92.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpmxfdecj7: /tmp/tmpmxfdecj7.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp930n_pde: /tmp/tmp930n_pde.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long prod = 1;\n  while (n > 0) {\n    long digit = n\
    \ % 10;\n    if (digit % 2 != 0) {\n      prod *= digit;\n    }\n    n /= 10;\n\
    \  }\n  return prod;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp4tl5m_jx: /tmp/tmp4tl5m_jx.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    long digit\
    \ = n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n    }\n    n\
    \ /= 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpudnyt886: /tmp/tmpudnyt886.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    long digit\
    \ = n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n    }\n    n\
    \ /= 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp4uzyhywz: /tmp/tmp4uzyhywz.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpkav3di8y: /tmp/tmpkav3di8y.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpzfw_q151: /tmp/tmpzfw_q151.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp3g5hzphy: /tmp/tmp3g5hzphy.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long prod = 1;\n  while (n > 0) {\n    if (n % 2 == 1)\
    \ {\n      prod *= n % 10;\n    }\n    n /= 10;\n  }\n  return prod;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp9vwq2cdc: /tmp/tmp9vwq2cdc.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpfb5yjayd: /tmp/tmpfb5yjayd.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception

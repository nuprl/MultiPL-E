name: HumanEval_30_get_positive
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
  \ in the list.\n// >>> get_positive([-1, 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5,\
  \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nstd::vector<long>\
  \ get_positive(std::vector<long> l) {\n"
tests: "}\nint main() {\n    auto candidate = get_positive;\n    assert(candidate((std::vector<long>({(long)-1,\
  \ (long)-2, (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5,\
  \ (long)6})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
  \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10})))\
  \ == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3, (long)9, (long)123,\
  \ (long)1})));\n    assert(candidate((std::vector<long>({(long)-1, (long)-2})))\
  \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
  }\n"
completions: ["    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++)\
    \ {\n        if (l[i] > 0) {\n            res.push_back(l[i]);\n        }\n  \
    \  }\n    return res;", "    std::vector<long> result;\n    for (auto i : l) {\n\
    \        if (i > 0) {\n            result.push_back(i);\n        }\n    }\n  \
    \  return result;", "    std::vector<long> result;\n    for (int i = 0; i < l.size();\
    \ i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n     \
    \   }\n    }\n    return result;", "    std::vector<long> res;\n    for (int i\
    \ = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            res.push_back(l[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    for (int i =\
    \ 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    for (auto i :\
    \ l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n  \
    \  }\n    return result;", "    std::vector<long> result;\n    for (auto i : l)\
    \ {\n        if (i > 0) {\n            result.push_back(i);\n        }\n    }\n\
    \    return result;", "    std::vector<long> v;\n    for(int i=0;i<l.size();i++){\n\
    \        if(l[i]>0){\n            v.push_back(l[i]);\n        }\n    }\n    return\
    \ v;", "    std::vector<long> result;\n    for (int i = 0; i < l.size(); i++)\
    \ {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    for (long i =\
    \ 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> positive;\n   \
    \ for (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            positive.push_back(l[i]);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> result;\n   \
    \ for (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n\
    \        }\n    }\n    return result;", "    std::vector<long> positive;\n   \
    \ for (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            positive.push_back(l[i]);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> positive;\n \
    \   for (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n          \
    \  positive.push_back(l[i]);\n        }\n    }\n    return positive;", "    std::vector<long>\
    \ result;\n    for (long i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n\
    \            result.push_back(l[i]);\n        }\n    }\n    return result;", " \
    \   std::vector<long> result;\n    for (int i = 0; i < l.size(); i++) {\n    \
    \    if (l[i] > 0) {\n            result.push_back(l[i]);\n        }\n    }\n\
    \    return result;", "    std::vector<long> result;\n    for (int i = 0; i <\
    \ l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    for (int i =\
    \ 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    for (int i =\
    \ 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    for (auto i :\
    \ l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n  \
    \  }\n    return result;", "    std::vector<long> result;\n    for (int i = 0;\
    \ i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> positive;\n   \
    \ for (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            positive.push_back(l[i]);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> result;\n   \
    \ for (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    for (auto i :\
    \ l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n  \
    \  }\n    return result;", "    std::vector<long> result;\n    for (int i = 0;\
    \ i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            res.push_back(l[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    for (auto i :\
    \ l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n  \
    \  }\n    return result;", "    std::vector<long> res;\n    for (auto i : l) {\n\
    \        if (i > 0) {\n            res.push_back(i);\n        }\n    }\n    return\
    \ res;", "    std::vector<long> result;\n    for (auto i : l) {\n        if (i\
    \ > 0) {\n            result.push_back(i);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    for (auto i : l) {\n        if (i > 0) {\n \
    \           result.push_back(i);\n        }\n    }\n    return result;", "   \
    \ std::vector<long> v;\n    for(int i=0;i<l.size();i++){\n        if(l[i]>0){\n\
    \            v.push_back(l[i]);\n        }\n    }\n    return v;", "    std::vector<long>\
    \ res;\n    for (auto i : l) {\n        if (i > 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;", "    std::vector<long> v;\n    for(int i=0;i<l.size();i++){\n\
    \        if(l[i]>0){\n            v.push_back(l[i]);\n        }\n    }\n    return\
    \ v;", "    std::vector<long> result;\n    for (auto i : l) {\n        if (i >\
    \ 0) {\n            result.push_back(i);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    for (int i = 0; i < l.size(); i++) {\n     \
    \   if (l[i] > 0) {\n            result.push_back(l[i]);\n        }\n    }\n \
    \   return result;", "    std::vector<long> result;\n    for (long i = 0; i <\
    \ l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> v;\n    for(int\
    \ i=0;i<l.size();i++){\n        if(l[i]>0){\n            v.push_back(l[i]);\n\
    \        }\n    }\n    return v;", "    std::vector<long> result;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    for (auto i :\
    \ l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n  \
    \  }\n    return result;", "    std::vector<long> result;\n    for (auto i : l)\
    \ {\n        if (i > 0) {\n            result.push_back(i);\n        }\n    }\n\
    \    return result;", "    std::vector<long> result;\n    for (int i = 0; i <\
    \ l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            res.push_back(i);\n        }\n \
    \   }\n    return res;", "    std::vector<long> result;\n    for (auto i : l)\
    \ {\n        if (i > 0) {\n            result.push_back(i);\n        }\n    }\n\
    \    return result;", "    std::vector<long> result;\n    for (int i = 0; i <\
    \ l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (long\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "    std::vector<long> positive;\n    for (int i\
    \ = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            positive.push_back(l[i]);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> result;\n   \
    \ for (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> positive;\n    for\
    \ (long i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            positive.push_back(l[i]);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> result;\n   \
    \ for (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "  std::vector<long> result;\n  for (auto\
    \ i : l) {\n    if (i > 0) {\n      result.push_back(i);\n    }\n  }\n  return\
    \ result;", "    std::vector<long> result;\n    for (auto i : l) {\n        if\
    \ (i > 0) {\n            result.push_back(i);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    for (auto i : l) {\n        if (i > 0) {\n \
    \           result.push_back(i);\n        }\n    }\n    return result;", "   \
    \ std::vector<long> result;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  if (l[i] > 0) {\n            result.push_back(l[i]);\n        }\n    }\n  \
    \  return result;", "    std::vector<long> result;\n    for (int i = 0; i < l.size();\
    \ i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n     \
    \   }\n    }\n    return result;", "    std::vector<long> result;\n    for (long\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    for (int i =\
    \ 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    for (int i =\
    \ 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            res.push_back(i);\n        }\n \
    \   }\n    return res;", "    std::vector<long> result;\n    for (int i = 0; i\
    \ < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> positive;\n   \
    \ for (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            positive.push_back(l[i]);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> result;\n   \
    \ for (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    for (long i =\
    \ 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    for (auto i :\
    \ l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n  \
    \  }\n    return result;", "    std::vector<long> result;\n    for (auto i : l)\
    \ {\n        if (i > 0) {\n            result.push_back(i);\n        }\n    }\n\
    \    return result;", "    std::vector<long> result;\n    for (int i = 0; i <\
    \ l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    for (int i =\
    \ 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> positive;\n   \
    \ for (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            positive.push_back(l[i]);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> result;\n   \
    \ for (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> positive;\n   \
    \ for (long i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n           \
    \ positive.push_back(l[i]);\n        }\n    }\n    return positive;", "    std::vector<long>\
    \ result;\n    for (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n\
    \            result.push_back(l[i]);\n        }\n    }\n    return result;", " \
    \   std::vector<long> result;\n    for (long i = 0; i < l.size(); i++) {\n   \
    \     if (l[i] > 0) {\n            result.push_back(l[i]);\n        }\n    }\n\
    \    return result;", "    std::vector<long> result;\n    for (auto i : l) {\n\
    \        if (i > 0) {\n            result.push_back(i);\n        }\n    }\n  \
    \  return result;", "    std::vector<long> result;\n    for (long i = 0; i < l.size();\
    \ i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n     \
    \   }\n    }\n    return result;", "    std::vector<long> result;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    for (long i =\
    \ 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> v;\n    for(int\
    \ i=0;i<l.size();i++){\n        if(l[i]>0){\n            v.push_back(l[i]);\n\
    \        }\n    }\n    return v;", "    std::vector<long> result;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "    std::vector<long> res;\n    for (auto i : l)\
    \ {\n        if (i > 0) {\n            res.push_back(i);\n        }\n    }\n \
    \   return res;", "    std::vector<long> result;\n    for (int i = 0; i < l.size();\
    \ i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n     \
    \   }\n    }\n    return result;", "    std::vector<long> result;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "  std::vector<long> result;\n  for (long i = 0;\
    \ i < l.size(); i++) {\n    if (l[i] > 0) {\n      result.push_back(l[i]);\n \
    \   }\n  }\n  return result;", "    std::vector<long> result;\n    for (long i\
    \ = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> res;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            res.push_back(i);\n        }\n \
    \   }\n    return res;", "    std::vector<long> result;\n    for (auto i : l)\
    \ {\n        if (i > 0) {\n            result.push_back(i);\n        }\n    }\n\
    \    return result;", "    std::vector<long> result;\n    for (int i = 0; i <\
    \ l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> v;\n    for(int i=0;i<l.size();i++){\n\
    \        if(l[i]>0){\n            v.push_back(l[i]);\n        }\n    }\n    return\
    \ v;", "    std::vector<long> result;\n    for (long i = 0; i < l.size(); i++)\
    \ {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n        }\n\
    \    }\n    return result;", "  std::vector<long> result;\n  for (int i = 0; i\
    \ < l.size(); i++) {\n    if (l[i] > 0) {\n      result.push_back(l[i]);\n   \
    \ }\n  }\n  return result;", "    std::vector<long> result;\n    for (auto i :\
    \ l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n  \
    \  }\n    return result;", "    std::vector<long> result;\n    for (int i = 0;\
    \ i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> positive_numbers;\n\
    \    for (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n         \
    \   positive_numbers.push_back(l[i]);\n        }\n    }\n    return positive_numbers;",
  "    std::vector<long> result;\n    for (long i = 0; i < l.size(); i++) {\n    \
    \    if (l[i] > 0) {\n            result.push_back(l[i]);\n        }\n    }\n\
    \    return result;", "    std::vector<long> result;\n    for (int i = 0; i <\
    \ l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    for (auto i :\
    \ l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n  \
    \  }\n    return result;", "    std::vector<long> result;\n    for (long i = 0;\
    \ i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> positive;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            positive.push_back(l[i]);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> res;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            res.push_back(i);\n      \
    \  }\n    }\n    return res;", "    std::vector<long> result;\n    for (auto i\
    \ : l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "    std::vector<long> positive;\n    for (int i\
    \ = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            positive.push_back(l[i]);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> positive;\n \
    \   for (long i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n         \
    \   positive.push_back(l[i]);\n        }\n    }\n    return positive;", "    std::vector<long>\
    \ result;\n    for (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n\
    \            result.push_back(l[i]);\n        }\n    }\n    return result;", " \
    \   std::vector<long> result;\n    for (long i = 0; i < l.size(); i++) {\n   \
    \     if (l[i] > 0) {\n            result.push_back(l[i]);\n        }\n    }\n\
    \    return result;", "    std::vector<long> result;\n    for (long i = 0; i <\
    \ l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    for (int i =\
    \ 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> v;\n    for(int\
    \ i=0;i<l.size();i++){\n        if(l[i]>0){\n            v.push_back(l[i]);\n\
    \        }\n    }\n    return v;", "    std::vector<long> result;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    for (int i =\
    \ 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> result;\n    for (auto\
    \ i : l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    for (auto i :\
    \ l) {\n        if (i > 0) {\n            result.push_back(i);\n        }\n  \
    \  }\n    return result;", "    std::vector<long> result;\n    for (int i = 0;\
    \ i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (long i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto i : l) {\n        if (i > 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;", "    std::vector<long> positive;\n    for\
    \ (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            positive.push_back(l[i]);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> result;\n   \
    \ for (long i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n           \
    \ result.push_back(l[i]);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n\
    \            result.push_back(l[i]);\n        }\n    }\n    return result;", " \
    \   std::vector<long> result;\n    for (int i = 0; i < l.size(); i++) {\n    \
    \    if (l[i] > 0) {\n            result.push_back(l[i]);\n        }\n    }\n\
    \    return result;", "    std::vector<long> result;\n    for (auto i : l) {\n\
    \        if (i > 0) {\n            result.push_back(i);\n        }\n    }\n  \
    \  return result;", "    std::vector<long> result;\n    for (long i = 0; i < l.size();\
    \ i++) {\n        if (l[i] > 0) {\n            result.push_back(l[i]);\n     \
    \   }\n    }\n    return result;", "    std::vector<long> res;\n    for (int i\
    \ = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            res.push_back(l[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> v;\n    for(int i=0;i<l.size();i++){\n\
    \        if(l[i]>0){\n            v.push_back(l[i]);\n        }\n    }\n    return\
    \ v;", "    std::vector<long> result;\n    for (auto i : l) {\n        if (i >\
    \ 0) {\n            result.push_back(i);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    for (auto i : l) {\n        if (i > 0) {\n \
    \           result.push_back(i);\n        }\n    }\n    return result;", "   \
    \ std::vector<long> result;\n    for (auto i : l) {\n        if (i > 0) {\n  \
    \          result.push_back(i);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (int i = 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n\
    \            result.push_back(l[i]);\n        }\n    }\n    return result;", " \
    \   std::vector<long> positive;\n    for (long i = 0; i < l.size(); i++) {\n \
    \       if (l[i] > 0) {\n            positive.push_back(l[i]);\n        }\n  \
    \  }\n    return positive;"]
stop_tokens:
- "\n}"

language: cpp
name: HumanEval_26_remove_duplicates
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ num : numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpgh172y1n: /tmp/tmpgh172y1n.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ num : numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpgh172y1n: /tmp/tmpgh172y1n.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::set<long> s;\n    for (auto i : numbers)\
    \ {\n        if (s.find(i) == s.end()) {\n            s.insert(i);\n         \
    \   result.push_back(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpciy2l4ey: /tmp/tmpciy2l4ey.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> unique;\n    for (auto\
    \ number : numbers) {\n        if (unique.find(number) == unique.end()) {\n  \
    \          unique.insert(number);\n            result.push_back(number);\n   \
    \     }\n    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpef3kp3p9: /tmp/tmpef3kp3p9.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpccqkbbj6: /tmp/tmpccqkbbj6.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (int\
    \ i = 0; i < numbers.size(); i++) {\n        if (set.find(numbers[i]) == set.end())\
    \ {\n            set.insert(numbers[i]);\n            result.push_back(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpq5err14g: /tmp/tmpq5err14g.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  std::vector<long>\
    \ result;\n  std::unordered_set<long> seen;\n  for (long number : numbers) {\n\
    \    if (seen.find(number) == seen.end()) {\n      result.push_back(number);\n\
    \      seen.insert(number);\n    }\n  }\n  return result;\n}\nint main() {\n \
    \   auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp6xfavqcx: /tmp/tmp6xfavqcx.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> unique_numbers;\n \
    \   for (long number : numbers) {\n        if (unique_numbers.find(number) ==\
    \ unique_numbers.end()) {\n            unique_numbers.insert(number);\n      \
    \      result.push_back(number);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp5so6gsry: /tmp/tmp5so6gsry.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> s;\n    for (auto n\
    \ : numbers) {\n        if (s.find(n) == s.end()) {\n            s.insert(n);\n\
    \            result.push_back(n);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpo_8d004z: /tmp/tmpo_8d004z.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ num : numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpgh172y1n: /tmp/tmpgh172y1n.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpccqkbbj6: /tmp/tmpccqkbbj6.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpccqkbbj6: /tmp/tmpccqkbbj6.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (long\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    result.push_back(number);\n            set.insert(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpa8s8u9lv: /tmp/tmpa8s8u9lv.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ num : numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp73whruc0: /tmp/tmp73whruc0.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  std::vector<long>\
    \ result;\n  std::unordered_set<long> seen;\n  for (auto n : numbers) {\n    if\
    \ (seen.find(n) == seen.end()) {\n      result.push_back(n);\n      seen.insert(n);\n\
    \    }\n  }\n  return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmplxmillfx: /tmp/tmplxmillfx.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (long\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    result.push_back(number);\n            set.insert(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpa8s8u9lv: /tmp/tmpa8s8u9lv.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  std::vector<long>\
    \ result;\n  std::set<long> s;\n  for (auto n : numbers) {\n    if (s.find(n)\
    \ == s.end()) {\n      s.insert(n);\n      result.push_back(n);\n    }\n  }\n\
    \  return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpcqh71tfd: /tmp/tmpcqh71tfd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpccqkbbj6: /tmp/tmpccqkbbj6.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ n : numbers) {\n        if (set.find(n) == set.end()) {\n            result.push_back(n);\n\
    \            set.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpiu_svu7u: /tmp/tmpiu_svu7u.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpccqkbbj6: /tmp/tmpccqkbbj6.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> unique_numbers;\n \
    \   for (auto number : numbers) {\n        if (unique_numbers.find(number) ==\
    \ unique_numbers.end()) {\n            unique_numbers.insert(number);\n      \
    \      result.push_back(number);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpg40ilt4j: /tmp/tmpg40ilt4j.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  std::vector<long>\
    \ result;\n  std::unordered_set<long> seen;\n  for (long number : numbers) {\n\
    \    if (seen.find(number) == seen.end()) {\n      seen.insert(number);\n    \
    \  result.push_back(number);\n    }\n  }\n  return result;\n}\nint main() {\n\
    \    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmptltl4jhb: /tmp/tmptltl4jhb.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ &number : numbers) {\n        if (set.find(number) == set.end()) {\n       \
    \     set.insert(number);\n            result.push_back(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpyya4hem8: /tmp/tmpyya4hem8.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (long\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    result.push_back(number);\n            set.insert(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpa8s8u9lv: /tmp/tmpa8s8u9lv.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::set<long> s;\n    for (auto n : numbers)\
    \ {\n        if (s.find(n) == s.end()) {\n            s.insert(n);\n         \
    \   result.push_back(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmprhnfmm0d: /tmp/tmprhnfmm0d.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ i : numbers) {\n        if (set.find(i) == set.end()) {\n            result.push_back(i);\n\
    \            set.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp_koiw8kj: /tmp/tmp_koiw8kj.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (long\
    \ i = 0; i < numbers.size(); i++) {\n        if (set.find(numbers[i]) == set.end())\
    \ {\n            set.insert(numbers[i]);\n            result.push_back(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp6htlodda: /tmp/tmp6htlodda.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ n : numbers) {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpms1vltwb: /tmp/tmpms1vltwb.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (long\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    result.push_back(number);\n            set.insert(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpa8s8u9lv: /tmp/tmpa8s8u9lv.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ n : numbers) {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpms1vltwb: /tmp/tmpms1vltwb.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpccqkbbj6: /tmp/tmpccqkbbj6.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::set<long> set;\n    for (int i = 0; i <\
    \ numbers.size(); i++) {\n        if (set.find(numbers[i]) == set.end()) {\n \
    \           set.insert(numbers[i]);\n            result.push_back(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpedy1azzv: /tmp/tmpedy1azzv.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (int\
    \ i = 0; i < numbers.size(); i++) {\n        if (set.find(numbers[i]) == set.end())\
    \ {\n            set.insert(numbers[i]);\n            result.push_back(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpq5err14g: /tmp/tmpq5err14g.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ n : numbers) {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0m2ozc7j: /tmp/tmp0m2ozc7j.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822718
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpccqkbbj6: /tmp/tmpccqkbbj6.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ n : numbers) {\n        if (set.find(n) == set.end()) {\n            result.push_back(n);\n\
    \            set.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpiu_svu7u: /tmp/tmpiu_svu7u.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpccqkbbj6: /tmp/tmpccqkbbj6.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpccqkbbj6: /tmp/tmpccqkbbj6.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpccqkbbj6: /tmp/tmpccqkbbj6.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> unique_numbers;\n \
    \   for (auto number : numbers) {\n        if (unique_numbers.find(number) ==\
    \ unique_numbers.end()) {\n            unique_numbers.insert(number);\n      \
    \      result.push_back(number);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpg40ilt4j: /tmp/tmpg40ilt4j.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ n : numbers) {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpms1vltwb: /tmp/tmpms1vltwb.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto&\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpc2xrhrdv: /tmp/tmpc2xrhrdv.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822718
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpccqkbbj6: /tmp/tmpccqkbbj6.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  std::vector<long>\
    \ result;\n  std::unordered_set<long> seen;\n  for (long number : numbers) {\n\
    \    if (seen.find(number) == seen.end()) {\n      result.push_back(number);\n\
    \      seen.insert(number);\n    }\n  }\n  return result;\n}\nint main() {\n \
    \   auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp6xfavqcx: /tmp/tmp6xfavqcx.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (long\
    \ i = 0; i < numbers.size(); i++) {\n        if (set.find(numbers[i]) == set.end())\
    \ {\n            set.insert(numbers[i]);\n            result.push_back(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp6htlodda: /tmp/tmp6htlodda.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpccqkbbj6: /tmp/tmpccqkbbj6.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> unique_numbers;\n \
    \   for (auto number : numbers) {\n        if (unique_numbers.find(number) ==\
    \ unique_numbers.end()) {\n            unique_numbers.insert(number);\n      \
    \      result.push_back(number);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpg40ilt4j: /tmp/tmpg40ilt4j.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ n : numbers) {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpms1vltwb: /tmp/tmpms1vltwb.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ num : numbers) {\n        if (set.find(num) == set.end()) {\n            set.insert(num);\n\
    \            result.push_back(num);\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpm0jwo9zi: /tmp/tmpm0jwo9zi.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822718
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpccqkbbj6: /tmp/tmpccqkbbj6.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ n : numbers) {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpms1vltwb: /tmp/tmpms1vltwb.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpccqkbbj6: /tmp/tmpccqkbbj6.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ num : numbers) {\n        if (set.find(num) == set.end()) {\n            result.push_back(num);\n\
    \            set.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpcm_dqojs: /tmp/tmpcm_dqojs.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822718
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (long\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    result.push_back(number);\n            set.insert(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpa8s8u9lv: /tmp/tmpa8s8u9lv.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::set<long> s;\n    for (auto number : numbers)\
    \ {\n        if (s.find(number) == s.end()) {\n            s.insert(number);\n\
    \            result.push_back(number);\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpjl2r4vey: /tmp/tmpjl2r4vey.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822718
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpccqkbbj6: /tmp/tmpccqkbbj6.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ i : numbers) {\n        if (set.find(i) == set.end()) {\n            result.push_back(i);\n\
    \            set.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp_koiw8kj: /tmp/tmp_koiw8kj.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ n : numbers) {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpms1vltwb: /tmp/tmpms1vltwb.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ n : numbers) {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpms1vltwb: /tmp/tmpms1vltwb.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (long\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    result.push_back(number);\n            set.insert(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpa8s8u9lv: /tmp/tmpa8s8u9lv.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (long\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    result.push_back(number);\n            set.insert(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpa8s8u9lv: /tmp/tmpa8s8u9lv.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::set<long> s;\n    for (auto n : numbers)\
    \ {\n        if (s.find(n) == s.end()) {\n            s.insert(n);\n         \
    \   result.push_back(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmprhnfmm0d: /tmp/tmprhnfmm0d.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ i : numbers) {\n        if (set.find(i) == set.end()) {\n            set.insert(i);\n\
    \            result.push_back(i);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpf0e6rcr1: /tmp/tmpf0e6rcr1.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822718
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> unique;\n    for (auto\
    \ number : numbers) {\n        if (unique.find(number) == unique.end()) {\n  \
    \          unique.insert(number);\n            result.push_back(number);\n   \
    \     }\n    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpef3kp3p9: /tmp/tmpef3kp3p9.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  std::vector<long>\
    \ result;\n  std::unordered_set<long> seen;\n  for (auto number : numbers) {\n\
    \    if (seen.find(number) == seen.end()) {\n      result.push_back(number);\n\
    \      seen.insert(number);\n    }\n  }\n  return result;\n}\nint main() {\n \
    \   auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpid6u10gj: /tmp/tmpid6u10gj.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822718
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ num : numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpgh172y1n: /tmp/tmpgh172y1n.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> s;\n    for (auto i\
    \ : numbers) {\n        if (s.find(i) == s.end()) {\n            s.insert(i);\n\
    \            result.push_back(i);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpg1plzusy: /tmp/tmpg1plzusy.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822718
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> s;\n    for (auto i\
    \ : numbers) {\n        if (s.find(i) == s.end()) {\n            s.insert(i);\n\
    \            result.push_back(i);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpg1plzusy: /tmp/tmpg1plzusy.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822718
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (long\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    result.push_back(number);\n            set.insert(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpa8s8u9lv: /tmp/tmpa8s8u9lv.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpccqkbbj6: /tmp/tmpccqkbbj6.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::set<long> s;\n    for (auto i : numbers)\
    \ {\n        if (s.find(i) == s.end()) {\n            s.insert(i);\n         \
    \   result.push_back(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpciy2l4ey: /tmp/tmpciy2l4ey.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (long\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    result.push_back(number);\n            set.insert(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpa8s8u9lv: /tmp/tmpa8s8u9lv.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> s;\n    for (long n\
    \ : numbers) {\n        if (s.find(n) == s.end()) {\n            s.insert(n);\n\
    \            result.push_back(n);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpvk399uyj: /tmp/tmpvk399uyj.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822718
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (long\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    result.push_back(number);\n            set.insert(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpa8s8u9lv: /tmp/tmpa8s8u9lv.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ num : numbers) {\n        if (set.find(num) == set.end()) {\n            set.insert(num);\n\
    \            result.push_back(num);\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpm0jwo9zi: /tmp/tmpm0jwo9zi.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822718
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpccqkbbj6: /tmp/tmpccqkbbj6.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::set<long> set;\n    for (int i = 0; i <\
    \ numbers.size(); i++) {\n        if (set.find(numbers[i]) == set.end()) {\n \
    \           set.insert(numbers[i]);\n            result.push_back(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpedy1azzv: /tmp/tmpedy1azzv.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> s;\n    for (auto n\
    \ : numbers) {\n        if (s.find(n) == s.end()) {\n            s.insert(n);\n\
    \            result.push_back(n);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpo_8d004z: /tmp/tmpo_8d004z.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpccqkbbj6: /tmp/tmpccqkbbj6.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::map<long, int> map;\n    for (auto i :\
    \ numbers) {\n        if (map.find(i) == map.end()) {\n            map[i] = 1;\n\
    \        } else {\n            map[i]++;\n        }\n    }\n    for (auto i :\
    \ numbers) {\n        if (map[i] == 1) {\n            result.push_back(i);\n \
    \       }\n    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822718
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ n : numbers) {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpms1vltwb: /tmp/tmpms1vltwb.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpccqkbbj6: /tmp/tmpccqkbbj6.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ n : numbers) {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpms1vltwb: /tmp/tmpms1vltwb.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ num : numbers) {\n        if (set.find(num) == set.end()) {\n            result.push_back(num);\n\
    \            set.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpcm_dqojs: /tmp/tmpcm_dqojs.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822718
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ num : numbers) {\n        if (set.find(num) == set.end()) {\n            set.insert(num);\n\
    \            result.push_back(num);\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpm0jwo9zi: /tmp/tmpm0jwo9zi.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822718
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> unique;\n    for (auto\
    \ n : numbers) {\n        if (unique.find(n) == unique.end()) {\n            unique.insert(n);\n\
    \            result.push_back(n);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp8oyh0k_7: /tmp/tmp8oyh0k_7.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822719
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> s;\n    for (auto n\
    \ : numbers) {\n        if (s.find(n) == s.end()) {\n            s.insert(n);\n\
    \            result.push_back(n);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpo_8d004z: /tmp/tmpo_8d004z.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> s;\n    for (auto i\
    \ : numbers) {\n        if (s.find(i) == s.end()) {\n            s.insert(i);\n\
    \            result.push_back(i);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpg1plzusy: /tmp/tmpg1plzusy.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822718
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ n : numbers) {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpms1vltwb: /tmp/tmpms1vltwb.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (long\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    result.push_back(number);\n            set.insert(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpa8s8u9lv: /tmp/tmpa8s8u9lv.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  std::vector<long>\
    \ result;\n  std::unordered_set<long> seen;\n  for (auto n : numbers) {\n    if\
    \ (seen.find(n) == seen.end()) {\n      result.push_back(n);\n      seen.insert(n);\n\
    \    }\n  }\n  return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmplxmillfx: /tmp/tmplxmillfx.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpccqkbbj6: /tmp/tmpccqkbbj6.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpccqkbbj6: /tmp/tmpccqkbbj6.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  std::vector<long>\
    \ result;\n  std::unordered_set<long> seen;\n  for (auto n : numbers) {\n    if\
    \ (seen.find(n) == seen.end()) {\n      result.push_back(n);\n      seen.insert(n);\n\
    \    }\n  }\n  return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmplxmillfx: /tmp/tmplxmillfx.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (long\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    result.push_back(number);\n            set.insert(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpa8s8u9lv: /tmp/tmpa8s8u9lv.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpccqkbbj6: /tmp/tmpccqkbbj6.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ num : numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpgh172y1n: /tmp/tmpgh172y1n.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpccqkbbj6: /tmp/tmpccqkbbj6.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (long\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    result.push_back(number);\n            set.insert(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpa8s8u9lv: /tmp/tmpa8s8u9lv.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpccqkbbj6: /tmp/tmpccqkbbj6.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> s;\n    for (auto n\
    \ : numbers) {\n        if (s.find(n) == s.end()) {\n            s.insert(n);\n\
    \            result.push_back(n);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpo_8d004z: /tmp/tmpo_8d004z.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::set<long> s;\n    for (auto i : numbers)\
    \ {\n        if (s.find(i) == s.end()) {\n            s.insert(i);\n         \
    \   result.push_back(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpciy2l4ey: /tmp/tmpciy2l4ey.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ n : numbers) {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpms1vltwb: /tmp/tmpms1vltwb.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::sort(numbers.begin(), numbers.end());\n\
    \    for (int i = 0; i < numbers.size(); i++) {\n        if (i == 0 || numbers[i]\
    \ != numbers[i - 1]) {\n            result.push_back(numbers[i]);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmptmcx9c_f: /tmp/tmptmcx9c_f.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822718
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpofmp8yyd: /tmp/tmpofmp8yyd.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  std::vector<long>\
    \ result;\n  std::unordered_set<long> seen;\n  for (auto number : numbers) {\n\
    \    if (seen.find(number) == seen.end()) {\n      result.push_back(number);\n\
    \      seen.insert(number);\n    }\n  }\n  return result;\n}\nint main() {\n \
    \   auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpid6u10gj: /tmp/tmpid6u10gj.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822718
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpccqkbbj6: /tmp/tmpccqkbbj6.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::set<long> set;\n    for (int i = 0; i <\
    \ numbers.size(); i++) {\n        if (set.find(numbers[i]) == set.end()) {\n \
    \           set.insert(numbers[i]);\n            result.push_back(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpedy1azzv: /tmp/tmpedy1azzv.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (long\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    result.push_back(number);\n            set.insert(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpa8s8u9lv: /tmp/tmpa8s8u9lv.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp2hq2ylxr: /tmp/tmp2hq2ylxr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> s;\n    for (auto n\
    \ : numbers) {\n        if (s.find(n) == s.end()) {\n            s.insert(n);\n\
    \            result.push_back(n);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpo_8d004z: /tmp/tmpo_8d004z.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpccqkbbj6: /tmp/tmpccqkbbj6.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ i : numbers) {\n        if (set.find(i) == set.end()) {\n            result.push_back(i);\n\
    \            set.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp_koiw8kj: /tmp/tmp_koiw8kj.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1,\
    \ 3, 4]\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n  \
    \  std::vector<long> result;\n    std::unordered_set<long> set;\n    for (long\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    result.push_back(number);\n            set.insert(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpa8s8u9lv: /tmp/tmpa8s8u9lv.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1659822717

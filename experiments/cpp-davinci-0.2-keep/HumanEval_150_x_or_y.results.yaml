name: HumanEval_150_x_or_y
language: cpp
results:
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n\tlong result\
    \ = 0;\n\t// Write your code here\n\t// To print results to the standard output\
    \ you can use printf()\n\t// Example: printf(\"%s\", \"Hello world!\");\n\tif(n==2)\n\
    \t\tresult = x;\n\telse if(n%2==0)\n\t\tresult = y;\n\telse{\n\t\tfor(int i=3;i<=sqrt(n);i+=2){\n\
    \t\t\tif(n%i==0){\n\t\t\t\tresult = y;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(result==0)\n\
    \t\t\tresult = x;\n\t}\n\treturn result;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpkd_0lbsi: /tmp/tmpkd_0lbsi.cpp:39: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 2)\
    \ return x;\n    if (n == 3) return y;\n    if (n == 5) return x;\n    if (n ==\
    \ 7) return y;\n    if (n == 11) return x;\n    if (n == 13) return y;\n    if\
    \ (n == 17) return x;\n    if (n == 19) return y;\n    if (n == 23) return x;\n\
    \    if (n == 29) return y;\n    if (n == 31) return x;\n    if (n == 37) return\
    \ y;\n    if (n == 41) return x;\n    if (n == 43) return y;\n    if (n == 47)\
    \ return x;\n    if (n == 53) return y;\n    if (n == 59) return x;\n    if (n\
    \ == 61) return y;\n    if (n == 67) return x;\n    if (n == 71) return y;\n \
    \   if (n == 73) return x;\n    if (n == 79) return y;\n    if (n == 83) return\
    \ x;\n    if (n == 89) return y;\n    if (n == 97) return x;\n    if (n == 101)\
    \ return y;\n    if (n == 103) return x;\n    if (n == 107) return y;\n    if\
    \ (n == 109) return x;\n    if (n == 113) return y;\n    if (n == 127) return\
    \ x;\n    if (n == 131) return y;\n    if (n == 137) return x;\n    if (n == 139)\
    \ return y;\n    if (n == 149) return x;\n    if (n == 151) return y;\n    if\
    \ (n == 157) return x;\n    if (n == 163) return y;\n    if (n == 167) return\
    \ x;\n    if (n == 173) return y;\n    if (n == 179) return x;\n    if (n == 181)\
    \ return y;\n    if (n == 191) return x;\n    if (n == 193) return y;\n    if\
    \ (n == 197) return x;\n    if (n == 199) return y;\n    if (n ==\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg0gyq7nn.cpp: In function \u2018long int x_or_y(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpg0gyq7nn.cpp:56:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   56 | }\n      | ^\n/tmp/tmpg0gyq7nn.cpp:55:13:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n   55 |     if (n\
    \ ==\n      |        ~    ^\n      |             )\n   56 | }\n      | ~     \
    \       \n/tmp/tmpg0gyq7nn.cpp:56:1: error: expected primary-expression before\
    \ \u2018}\u2019 token\n   56 | }\n      | ^\n/tmp/tmpg0gyq7nn.cpp:56:1: warning:\
    \ control reaches end of non-void function [-Wreturn-type]\n   56 | }\n      |\
    \ ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 2\
    \ || n == 3) {\n        return x;\n    }\n    for (long i = 2; i < n; i++) {\n\
    \        if (n % i == 0) {\n            return y;\n        }\n    }\n    return\
    \ x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp5xujd2o6: /tmp/tmp5xujd2o6.cpp:29: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    // TODO: Write\
    \ your code here\n    if(n<=1) return y;\n    for(int i=2;i<=sqrt(n);i++){\n \
    \       if(n%i==0) return y;\n    }\n    return x;\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if(n < 2)\n\
    \        return y;\n    for(long i = 2; i <= sqrt(n); i++)\n        if(n % i ==\
    \ 0)\n            return y;\n    return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 1)\
    \ {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0)\
    \ {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n % 2\
    \ == 0) {\n        return y;\n    } else {\n        return x;\n    }\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpufboqzf9: /tmp/tmpufboqzf9.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 1)\
    \ {\n        return x;\n    }\n    if (n == 2) {\n        return y;\n    }\n \
    \   for (long i = 2; i < n; i++) {\n        if (n % i == 0) {\n            return\
    \ y;\n        }\n    }\n    return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp5f3hewx1: /tmp/tmp5f3hewx1.cpp:32: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  }\n  else {\n    return x;\n  }\n}\nint main() {\n  \
    \  auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpno9tlacv: /tmp/tmpno9tlacv.cpp:19: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n\tif (n == 2 ||\
    \ n == 3 || n == 5 || n == 7)\n\t\treturn x;\n\telse\n\t\treturn y;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpu3913_6u: /tmp/tmpu3913_6u.cpp:19: int main(): Assertion `candidate((1259),\
    \ (3), (52)) == (3)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 1)\
    \ {\n        return x;\n    }\n    if (n == 2) {\n        return y;\n    }\n \
    \   for (long i = 2; i < n; i++) {\n        if (n % i == 0) {\n            return\
    \ y;\n        }\n    }\n    return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmphdofjr4f: /tmp/tmphdofjr4f.cpp:32: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n\tif (n < 2) {\n\
    \t\treturn y;\n\t}\n\tfor (long i = 2; i < n; i++) {\n\t\tif (n % i == 0) {\n\t\
    \t\treturn y;\n\t\t}\n\t}\n\treturn x;\n}\nint main() {\n    auto candidate =\
    \ x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if(n == 1)\n\
    \        return y;\n    for(int i = 2; i <= sqrt(n); i++)\n        if(n % i ==\
    \ 0)\n            return y;\n    return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n % 2\
    \ == 0) {\n        return y;\n    } else {\n        return x;\n    }\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpjmcfjmjm: /tmp/tmpjmcfjmjm.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n < 2)\
    \ return y;\n    if (n == 2) return x;\n    if (n % 2 == 0) return y;\n    for\
    \ (long i = 3; i <= sqrt(n); i += 2) {\n        if (n % i == 0) return y;\n  \
    \  }\n    return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 1)\
    \ return x;\n  if (n == 2) return y;\n  if (n % 2 == 0) return x_or_y(n / 2, x,\
    \ y);\n  return x_or_y(n / 2, x ^ y, y);\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp9ogwehp_: /tmp/tmp9ogwehp_.cpp:17: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n % 2\
    \ == 0) {\n        return y;\n    } else {\n        return x;\n    }\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpyvezz1h4: /tmp/tmpyvezz1h4.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpu704ls3e: /tmp/tmpu704ls3e.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  }\n  return x;\n}\nint main() {\n    auto candidate =\
    \ x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmplcss4osq: /tmp/tmplcss4osq.cpp:17: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 2)\
    \ {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n  for (long\
    \ i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return y;\n    }\n\
    \  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpqx7g2_8u: /tmp/tmpqx7g2_8u.cpp:32: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 1)\
    \ return y;\n    if (n == 2) return x;\n    if (n % 2 == 0) return y;\n    for\
    \ (long i = 3; i <= sqrt(n); i += 2) {\n        if (n % i == 0) return y;\n  \
    \  }\n    return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n < 2) return\
    \ y;\n  if (n == 2) return x;\n  for (long i = 2; i < n; i++) {\n    if (n % i\
    \ == 0) return y;\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 2\
    \ || n == 3) {\n        return x;\n    }\n    for (long i = 2; i < n; i++) {\n\
    \        if (n % i == 0) {\n            return y;\n        }\n    }\n    return\
    \ x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmptcqw10az: /tmp/tmptcqw10az.cpp:29: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 1)\
    \ return y;\n    if (n == 2) return x;\n    if (n % 2 == 0) return y;\n    for\
    \ (long i = 3; i <= sqrt(n); i += 2) {\n        if (n % i == 0) return y;\n  \
    \  }\n    return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n % 2\
    \ == 0) {\n        return y;\n    } else {\n        return x;\n    }\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpqxsvs5pg: /tmp/tmpqxsvs5pg.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 2)\
    \ {\n        return x;\n    }\n    if (n % 2 == 0) {\n        return y;\n    }\n\
    \    for (long i = 3; i < n; i += 2) {\n        if (n % i == 0) {\n          \
    \  return y;\n        }\n    }\n    return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp565eb7uh: /tmp/tmp565eb7uh.cpp:32: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 1)\
    \ return y;\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0) return y;\n\
    \  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 1)\
    \ {\n    return x;\n  }\n  if (n == 2) {\n    return y;\n  }\n  if (n % 2 == 0)\
    \ {\n    return x_or_y(n / 2, x, y);\n  }\n  return x_or_y(n - 1, x, y);\n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmptu30lf7a: /tmp/tmptu30lf7a.cpp:22: int main(): Assertion `candidate((7),\
    \ (34), (12)) == (34)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    // TODO: Write\
    \ your code here\n    if(n<=1)\n        return y;\n    for(int i=2;i<=sqrt(n);i++){\n\
    \        if(n%i==0)\n            return y;\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 1)\
    \ return y;\n  if (n % 2 == 0) return x_or_y(n/2, x, y);\n  return x_or_y(n-1,\
    \ x, y);\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpstmercto: /tmp/tmpstmercto.cpp:15: int main(): Assertion `candidate((7),\
    \ (34), (12)) == (34)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 1)\n\
    \        return y;\n    for (long i = 2; i < n; i++) {\n        if (n % i == 0)\n\
    \            return y;\n    }\n    return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 1)\
    \ {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0)\
    \ {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    long result\
    \ = 0;\n    if (n % 2 == 0) {\n        result = y;\n    } else {\n        result\
    \ = x;\n    }\n    return result;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp7aa9mcze: /tmp/tmp7aa9mcze.cpp:20: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 1)\
    \ {\n    return y;\n  }\n  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0)\
    \ {\n    return y;\n  }\n  for (long i = 3; i <= sqrt(n); i += 2) {\n    if (n\
    \ % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n   \
    \ auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  // TODO: implement\
    \ this function\n  if(n==1)\n    return y;\n  for(int i=2;i<=n/2;i++)\n  {\n \
    \   if(n%i==0)\n      return y;\n  }\n  return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmplnm08z2f: /tmp/tmplnm08z2f.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n < 2) return\
    \ y;\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0) return y;\n  }\n \
    \ return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 1)\
    \ {\n        return y;\n    }\n    for (long i = 2; i < n; i++) {\n        if\
    \ (n % i == 0) {\n            return y;\n        }\n    }\n    return x;\n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 1)\
    \ {\n        return y;\n    }\n    for (long i = 2; i <= n / 2; i++) {\n     \
    \   if (n % i == 0) {\n            return y;\n        }\n    }\n    return x;\n\
    }\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34),\
    \ (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n\tif (n < 2) {\n\
    \t\treturn y;\n\t}\n\tfor (long i = 2; i < n; i++) {\n\t\tif (n % i == 0) {\n\t\
    \t\treturn y;\n\t\t}\n\t}\n\treturn x;\n}\nint main() {\n    auto candidate =\
    \ x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 1)\
    \ return y;\n    if (n == 2) return x;\n    if (n % 2 == 0) return y;\n    for\
    \ (long i = 3; i * i <= n; i += 2) {\n        if (n % i == 0) return y;\n    }\n\
    \    return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if(n == 1)\n\
    \        return y;\n    for(int i = 2; i < n; i++)\n        if(n % i == 0)\n \
    \           return y;\n    return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  // TODO: implement\
    \ this function\n  if(n<2)\n    return y;\n  for(int i=2;i<=sqrt(n);i++)\n  {\n\
    \    if(n%i==0)\n      return y;\n  }\n  return x;\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 2)\
    \ {\n        return x;\n    }\n    if (n % 2 == 0) {\n        return y;\n    }\n\
    \    for (long i = 3; i < n; i += 2) {\n        if (n % i == 0) {\n          \
    \  return y;\n        }\n    }\n    return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp0st68eof: /tmp/tmp0st68eof.cpp:32: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n\tif (n == 2 ||\
    \ n == 3 || n == 5 || n == 7)\n\t\treturn x;\n\telse if (n == 4 || n == 6 || n\
    \ == 8 || n == 9)\n\t\treturn y;\n\telse\n\t\treturn 0;\n}\nint main() {\n   \
    \ auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpb357qpo2: /tmp/tmpb357qpo2.cpp:19: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  // TODO: implement\
    \ this function\n  if(n==2)\n    return x;\n  if(n%2==0)\n    return y;\n  for(int\
    \ i=3;i<=sqrt(n);i+=2)\n  {\n    if(n%i==0)\n      return y;\n  }\n  return x;\n\
    }\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34),\
    \ (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp1cw60zv6: /tmp/tmp1cw60zv6.cpp:31: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    // TODO: Implement\
    \ this function\n    // Hint: You can use the modulo operator (%) to check if\
    \ a number is divisible by another number.\n    // For example, if n % 2 == 0,\
    \ then n is divisible by 2.\n    // You can also use the sqrt function to check\
    \ if a number is a prime number.\n    // For example, if sqrt(n) == (int)sqrt(n),\
    \ then n is a prime number.\n    // You can use the pow function to compute powers\
    \ of a number.\n    // For example, pow(2, 3) == 8.\n    // You can use the abs\
    \ function to compute the absolute value of a number.\n    // For example, abs(-3)\
    \ == 3.\n    // You can use the floor function to round a number down to the nearest\
    \ integer.\n    // For example, floor(3.5) == 3.\n    // You can use the ceil\
    \ function to round a number up to the nearest integer.\n    // For example, ceil(3.5)\
    \ == 4.\n    // You can use the round function to round a number to the nearest\
    \ integer.\n    // For example, round(3.5) == 4.\n    // You can use the fmod\
    \ function to compute the remainder of a division.\n    // For example, fmod(3.5,\
    \ 2) == 1.5.\n    // You can use the log function to compute the natural logarithm\
    \ of a number.\n    // For example, log(2) == 0.693147180559945.\n    // You can\
    \ use the exp function to compute the exponential of a number.\n    // For example,\
    \ exp(2) == 7.38905609893065.\n    // You can use the sin function to compute\
    \ the sine of a number.\n    // For example, sin(2) == 0.909297426825682.\n  \
    \  // You can use the cos function to compute the cosine of a number.\n    //\
    \ For example, cos(2) == -0.416146836547142.\n    // You can use the tan function\
    \ to compute the tangent of a number.\n    // For example, tan(2) == -2.185039863261519.\n\
    \    // You can use the asin\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmppfgtk6wk: /tmp/tmppfgtk6wk.cpp:40: int main(): Assertion `candidate((7),\
    \ (34), (12)) == (34)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 1)\
    \ {\n        return y;\n    }\n    for (long i = 2; i <= n / 2; i++) {\n     \
    \   if (n % i == 0) {\n            return y;\n        }\n    }\n    return x;\n\
    }\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34),\
    \ (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 1)\
    \ {\n        return y;\n    }\n    for (long i = 2; i < n; i++) {\n        if\
    \ (n % i == 0) {\n            return y;\n        }\n    }\n    return x;\n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 2)\
    \ {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if (n % 2 == 0)\
    \ {\n    return x_or_y(n / 2, x, y);\n  }\n  if (n % 3 == 0) {\n    return x_or_y(n\
    \ / 3, x, y);\n  }\n  return x_or_y(n - 1, x, y);\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp826khshm: /tmp/tmp826khshm.cpp:25: int main(): Assertion `candidate((7),\
    \ (34), (12)) == (34)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 1)\n\
    \        return y;\n    for (long i = 2; i < n; i++) {\n        if (n % i == 0)\n\
    \            return y;\n    }\n    return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n\tif (n <= 1)\n\
    \t\treturn y;\n\tfor (long i = 2; i <= sqrt(n); i++) {\n\t\tif (n % i == 0)\n\t\
    \t\treturn y;\n\t}\n\treturn x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpor9cc3kz: /tmp/tmpor9cc3kz.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n\tif (n % 2 ==\
    \ 0) {\n\t\treturn y;\n\t}\n\telse {\n\t\treturn x;\n\t}\n}\nint main() {\n  \
    \  auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmppf3pq2k3: /tmp/tmppf3pq2k3.cpp:19: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n % 2\
    \ == 0) {\n        return y;\n    } else {\n        return x;\n    }\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp_6ycap1j: /tmp/tmp_6ycap1j.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n % 2\
    \ == 0) {\n        return y;\n    }\n    else {\n        return x;\n    }\n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp3w1pz5nh: /tmp/tmp3w1pz5nh.cpp:19: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 2)\
    \ {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n  for (long\
    \ i = 3; i < n; i += 2) {\n    if (n % i == 0) {\n      return y;\n    }\n  }\n\
    \  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpdej26gqv: /tmp/tmpdej26gqv.cpp:32: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  }\n  return x;\n}\nint main() {\n    auto candidate =\
    \ x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp5v6czovj: /tmp/tmp5v6czovj.cpp:17: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 1)\
    \ {\n        return y;\n    }\n    for (long i = 2; i < n; i++) {\n        if\
    \ (n % i == 0) {\n            return y;\n        }\n    }\n    return x;\n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  // TODO: implement\
    \ this function\n  if(n == 1)\n    return y;\n  if(n == 2)\n    return x;\n  for(int\
    \ i = 2; i <= sqrt(n); i++)\n  {\n    if(n % i == 0)\n      return y;\n  }\n \
    \ return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp9j9leumg: /tmp/tmp9j9leumg.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if(n == 1)\n\
    \        return y;\n    for(int i = 2; i < n; i++)\n        if(n % i == 0)\n \
    \           return y;\n    return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  // TODO: implement\
    \ this function\n  if(n%2==0)\n  {\n    return y;\n  }\n  else\n  {\n    return\
    \ x;\n  }\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp0q3ccmy_: /tmp/tmp0q3ccmy_.cpp:22: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 2)\
    \ return x;\n    if (n % 2 == 0) return y;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2) {\n        if (n % i == 0) return y;\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpa1k4wsr7: /tmp/tmpa1k4wsr7.cpp:26: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmplj0rxn4p: /tmp/tmplj0rxn4p.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp4r8c1zav: /tmp/tmp4r8c1zav.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpopos8oqh: /tmp/tmpopos8oqh.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 1)\
    \ return y;\n  if (n == 2) return x;\n  if (n % 2 == 0) return y;\n  for (long\
    \ i = 3; i < n; i += 2) {\n    if (n % i == 0) return y;\n  }\n  return x;\n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpqd584awa: /tmp/tmpqd584awa.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 1)\
    \ return y;\n    if (n == 2) return x;\n    if (n % 2 == 0) return y;\n    for\
    \ (long i = 3; i < n; i += 2) {\n        if (n % i == 0) return y;\n    }\n  \
    \  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 1)\
    \ {\n        return y;\n    }\n    for (long i = 2; i < n; i++) {\n        if\
    \ (n % i == 0) {\n            return y;\n        }\n    }\n    return x;\n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 2)\
    \ {\n        return x;\n    }\n    if (n % 2 == 0) {\n        return y;\n    }\n\
    \    for (long i = 3; i <= sqrt(n); i += 2) {\n        if (n % i == 0) {\n   \
    \         return y;\n        }\n    }\n    return x;\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp7pufhqrj: /tmp/tmp7pufhqrj.cpp:32: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 2)\
    \ {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n  for (long\
    \ i = 3; i < n; i += 2) {\n    if (n % i == 0) {\n      return y;\n    }\n  }\n\
    \  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp6oih8s25: /tmp/tmp6oih8s25.cpp:32: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 1)\
    \ return x;\n  if (n == 2) return y;\n  if (n % 2 == 0) return x_or_y(n/2, x,\
    \ y);\n  return x_or_y(n-1, x, y);\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpg3w08lex: /tmp/tmpg3w08lex.cpp:16: int main(): Assertion `candidate((7),\
    \ (34), (12)) == (34)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 1)\
    \ {\n        return y;\n    }\n    if (n == 2) {\n        return x;\n    }\n \
    \   if (n % 2 == 0) {\n        return y;\n    }\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2) {\n        if (n % i == 0) {\n            return y;\n        }\n   \
    \ }\n    return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 1)\
    \ {\n    return y;\n  }\n  if (n == 2) {\n    return x;\n  }\n  for (long i =\
    \ 2; i < n; i++) {\n    if (n % i == 0) {\n      return y;\n    }\n  }\n  return\
    \ x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 2)\
    \ {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if (n == 5) {\n\
    \    return x;\n  }\n  if (n == 7) {\n    return y;\n  }\n  if (n == 11) {\n \
    \   return x;\n  }\n  if (n == 13) {\n    return y;\n  }\n  if (n == 17) {\n \
    \   return x;\n  }\n  if (n == 19) {\n    return y;\n  }\n  if (n == 23) {\n \
    \   return x;\n  }\n  if (n == 29) {\n    return y;\n  }\n  if (n == 31) {\n \
    \   return x;\n  }\n  if (n == 37) {\n    return y;\n  }\n  if (n == 41) {\n \
    \   return x;\n  }\n  if (n == 43) {\n    return y;\n  }\n  if (n == 47) {\n \
    \   return x;\n  }\n  if (n == 53) {\n    return y;\n  }\n  if (n == 59) {\n \
    \   return x;\n  }\n  if (n == 61) {\n    return y;\n  }\n  if (n == 67) {\n \
    \   return x;\n  }\n  if (n == 71) {\n    return y;\n  }\n  if (n == 73) {\n \
    \   return x;\n  }\n  if (n == 79) {\n    return y;\n  }\n  if (n == 83) {\n \
    \   return x;\n  }\n  if (n == 89) {\n    return y;\n  }\n  if (n == 97) {\n \
    \   return x;\n  }\n  if (n == 101) {\n    return y;\n  }\n  if (n == 103) {\n\
    \    return x;\n  }\n  if (n == 107) {\n    return y;\n  }\n  if (n == 109) {\n\
    \    return x;\n  }\n  if (n == 113) {\n    return y;\n  }\n \n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp9_shxaiw: /tmp/tmp9_shxaiw.cpp:103: int main(): Assertion `candidate((7),\
    \ (34), (12)) == (34)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 1)\n\
    \    return y;\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0)\n      return\
    \ y;\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n\tif (n == 2)\n\
    \t\treturn x;\n\tif (n % 2 == 0)\n\t\treturn y;\n\tfor (long i = 3; i <= sqrt(n);\
    \ i += 2) {\n\t\tif (n % i == 0)\n\t\t\treturn y;\n\t}\n\treturn x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpkqxe7hb1: /tmp/tmpkqxe7hb1.cpp:29: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 1)\n\
    \        return y;\n    for (long i = 2; i < n; i++) {\n        if (n % i == 0)\n\
    \            return y;\n    }\n    return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  // TODO: Implement\
    \ this function\n  long i;\n  for(i=2;i<n;i++)\n  {\n    if(n%i==0)\n    {\n \
    \     return y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmppr8p2v_e: /tmp/tmppr8p2v_e.cpp:30: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n < 2)\
    \ return y;\n    for (long i = 2; i <= sqrt(n); i++) {\n        if (n % i == 0)\
    \ return y;\n    }\n    return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 1)\
    \ {\n    return y;\n  }\n  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0)\
    \ {\n    return y;\n  }\n  for (long i = 3; i * i <= n; i += 2) {\n    if (n %\
    \ i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 2 ||\
    \ n == 3) {\n    return x;\n  }\n  for (long i = 2; i < n; i++) {\n    if (n %\
    \ i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmplvzaab0m: /tmp/tmplvzaab0m.cpp:29: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 2)\
    \ {\n        return x;\n    }\n    if (n % 2 == 0) {\n        return y;\n    }\n\
    \    for (long i = 3; i < n; i += 2) {\n        if (n % i == 0) {\n          \
    \  return y;\n        }\n    }\n    return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpio3g3btb: /tmp/tmpio3g3btb.cpp:32: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 2)\
    \ return x;\n    if (n % 2 == 0) return y;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2) {\n        if (n % i == 0) return y;\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpn601nezq: /tmp/tmpn601nezq.cpp:26: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 2)\
    \ {\n        return x;\n    }\n    if (n % 2 == 0) {\n        return y;\n    }\n\
    \    for (long i = 3; i * i <= n; i += 2) {\n        if (n % i == 0) {\n     \
    \       return y;\n        }\n    }\n    return x;\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp0u224qr_: /tmp/tmp0u224qr_.cpp:32: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 2 ||\
    \ n == 3) {\n    return x;\n  }\n  if (n == 1 || n % 2 == 0 || n % 3 == 0) {\n\
    \    return y;\n  }\n  for (long i = 5; i * i <= n; i += 6) {\n    if (n % i ==\
    \ 0 || n % (i + 2) == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 2)\
    \ {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n  for (long\
    \ i = 3; i < n; i += 2) {\n    if (n % i == 0) {\n      return y;\n    }\n  }\n\
    \  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpjsergjnm: /tmp/tmpjsergjnm.cpp:32: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 1)\
    \ return y;\n  if (n == 2) return x;\n  if (n % 2 == 0) return y;\n  for (long\
    \ i = 3; i <= sqrt(n); i += 2) {\n    if (n % i == 0) return y;\n  }\n  return\
    \ x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 1)\
    \ return y;\n  if (n == 2) return x;\n  if (n % 2 == 0) return y;\n  for (long\
    \ i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) return y;\n  }\n  return x;\n\
    }\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34),\
    \ (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 1)\
    \ {\n        return y;\n    }\n    for (long i = 2; i < n; i++) {\n        if\
    \ (n % i == 0) {\n            return y;\n        }\n    }\n    return x;\n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpdrjd0pgl: /tmp/tmpdrjd0pgl.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpjo0uhioq: /tmp/tmpjo0uhioq.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 1)\
    \ {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0)\
    \ {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n % 2\
    \ == 0) {\n        return y;\n    } else {\n        return x;\n    }\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpuckjo160: /tmp/tmpuckjo160.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n < 2)\n\
    \    return y;\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0)\n      return\
    \ y;\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n % 2\
    \ == 0) {\n        return y;\n    } else {\n        return x;\n    }\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpnl0rvo9v: /tmp/tmpnl0rvo9v.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpplb7f7v5: /tmp/tmpplb7f7v5.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpgjrhofhj: /tmp/tmpgjrhofhj.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp99nhgnm7: /tmp/tmp99nhgnm7.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 2)\
    \ {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if (n % 2 == 0)\
    \ {\n    return x;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n  long sqrtn\
    \ = sqrt(n);\n  for (long i = 5; i <= sqrtn; i += 6) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    if (n % (i + 2) == 0) {\n      return y;\n    }\n\
    \  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpsbbv9puo: /tmp/tmpsbbv9puo.cpp:36: int main(): Assertion `candidate((3),\
    \ (33), (5212)) == (33)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 1)\
    \ return y;\n  if (n == 2) return x;\n  if (n % 2 == 0) return y;\n  for (long\
    \ i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) return y;\n  }\n  return x;\n\
    }\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34),\
    \ (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n % 2\
    \ == 0) {\n        return y;\n    }\n    else {\n        return x;\n    }\n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp7o4y81je: /tmp/tmp7o4y81je.cpp:19: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 2)\
    \ return x;\n    if (n == 3) return y;\n    if (n % 2 == 0) return x;\n    if\
    \ (n % 3 == 0) return y;\n    long sqrtn = sqrt(n) + 1;\n    for (long i = 5;\
    \ i <= sqrtn; i += 6) {\n        if (n % i == 0) return y;\n        if (n % (i\
    \ + 2) == 0) return y;\n    }\n    return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpdb1v0cn8: /tmp/tmpdb1v0cn8.cpp:24: int main(): Assertion `candidate((3),\
    \ (33), (5212)) == (33)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 1)\
    \ {\n        return y;\n    }\n    for (long i = 2; i < n; i++) {\n        if\
    \ (n % i == 0) {\n            return y;\n        }\n    }\n    return x;\n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 1)\
    \ {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0)\
    \ {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n % 2\
    \ == 0) {\n        return y;\n    }\n    return x;\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpf9wyc9rb: /tmp/tmpf9wyc9rb.cpp:17: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if(n == 1)\n\
    \        return y;\n    for(int i = 2; i <= sqrt(n); i++)\n        if(n % i ==\
    \ 0)\n            return y;\n    return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 1)\
    \ {\n        return y;\n    }\n    for (long i = 2; i < n; i++) {\n        if\
    \ (n % i == 0) {\n            return y;\n        }\n    }\n    return x;\n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  }\n  return x;\n}\nint main() {\n    auto candidate =\
    \ x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp3xtwbuu4: /tmp/tmp3xtwbuu4.cpp:17: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpnxqsm9je: /tmp/tmpnxqsm9je.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n % 2\
    \ == 0) {\n        return y;\n    }\n    return x;\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp9c35enhv: /tmp/tmp9c35enhv.cpp:17: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  // TODO: Implement\
    \ this function\n  if(n==1)\n    return y;\n  for(int i=2;i<=n/2;i++)\n  {\n \
    \   if(n%i==0)\n      return y;\n  }\n  return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  return n % 2\
    \ == 0 ? y : x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpwd5ejh__: /tmp/tmpwd5ejh__.cpp:14: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n % 2\
    \ == 0) {\n        return y;\n    } else {\n        return x;\n    }\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp05hdtx54: /tmp/tmp05hdtx54.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n\tif(n == 2 ||\
    \ n == 3 || n == 5 || n == 7)\n\t\treturn x;\n\telse\n\t\treturn y;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpy3iwn_1f: /tmp/tmpy3iwn_1f.cpp:19: int main(): Assertion `candidate((1259),\
    \ (3), (52)) == (3)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n < 2) return\
    \ y;\n  if (n == 2) return x;\n  if (n % 2 == 0) return y;\n  for (long i = 3;\
    \ i * i <= n; i += 2)\n    if (n % i == 0) return y;\n  return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  }\n  return x;\n}\nint main() {\n    auto candidate =\
    \ x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp781zd1ht: /tmp/tmp781zd1ht.cpp:17: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 1)\
    \ {\n        return y;\n    }\n    for (long i = 2; i < n; i++) {\n        if\
    \ (n % i == 0) {\n            return y;\n        }\n    }\n    return x;\n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 2)\
    \ {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if (n % 2 == 0)\
    \ {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n  long i = 5;\n\
    \  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n      return y;\n\
    \    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpgkj5okrw: /tmp/tmpgkj5okrw.cpp:36: int main(): Assertion `candidate((3),\
    \ (33), (5212)) == (33)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 1)\
    \ {\n        return y;\n    }\n    for (long i = 2; i < n; i++) {\n        if\
    \ (n % i == 0) {\n            return y;\n        }\n    }\n    return x;\n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n < 2) {\n\
    \    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 2)\
    \ return x;\n  if (n % 2 == 0) return y;\n  for (long i = 3; i * i <= n; i +=\
    \ 2) {\n    if (n % i == 0) return y;\n  }\n  return x;\n}\nint main() {\n   \
    \ auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpi33baw3w: /tmp/tmpi33baw3w.cpp:26: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 1)\
    \ {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0)\
    \ {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 1)\
    \ {\n    return x;\n  }\n  if (n == 2) {\n    return y;\n  }\n  if (n % 2 == 0)\
    \ {\n    return x_or_y(n / 2, x, y);\n  }\n  return x_or_y(n - 1, x, y);\n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpqvutfhbx: /tmp/tmpqvutfhbx.cpp:22: int main(): Assertion `candidate((7),\
    \ (34), (12)) == (34)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 1)\
    \ {\n        return y;\n    }\n    for (long i = 2; i < n; i++) {\n        if\
    \ (n % i == 0) {\n            return y;\n        }\n    }\n    return x;\n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n % 2\
    \ == 0) {\n        return y;\n    }\n    return x;\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpkbpoev5a: /tmp/tmpkbpoev5a.cpp:17: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  // TODO: implement\
    \ this function\n  if(n%2==0){\n    return y;\n  }\n  else{\n    return x;\n \
    \ }\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp1298l_so: /tmp/tmp1298l_so.cpp:20: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n\tif (n == 1)\
    \ return y;\n\tfor (long i = 2; i < n; i++) {\n\t\tif (n % i == 0) return y;\n\
    \t}\n\treturn x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  }\n  return x;\n}\nint main() {\n    auto candidate =\
    \ x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpszz2ksgq: /tmp/tmpszz2ksgq.cpp:17: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    // TODO: Write\
    \ your code here\n    if(n<=1) return y;\n    for(int i=2;i<=sqrt(n);i++){\n \
    \       if(n%i==0) return y;\n    }\n    return x;\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpl3ckj7vm: /tmp/tmpl3ckj7vm.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 1)\
    \ {\n        return y;\n    }\n    if (n == 2) {\n        return x;\n    }\n \
    \   for (long i = 2; i < n; i++) {\n        if (n % i == 0) {\n            return\
    \ y;\n        }\n    }\n    return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n % 2\
    \ == 0) {\n        return y;\n    } else {\n        return x;\n    }\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpizk4ejur: /tmp/tmpizk4ejur.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    // Write your\
    \ code here\n    // To print results to the standard output you can use printf()\n\
    \    // Example: printf(\"%s\", \"Hello world!\");\n    if(n==1)\n        return\
    \ y;\n    for(int i=2;i<n;i++)\n    {\n        if(n%i==0)\n            return\
    \ y;\n    }\n    return x;\n}\nint main() {\n    auto candidate = x_or_y;\n  \
    \  assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpxjfxieng: /tmp/tmpxjfxieng.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpmb80s0lf: /tmp/tmpmb80s0lf.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  }\n  return x;\n}\nint main() {\n    auto candidate =\
    \ x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp6b1d3qze: /tmp/tmp6b1d3qze.cpp:17: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n\tif (n == 1)\n\
    \t\treturn y;\n\tfor (long i = 2; i <= n / 2; i++) {\n\t\tif (n % i == 0)\n\t\t\
    \treturn y;\n\t}\n\treturn x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  // TODO: Implement\
    \ this function\n  if(n==1)\n  {\n    return y;\n  }\n  else if(n==2)\n  {\n \
    \   return x;\n  }\n  else\n  {\n    for(int i=2;i<n;i++)\n    {\n      if(n%i==0)\n\
    \      {\n        return y;\n      }\n    }\n    return x;\n  }\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 2)\
    \ {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n  for (long\
    \ i = 3; i <= sqrt(n); i += 2) {\n    if (n % i == 0) {\n      return y;\n   \
    \ }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp4gp7yuka: /tmp/tmp4gp7yuka.cpp:32: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpf8mtgl7t: /tmp/tmpf8mtgl7t.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 2)\
    \ return x;\n  if (n % 2 == 0) return y;\n  for (long i = 3; i * i <= n; i +=\
    \ 2) {\n    if (n % i == 0) return y;\n  }\n  return x;\n}\nint main() {\n   \
    \ auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpo01kklc8: /tmp/tmpo01kklc8.cpp:26: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n <= 1)\n\
    \    return y;\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0)\n      return\
    \ y;\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 1)\
    \ return y;\n  if (n == 2) return x;\n  if (n % 2 == 0) return y;\n  for (long\
    \ i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) return y;\n  }\n  return x;\n\
    }\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34),\
    \ (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    // TODO: Implement\
    \ this function\n    if(n<=1)\n        return y;\n    for(int i=2;i<=sqrt(n);i++)\n\
    \    {\n        if(n%i==0)\n            return y;\n    }\n    return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 1)\
    \ {\n        return y;\n    }\n    for (long i = 2; i < n; i++) {\n        if\
    \ (n % i == 0) {\n            return y;\n        }\n    }\n    return x;\n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  // TODO: implement\
    \ this function\n  if(n==1)\n    return y;\n  for(int i=2;i<=n/2;i++)\n  {\n \
    \   if(n%i==0)\n      return y;\n  }\n  return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0)\n    return y;\n  else\n    return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmph3izs4fm: /tmp/tmph3izs4fm.cpp:17: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  }\n  return x;\n}\nint main() {\n    auto candidate =\
    \ x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp8ctgulke: /tmp/tmp8ctgulke.cpp:17: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 1)\
    \ {\n        return y;\n    }\n    if (n == 2) {\n        return x;\n    }\n \
    \   if (n % 2 == 0) {\n        return y;\n    }\n    for (long i = 3; i * i <=\
    \ n; i += 2) {\n        if (n % i == 0) {\n            return y;\n        }\n\
    \    }\n    return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 1)\n\
    \    return y;\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0)\n      return\
    \ y;\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  // TODO: Implement\
    \ this function\n  return 0;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp94z1a9oa: /tmp/tmp94z1a9oa.cpp:14: int main(): Assertion `candidate((7),\
    \ (34), (12)) == (34)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 1)\n\
    \    return y;\n  long i;\n  for (i = 2; i < n; i++) {\n    if (n % i == 0)\n\
    \      return y;\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpzuzqmy0r: /tmp/tmpzuzqmy0r.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 1)\
    \ {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0)\
    \ {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  // TODO: implement\
    \ this function\n  if(n==1){\n    return y;\n  }\n  for(int i=2;i<n;i++){\n  \
    \  if(n%i==0){\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n  \
    \  auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 2)\
    \ {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if (n % 2 == 0)\
    \ {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n  long i = 5;\n\
    \  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n      return y;\n\
    \    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpu52apui7: /tmp/tmpu52apui7.cpp:36: int main(): Assertion `candidate((3),\
    \ (33), (5212)) == (33)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 2)\
    \ {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n  for (long\
    \ i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return y;\n    }\n\
    \  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpvcx_c3i6: /tmp/tmpvcx_c3i6.cpp:32: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpq51f_q93: /tmp/tmpq51f_q93.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    // TODO: implement\
    \ this function\n    if(n==1)\n        return y;\n    for(int i=2;i<=n/2;i++)\n\
    \    {\n        if(n%i==0)\n            return y;\n    }\n    return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n < 2) {\n\
    \    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  // TODO: Implement\
    \ this function\n  return 0;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp9d2tk04i: /tmp/tmp9d2tk04i.cpp:14: int main(): Assertion `candidate((7),\
    \ (34), (12)) == (34)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    return (n\
    \ % 2 == 0) ? y : x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpi3t2xp7a: /tmp/tmpi3t2xp7a.cpp:14: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    // TODO: implement\
    \ this function\n    if(n==2)\n        return x;\n    else if(n%2==0)\n      \
    \  return y;\n    else\n    {\n        for(int i=3;i<=sqrt(n);i+=2)\n        {\n\
    \            if(n%i==0)\n                return y;\n        }\n        return\
    \ x;\n    }\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpy0p6u1fy: /tmp/tmpy0p6u1fy.cpp:34: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    long result\
    \ = 0;\n    // Write your code here\n    if(n == 1)\n        return y;\n    for(int\
    \ i = 2; i <= sqrt(n); i++)\n    {\n        if(n % i == 0)\n            return\
    \ y;\n    }\n    return x;\n}\nint main() {\n    auto candidate = x_or_y;\n  \
    \  assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n % 2\
    \ == 0) {\n        return y;\n    } else {\n        return x;\n    }\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpa5ycwh65: /tmp/tmpa5ycwh65.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 2)\
    \ return x;\n    if (n % 2 == 0) return y;\n    for (long i = 3; i * i <= n; i\
    \ += 2) {\n        if (n % i == 0) return y;\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpsqmaufev: /tmp/tmpsqmaufev.cpp:26: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 2)\
    \ {\n        return x;\n    }\n    if (n % 2 == 0) {\n        return y;\n    }\n\
    \    for (long i = 3; i < n; i += 2) {\n        if (n % i == 0) {\n          \
    \  return y;\n        }\n    }\n    return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpc7dsobnq: /tmp/tmpc7dsobnq.cpp:32: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 1)\
    \ {\n    return y;\n  }\n  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0)\
    \ {\n    return y;\n  }\n  for (long i = 3; i * i <= n; i += 2) {\n    if (n %\
    \ i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n % 2\
    \ == 0) {\n        return y;\n    }\n    return x;\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp8j56688b: /tmp/tmp8j56688b.cpp:17: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 1)\
    \ {\n        return y;\n    }\n    for (long i = 2; i * i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            return y;\n        }\n    }\n    return x;\n\
    }\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34),\
    \ (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 2)\
    \ {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if (n % 2 == 0)\
    \ {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n  long i = 5;\n\
    \  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n      return y;\n\
    \    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp1uevqudt: /tmp/tmp1uevqudt.cpp:36: int main(): Assertion `candidate((3),\
    \ (33), (5212)) == (33)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpchuz_afi: /tmp/tmpchuz_afi.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 1)\
    \ {\n    return y;\n  }\n  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0)\
    \ {\n    return y;\n  }\n  for (long i = 3; i <= sqrt(n); i += 2) {\n    if (n\
    \ % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n   \
    \ auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 1)\
    \ {\n        return y;\n    }\n    for (long i = 2; i < n; i++) {\n        if\
    \ (n % i == 0) {\n            return y;\n        }\n    }\n    return x;\n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  }\n  else {\n    return x;\n  }\n}\nint main() {\n  \
    \  auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmplai5uf2q: /tmp/tmplai5uf2q.cpp:19: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp7qmllhhj: /tmp/tmp7qmllhhj.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 2)\
    \ {\n        return x;\n    }\n    for (long i = 2; i < n; i++) {\n        if\
    \ (n % i == 0) {\n            return y;\n        }\n    }\n    return x;\n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpi3kxao0q: /tmp/tmpi3kxao0q.cpp:29: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if(n%2==0)\n\
    \        return y;\n    else\n        return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpwdw03oc6: /tmp/tmpwdw03oc6.cpp:17: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp4zofb71_: /tmp/tmp4zofb71_.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n <= 1)\
    \ {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0)\
    \ {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  // TODO: Fill\
    \ in the code here.\n  if(n%2==0){\n    return y;\n  }\n  else{\n    return x;\n\
    \  }\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp6s3xcgav: /tmp/tmp6s3xcgav.cpp:20: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 1)\
    \ {\n        return y;\n    }\n    for (long i = 2; i < n; i++) {\n        if\
    \ (n % i == 0) {\n            return y;\n        }\n    }\n    return x;\n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  // TODO: Implement\
    \ this function\n  if(n%2==0)\n  {\n      return y;\n  }\n  else\n  {\n      return\
    \ x;\n  }\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpv_b64mex: /tmp/tmpv_b64mex.cpp:22: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 2)\
    \ {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n  for (long\
    \ i = 3; i < n; i += 2) {\n    if (n % i == 0) {\n      return y;\n    }\n  }\n\
    \  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpw5v6qw9e: /tmp/tmpw5v6qw9e.cpp:32: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    // Write your\
    \ code here\n    // To print results to the standard output you can use printf()\n\
    \    // Example: printf(\"%s\", \"Hello world!\");\n    if(n<2)\n        return\
    \ y;\n    for(int i=2;i<=sqrt(n);i++)\n    {\n        if(n%i==0)\n           \
    \ return y;\n    }\n    return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n < 2) return\
    \ y;\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0) return y;\n  }\n \
    \ return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n <= 1)\
    \ {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0)\
    \ {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp1q05b6w4: /tmp/tmp1q05b6w4.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  // TODO: Implement\
    \ this function\n  if(n==2)\n    return x;\n  else if(n%2==0)\n    return y;\n\
    \  else\n  {\n    for(int i=3;i<=sqrt(n);i++)\n    {\n      if(n%i==0)\n     \
    \   return y;\n    }\n    return x;\n  }\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpbn0td0ys: /tmp/tmpbn0td0ys.cpp:34: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 1)\
    \ {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0)\
    \ {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n == 2)\
    \ {\n        return x;\n    }\n    if (n % 2 == 0) {\n        return y;\n    }\n\
    \    for (long i = 3; i <= sqrt(n); i += 2) {\n        if (n % i == 0) {\n   \
    \         return y;\n        }\n    }\n    return x;\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpano8js30: /tmp/tmpano8js30.cpp:32: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n    if (n % 2\
    \ == 0) {\n        return y;\n    } else {\n        return x;\n    }\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpp62o9rvp: /tmp/tmpp62o9rvp.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  // TODO: Implement\
    \ this function\n  if(n==2)\n  {\n      return x;\n  }\n  else if(n==3)\n  {\n\
    \      return x;\n  }\n  else if(n==5)\n  {\n      return x;\n  }\n  else if(n==7)\n\
    \  {\n      return x;\n  }\n  else if(n==11)\n  {\n      return x;\n  }\n  else\
    \ if(n==13)\n  {\n      return x;\n  }\n  else if(n==17)\n  {\n      return x;\n\
    \  }\n  else if(n==19)\n  {\n      return x;\n  }\n  else if(n==23)\n  {\n   \
    \   return x;\n  }\n  else if(n==29)\n  {\n      return x;\n  }\n  else if(n==31)\n\
    \  {\n      return x;\n  }\n  else if(n==37)\n  {\n      return x;\n  }\n  else\
    \ if(n==41)\n  {\n      return x;\n  }\n  else if(n==43)\n  {\n      return x;\n\
    \  }\n  else if(n==47)\n  {\n      return x;\n  }\n  else if(n==53)\n  {\n   \
    \   return x;\n  }\n  else if(n==59)\n  {\n      return x;\n  }\n  else if(n==61)\n\
    \  {\n      return x;\n  }\n  else if(n==67)\n  {\n      return x;\n  }\n  else\
    \ if(n==71)\n  {\n      return x;\n  }\n  else if(n==73)\n  {\n      return x;\n\
    \  }\n  else if(n==79)\n  {\n      return x;\n  }\n  else if(n==83)\n  {\n   \
    \   return x;\n  }\n  else if(n==89)\n  {\n      return x;\n  }\n  else if(n==97)\n\
    \  {\n      return x;\n  }\n  else\n\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp3113wyd.cpp: In function \u2018long int x_or_y(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpp3113wyd.cpp:112:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n  112 | }\n      | ^\n/tmp/tmpp3113wyd.cpp:112:1:\
    \ warning: control reaches end of non-void function [-Wreturn-type]\n  112 | }\n\
    \      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpokabcwse: /tmp/tmpokabcwse.cpp:18: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n % 2 ==\
    \ 0) {\n    return y;\n  }\n  return x;\n}\nint main() {\n    auto candidate =\
    \ x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpqu8fnnsi: /tmp/tmpqu8fnnsi.cpp:17: int main(): Assertion `candidate((15),\
    \ (8), (5)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  if (n == 1)\
    \ {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0)\
    \ {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for\
    \ x_or_y(15, 8, 5) == 5\nlong x_or_y(long n, long x, long y) {\n  // TODO: Implement\
    \ this function\n  long i;\n  int flag = 0;\n  for(i = 2; i <= n/2; ++i)\n  {\n\
    \      if(n%i == 0)\n      {\n          flag = 1;\n          break;\n      }\n\
    \  }\n  if (flag == 0)\n      return x;\n  else\n      return y;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpte1dzpic: /tmp/tmpte1dzpic.cpp:35: int main(): Assertion `candidate((1),\
    \ (2), (0)) == (0)' failed.\n"
  exit_code: -6
  status: Exception

name: HumanEval_92_any_int
language: cpp
results:
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn x == y + z || y == x + z ||\
    \ z == x + y;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpk4udlz48: /tmp/tmpk4udlz48.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif(x == y + z || y == x + z || z\
    \ == x + y)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpet5wvwjj: /tmp/tmpet5wvwjj.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp1uanqb8c: /tmp/tmp1uanqb8c.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp4leig966: /tmp/tmp4leig966.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpuhw90jxk: /tmp/tmpuhw90jxk.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmp6_9iqg51: /tmp/tmp6_9iqg51.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp0vm4eq46: /tmp/tmp0vm4eq46.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmps2heibx7: /tmp/tmps2heibx7.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp2iqblcen: /tmp/tmp2iqblcen.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpye638ke3: /tmp/tmpye638ke3.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp_d3vzdry: /tmp/tmp_d3vzdry.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (floor(x) == x && floor(y) == y && floor(z) == z);\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp6q6ga2jo: /tmp/tmp6q6ga2jo.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif ((x == y + z) || (y == x + z)\
    \ || (z == x + y)) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpbjv42124: /tmp/tmpbjv42124.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpk1bgx6jp: /tmp/tmpk1bgx6jp.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp5bf785we: /tmp/tmp5bf785we.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp8h2rthh9: /tmp/tmp8h2rthh9.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp0k4141ah: /tmp/tmp0k4141ah.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpvbr5hbrr: /tmp/tmpvbr5hbrr.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpgxx2mb9v: /tmp/tmpgxx2mb9v.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp5cwhf5qb: /tmp/tmp5cwhf5qb.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x + y == z || x + z == y\
    \ || y + z == x) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpbixahpvr: /tmp/tmpbixahpvr.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp2ve9mjxr: /tmp/tmp2ve9mjxr.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp5qlvhhdq: /tmp/tmp5qlvhhdq.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpz87fw122: /tmp/tmpz87fw122.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmppcdytkw_: /tmp/tmppcdytkw_.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp115v3qsv: /tmp/tmp115v3qsv.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpuux2591n: /tmp/tmpuux2591n.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmptvn6zgwa: /tmp/tmptvn6zgwa.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpv2djbfne: /tmp/tmpv2djbfne.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp5spz3e9h: /tmp/tmp5spz3e9h.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp6qnw9xp0: /tmp/tmp6qnw9xp0.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpm165lc3_: /tmp/tmpm165lc3_.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp_ho2syjt: /tmp/tmp_ho2syjt.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpvvdeo6l8: /tmp/tmpvvdeo6l8.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpae6rrevz: /tmp/tmpae6rrevz.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif ((x == y + z) || (y == x + z)\
    \ || (z == x + y)) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp80iea5ic: /tmp/tmp80iea5ic.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif ((x == y + z) || (y == x + z)\
    \ || (z == x + y)) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpqe9yy6ec: /tmp/tmpqe9yy6ec.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif ((x == y + z) || (y == x + z)\
    \ || (z == x + y)) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpx2uf1oq_: /tmp/tmpx2uf1oq_.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpu_4e6ssy: /tmp/tmpu_4e6ssy.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpqwxgcsil: /tmp/tmpqwxgcsil.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpocs54hkg: /tmp/tmpocs54hkg.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpbbkzlwan: /tmp/tmpbbkzlwan.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp76gav_up: /tmp/tmp76gav_up.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpsf5j49_5: /tmp/tmpsf5j49_5.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if(x == y + z || y == x + z ||\
    \ z == x + y)\n        return true;\n    else\n        return false;\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpv09_k0_y: /tmp/tmpv09_k0_y.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp1lrps2i5: /tmp/tmp1lrps2i5.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif ((x == y + z) || (y == x + z)\
    \ || (z == x + y)) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpnmltt95_: /tmp/tmpnmltt95_.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpy46lxw13: /tmp/tmpy46lxw13.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpqrmbwdeo: /tmp/tmpqrmbwdeo.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp4bu1mir1: /tmp/tmp4bu1mir1.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpq_wajqum: /tmp/tmpq_wajqum.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp_gc7uo4t: /tmp/tmp_gc7uo4t.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpe12z051n: /tmp/tmpe12z051n.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpcojzq91o: /tmp/tmpcojzq91o.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp9303e0by: /tmp/tmp9303e0by.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpuvumijfx: /tmp/tmpuvumijfx.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp30e5um86: /tmp/tmp30e5um86.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp_2blfpqw: /tmp/tmp_2blfpqw.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpauapd0qy: /tmp/tmpauapd0qy.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpd8xvxof3: /tmp/tmpd8xvxof3.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpock4alsa: /tmp/tmpock4alsa.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpqj5o40x6: /tmp/tmpqj5o40x6.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if(x == y + z || y == x + z ||\
    \ z == x + y)\n        return true;\n    else\n        return false;\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp_imyszdo: /tmp/tmp_imyszdo.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpubvyewe5: /tmp/tmpubvyewe5.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpt006cxsh: /tmp/tmpt006cxsh.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp1ktjuaz0: /tmp/tmp1ktjuaz0.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpy40tlfqw: /tmp/tmpy40tlfqw.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmp7xwpdvvm: /tmp/tmp7xwpdvvm.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpxfpcpjdx: /tmp/tmpxfpcpjdx.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpb_7ky4rm: /tmp/tmpb_7ky4rm.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp4n48x3dt: /tmp/tmp4n48x3dt.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpzt2fascl: /tmp/tmpzt2fascl.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp0ane79v1: /tmp/tmp0ane79v1.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if(x == y + z || y == x + z ||\
    \ z == x + y){\n        return true;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp4tv22ynf: /tmp/tmp4tv22ynf.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif ((x == y + z) || (y == x + z)\
    \ || (z == x + y)) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpl5i3zvd_: /tmp/tmpl5i3zvd_.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpa0d5ib1_: /tmp/tmpa0d5ib1_.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpmvuoidk6: /tmp/tmpmvuoidk6.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpzbxafwmh: /tmp/tmpzbxafwmh.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif ((x == y + z) || (y == x + z)\
    \ || (z == x + y)) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp5bz5ski5: /tmp/tmp5bz5ski5.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp28d5hv12: /tmp/tmp28d5hv12.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp41so124w: /tmp/tmp41so124w.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp15ughqwi: /tmp/tmp15ughqwi.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpo4yb25cw: /tmp/tmpo4yb25cw.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpp7v8n9x2: /tmp/tmpp7v8n9x2.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpuuqsfhzn: /tmp/tmpuuqsfhzn.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpwwwdz49y: /tmp/tmpwwwdz49y.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp05m3n7lf: /tmp/tmp05m3n7lf.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp3kkcjzoz: /tmp/tmp3kkcjzoz.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp_23yp4mw: /tmp/tmp_23yp4mw.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmplm8tn82a: /tmp/tmplm8tn82a.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == (y + z) || y == (x + z)\
    \ || z == (x + y))\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpvxy6ht0o: /tmp/tmpvxy6ht0o.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpvu26hncy: /tmp/tmpvu26hncy.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp9i8z55db: /tmp/tmp9i8z55db.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpt5cuqg2g: /tmp/tmpt5cuqg2g.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpe_ia9bsh: /tmp/tmpe_ia9bsh.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp40igdd50: /tmp/tmp40igdd50.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpfzp0ti8y: /tmp/tmpfzp0ti8y.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpzodqj7y2: /tmp/tmpzodqj7y2.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp80zrjrqd: /tmp/tmp80zrjrqd.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp961b40zs: /tmp/tmp961b40zs.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp5pjrw2_v: /tmp/tmp5pjrw2_v.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpqlrvszhs: /tmp/tmpqlrvszhs.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp78h83far: /tmp/tmp78h83far.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif ((x == y + z) || (y == x + z)\
    \ || (z == x + y)) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpavtp5fgz: /tmp/tmpavtp5fgz.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpsanwtlrn: /tmp/tmpsanwtlrn.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z) || (y == x +\
    \ z) || (z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpdfzdbwfx: /tmp/tmpdfzdbwfx.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpv1rad2um: /tmp/tmpv1rad2um.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpiqzw95k6: /tmp/tmpiqzw95k6.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif ((x == y + z) || (y == x + z)\
    \ || (z == x + y)) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpquw4fjto: /tmp/tmpquw4fjto.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmphfbokyxq: /tmp/tmphfbokyxq.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp02nqpn4j: /tmp/tmp02nqpn4j.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp_sgj_bh5: /tmp/tmp_sgj_bh5.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpr_c4an5m: /tmp/tmpr_c4an5m.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpcqa4eqj7: /tmp/tmpcqa4eqj7.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmps8up2_kc: /tmp/tmps8up2_kc.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpa1qjt5f_: /tmp/tmpa1qjt5f_.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpgq3i5k5e: /tmp/tmpgq3i5k5e.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp55gbmltj: /tmp/tmp55gbmltj.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp4rhrk5xn: /tmp/tmp4rhrk5xn.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpa3wzyuld: /tmp/tmpa3wzyuld.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n  if(x==y+z || y==x+z || z==x+y){\n\
    \    return true;\n  }\n  else{\n    return false;\n  }\n}\nint main() {\n   \
    \ auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpeasqni6c: /tmp/tmpeasqni6c.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x + y == z || x + z == y\
    \ || y + z == x) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpn3ma9myv: /tmp/tmpn3ma9myv.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpmqab_xz5: /tmp/tmpmqab_xz5.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp2fajqe4n: /tmp/tmp2fajqe4n.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpmkq4vlgf: /tmp/tmpmkq4vlgf.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpkuckb7ko: /tmp/tmpkuckb7ko.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif ((x == y + z) || (y == x + z)\
    \ || (z == x + y))\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpkf54wjil: /tmp/tmpkf54wjil.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpxh7kv7bg: /tmp/tmpxh7kv7bg.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpy7r9q2d_: /tmp/tmpy7r9q2d_.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp12__dtjc: /tmp/tmp12__dtjc.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpyokz4sq6: /tmp/tmpyokz4sq6.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpv2dxj3y_: /tmp/tmpv2dxj3y_.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpq3tb6avo: /tmp/tmpq3tb6avo.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpu308bm22: /tmp/tmpu308bm22.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpkqyom6s2: /tmp/tmpkqyom6s2.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpjb1_xf4_: /tmp/tmpjb1_xf4_.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp9h2ob1wq: /tmp/tmp9h2ob1wq.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z) || (y == x +\
    \ z) || (z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpf036b0z0: /tmp/tmpf036b0z0.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp98t6e450: /tmp/tmp98t6e450.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp_w6xypa4: /tmp/tmp_w6xypa4.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpnru_n2yn: /tmp/tmpnru_n2yn.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpygzbajbz: /tmp/tmpygzbajbz.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if(x == y + z || y == x + z ||\
    \ z == x + y)\n        return true;\n    else\n        return false;\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpa1xew_5r: /tmp/tmpa1xew_5r.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpc5esjin0: /tmp/tmpc5esjin0.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp705nlj0h: /tmp/tmp705nlj0h.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z) || (y == x +\
    \ z) || (z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp_sb0olub: /tmp/tmp_sb0olub.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif ((int)x + (int)y == (int)z ||\
    \ (int)x + (int)z == (int)y || (int)y + (int)z == (int)x)\n\t\treturn true;\n\t\
    else\n\t\treturn false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpcg4l4cjl: /tmp/tmpcg4l4cjl.cpp:28: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif ((x == y + z) || (y == x + z)\
    \ || (z == x + y)) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpwucxerho: /tmp/tmpwucxerho.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpyvzp2ct8: /tmp/tmpyvzp2ct8.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpt_ph6ntk: /tmp/tmpt_ph6ntk.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp_wgy75jl: /tmp/tmp_wgy75jl.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp6mku5bgi: /tmp/tmp6mku5bgi.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpuyvah2pj: /tmp/tmpuyvah2pj.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpq851b5ev: /tmp/tmpq851b5ev.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpy_w0asiv: /tmp/tmpy_w0asiv.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpc8gi9wty: /tmp/tmpc8gi9wty.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpew4hj56m: /tmp/tmpew4hj56m.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpsc2y2rqj: /tmp/tmpsc2y2rqj.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpsyolz6k3: /tmp/tmpsyolz6k3.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif ((x == y + z) || (y == x + z)\
    \ || (z == x + y)) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp3jygzt3u: /tmp/tmp3jygzt3u.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpqsh38c8d: /tmp/tmpqsh38c8d.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp4c82cwrn: /tmp/tmp4c82cwrn.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpg7akoqa5: /tmp/tmpg7akoqa5.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpbu_f5js5: /tmp/tmpbu_f5js5.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpew3xi2s6: /tmp/tmpew3xi2s6.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp_7zig_as: /tmp/tmp_7zig_as.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpjqiihmjt: /tmp/tmpjqiihmjt.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmppwxo9hb8: /tmp/tmppwxo9hb8.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpmut2_mmk: /tmp/tmpmut2_mmk.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if(x==y+z || y==x+z || z==x+y)\n\
    \        return true;\n    else\n        return false;\n}\nint main() {\n    auto\
    \ candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmp3iw5qzy8: /tmp/tmp3iw5qzy8.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp9uppiv6i: /tmp/tmp9uppiv6i.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpzavm80pf: /tmp/tmpzavm80pf.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpwe4tpgh_: /tmp/tmpwe4tpgh_.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpzhb7yd9b: /tmp/tmpzhb7yd9b.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpq1wpgz61: /tmp/tmpq1wpgz61.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp0ypj92tr: /tmp/tmp0ypj92tr.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpmg5_ltor: /tmp/tmpmg5_ltor.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmps4p5m_lt: /tmp/tmps4p5m_lt.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x + y == z || x + z == y\
    \ || y + z == x);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpl4sjt978: /tmp/tmpl4sjt978.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn ((x + y == z) || (x + z ==\
    \ y) || (y + z == x)) && (x == (int)x) && (y == (int)y) && (z == (int)z);\n}\n\
    int main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpmrwc42t6: /tmp/tmpmrwc42t6.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmptv4yvgpl: /tmp/tmptv4yvgpl.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp5gg1r28o: /tmp/tmp5gg1r28o.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpk2057dg3: /tmp/tmpk2057dg3.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpzq3y7d84: /tmp/tmpzq3y7d84.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmp1a9z68hp: /tmp/tmp1a9z68hp.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpjbixgv95: /tmp/tmpjbixgv95.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpkbwnnq3g: /tmp/tmpkbwnnq3g.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmptxqb8qj8: /tmp/tmptxqb8qj8.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmppffm0ffw: /tmp/tmppffm0ffw.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmp9dhwsggs: /tmp/tmp9dhwsggs.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmppj6h9ume: /tmp/tmppj6h9ume.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpo0xvrc97: /tmp/tmpo0xvrc97.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpra4k4muy: /tmp/tmpra4k4muy.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpoptxn9m3: /tmp/tmpoptxn9m3.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpfxvbd88y: /tmp/tmpfxvbd88y.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpxa_kpelk: /tmp/tmpxa_kpelk.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpk88j2ilw: /tmp/tmpk88j2ilw.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif ((x == y + z) || (y == x + z)\
    \ || (z == x + y)) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpedl99qv9: /tmp/tmpedl99qv9.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmp6av0oii_: /tmp/tmp6av0oii_.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpu6idfxhy: /tmp/tmpu6idfxhy.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn x == y + z || y == x + z ||\
    \ z == x + y;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp3vtnjrp1: /tmp/tmp3vtnjrp1.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif(x == y + z || y == x + z || z\
    \ == x + y)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmp46dek2ae: /tmp/tmp46dek2ae.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp8o9pnx6_: /tmp/tmp8o9pnx6_.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpxi5qm407: /tmp/tmpxi5qm407.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpwbzfzpcf: /tmp/tmpwbzfzpcf.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpv02hdenb: /tmp/tmpv02hdenb.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpi_4aw3ft: /tmp/tmpi_4aw3ft.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmplnlzb0u4: /tmp/tmplnlzb0u4.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmptwd5sray: /tmp/tmptwd5sray.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmperk_70f0: /tmp/tmperk_70f0.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpu_cebskh: /tmp/tmpu_cebskh.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (floor(x) == x && floor(y) == y && floor(z) == z);\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp6ipo4_cd: /tmp/tmp6ipo4_cd.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif ((x == y + z) || (y == x + z)\
    \ || (z == x + y)) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpsrvbq1b_: /tmp/tmpsrvbq1b_.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpyt4ner8v: /tmp/tmpyt4ner8v.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpp60wvmff: /tmp/tmpp60wvmff.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp0mpygcpt: /tmp/tmp0mpygcpt.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp3z7ficno: /tmp/tmp3z7ficno.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmphe8mzdwx: /tmp/tmphe8mzdwx.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpbzdmedzz: /tmp/tmpbzdmedzz.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpme5g5uo2: /tmp/tmpme5g5uo2.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x + y == z || x + z == y\
    \ || y + z == x) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp8r0vlxwn: /tmp/tmp8r0vlxwn.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmptawn5als: /tmp/tmptawn5als.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpa3ecd8tg: /tmp/tmpa3ecd8tg.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp81fx8iid: /tmp/tmp81fx8iid.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp60ekg524: /tmp/tmp60ekg524.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpj4lk7cka: /tmp/tmpj4lk7cka.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpf8xn_g5v: /tmp/tmpf8xn_g5v.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpt1arg492: /tmp/tmpt1arg492.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpprvsib_u: /tmp/tmpprvsib_u.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp5cltuajd: /tmp/tmp5cltuajd.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpqv8mf1hv: /tmp/tmpqv8mf1hv.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpfj6fhodm: /tmp/tmpfj6fhodm.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpzuln7kja: /tmp/tmpzuln7kja.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp287w6w59: /tmp/tmp287w6w59.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpf3ymriu8: /tmp/tmpf3ymriu8.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif ((x == y + z) || (y == x + z)\
    \ || (z == x + y)) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpljld6tqo: /tmp/tmpljld6tqo.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif ((x == y + z) || (y == x + z)\
    \ || (z == x + y)) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp5de3qg1r: /tmp/tmp5de3qg1r.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif ((x == y + z) || (y == x + z)\
    \ || (z == x + y)) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpgot0cn2q: /tmp/tmpgot0cn2q.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpo735jti9: /tmp/tmpo735jti9.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp7uvsrd4t: /tmp/tmp7uvsrd4t.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpr7er23cd: /tmp/tmpr7er23cd.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpgdn8212k: /tmp/tmpgdn8212k.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpkyt_e3jj: /tmp/tmpkyt_e3jj.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp7wuu37ix: /tmp/tmp7wuu37ix.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if(x == y + z || y == x + z ||\
    \ z == x + y)\n        return true;\n    else\n        return false;\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpw2eva3b8: /tmp/tmpw2eva3b8.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpbypqs1np: /tmp/tmpbypqs1np.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif ((x == y + z) || (y == x + z)\
    \ || (z == x + y)) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpuq9lx6zm: /tmp/tmpuq9lx6zm.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpr66ngcv6: /tmp/tmpr66ngcv6.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmprk9p0k1r: /tmp/tmprk9p0k1r.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpcgy1_reh: /tmp/tmpcgy1_reh.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpwcpp79hf: /tmp/tmpwcpp79hf.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpa0tnumap: /tmp/tmpa0tnumap.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpmbu34mjf: /tmp/tmpmbu34mjf.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmp7fk38bkh: /tmp/tmp7fk38bkh.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmplvb58i5h: /tmp/tmplvb58i5h.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpz7zwclg0: /tmp/tmpz7zwclg0.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpb2hbs9vp: /tmp/tmpb2hbs9vp.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpn_agol66: /tmp/tmpn_agol66.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpoqbw2ap2: /tmp/tmpoqbw2ap2.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpzrb314oz: /tmp/tmpzrb314oz.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp5jvw96tl: /tmp/tmp5jvw96tl.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpvlmncx1p: /tmp/tmpvlmncx1p.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if(x == y + z || y == x + z ||\
    \ z == x + y)\n        return true;\n    else\n        return false;\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpudbzm97h: /tmp/tmpudbzm97h.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmph34y25wr: /tmp/tmph34y25wr.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpbmd6rbmz: /tmp/tmpbmd6rbmz.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpyziab4uc: /tmp/tmpyziab4uc.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp7up5bkh_: /tmp/tmp7up5bkh_.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpjj5veffd: /tmp/tmpjj5veffd.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp00cv9bk1: /tmp/tmp00cv9bk1.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpjltkg5k3: /tmp/tmpjltkg5k3.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpo0gziskd: /tmp/tmpo0gziskd.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpasse_fxo: /tmp/tmpasse_fxo.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpt_wwxlzs: /tmp/tmpt_wwxlzs.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if(x == y + z || y == x + z ||\
    \ z == x + y){\n        return true;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp8pp6j54p: /tmp/tmp8pp6j54p.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif ((x == y + z) || (y == x + z)\
    \ || (z == x + y)) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp2f83hydm: /tmp/tmp2f83hydm.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpbieg1dv3: /tmp/tmpbieg1dv3.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmprsk6ed9c: /tmp/tmprsk6ed9c.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpiyg2qvl9: /tmp/tmpiyg2qvl9.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif ((x == y + z) || (y == x + z)\
    \ || (z == x + y)) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp9pqaa7d0: /tmp/tmp9pqaa7d0.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmppf8pvejw: /tmp/tmppf8pvejw.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpwh08w2ve: /tmp/tmpwh08w2ve.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpb7u_r8j4: /tmp/tmpb7u_r8j4.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpcrhzb606: /tmp/tmpcrhzb606.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpnhmxp77n: /tmp/tmpnhmxp77n.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpnsokum4f: /tmp/tmpnsokum4f.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpigycp9d2: /tmp/tmpigycp9d2.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpc9bxv8q_: /tmp/tmpc9bxv8q_.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpy7pvc39s: /tmp/tmpy7pvc39s.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp_cekya_o: /tmp/tmp_cekya_o.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp2h80o4ej: /tmp/tmp2h80o4ej.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == (y + z) || y == (x + z)\
    \ || z == (x + y))\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp6t553tn8: /tmp/tmp6t553tn8.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpppeto9y2: /tmp/tmpppeto9y2.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpw05w4iiw: /tmp/tmpw05w4iiw.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpam5t73fh: /tmp/tmpam5t73fh.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpsxv1_9y7: /tmp/tmpsxv1_9y7.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpqq3gd21l: /tmp/tmpqq3gd21l.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpf79gcq34: /tmp/tmpf79gcq34.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpeyrd791q: /tmp/tmpeyrd791q.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmphaqtmkw1: /tmp/tmphaqtmkw1.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpogwqbkfe: /tmp/tmpogwqbkfe.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp4zept3av: /tmp/tmp4zept3av.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpz62tbvvu: /tmp/tmpz62tbvvu.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmphp8c792c: /tmp/tmphp8c792c.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif ((x == y + z) || (y == x + z)\
    \ || (z == x + y)) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp7dum6e6f: /tmp/tmp7dum6e6f.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmphftoid69: /tmp/tmphftoid69.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z) || (y == x +\
    \ z) || (z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp8jg3p2n1: /tmp/tmp8jg3p2n1.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmphkiuysur: /tmp/tmphkiuysur.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpnkvwp33q: /tmp/tmpnkvwp33q.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif ((x == y + z) || (y == x + z)\
    \ || (z == x + y)) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp2qs3v569: /tmp/tmp2qs3v569.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpujmyk85a: /tmp/tmpujmyk85a.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpfq1uipvt: /tmp/tmpfq1uipvt.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpo23z7gaq: /tmp/tmpo23z7gaq.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpe44d5pvz: /tmp/tmpe44d5pvz.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpfedw1tcr: /tmp/tmpfedw1tcr.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpe30b5enb: /tmp/tmpe30b5enb.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpq8waeesg: /tmp/tmpq8waeesg.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpwi1dv19j: /tmp/tmpwi1dv19j.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp47fikxr8: /tmp/tmp47fikxr8.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmphvm0i2m1: /tmp/tmphvm0i2m1.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp8zosnjzn: /tmp/tmp8zosnjzn.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n  if(x==y+z || y==x+z || z==x+y){\n\
    \    return true;\n  }\n  else{\n    return false;\n  }\n}\nint main() {\n   \
    \ auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpkefiraqa: /tmp/tmpkefiraqa.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x + y == z || x + z == y\
    \ || y + z == x) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpw0y_mg52: /tmp/tmpw0y_mg52.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpkw7mfa1d: /tmp/tmpkw7mfa1d.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp42oyprob: /tmp/tmp42oyprob.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpa2kulox1: /tmp/tmpa2kulox1.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpjrszjmrw: /tmp/tmpjrszjmrw.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif ((x == y + z) || (y == x + z)\
    \ || (z == x + y))\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpzt71ggwx: /tmp/tmpzt71ggwx.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpboxrs195: /tmp/tmpboxrs195.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp27s82icx: /tmp/tmp27s82icx.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpjwa5bza6: /tmp/tmpjwa5bza6.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpmwofumln: /tmp/tmpmwofumln.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpgg5l_l75: /tmp/tmpgg5l_l75.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpv2gvfa4r: /tmp/tmpv2gvfa4r.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmppg_0quqd: /tmp/tmppg_0quqd.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpcq_zadoe: /tmp/tmpcq_zadoe.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp1pfo19eo: /tmp/tmp1pfo19eo.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpxuodlfp1: /tmp/tmpxuodlfp1.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z) || (y == x +\
    \ z) || (z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp8jydsu8b: /tmp/tmp8jydsu8b.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmplyggt3qt: /tmp/tmplyggt3qt.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp7ud9idkn: /tmp/tmp7ud9idkn.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmptpsy31zs: /tmp/tmptpsy31zs.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmppi7j2kbl: /tmp/tmppi7j2kbl.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if(x == y + z || y == x + z ||\
    \ z == x + y)\n        return true;\n    else\n        return false;\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp0687dat2: /tmp/tmp0687dat2.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpmbrck2ly: /tmp/tmpmbrck2ly.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp2dr8ia93: /tmp/tmp2dr8ia93.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z) || (y == x +\
    \ z) || (z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpw6oh6iu7: /tmp/tmpw6oh6iu7.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif ((int)x + (int)y == (int)z ||\
    \ (int)x + (int)z == (int)y || (int)y + (int)z == (int)x)\n\t\treturn true;\n\t\
    else\n\t\treturn false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpe_apxj6f: /tmp/tmpe_apxj6f.cpp:28: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif ((x == y + z) || (y == x + z)\
    \ || (z == x + y)) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpn__nmbwd: /tmp/tmpn__nmbwd.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp7vy3iw_0: /tmp/tmp7vy3iw_0.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp3_9si5um: /tmp/tmp3_9si5um.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpnar1mof6: /tmp/tmpnar1mof6.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp5orn3wcr: /tmp/tmp5orn3wcr.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmp3k4exxtg: /tmp/tmp3k4exxtg.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpkmgfay6i: /tmp/tmpkmgfay6i.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp8tmvgq0n: /tmp/tmp8tmvgq0n.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpp_y16dlo: /tmp/tmpp_y16dlo.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpluou597l: /tmp/tmpluou597l.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp1g76d2b_: /tmp/tmp1g76d2b_.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpixt3_x8p: /tmp/tmpixt3_x8p.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif ((x == y + z) || (y == x + z)\
    \ || (z == x + y)) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpcuijwjtx: /tmp/tmpcuijwjtx.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmp4amvt32o: /tmp/tmp4amvt32o.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpwk2k8iff: /tmp/tmpwk2k8iff.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpt5h317k6: /tmp/tmpt5h317k6.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp3tuuwout: /tmp/tmp3tuuwout.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpwjohuij1: /tmp/tmpwjohuij1.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpj7061fyi: /tmp/tmpj7061fyi.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpanny4xc_: /tmp/tmpanny4xc_.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpfinpzrmn: /tmp/tmpfinpzrmn.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpaaouogtj: /tmp/tmpaaouogtj.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if(x==y+z || y==x+z || z==x+y)\n\
    \        return true;\n    else\n        return false;\n}\nint main() {\n    auto\
    \ candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpby7b8o8z: /tmp/tmpby7b8o8z.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpllug6aka: /tmp/tmpllug6aka.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpd1c6nnwc: /tmp/tmpd1c6nnwc.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpbrpyta0j: /tmp/tmpbrpyta0j.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpld14v_rb: /tmp/tmpld14v_rb.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp6mzbnrdz: /tmp/tmp6mzbnrdz.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpn2h8533t: /tmp/tmpn2h8533t.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpq39nkidn: /tmp/tmpq39nkidn.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpxtfk75pr: /tmp/tmpxtfk75pr.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x + y == z || x + z == y\
    \ || y + z == x);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpjgmngo5q: /tmp/tmpjgmngo5q.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn ((x + y == z) || (x + z ==\
    \ y) || (y + z == x)) && (x == (int)x) && (y == (int)y) && (z == (int)z);\n}\n\
    int main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpqtv7q_dk: /tmp/tmpqtv7q_dk.cpp:25: int main(): Assertion `candidate((3.0),\
    \ (float(4)), (float(7))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmps2_2ad_8: /tmp/tmps2_2ad_8.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmph2xudrpf: /tmp/tmph2xudrpf.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpho15hyga: /tmp/tmpho15hyga.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpwd83ddgc: /tmp/tmpwd83ddgc.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpp6mjtrlv: /tmp/tmpp6mjtrlv.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmplw34e_o8: /tmp/tmplw34e_o8.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp5lnejciy: /tmp/tmp5lnejciy.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp6z83bp0g: /tmp/tmp6z83bp0g.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpg1l3mtgr: /tmp/tmpg1l3mtgr.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpba8r2wo7: /tmp/tmpba8r2wo7.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp0to6zi5t: /tmp/tmp0to6zi5t.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpzrobvpux: /tmp/tmpzrobvpux.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpo0qszxao: /tmp/tmpo0qszxao.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp6l396mi0: /tmp/tmp6l396mi0.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpd8rm6fd7: /tmp/tmpd8rm6fd7.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmp50ezrq5o: /tmp/tmp50ezrq5o.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmpzz7r7z5v: /tmp/tmpzz7r7z5v.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif ((x == y + z) || (y == x + z)\
    \ || (z == x + y)) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmp6zre5684: /tmp/tmp6zre5684.cpp:23: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\tif (x == y + z || y == x + z || z\
    \ == x + y)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmp55sit0xw: /tmp/tmp55sit0xw.cpp:21: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n\treturn (x == y + z || y == x + z\
    \ || z == x + y);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  stdout: ''
  stderr: "tmptu9s7z2f: /tmp/tmptu9s7z2f.cpp:18: int main(): Assertion `candidate((1.5),\
    \ (float(5)), (3.5)) == (false)' failed.\n"
  exit_code: -6
  status: Exception

language: cpp
name: HumanEval_71_triangle_area
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // your code here\n  float s = (a+b+c)/2.0;\n  float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \  if(area < 0)\n    return -1;\n  return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpd5mv139r: /tmp/tmpd5mv139r.cpp:22: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp10mklgv3: /tmp/tmp10mklgv3.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvn5_x3u_: /tmp/tmpvn5_x3u_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    return (area > 0) ? area : -1;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp5r9q7geh: /tmp/tmp5r9q7geh.cpp:20: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // your code here\n  float s = (a+b+c)/2.0;\n  float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \  if(area > 0)\n    return area;\n  else\n    return -1;\n}\nint main() {\n \
    \   auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpk4dfneyc: /tmp/tmpk4dfneyc.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if (a + b > c && a + c > b && b + c > a) {\n    float s = (a + b + c) /\
    \ 2.0;\n    return sqrt(s * (s - a) * (s - b) * (s - c));\n  }\n  return -1;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp8xcdpnpn: /tmp/tmp8xcdpnpn.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvn5_x3u_: /tmp/tmpvn5_x3u_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt( (a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c)\
    \ )/4;\n    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpugeos4i8: /tmp/tmpugeos4i8.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a + b > c && a + c > b && b + c > a)\n        return sqrt((a + b +\
    \ c) * (a + b - c) * (a - b + c) * (-a + b + c)) / 4;\n    return -1;\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpp_ry2y3h: /tmp/tmpp_ry2y3h.cpp:20: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvn5_x3u_: /tmp/tmpvn5_x3u_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if(a+b>c && a+c>b && b+c>a)\n    return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \  else\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpu8f3ebxm: /tmp/tmpu8f3ebxm.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        float s = (a + b\
    \ + c) / 2.0;\n        return sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp2y7pqbrj: /tmp/tmp2y7pqbrj.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area <= 0) {\n        return -1;\n    }\n    return\
    \ area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp5vy77vj0: /tmp/tmp5vy77vj0.cpp:22: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float s = (a + b + c) / 2.0;\n  float area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n  return (area > 0) ? area : -1;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpmd8kssse: /tmp/tmpmd8kssse.cpp:20: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // your code here\n  if(a+b>c && a+c>b && b+c>a)\n    return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \  else\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpwz7uk0l9: /tmp/tmpwz7uk0l9.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float s = (a + b + c) / 2.0;\n  float area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n  return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmphjj7pvj3: /tmp/tmphjj7pvj3.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvn5_x3u_: /tmp/tmpvn5_x3u_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area <= 0) {\n        return -1;\n    }\n    return\
    \ area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp5vy77vj0: /tmp/tmp5vy77vj0.cpp:22: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt(a*a+b*b-c*c)*sqrt(a*a+c*c-b*b)*sqrt(b*b+c*c-a*a)/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpktjcv9x5: /tmp/tmpktjcv9x5.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt(a*a+b*b-c*c)*sqrt(a*a+c*c-b*b)*sqrt(b*b+c*c-a*a)/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpktjcv9x5: /tmp/tmpktjcv9x5.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_7g8qjgu: /tmp/tmp_7g8qjgu.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        float s = (a + b\
    \ + c) / 2.0;\n        return sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp2y7pqbrj: /tmp/tmp2y7pqbrj.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s=(a+b+c)/2.0;\n  \
    \      return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpog4p2fz2: /tmp/tmpog4p2fz2.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvn5_x3u_: /tmp/tmpvn5_x3u_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp10mklgv3: /tmp/tmp10mklgv3.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0)\n        return area;\n    else\n      \
    \  return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpioryck5q: /tmp/tmpioryck5q.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvn5_x3u_: /tmp/tmpvn5_x3u_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a+b>c && a+c>b && b+c>a) {\n        float s = (a+b+c)/2.0;\n    \
    \    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return roundf(area * 100)\
    \ / 100;\n    }\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmplzupci6y: /tmp/tmplzupci6y.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvn5_x3u_: /tmp/tmpvn5_x3u_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        float s = (a + b\
    \ + c) / 2.0;\n        return sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp2y7pqbrj: /tmp/tmp2y7pqbrj.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_7g8qjgu: /tmp/tmp_7g8qjgu.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvn5_x3u_: /tmp/tmpvn5_x3u_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0)\n        return area;\n    else\n      \
    \  return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpioryck5q: /tmp/tmpioryck5q.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        float s = (a + b\
    \ + c) / 2.0;\n        return sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp2y7pqbrj: /tmp/tmp2y7pqbrj.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0)\n        return area;\n    else\n      \
    \  return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpioryck5q: /tmp/tmpioryck5q.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvn5_x3u_: /tmp/tmpvn5_x3u_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float s = (a + b + c) / 2.0;\n  float area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n  if (area > 0) {\n    return area;\n  }\n  return -1;\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpfb8tg9sh: /tmp/tmpfb8tg9sh.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n    \n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpf3vybmp_: /tmp/tmpf3vybmp_.cpp:28: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvn5_x3u_: /tmp/tmpvn5_x3u_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if(a+b>c && a+c>b && b+c>a)\n  {\n    float s = (a+b+c)/2.0;\n    return\
    \ sqrt(s*(s-a)*(s-b)*(s-c));\n  }\n  else\n  {\n    return -1;\n  }\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpg51o5r8t: /tmp/tmpg51o5r8t.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        float s = (a + b\
    \ + c) / 2.0;\n        return sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp2y7pqbrj: /tmp/tmp2y7pqbrj.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // your code here\n    float s = (a+b+c)/2.0;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    if(area > 0)\n        return area;\n    else\n        return -1;\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpw550f46j: /tmp/tmpw550f46j.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        float s = (a + b\
    \ + c) / 2.0;\n        return sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp2y7pqbrj: /tmp/tmp2y7pqbrj.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if(a+b>c && a+c>b && b+c>a)\n    return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \  else\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpu8f3ebxm: /tmp/tmpu8f3ebxm.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // your code here\n  float s = (a+b+c)/2.0;\n  float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \  if(area > 0)\n    return area;\n  else\n    return -1;\n}\nint main() {\n \
    \   auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpk4dfneyc: /tmp/tmpk4dfneyc.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if(a+b>c && a+c>b && b+c>a)\n    return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \  else\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpu8f3ebxm: /tmp/tmpu8f3ebxm.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if (a + b > c && a + c > b && b + c > a) {\n    float s = (a + b + c) /\
    \ 2.0;\n    return sqrt(s * (s - a) * (s - b) * (s - c));\n  }\n  return -1;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp8xcdpnpn: /tmp/tmp8xcdpnpn.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvn5_x3u_: /tmp/tmpvn5_x3u_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp10mklgv3: /tmp/tmp10mklgv3.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp6aa22b_z: /tmp/tmp6aa22b_z.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area == 0) {\n        return -1;\n    }\n    return\
    \ area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp0iyc_bt_: /tmp/tmp0iyc_bt_.cpp:22: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if(a+b>c && a+c>b && b+c>a)\n  {\n    float s = (a+b+c)/2.0;\n    return\
    \ sqrt(s*(s-a)*(s-b)*(s-c));\n  }\n  else\n  {\n    return -1;\n  }\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpg51o5r8t: /tmp/tmpg51o5r8t.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvn5_x3u_: /tmp/tmpvn5_x3u_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_7g8qjgu: /tmp/tmp_7g8qjgu.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_7g8qjgu: /tmp/tmp_7g8qjgu.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if(a+b>c && a+c>b && b+c>a)\n    return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \  else\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpu8f3ebxm: /tmp/tmpu8f3ebxm.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp10mklgv3: /tmp/tmp10mklgv3.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        float s = (a + b\
    \ + c) / 2.0;\n        return sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp2y7pqbrj: /tmp/tmp2y7pqbrj.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp10mklgv3: /tmp/tmp10mklgv3.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // your code here\n  float s = (a+b+c)/2.0;\n  float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \  if(area > 0)\n    return area;\n  else\n    return -1;\n}\nint main() {\n \
    \   auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpk4dfneyc: /tmp/tmpk4dfneyc.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if(a+b>c && a+c>b && b+c>a)\n    return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \  else\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpu8f3ebxm: /tmp/tmpu8f3ebxm.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0)\n        return area;\n    else\n      \
    \  return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpioryck5q: /tmp/tmpioryck5q.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0)\n        return area;\n    else\n      \
    \  return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpioryck5q: /tmp/tmpioryck5q.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float s = (a + b + c) / 2.0;\n  float area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n  return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmphjj7pvj3: /tmp/tmphjj7pvj3.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_7g8qjgu: /tmp/tmp_7g8qjgu.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_7g8qjgu: /tmp/tmp_7g8qjgu.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area == 0) {\n        return -1;\n    }\n    return\
    \ area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp0iyc_bt_: /tmp/tmp0iyc_bt_.cpp:22: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        float s = (a + b\
    \ + c) / 2.0;\n        return sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp2y7pqbrj: /tmp/tmp2y7pqbrj.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if (a + b > c && a + c > b && b + c > a) {\n    float s = (a + b + c) /\
    \ 2.0;\n    return sqrt(s * (s - a) * (s - b) * (s - c));\n  }\n  return -1;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp8xcdpnpn: /tmp/tmp8xcdpnpn.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return roundf(area * 100) / 100;\n\
    \    }\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpfqsayv0_: /tmp/tmpfqsayv0_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvn5_x3u_: /tmp/tmpvn5_x3u_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float s = (a + b + c) / 2.0;\n  float area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n  if (area > 0) {\n    return area;\n  }\n  return -1;\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpfb8tg9sh: /tmp/tmpfb8tg9sh.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float s = (a + b + c) / 2.0;\n  float area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n  return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmphjj7pvj3: /tmp/tmphjj7pvj3.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if(a+b>c && a+c>b && b+c>a)\n    return sqrt(a*a+b*b-c*c)*sqrt(a*a+c*c-b*b)*sqrt(b*b+c*c-a*a)/4;\n\
    \  else\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp9navchou: /tmp/tmp9navchou.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt(a*a+b*b-c*c)*sqrt(a*a+c*c-b*b)*sqrt(b*b+c*c-a*a)/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpktjcv9x5: /tmp/tmpktjcv9x5.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // your code here\n  if(a+b>c && a+c>b && b+c>a)\n  {\n    float s = (a+b+c)/2.0;\n\
    \    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;\n  }\n  else\n\
    \  {\n    return -1;\n  }\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpinys1qp_: /tmp/tmpinys1qp_.cpp:28: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvn5_x3u_: /tmp/tmpvn5_x3u_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0)\n        return area;\n    else\n      \
    \  return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpioryck5q: /tmp/tmpioryck5q.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_7g8qjgu: /tmp/tmp_7g8qjgu.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_7g8qjgu: /tmp/tmp_7g8qjgu.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp10mklgv3: /tmp/tmp10mklgv3.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0)\n        return area;\n    else\n      \
    \  return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpioryck5q: /tmp/tmpioryck5q.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float s = (a + b + c) / 2.0;\n  float area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n  if (area > 0) {\n    return area;\n  }\n  return -1;\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpfb8tg9sh: /tmp/tmpfb8tg9sh.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        float s = (a + b\
    \ + c) / 2.0;\n        return sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp2y7pqbrj: /tmp/tmp2y7pqbrj.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // your code here\n    float s = (a+b+c)/2.0;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    if(area > 0)\n        return area;\n    else\n        return -1;\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpw550f46j: /tmp/tmpw550f46j.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvn5_x3u_: /tmp/tmpvn5_x3u_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if(a+b>c && a+c>b && b+c>a)\n  {\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;\n  }\n  else\n  {\n    return\
    \ -1;\n  }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpgxs1qvl7: /tmp/tmpgxs1qvl7.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if (a + b > c && a + c > b && b + c > a) {\n    float s = (a + b + c) /\
    \ 2.0;\n    return sqrt(s * (s - a) * (s - b) * (s - c));\n  }\n  return -1;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp8xcdpnpn: /tmp/tmp8xcdpnpn.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_7g8qjgu: /tmp/tmp_7g8qjgu.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvn5_x3u_: /tmp/tmpvn5_x3u_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area < 0) {\n        return -1;\n    }\n    return\
    \ area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp1a8vlbkf: /tmp/tmp1a8vlbkf.cpp:22: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if (a + b > c && a + c > b && b + c > a) {\n    float s = (a + b + c) /\
    \ 2.0;\n    return sqrt(s * (s - a) * (s - b) * (s - c));\n  }\n  return -1;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp8xcdpnpn: /tmp/tmp8xcdpnpn.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvn5_x3u_: /tmp/tmpvn5_x3u_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp10mklgv3: /tmp/tmp10mklgv3.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a + b > c && a + c > b && b + c > a)\n        return sqrt((a + b +\
    \ c) * (a + b - c) * (a - b + c) * (-a + b + c)) / 4;\n    return -1;\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpp_ry2y3h: /tmp/tmpp_ry2y3h.cpp:20: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_7g8qjgu: /tmp/tmp_7g8qjgu.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        float s = (a + b\
    \ + c) / 2.0;\n        return sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp2y7pqbrj: /tmp/tmp2y7pqbrj.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0)\n        return roundf(area * 100) / 100;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpr8r58sgb: /tmp/tmpr8r58sgb.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float s = (a + b + c) / 2.0;\n  float area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n  if (area > 0) {\n    return area;\n  }\n  return -1;\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpfb8tg9sh: /tmp/tmpfb8tg9sh.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        float s = (a + b\
    \ + c) / 2.0;\n        return sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp2y7pqbrj: /tmp/tmp2y7pqbrj.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if(a+b>c && a+c>b && b+c>a)\n  {\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;\n  }\n  else\n  {\n    return\
    \ -1;\n  }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpgxs1qvl7: /tmp/tmpgxs1qvl7.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return roundf(area * 100) / 100;\n\
    \    }\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpfqsayv0_: /tmp/tmpfqsayv0_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0)\n        return area;\n    else\n      \
    \  return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpioryck5q: /tmp/tmpioryck5q.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvn5_x3u_: /tmp/tmpvn5_x3u_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if (a + b > c && a + c > b && b + c > a) {\n    float s = (a + b + c) /\
    \ 2.0;\n    return sqrt(s * (s - a) * (s - b) * (s - c));\n  }\n  return -1;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp8xcdpnpn: /tmp/tmp8xcdpnpn.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float s = (a + b + c) / 2.0;\n  float area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n  if (area > 0) {\n    return roundf(area * 100) / 100;\n  }\n\
    \  return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpk8xk20i2: /tmp/tmpk8xk20i2.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area <= 0) {\n        return -1;\n    }\n    return\
    \ area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp5vy77vj0: /tmp/tmp5vy77vj0.cpp:22: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvn5_x3u_: /tmp/tmpvn5_x3u_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float s = (a + b + c) / 2.0;\n  float area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n  if (area < 0) {\n    return -1;\n  }\n  return area;\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpk56l6yd7: /tmp/tmpk56l6yd7.cpp:22: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp10mklgv3: /tmp/tmp10mklgv3.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // your code here\n  float s = (a+b+c)/2.0;\n  float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \  if(area > 0)\n    return area;\n  else\n    return -1;\n}\nint main() {\n \
    \   auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpk4dfneyc: /tmp/tmpk4dfneyc.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp10mklgv3: /tmp/tmp10mklgv3.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp10mklgv3: /tmp/tmp10mklgv3.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float s = (a + b + c) / 2.0;\n  float area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n  if (area > 0) {\n    return area;\n  }\n  return -1;\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpfb8tg9sh: /tmp/tmpfb8tg9sh.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp10mklgv3: /tmp/tmp10mklgv3.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvn5_x3u_: /tmp/tmpvn5_x3u_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvn5_x3u_: /tmp/tmpvn5_x3u_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        float s = (a + b\
    \ + c) / 2.0;\n        return sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp2y7pqbrj: /tmp/tmp2y7pqbrj.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0)\n        return area;\n    else\n      \
    \  return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpioryck5q: /tmp/tmpioryck5q.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvn5_x3u_: /tmp/tmpvn5_x3u_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if (a + b > c && a + c > b && b + c > a) {\n    float s = (a + b + c) /\
    \ 2.0;\n    return sqrt(s * (s - a) * (s - b) * (s - c));\n  }\n  return -1;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp8xcdpnpn: /tmp/tmp8xcdpnpn.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // your code here\n  float s = (a+b+c)/2.0;\n  float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \  if(area == 0)\n    return -1;\n  return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrkml43h: /tmp/tmpgrkml43h.cpp:22: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if(a+b>c && a+c>b && b+c>a)\n    return sqrt(a*a+b*b-c*c)*sqrt(a*a+c*c-b*b)*sqrt(b*b+c*c-a*a)/4;\n\
    \  else\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp9navchou: /tmp/tmp9navchou.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_7g8qjgu: /tmp/tmp_7g8qjgu.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if (a + b > c && a + c > b && b + c > a) {\n    float s = (a + b + c) /\
    \ 2.0;\n    return sqrt(s * (s - a) * (s - b) * (s - c));\n  }\n  return -1;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp8xcdpnpn: /tmp/tmp8xcdpnpn.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return roundf(area * 100) / 100;\n\
    \    }\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpfqsayv0_: /tmp/tmpfqsayv0_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_7g8qjgu: /tmp/tmp_7g8qjgu.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvn5_x3u_: /tmp/tmpvn5_x3u_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if (a + b > c && a + c > b && b + c > a) {\n    float s = (a + b + c) /\
    \ 2.0;\n    return sqrt(s * (s - a) * (s - b) * (s - c));\n  }\n  return -1;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp8xcdpnpn: /tmp/tmp8xcdpnpn.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp10mklgv3: /tmp/tmp10mklgv3.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_7g8qjgu: /tmp/tmp_7g8qjgu.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if(a+b>c && a+c>b && b+c>a)\n    return sqrt(a*a+b*b-c*c)*sqrt(a*a+c*c-b*b)*sqrt(b*b+c*c-a*a)/4;\n\
    \  else\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp9navchou: /tmp/tmp9navchou.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvn5_x3u_: /tmp/tmpvn5_x3u_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float s = (a + b + c) / 2.0;\n  float area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n  return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmphjj7pvj3: /tmp/tmphjj7pvj3.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp10mklgv3: /tmp/tmp10mklgv3.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvn5_x3u_: /tmp/tmpvn5_x3u_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_7g8qjgu: /tmp/tmp_7g8qjgu.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp10mklgv3: /tmp/tmp10mklgv3.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_7g8qjgu: /tmp/tmp_7g8qjgu.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float s = (a + b + c) / 2.0;\n  float area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n  if (area > 0) {\n    return roundf(area * 100) / 100;\n  }\n\
    \  return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpk8xk20i2: /tmp/tmpk8xk20i2.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float area =\
    \ sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area>0)\n        return area;\n    else\n\
    \        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n  \
    \  assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmppfxvwuuh: /tmp/tmppfxvwuuh.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float s = (a + b + c) / 2.0;\n  float area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n  if (a + b > c && a + c > b && b + c > a)\n    return area;\n\
    \  else\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp6d1no23z: /tmp/tmp6d1no23z.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp10mklgv3: /tmp/tmp10mklgv3.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float area =\
    \ sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area<=0)\n        return -1;\n    else\n\
    \        return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpr7omqoda: /tmp/tmpr7omqoda.cpp:23: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if(a+b>c && a+c>b && b+c>a)\n    return sqrt(a*a+b*b-c*c)*sqrt(a*a+c*c-b*b)*sqrt(b*b+c*c-a*a)/4;\n\
    \  else\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp9navchou: /tmp/tmp9navchou.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvn5_x3u_: /tmp/tmpvn5_x3u_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp6aa22b_z: /tmp/tmp6aa22b_z.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area <= 0) {\n        return -1;\n    }\n    return\
    \ area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp5vy77vj0: /tmp/tmp5vy77vj0.cpp:22: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float s = (a + b + c) / 2.0;\n  float area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n  return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmphjj7pvj3: /tmp/tmphjj7pvj3.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        float s = (a + b\
    \ + c) / 2.0;\n        return sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp2y7pqbrj: /tmp/tmp2y7pqbrj.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return roundf(area * 100) / 100;\n\
    \    }\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpfqsayv0_: /tmp/tmpfqsayv0_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_7g8qjgu: /tmp/tmp_7g8qjgu.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return roundf(area *\
    \ 100) / 100;\n    }\n    else\n    {\n        return -1;\n    }\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp9akncu_d: /tmp/tmp9akncu_d.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if (a + b > c && a + c > b && b + c > a) {\n    float s = (a + b + c) /\
    \ 2.0;\n    return sqrt(s * (s - a) * (s - b) * (s - c));\n  }\n  return -1;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp8xcdpnpn: /tmp/tmp8xcdpnpn.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvn5_x3u_: /tmp/tmpvn5_x3u_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp6aa22b_z: /tmp/tmp6aa22b_z.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if(a+b>c && a+c>b && b+c>a)\n    return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \  else\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpu8f3ebxm: /tmp/tmpu8f3ebxm.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp636fu7q9: /tmp/tmp636fu7q9.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b<=c || a+c<=b || b+c<=a)\n        return -1;\n    float s = (a+b+c)/2.0;\n\
    \    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpxndt_8fx: /tmp/tmpxndt_8fx.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    return (area > 0) ? area : -1;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp5r9q7geh: /tmp/tmp5r9q7geh.cpp:20: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvn5_x3u_: /tmp/tmpvn5_x3u_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        float s = (a + b\
    \ + c) / 2.0;\n        return sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp2y7pqbrj: /tmp/tmp2y7pqbrj.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return roundf(area *\
    \ 100) / 100;\n    }\n    else\n    {\n        return -1;\n    }\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp9akncu_d: /tmp/tmp9akncu_d.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvn5_x3u_: /tmp/tmpvn5_x3u_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        float s = (a + b\
    \ + c) / 2.0;\n        return sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp2y7pqbrj: /tmp/tmp2y7pqbrj.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // your code here\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float\
    \ s = (a+b+c)/2.0;\n        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n\
    \    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpj2zq3vya: /tmp/tmpj2zq3vya.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp6aa22b_z: /tmp/tmp6aa22b_z.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if (a + b > c && a + c > b && b + c > a) {\n    float s = (a + b + c) /\
    \ 2.0;\n    return sqrt(s * (s - a) * (s - b) * (s - c));\n  }\n  return -1;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp8xcdpnpn: /tmp/tmp8xcdpnpn.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_7g8qjgu: /tmp/tmp_7g8qjgu.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp10mklgv3: /tmp/tmp10mklgv3.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126821

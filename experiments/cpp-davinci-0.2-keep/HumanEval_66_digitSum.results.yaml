name: HumanEval_66_digitSum
language: cpp
results:
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    int sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += (int)s[i];\n        }\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n   \
    \ assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += (int)s[i];\n        }\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n   \
    \ assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    int sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    int sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n  long sum = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n      sum += s[i];\n    }\n  }\n  return sum;\n}\n\
    int main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) ==\
    \ (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n\tlong sum = 0;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n\t\t\tsum += s[i];\n\t\t}\n\t}\n\treturn sum;\n}\n\
    int main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) ==\
    \ (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(isupper(s[i])) {\n            sum += s[i];\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(isupper(s[i])) {\n            sum += s[i];\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    int sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(isupper(s[i])) {\n            sum += s[i];\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    int sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += (int)s[i];\n        }\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n   \
    \ assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n  int sum = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n      sum += s[i];\n    }\n  }\n  return sum;\n}\n\
    int main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) ==\
    \ (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(isupper(s[i])) {\n            sum += s[i];\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n  long sum = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n      sum += s[i];\n    }\n  }\n  return sum;\n}\n\
    int main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) ==\
    \ (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(isupper(s[i])) {\n            sum += s[i];\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(isupper(s[i])) {\n            sum += s[i];\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    int sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    int sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    int sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n  long sum = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n      sum += s[i];\n    }\n  }\n  return sum;\n}\n\
    int main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) ==\
    \ (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += (int)s[i];\n        }\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n   \
    \ assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    int sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n  long sum = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n      sum += s[i];\n    }\n  }\n  return sum;\n}\n\
    int main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) ==\
    \ (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(isupper(s[i])) {\n            sum += s[i];\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(isupper(s[i])) {\n            sum += s[i];\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    int sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += (int)s[i];\n        }\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n   \
    \ assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n  long sum = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n      sum += s[i];\n    }\n  }\n  return sum;\n}\n\
    int main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) ==\
    \ (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(isupper(s[i])) {\n            sum += s[i];\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n  long sum = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n      sum += s[i];\n    }\n  }\n  return sum;\n}\n\
    int main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) ==\
    \ (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(isupper(s[i])) {\n            sum += s[i];\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n  long sum = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n      sum += s[i];\n    }\n  }\n  return sum;\n}\n\
    int main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) ==\
    \ (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") =>\
    \ 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"\
    woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlong digitSum(std::string\
    \ s) {\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

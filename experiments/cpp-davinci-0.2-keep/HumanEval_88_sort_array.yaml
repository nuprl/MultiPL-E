name: HumanEval_88_sort_array
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an array of non-negative\
  \ integers, return a copy of the given array after sorting,\n// you will sort the\
  \ given array in ascending order if the sum( first index value, last index value)\
  \ is odd,\n// or sort it in descending order if the sum( first index value, last\
  \ index value) is even.\n// Note:\n// * don't change the given array.\n// Examples:\n\
  // * sort_array([]) => []\n// * sort_array([5]) => [5]\n// * sort_array([2, 4, 3,\
  \ 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n// * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6,\
  \ 5, 4, 3, 2, 1, 0]\nstd::vector<long> sort_array(std::vector<long> array) {\n"
tests: "}\nint main() {\n    auto candidate = sort_array;\n    assert(candidate((std::vector<long>()))\
  \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)5})))\
  \ == (std::vector<long>({(long)5})));\n    assert(candidate((std::vector<long>({(long)2,\
  \ (long)4, (long)3, (long)0, (long)1, (long)5}))) == (std::vector<long>({(long)0,\
  \ (long)1, (long)2, (long)3, (long)4, (long)5})));\n    assert(candidate((std::vector<long>({(long)2,\
  \ (long)4, (long)3, (long)0, (long)1, (long)5, (long)6}))) == (std::vector<long>({(long)6,\
  \ (long)5, (long)4, (long)3, (long)2, (long)1, (long)0})));\n    assert(candidate((std::vector<long>({(long)2,\
  \ (long)1}))) == (std::vector<long>({(long)1, (long)2})));\n    assert(candidate((std::vector<long>({(long)15,\
  \ (long)42, (long)87, (long)32, (long)11, (long)0}))) == (std::vector<long>({(long)0,\
  \ (long)11, (long)15, (long)32, (long)42, (long)87})));\n    assert(candidate((std::vector<long>({(long)21,\
  \ (long)14, (long)23, (long)11}))) == (std::vector<long>({(long)23, (long)21, (long)14,\
  \ (long)11})));\n}\n"
completions: ["  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0)\
    \ {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n  } else\
    \ {\n    std::sort(array.begin(), array.end());\n  }\n  return array;", "  std::vector<long>\
    \ result;\n  if (array.size() == 0) return result;\n  if (array.size() == 1) return\
    \ array;\n  if (array.size() % 2 == 0) {\n    std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n  } else {\n    std::sort(array.begin(), array.end());\n\
    \  }\n  return array;", "  if (array.size() == 0) {\n    return array;\n  }\n\
    \  if (array.size() == 1) {\n    return array;\n  }\n  if ((array[0] + array[array.size()\
    \ - 1]) % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    if (array.size() == 0) return array;\n    if (array.size() == 1) return array;\n\
    \    if (array.size() == 2) {\n        if ((array[0] + array[1]) % 2 == 0) {\n\
    \            std::swap(array[0], array[1]);\n        }\n        return array;\n\
    \    }\n    std::sort(array.begin(), array.end());\n    if ((array[0] + array[array.size()\
    \ - 1]) % 2 == 0) {\n        std::reverse(array.begin(), array.end());\n    }\n\
    \    return array;", "  std::vector<long> result;\n  if (array.size() == 0) {\n\
    \    return result;\n  }\n  if (array.size() == 1) {\n    return array;\n  }\n\
    \  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  std::vector<long> result;\n  if (array.size()\
    \ == 0) {\n    return result;\n  }\n  if (array.size() == 1) {\n    return array;\n\
    \  }\n  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  if (array.size() == 0) {\n    return\
    \ array;\n  }\n  if (array.size() == 1) {\n    return array;\n  }\n  if (array.size()\
    \ == 2) {\n    if (array[0] > array[1]) {\n      std::swap(array[0], array[1]);\n\
    \    }\n    return array;\n  }\n  if ((array[0] + array[array.size() - 1]) % 2\
    \ == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  // your code here\n  std::vector<long> result;\n  if(array.size() == 0)\n   \
    \ return result;\n  if(array.size() == 1)\n    return array;\n  if((array[0] +\
    \ array[array.size() - 1]) % 2 == 0)\n  {\n    std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n    return array;\n  }\n  else\n  {\n    std::sort(array.begin(),\
    \ array.end());\n    return array;\n  }", "  if (array.size() == 0) {\n    return\
    \ array;\n  }\n  if (array.size() == 1) {\n    return array;\n  }\n  if (array.size()\
    \ == 2) {\n    if (array[0] > array[1]) {\n      std::swap(array[0], array[1]);\n\
    \    }\n    return array;\n  }\n  if ((array[0] + array[array.size() - 1]) % 2\
    \ == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  if (array.size() == 0) {\n    return array;\n  }\n  if (array.size() == 1) {\n\
    \    return array;\n  }\n  if (array.size() == 2) {\n    if (array[0] > array[1])\
    \ {\n      std::swap(array[0], array[1]);\n    }\n    return array;\n  }\n  if\
    \ ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  if (array.size() == 0) {\n    return\
    \ array;\n  }\n  if (array.size() == 1) {\n    return array;\n  }\n  if (array.size()\
    \ == 2) {\n    if (array[0] > array[1]) {\n      std::swap(array[0], array[1]);\n\
    \    }\n    return array;\n  }\n  if ((array[0] + array[array.size() - 1]) % 2\
    \ == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  if (array.size() == 0) return array;\n  if (array.size() == 1) return array;\n\
    \  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    std::vector<long> result;\n    if\
    \ (array.size() == 0) {\n        return result;\n    }\n    if (array.size() ==\
    \ 1) {\n        result.push_back(array[0]);\n        return result;\n    }\n \
    \   if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n        std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n    } else {\n        std::sort(array.begin(),\
    \ array.end());\n    }\n    return array;", "  if(array.size() == 0) return array;\n\
    \  if(array.size() == 1) return array;\n  long sum = array[0] + array[array.size()\
    \ - 1];\n  if(sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  if(array.size() == 0) return array;\n  if(array.size() == 1) return array;\n\
    \  if((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  // your code here\n  long sum = array[0]\
    \ + array[array.size()-1];\n  if(sum % 2 == 0){\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  }\n  else{\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    std::vector<long> result;\n    if(array.size()\
    \ == 0)\n        return result;\n    if(array.size() == 1)\n        return array;\n\
    \    if((array[0] + array[array.size() - 1]) % 2 == 0)\n        std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n    else\n        std::sort(array.begin(),\
    \ array.end());\n    return array;", "    if(array.size() == 0) return array;\n\
    \    if(array.size() == 1) return array;\n    if(array.size() == 2) {\n      \
    \  if((array[0] + array[1]) % 2 == 0) {\n            std::swap(array[0], array[1]);\n\
    \        }\n        return array;\n    }\n    if((array[0] + array[array.size()\
    \ - 1]) % 2 == 0) {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    } else {\n        std::sort(array.begin(), array.end());\n    }\n    return\
    \ array;", "  if (array.size() == 0) return array;\n  if (array.size() == 1) return\
    \ array;\n  if (array.size() == 2) {\n    if ((array[0] + array[1]) % 2 == 0)\
    \ {\n      std::swap(array[0], array[1]);\n    }\n    return array;\n  }\n  int\
    \ sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  if (array.size() == 0) return array;\n\
    \  if (array.size() == 1) return array;\n  if (array.size() == 2) {\n    if ((array[0]\
    \ + array[1]) % 2 == 0) {\n      std::swap(array[0], array[1]);\n    }\n    return\
    \ array;\n  }\n  int i = 0;\n  int j = array.size() - 1;\n  while (i < j) {\n\
    \    if ((array[i] + array[j]) % 2 == 0) {\n      std::swap(array[i], array[j]);\n\
    \    }\n    i++;\n    j--;\n  }\n  std::sort(array.begin(), array.end());\n  return\
    \ array;", "  if (array.size() == 0) {\n    return array;\n  }\n  if (array.size()\
    \ == 1) {\n    return array;\n  }\n  int sum = array[0] + array[array.size() -\
    \ 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  if (array.size() == 0) {\n    return array;\n  }\n  if (array.size() == 1) {\n\
    \    return array;\n  }\n  if (array.size() == 2) {\n    if (array[0] > array[1])\
    \ {\n      std::swap(array[0], array[1]);\n    }\n    return array;\n  }\n  if\
    \ ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  std::vector<long> result;\n  if(array.size()\
    \ == 0)\n    return result;\n  if(array.size() == 1)\n    return array;\n  if((array[0]\
    \ + array[array.size() - 1]) % 2 == 0)\n    std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n  else\n    std::sort(array.begin(), array.end());\n\
    \  return array;", "  int sum = array[0] + array[array.size() - 1];\n  if (sum\
    \ % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    if (array.size() == 0) {\n        return array;\n    }\n    if (array.size()\
    \ == 1) {\n        return array;\n    }\n    if (array.size() == 2) {\n      \
    \  if (array[0] > array[1]) {\n            std::swap(array[0], array[1]);\n  \
    \      }\n        return array;\n    }\n    if ((array[0] + array[array.size()\
    \ - 1]) % 2 == 0) {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    } else {\n        std::sort(array.begin(), array.end());\n    }\n    return\
    \ array;", "  if(array.size() == 0) return array;\n  if(array.size() == 1) return\
    \ array;\n  if((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  std::vector<long> result;\n  if(array.size()\
    \ == 0) return result;\n  if(array.size() == 1) return array;\n  if(array.size()\
    \ == 2) {\n    if((array[0] + array[1]) % 2 == 0) {\n      result.push_back(array[1]);\n\
    \      result.push_back(array[0]);\n    } else {\n      result.push_back(array[0]);\n\
    \      result.push_back(array[1]);\n    }\n    return result;\n  }\n  std::vector<long>\
    \ odd;\n  std::vector<long> even;\n  for(int i = 0; i < array.size(); i++) {\n\
    \    if(array[i] % 2 == 0) {\n      even.push_back(array[i]);\n    } else {\n\
    \      odd.push_back(array[i]);\n    }\n  }\n  std::sort(odd.begin(), odd.end());\n\
    \  std::sort(even.begin(), even.end());\n  if((array[0] + array[array.size() -\
    \ 1]) % 2 == 0) {\n    std::reverse(even.begin(), even.end());\n  }\n  for(int\
    \ i = 0; i < odd.size(); i++) {\n    result.push_back(odd[i]);\n  }\n  for(int\
    \ i = 0; i < even.size(); i++) {\n    result.push_back(even[i]);\n  }\n  return\
    \ result;", "  if (array.size() == 0) return array;\n  if (array.size() == 1)\
    \ return array;\n  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  if (array.size() == 0) {\n    return\
    \ array;\n  }\n  if (array.size() == 1) {\n    return array;\n  }\n  if (array.size()\
    \ == 2) {\n    if (array[0] > array[1]) {\n      std::swap(array[0], array[1]);\n\
    \    }\n    return array;\n  }\n  if ((array[0] + array[array.size() - 1]) % 2\
    \ == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  std::vector<long> result;\n  if (array.size() == 0) return result;\n  if (array.size()\
    \ == 1) return array;\n  if (array.size() == 2) {\n    if (array[0] > array[1])\
    \ {\n      std::swap(array[0], array[1]);\n    }\n    return array;\n  }\n  if\
    \ ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    if (array.size() == 0) return array;\n\
    \    if (array.size() == 1) return array;\n    if ((array[0] + array[array.size()\
    \ - 1]) % 2 == 0) {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    } else {\n        std::sort(array.begin(), array.end());\n    }\n    return\
    \ array;", "    // your code here\n    if(array.size() == 0)\n        return array;\n\
    \    if(array.size() == 1)\n        return array;\n    if((array[0] + array[array.size()\
    \ - 1]) % 2 == 0)\n    {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    }\n    else\n    {\n        std::sort(array.begin(), array.end());\n    }\n\
    \    return array;", "    if(array.size() == 0)\n        return array;\n    if(array.size()\
    \ == 1)\n        return array;\n    if((array[0] + array[array.size() - 1]) %\
    \ 2 == 0)\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    else\n        std::sort(array.begin(), array.end());\n    return array;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  std::vector<long> result;\n  if (array.size()\
    \ == 0) {\n    return result;\n  }\n  if (array.size() == 1) {\n    return array;\n\
    \  }\n  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  if (array.size() == 0) {\n    return\
    \ array;\n  }\n  if (array.size() == 1) {\n    return array;\n  }\n  if ((array[0]\
    \ + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n  } else {\n    std::sort(array.begin(), array.end());\n\
    \  }\n  return array;", "  if (array.size() == 0) return array;\n  if (array.size()\
    \ == 1) return array;\n  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n\
    \    std::sort(array.begin(), array.end(), std::greater<long>());\n  } else {\n\
    \    std::sort(array.begin(), array.end());\n  }\n  return array;", "    std::vector<long>\
    \ result;\n    if (array.size() == 0) {\n        return result;\n    }\n    if\
    \ (array.size() == 1) {\n        result.push_back(array[0]);\n        return result;\n\
    \    }\n    if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n        std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n    } else {\n        std::sort(array.begin(),\
    \ array.end());\n    }\n    return array;", "    // your code here\n    if(array.size()\
    \ == 0)\n        return array;\n    if(array.size() == 1)\n        return array;\n\
    \    if((array[0] + array[array.size() - 1]) % 2 == 0)\n    {\n        std::sort(array.begin(),\
    \ array.end(), std::greater<int>());\n    }\n    else\n    {\n        std::sort(array.begin(),\
    \ array.end());\n    }\n    return array;", "  if (array.size() == 0) return array;\n\
    \  if (array.size() == 1) return array;\n  if ((array[0] + array[array.size()\
    \ - 1]) % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  if (array.size() == 0) return array;\n  if (array.size() == 1) return array;\n\
    \  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  if (array.size() == 0) {\n    return\
    \ array;\n  }\n  if (array.size() == 1) {\n    return array;\n  }\n  if (array.size()\
    \ == 2) {\n    if (array[0] > array[1]) {\n      std::swap(array[0], array[1]);\n\
    \    }\n    return array;\n  }\n  if ((array[0] + array[array.size() - 1]) % 2\
    \ == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  // your code here\n  return array;", "  if (array.size() == 0) return array;\n\
    \  if (array.size() == 1) return array;\n  if ((array[0] + array[array.size()\
    \ - 1]) % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  std::vector<long> result;\n  if (array.size()\
    \ == 0) {\n    return result;\n  }\n  if (array.size() == 1) {\n    return array;\n\
    \  }\n  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  if (array.size() == 0) return array;\n\
    \  if (array.size() == 1) return array;\n  if ((array[0] + array[array.size()\
    \ - 1]) % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  if (array.size() == 0) {\n    return array;\n  }\n  if (array.size() == 1) {\n\
    \    return array;\n  }\n  if (array.size() == 2) {\n    if (array[0] > array[1])\
    \ {\n      std::swap(array[0], array[1]);\n    }\n    return array;\n  }\n  int\
    \ sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  int sum = array[0] + array[array.size()\
    \ - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  if (array.size() == 0) return array;\n  if (array.size() == 1) return array;\n\
    \  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    if(array.size() == 0)\n        return\
    \ array;\n    if(array.size() == 1)\n        return array;\n    if((array[0] +\
    \ array[array.size() - 1]) % 2 == 0)\n        std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n    else\n        std::sort(array.begin(), array.end());\n\
    \    return array;", "  if(array.size() == 0) return array;\n  if(array.size()\
    \ == 1) return array;\n  if((array[0] + array[array.size() - 1]) % 2 == 0) {\n\
    \    std::sort(array.begin(), array.end(), std::greater<long>());\n  } else {\n\
    \    std::sort(array.begin(), array.end());\n  }\n  return array;", "  if (array.size()\
    \ == 0) return array;\n  if (array.size() == 1) return array;\n  if ((array[0]\
    \ + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n  } else {\n    std::sort(array.begin(), array.end());\n\
    \  }\n  return array;", "    if(array.size() == 0)\n        return array;\n  \
    \  if(array.size() == 1)\n        return array;\n    if((array[0] + array[array.size()\
    \ - 1]) % 2 == 0)\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    else\n        std::sort(array.begin(), array.end());\n    return array;",
  "    // your code here\n    int sum = array[0] + array[array.size()-1];\n    if(sum\
    \ % 2 == 0) {\n        std::sort(array.begin(), array.end(), std::greater<int>());\n\
    \    } else {\n        std::sort(array.begin(), array.end());\n    }\n    return\
    \ array;", "    if(array.size() == 0)\n        return array;\n    if(array.size()\
    \ == 1)\n        return array;\n    if((array[0] + array[array.size() - 1]) %\
    \ 2 == 0)\n        std::sort(array.begin(), array.end(), std::greater<int>());\n\
    \    else\n        std::sort(array.begin(), array.end());\n    return array;",
  "  if (array.size() == 0) return array;\n  if (array.size() == 1) return array;\n\
    \  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    if(array.size() == 0) return array;\n\
    \    if(array.size() == 1) return array;\n    if(array.size() == 2) {\n      \
    \  if(array[0] > array[1]) {\n            std::swap(array[0], array[1]);\n   \
    \     }\n        return array;\n    }\n    if((array[0] + array[array.size() -\
    \ 1]) % 2 == 0) {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    } else {\n        std::sort(array.begin(), array.end());\n    }\n    return\
    \ array;", "  if (array.size() == 0) {\n    return array;\n  }\n  if (array.size()\
    \ == 1) {\n    return array;\n  }\n  if (array.size() == 2) {\n    if (array[0]\
    \ > array[1]) {\n      std::swap(array[0], array[1]);\n    }\n    return array;\n\
    \  }\n  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  int sum = array[0] + array[array.size()\
    \ - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 == 0) {\n  \
    \      std::sort(array.begin(), array.end(), std::greater<long>());\n    } else\
    \ {\n        std::sort(array.begin(), array.end());\n    }\n    return array;",
  "  if (array.size() == 0) return array;\n  if (array.size() == 1) return array;\n\
    \  if (array.size() == 2) {\n    if ((array[0] + array[1]) % 2 == 0) {\n     \
    \ std::swap(array[0], array[1]);\n    }\n    return array;\n  }\n  std::vector<long>\
    \ result;\n  int left = 0;\n  int right = array.size() - 1;\n  while (left <=\
    \ right) {\n    if ((array[left] + array[right]) % 2 == 0) {\n      result.push_back(array[right]);\n\
    \      right--;\n    } else {\n      result.push_back(array[left]);\n      left++;\n\
    \    }\n  }\n  return result;", "  if (array.size() == 0) {\n    return array;\n\
    \  }\n  if (array.size() == 1) {\n    return array;\n  }\n  if (array.size() ==\
    \ 2) {\n    if (array[0] > array[1]) {\n      std::swap(array[0], array[1]);\n\
    \    }\n    return array;\n  }\n  if ((array[0] + array[array.size() - 1]) % 2\
    \ == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 == 0) {\n  \
    \      std::sort(array.begin(), array.end(), std::greater<long>());\n    } else\
    \ {\n        std::sort(array.begin(), array.end());\n    }\n    return array;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  std::vector<long> result;\n  if (array.size()\
    \ == 0) {\n    return result;\n  }\n  if (array.size() == 1) {\n    return array;\n\
    \  }\n  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  if (array.size() == 0) {\n    return\
    \ array;\n  }\n  if (array.size() == 1) {\n    return array;\n  }\n  if (array.size()\
    \ == 2) {\n    if (array[0] > array[1]) {\n      std::swap(array[0], array[1]);\n\
    \    }\n    return array;\n  }\n  if ((array[0] + array[array.size() - 1]) % 2\
    \ == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  std::vector<long> result;\n  if (array.size() == 0) {\n    return result;\n \
    \ }\n  if (array.size() == 1) {\n    return array;\n  }\n  if ((array[0] + array[array.size()\
    \ - 1]) % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  // your code here\n  if(array.size()==0)\n    return array;\n  if(array.size()==1)\n\
    \    return array;\n  if((array[0]+array[array.size()-1])%2==0)\n  {\n    std::sort(array.begin(),array.end(),std::greater<long>());\n\
    \  }\n  else\n  {\n    std::sort(array.begin(),array.end());\n  }\n  return array;",
  "  if (array.size() == 0) return array;\n  if (array.size() == 1) return array;\n\
    \  if (array.size() % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  std::vector<long> result;\n  if (array.size() == 0) {\n    return result;\n \
    \ }\n  if (array.size() == 1) {\n    return array;\n  }\n  if ((array[0] + array[array.size()\
    \ - 1]) % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  if (array.size() == 0) {\n    return array;\n  }\n  if (array.size() == 1) {\n\
    \    return array;\n  }\n  if (array.size() == 2) {\n    if (array[0] > array[1])\
    \ {\n      std::swap(array[0], array[1]);\n    }\n    return array;\n  }\n  if\
    \ ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  // your code here\n  std::vector<long>\
    \ sorted;\n  if(array.size() == 0)\n    return sorted;\n  if(array.size() == 1)\n\
    \    return array;\n  if((array[0] + array[array.size() - 1]) % 2 == 0)\n  {\n\
    \    std::sort(array.begin(), array.end(), std::greater<long>());\n    return\
    \ array;\n  }\n  else\n  {\n    std::sort(array.begin(), array.end());\n    return\
    \ array;\n  }", "  std::vector<long> result;\n  if (array.size() == 0) {\n   \
    \ return result;\n  }\n  if (array.size() == 1) {\n    return array;\n  }\n  if\
    \ ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  std::vector<long> result;\n  if (array.size()\
    \ == 0) {\n    return result;\n  }\n  if (array.size() == 1) {\n    return array;\n\
    \  }\n  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  // your code here\n  if (array.size()\
    \ == 0) {\n    return array;\n  }\n  if (array.size() == 1) {\n    return array;\n\
    \  }\n  if (array.size() == 2) {\n    if (array[0] > array[1]) {\n      std::swap(array[0],\
    \ array[1]);\n    }\n    return array;\n  }\n  if ((array[0] + array[array.size()\
    \ - 1]) % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  if (array.size() == 0) return array;\n  if (array.size() == 1) return array;\n\
    \  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  if (array.size() == 0 || array.size()\
    \ == 1) {\n    return array;\n  }\n  int sum = array[0] + array[array.size() -\
    \ 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  if(array.size() == 0) return array;\n  if(array.size() == 1) return array;\n\
    \  if((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  // your code here\n  if(array.size()\
    \ == 0) return array;\n  if(array.size() == 1) return array;\n  if((array[0] +\
    \ array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n  } else {\n    std::sort(array.begin(), array.end());\n\
    \  }\n  return array;", "  int n = array.size();\n  if(n == 0 || n == 1) return\
    \ array;\n  int sum = array[0] + array[n-1];\n  if(sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<int>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  if(array.size() == 0) return array;\n\
    \  if(array.size() == 1) return array;\n  if((array[0] + array[array.size() -\
    \ 1]) % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  std::vector<long> result;\n  if (array.size() == 0) {\n    return result;\n \
    \ }\n  if (array.size() == 1) {\n    return array;\n  }\n  if ((array[0] + array[array.size()\
    \ - 1]) % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  // your code here\n  std::vector<long> result;\n  if(array.size() == 0)\n   \
    \ return result;\n  if(array.size() == 1)\n    return array;\n  if((array[0] +\
    \ array[array.size() - 1]) % 2 == 0)\n  {\n    std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n    return array;\n  }\n  else\n  {\n    std::sort(array.begin(),\
    \ array.end());\n    return array;\n  }", "    if(array.size() == 0)\n       \
    \ return array;\n    if(array.size() == 1)\n        return array;\n    if((array[0]\
    \ + array[array.size() - 1]) % 2 == 0)\n        std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n    else\n        std::sort(array.begin(), array.end());\n\
    \    return array;", "  if (array.size() == 0) {\n    return array;\n  }\n  if\
    \ (array.size() == 1) {\n    return array;\n  }\n  if (array.size() == 2) {\n\
    \    if (array[0] > array[1]) {\n      std::swap(array[0], array[1]);\n    }\n\
    \    return array;\n  }\n  if ((array[0] + array[array.size() - 1]) % 2 == 0)\
    \ {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n  } else\
    \ {\n    std::sort(array.begin(), array.end());\n  }\n  return array;", "  if\
    \ (array.size() == 0) return array;\n  if (array.size() == 1) return array;\n\
    \  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  std::vector<long> result;\n  if (array.size()\
    \ == 0) {\n    return result;\n  }\n  if (array.size() == 1) {\n    return array;\n\
    \  }\n  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  std::vector<long> result;\n  if (array.size()\
    \ == 0) {\n    return result;\n  }\n  if (array.size() == 1) {\n    return array;\n\
    \  }\n  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  // your code here\n  long sum = array[0]\
    \ + array[array.size()-1];\n  if(sum % 2 == 0){\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  }\n  else{\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  int sum = array[0] + array[array.size()\
    \ - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  if (array.size() == 0) {\n    return array;\n  }\n  if (array.size() == 1) {\n\
    \    return array;\n  }\n  if (array.size() == 2) {\n    if (array[0] > array[1])\
    \ {\n      std::swap(array[0], array[1]);\n    }\n    return array;\n  }\n  if\
    \ ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  std::vector<long> result;\n  if (array.size()\
    \ == 0) {\n    return result;\n  }\n  if (array.size() == 1) {\n    return array;\n\
    \  }\n  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    // your code here\n    std::vector<long>\
    \ v;\n    if(array.size()==0)\n    {\n        return v;\n    }\n    else if(array.size()==1)\n\
    \    {\n        return array;\n    }\n    else\n    {\n        if((array[0]+array[array.size()-1])%2==0)\n\
    \        {\n            std::sort(array.begin(),array.end(),std::greater<long>());\n\
    \            return array;\n        }\n        else\n        {\n            std::sort(array.begin(),array.end());\n\
    \            return array;\n        }\n    }", "    if(array.size() == 0 || array.size()\
    \ == 1)\n        return array;\n    int sum = array[0] + array[array.size() -\
    \ 1];\n    if(sum % 2 == 0)\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    else\n        std::sort(array.begin(), array.end());\n    return array;",
  "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 == 0) {\n  \
    \      std::sort(array.begin(), array.end(), std::greater<long>());\n    } else\
    \ {\n        std::sort(array.begin(), array.end());\n    }\n    return array;",
  "  std::vector<long> temp;\n  int sum = array[0] + array[array.size() - 1];\n  if\
    \ (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  if (array.size() == 0) {\n    return array;\n  }\n  if (array.size() == 1) {\n\
    \    return array;\n  }\n  if (array.size() == 2) {\n    if (array[0] > array[1])\
    \ {\n      std::swap(array[0], array[1]);\n    }\n    return array;\n  }\n  if\
    \ ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  // your code here\n  std::vector<long>\
    \ res;\n  if(array.size() == 0) return res;\n  if(array.size() == 1) return array;\n\
    \  if((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  if (array.size() == 0) {\n    return\
    \ array;\n  }\n  if (array.size() == 1) {\n    return array;\n  }\n  if (array.size()\
    \ == 2) {\n    if (array[0] > array[1]) {\n      std::swap(array[0], array[1]);\n\
    \    }\n    return array;\n  }\n  if ((array[0] + array[array.size() - 1]) % 2\
    \ == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  if (array.size() == 0) {\n    return array;\n  }\n  if (array.size() == 1) {\n\
    \    return array;\n  }\n  if (array.size() == 2) {\n    if (array[0] > array[1])\
    \ {\n      std::swap(array[0], array[1]);\n    }\n    return array;\n  }\n  if\
    \ ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    if(array.size() == 0)\n        return\
    \ array;\n    if(array.size() == 1)\n        return array;\n    if((array[0] +\
    \ array[array.size() - 1]) % 2 == 0)\n        std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n    else\n        std::sort(array.begin(), array.end());\n\
    \    return array;", "  int sum = array[0] + array[array.size() - 1];\n  if (sum\
    \ % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  if (array.size() == 0) return array;\n  if (array.size() == 1) return array;\n\
    \  if (array.size() == 2) {\n    if ((array[0] + array[1]) % 2 == 0) {\n     \
    \ if (array[0] < array[1]) {\n        std::swap(array[0], array[1]);\n      }\n\
    \    }\n    return array;\n  }\n  if ((array[0] + array[array.size() - 1]) % 2\
    \ == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 == 0) {\n  \
    \      std::sort(array.begin(), array.end(), std::greater<long>());\n    } else\
    \ {\n        std::sort(array.begin(), array.end());\n    }\n    return array;",
  "  std::vector<long> result;\n  if (array.size() == 0) {\n    return result;\n \
    \ }\n  if (array.size() == 1) {\n    return array;\n  }\n  if ((array[0] + array[array.size()\
    \ - 1]) % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<int>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  std::vector<long> result;\n  if (array.size() == 0) {\n    return result;\n \
    \ }\n  if (array.size() == 1) {\n    return array;\n  }\n  if ((array[0] + array[array.size()\
    \ - 1]) % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    std::vector<long> result;\n    if(array.size() == 0)\n        return result;\n\
    \    if(array.size() == 1)\n        return array;\n    if((array[0] + array[array.size()\
    \ - 1]) % 2 == 0)\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    else\n        std::sort(array.begin(), array.end());\n    return array;",
  "  if (array.size() == 0) return array;\n  if (array.size() == 1) return array;\n\
    \  if (array.size() == 2) {\n    if ((array[0] + array[1]) % 2 == 0) {\n     \
    \ std::swap(array[0], array[1]);\n    }\n    return array;\n  }\n  if ((array[0]\
    \ + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n  } else {\n    std::sort(array.begin(), array.end());\n\
    \  }\n  return array;", "  std::vector<long> result;\n  if (array.size() == 0)\
    \ {\n    return result;\n  }\n  if (array.size() == 1) {\n    return array;\n\
    \  }\n  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    if (array.size() == 0) {\n      \
    \  return array;\n    }\n    if (array.size() == 1) {\n        return array;\n\
    \    }\n    if (array.size() == 2) {\n        if (array[0] > array[1]) {\n   \
    \         std::swap(array[0], array[1]);\n        }\n        return array;\n \
    \   }\n    if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n        std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n    } else {\n        std::sort(array.begin(),\
    \ array.end());\n    }\n    return array;", "  int n = array.size();\n  if(n ==\
    \ 0) return array;\n  if(n == 1) return array;\n  int sum = array[0] + array[n-1];\n\
    \  if(sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  std::vector<long> result;\n  if (array.size() == 0) {\n    return result;\n \
    \ }\n  if (array.size() == 1) {\n    return array;\n  }\n  if ((array[0] + array[array.size()\
    \ - 1]) % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    std::vector<long> result;\n    if\
    \ (array.size() == 0) {\n        return result;\n    }\n    if (array.size() ==\
    \ 1) {\n        result.push_back(array[0]);\n        return result;\n    }\n \
    \   if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n        std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n    } else {\n        std::sort(array.begin(),\
    \ array.end());\n    }\n    return array;", "  if (array.size() == 0) return array;\n\
    \  if (array.size() == 1) return array;\n  if ((array[0] + array[array.size()\
    \ - 1]) % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  std::vector<long> sorted;\n  if (array.size() == 0) {\n    return sorted;\n \
    \ }\n  if (array.size() == 1) {\n    sorted.push_back(array[0]);\n    return sorted;\n\
    \  }\n  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    if (array.size() == 0) return array;\n\
    \    if (array.size() == 1) return array;\n    if (array.size() == 2) {\n    \
    \    if ((array[0] + array[1]) % 2 == 0) {\n            std::swap(array[0], array[1]);\n\
    \        }\n        return array;\n    }\n    if ((array[0] + array[array.size()\
    \ - 1]) % 2 == 0) {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    } else {\n        std::sort(array.begin(), array.end());\n    }\n    return\
    \ array;", "  if (array.size() == 0) {\n    return array;\n  }\n  if (array.size()\
    \ == 1) {\n    return array;\n  }\n  if (array.size() == 2) {\n    if (array[0]\
    \ > array[1]) {\n      std::swap(array[0], array[1]);\n    }\n    return array;\n\
    \  }\n  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    if(array.size() == 0) return array;\n\
    \    if(array.size() == 1) return array;\n    if(array.size() == 2) {\n      \
    \  if(array[0] > array[1]) {\n            std::swap(array[0], array[1]);\n   \
    \     }\n        return array;\n    }\n    if((array[0] + array[array.size() -\
    \ 1]) % 2 == 0) {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    } else {\n        std::sort(array.begin(), array.end());\n    }\n    return\
    \ array;", "  if (array.size() == 0) return array;\n  if (array.size() == 1) return\
    \ array;\n  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    int sum = array[0] + array[array.size()\
    \ - 1];\n    if (sum % 2 == 0) {\n        std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n    } else {\n        std::sort(array.begin(), array.end());\n\
    \    }\n    return array;", "  if (array.size() == 0) return array;\n  if (array.size()\
    \ == 1) return array;\n  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n\
    \    std::sort(array.begin(), array.end(), std::greater<long>());\n  } else {\n\
    \    std::sort(array.begin(), array.end());\n  }\n  return array;", "  std::vector<long>\
    \ result;\n  if (array.size() == 0) {\n    return result;\n  }\n  if (array.size()\
    \ == 1) {\n    return array;\n  }\n  int sum = array[0] + array[array.size() -\
    \ 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  // your code here\n  int sum = array[0] + array[array.size()-1];\n  if(sum %\
    \ 2 == 0){\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  }\n  else{\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  if (array.size() == 0) return array;\n  if (array.size() == 1) return array;\n\
    \  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    if (array.size() <= 1) return array;\n\
    \    if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n        std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n    } else {\n        std::sort(array.begin(),\
    \ array.end());\n    }\n    return array;", "  std::vector<long> sorted;\n  if\
    \ (array.size() == 0) {\n    return sorted;\n  }\n  if (array.size() == 1) {\n\
    \    sorted.push_back(array[0]);\n    return sorted;\n  }\n  if ((array[0] + array[array.size()\
    \ - 1]) % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  if(array.size() == 0) return array;\n\
    \  if(array.size() == 1) return array;\n  if((array[0] + array[array.size() -\
    \ 1]) % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  if (array.size() == 0) return array;\n  if (array.size() == 1) return array;\n\
    \  if (array.size() == 2) {\n    if ((array[0] + array[1]) % 2 == 0) {\n     \
    \ std::swap(array[0], array[1]);\n    }\n    return array;\n  }\n  int i = 0;\n\
    \  int j = array.size() - 1;\n  while (i < j) {\n    if ((array[i] + array[j])\
    \ % 2 == 0) {\n      std::swap(array[i], array[j]);\n    }\n    i++;\n    j--;\n\
    \  }\n  std::sort(array.begin(), array.end());\n  return array;", "  // your code\
    \ here\n  long sum = array[0] + array[array.size()-1];\n  if(sum % 2 == 0){\n\
    \    std::sort(array.begin(), array.end(), std::greater<long>());\n  }\n  else{\n\
    \    std::sort(array.begin(), array.end());\n  }\n  return array;", "  // your\
    \ code here\n  int sum = array[0] + array[array.size()-1];\n  if(sum % 2 == 0){\n\
    \    std::sort(array.begin(), array.end(), std::greater<long>());\n  }\n  else{\n\
    \    std::sort(array.begin(), array.end());\n  }\n  return array;", "  if(array.size()\
    \ == 0)\n    return array;\n  if(array.size() == 1)\n    return array;\n  if((array[0]\
    \ + array[array.size() - 1]) % 2 == 0)\n    std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n  else\n    std::sort(array.begin(), array.end());\n\
    \  return array;", "    std::vector<long> result;\n    if (array.size() == 0)\
    \ {\n        return result;\n    }\n    if (array.size() == 1) {\n        result.push_back(array[0]);\n\
    \        return result;\n    }\n    if ((array[0] + array[array.size() - 1]) %\
    \ 2 == 0) {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    } else {\n        std::sort(array.begin(), array.end());\n    }\n    return\
    \ array;", "  if(array.size() == 0) return array;\n  if(array.size() == 1) return\
    \ array;\n  int sum = array[0] + array[array.size() - 1];\n  if(sum % 2 == 0)\
    \ {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n  } else\
    \ {\n    std::sort(array.begin(), array.end());\n  }\n  return array;", "  if\
    \ (array.size() == 0) {\n    return array;\n  }\n  if (array.size() == 1) {\n\
    \    return array;\n  }\n  if (array.size() == 2) {\n    if (array[0] > array[1])\
    \ {\n      std::swap(array[0], array[1]);\n    }\n    return array;\n  }\n  if\
    \ ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  // your code here\n  std::vector<long>\
    \ result;\n  if(array.size() == 0)\n    return result;\n  if(array.size() == 1)\n\
    \    return array;\n  if((array[0] + array[array.size() - 1]) % 2 == 0)\n  {\n\
    \    std::sort(array.begin(), array.end(), std::greater<long>());\n    return\
    \ array;\n  }\n  else\n  {\n    std::sort(array.begin(), array.end());\n    return\
    \ array;\n  }", "  if (array.size() == 0) return array;\n  if (array.size() ==\
    \ 1) return array;\n  int sum = array[0] + array[array.size() - 1];\n  if (sum\
    \ % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<int>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  // your code here\n  std::vector<long>\
    \ result;\n  if (array.size() == 0) {\n    return result;\n  }\n  if (array.size()\
    \ == 1) {\n    return array;\n  }\n  if ((array[0] + array[array.size() - 1])\
    \ % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  if(array.size() == 0) return array;\n  if(array.size() == 1) return array;\n\
    \  if((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  if (array.size() == 0) return array;\n\
    \  if (array.size() == 1) return array;\n  int sum = array[0] + array[array.size()\
    \ - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  if(array.size() == 0 || array.size() == 1)\n    return array;\n  bool odd = (array[0]\
    \ + array[array.size() - 1]) % 2;\n  if(odd)\n    std::sort(array.begin(), array.end());\n\
    \  else\n    std::sort(array.begin(), array.end(), std::greater<long>());\n  return\
    \ array;", "  std::vector<long> result;\n  if (array.size() == 0) {\n    return\
    \ result;\n  }\n  if (array.size() == 1) {\n    return array;\n  }\n  if ((array[0]\
    \ + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n  } else {\n    std::sort(array.begin(), array.end());\n\
    \  }\n  return array;", "    // your code here\n    long sum = array[0] + array[array.size()-1];\n\
    \    if(sum % 2 == 0)\n    {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    }\n    else\n    {\n        std::sort(array.begin(), array.end());\n    }\n\
    \    return array;", "  std::vector<long> result;\n  if (array.size() == 0) {\n\
    \    return result;\n  }\n  if (array.size() == 1) {\n    return array;\n  }\n\
    \  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  int sum = array[0] + array[array.size()\
    \ - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  if (array.size() == 0) return array;\n  if (array.size() == 1) return array;\n\
    \  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    int sum = array[0] + array[array.size()\
    \ - 1];\n    if (sum % 2 == 0) {\n        std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n    } else {\n        std::sort(array.begin(), array.end());\n\
    \    }\n    return array;", "  if (array.size() == 0) {\n    return array;\n \
    \ }\n  if (array.size() == 1) {\n    return array;\n  }\n  if (array.size() ==\
    \ 2) {\n    if (array[0] > array[1]) {\n      std::swap(array[0], array[1]);\n\
    \    }\n    return array;\n  }\n  if ((array[0] + array[array.size() - 1]) % 2\
    \ == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    std::vector<long> result;\n    if (array.size() == 0) {\n        return result;\n\
    \    }\n    if (array.size() == 1) {\n        result.push_back(array[0]);\n  \
    \      return result;\n    }\n    if ((array[0] + array[array.size() - 1]) % 2\
    \ == 0) {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    } else {\n        std::sort(array.begin(), array.end());\n    }\n    return\
    \ array;", "  if(array.size()==0) return array;\n  if(array.size()==1) return\
    \ array;\n  if((array[0]+array[array.size()-1])%2==0){\n    std::sort(array.begin(),array.end(),std::greater<long>());\n\
    \  }\n  else{\n    std::sort(array.begin(),array.end());\n  }\n  return array;",
  "  if (array.size() == 0) return array;\n  if (array.size() == 1) return array;\n\
    \  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  std::vector<long> sorted;\n  if (array.size()\
    \ == 0) {\n    return sorted;\n  }\n  if (array.size() == 1) {\n    sorted.push_back(array[0]);\n\
    \    return sorted;\n  }\n  int sum = array[0] + array[array.size() - 1];\n  if\
    \ (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<int>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  std::vector<long> sorted;\n  if (array.size() == 0) {\n    return sorted;\n \
    \ }\n  if (array.size() == 1) {\n    sorted.push_back(array[0]);\n    return sorted;\n\
    \  }\n  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  if (array.size() == 0) return array;\n\
    \  if (array.size() == 1) return array;\n  if ((array[0] + array[array.size()\
    \ - 1]) % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  std::vector<long> sorted;\n  if (array.size() == 0) {\n    return sorted;\n \
    \ }\n  if (array.size() == 1) {\n    sorted.push_back(array[0]);\n    return sorted;\n\
    \  }\n  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n\
    \    std::sort(array.begin(), array.end(), std::greater<int>());\n  } else {\n\
    \    std::sort(array.begin(), array.end());\n  }\n  return array;", "  if (array.size()\
    \ == 0) {\n    return array;\n  }\n  if (array.size() == 1) {\n    return array;\n\
    \  }\n  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  if (array.size() == 0) {\n    return\
    \ array;\n  }\n  if (array.size() == 1) {\n    return array;\n  }\n  if ((array[0]\
    \ + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n  } else {\n    std::sort(array.begin(), array.end());\n\
    \  }\n  return array;", "  int sum = array[0] + array[array.size() - 1];\n  if\
    \ (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<int>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  if(array.size() == 0) return array;\n  if(array.size() == 1) return array;\n\
    \  if((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<int>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  if (array.size() == 0) return array;\n\
    \  if (array.size() == 1) return array;\n  if ((array[0] + array[array.size()\
    \ - 1]) % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  if (array.size() == 0) {\n    return array;\n  }\n  if (array.size() == 1) {\n\
    \    return array;\n  }\n  if (array.size() == 2) {\n    if (array[0] > array[1])\
    \ {\n      std::swap(array[0], array[1]);\n    }\n    return array;\n  }\n  if\
    \ ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  std::vector<long> result;\n  if (array.size()\
    \ == 0) {\n    return result;\n  }\n  if (array.size() == 1) {\n    return array;\n\
    \  }\n  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  // your code here\n  if(array.size()\
    \ == 0)\n    return array;\n  if(array.size() == 1)\n    return array;\n  if((array[0]\
    \ + array[array.size() - 1]) % 2 == 0)\n  {\n    std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n  }\n  else\n  {\n    std::sort(array.begin(), array.end());\n\
    \  }\n  return array;", "  std::vector<long> result;\n  if (array.size() == 0)\
    \ {\n    return result;\n  }\n  if (array.size() == 1) {\n    return array;\n\
    \  }\n  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  if(array.size() == 0)\n    return array;\n\
    \  if(array.size() == 1)\n    return array;\n  if((array[0] + array[array.size()\
    \ - 1]) % 2 == 0)\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  else\n    std::sort(array.begin(), array.end());\n  return array;", "    if\
    \ (array.size() == 0) return array;\n    if (array.size() == 1) return array;\n\
    \    if (array.size() == 2) {\n        if ((array[0] + array[1]) % 2 == 0) {\n\
    \            std::swap(array[0], array[1]);\n        }\n        return array;\n\
    \    }\n    int start = 0;\n    int end = array.size() - 1;\n    while (start\
    \ < end) {\n        if ((array[start] + array[end]) % 2 == 0) {\n            std::swap(array[start],\
    \ array[end]);\n        }\n        start++;\n        end--;\n    }\n    std::sort(array.begin(),\
    \ array.end());\n    return array;", "  if (array.size() == 0) return array;\n\
    \  if (array.size() == 1) return array;\n  if (array.size() == 2) {\n    if ((array[0]\
    \ + array[1]) % 2 == 0) {\n      std::swap(array[0], array[1]);\n    }\n    return\
    \ array;\n  }\n  int i = 0;\n  int j = array.size() - 1;\n  while (i < j) {\n\
    \    if ((array[i] + array[j]) % 2 == 0) {\n      std::swap(array[i], array[j]);\n\
    \    }\n    i++;\n    j--;\n  }\n  std::sort(array.begin(), array.end());\n  return\
    \ array;", "  std::vector<long> result;\n  if(array.size() == 0)\n    return result;\n\
    \  if(array.size() == 1)\n    return array;\n  if((array[0] + array[array.size()\
    \ - 1]) % 2 == 0)\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  else\n    std::sort(array.begin(), array.end());\n  return array;", "    std::vector<long>\
    \ result;\n    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2\
    \ == 0) {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    } else {\n        std::sort(array.begin(), array.end());\n    }\n    return\
    \ array;", "  if (array.size() == 0 || array.size() == 1) {\n    return array;\n\
    \  }\n  long sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n\
    \    std::sort(array.begin(), array.end(), std::greater<long>());\n  } else {\n\
    \    std::sort(array.begin(), array.end());\n  }\n  return array;", "  if (array.size()\
    \ == 0) {\n    return array;\n  }\n  if (array.size() == 1) {\n    return array;\n\
    \  }\n  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  int sum = array[0] + array[array.size()\
    \ - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  if(array.size() == 0)\n    return array;\n\
    \  if(array.size() == 1)\n    return array;\n  if((array[0] + array[array.size()\
    \ - 1]) % 2 == 0)\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  else\n    std::sort(array.begin(), array.end());\n  return array;", "  int\
    \ sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  std::vector<long> sorted;\n  if (array.size()\
    \ == 0) {\n    return sorted;\n  }\n  if (array.size() == 1) {\n    sorted.push_back(array[0]);\n\
    \    return sorted;\n  }\n  if ((array[0] + array[array.size() - 1]) % 2 == 0)\
    \ {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n  } else\
    \ {\n    std::sort(array.begin(), array.end());\n  }\n  return array;", "  //\
    \ your code here\n  int sum = array[0] + array[array.size()-1];\n  if(sum % 2\
    \ == 0){\n    std::sort(array.begin(), array.end(), std::greater<long>());\n \
    \ }\n  else{\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  std::vector<long> result;\n  if (array.size() == 0) return result;\n  if (array.size()\
    \ == 1) return array;\n  if (array.size() == 2) {\n    if (array[0] > array[1])\
    \ {\n      std::swap(array[0], array[1]);\n    }\n    return array;\n  }\n  if\
    \ ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  // your code here\n  std::vector<long>\
    \ odd;\n  std::vector<long> even;\n  std::vector<long> result;\n  if(array.size()\
    \ == 0)\n    return array;\n  if(array.size() == 1)\n    return array;\n  if((array[0]\
    \ + array[array.size() - 1]) % 2 == 0)\n  {\n    for(int i = 0; i < array.size();\
    \ i++)\n    {\n      if(array[i] % 2 == 0)\n        even.push_back(array[i]);\n\
    \      else\n        odd.push_back(array[i]);\n    }\n    std::sort(even.begin(),\
    \ even.end(), std::greater<long>());\n    std::sort(odd.begin(), odd.end());\n\
    \    for(int i = 0; i < even.size(); i++)\n      result.push_back(even[i]);\n\
    \    for(int i = 0; i < odd.size(); i++)\n      result.push_back(odd[i]);\n  \
    \  return result;\n  }\n  else\n  {\n    for(int i = 0; i < array.size(); i++)\n\
    \    {\n      if(array[i] % 2 == 0)\n        even.push_back(array[i]);\n     \
    \ else\n        odd.push_back(array[i]);\n    }\n    std::sort(even.begin(), even.end());\n\
    \    std::sort(odd.begin(), odd.end(), std::greater<long>());\n    for(int i =\
    \ 0; i < even.size(); i++)\n      result.push_back(even[i]);\n    for(int i =\
    \ 0; i < odd.size(); i++)\n      result.push_back(odd[i]);\n    return result;\n\
    \  }", "  if (array.size() == 0) return array;\n  if (array.size() == 1) return\
    \ array;\n  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  if (array.size() == 0) return array;\n\
    \  if (array.size() == 1) return array;\n  if ((array[0] + array[array.size()\
    \ - 1]) % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  if (array.size() == 0 || array.size() == 1) {\n    return array;\n  }\n  int\
    \ sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  if (array.size() == 0) {\n    return\
    \ array;\n  }\n  if (array.size() == 1) {\n    return array;\n  }\n  if (array.size()\
    \ == 2) {\n    if (array[0] > array[1]) {\n      std::swap(array[0], array[1]);\n\
    \    }\n    return array;\n  }\n  long sum = array[0] + array[array.size() - 1];\n\
    \  if (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  std::vector<long> result = array;\n  if (array.size() == 0) return result;\n\
    \  if (array.size() == 1) return result;\n  if (array.size() == 2) {\n    if ((array[0]\
    \ + array[1]) % 2 == 0) {\n      std::swap(result[0], result[1]);\n    }\n   \
    \ return result;\n  }\n  int i = 0;\n  int j = array.size() - 1;\n  while (i <\
    \ j) {\n    if ((array[i] + array[j]) % 2 == 0) {\n      std::swap(result[i],\
    \ result[j]);\n    }\n    i++;\n    j--;\n  }\n  std::sort(result.begin(), result.end());\n\
    \  return result;", "  // your code here\n  int sum = array[0] + array[array.size()-1];\n\
    \  if(sum % 2 == 0){\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  }else{\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  std::vector<long> result;\n  if (array.size() == 0) {\n    return result;\n \
    \ }\n  if (array.size() == 1) {\n    return array;\n  }\n  if ((array[0] + array[array.size()\
    \ - 1]) % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  std::vector<long> result;\n  if (array.size() == 0) {\n    return result;\n \
    \ }\n  if (array.size() == 1) {\n    return array;\n  }\n  if ((array[0] + array[array.size()\
    \ - 1]) % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 == 0) {\n  \
    \      std::sort(array.begin(), array.end(), std::greater<int>());\n    } else\
    \ {\n        std::sort(array.begin(), array.end());\n    }\n    return array;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  if(array.size() == 0 || array.size()\
    \ == 1)\n    return array;\n  int sum = array[0] + array[array.size() - 1];\n\
    \  if(sum % 2 == 0)\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  else\n    std::sort(array.begin(), array.end());\n  return array;", "  int\
    \ sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<int>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  // your code here\n  int sum = array[0]\
    \ + array[array.size()-1];\n  if(sum % 2 == 0){\n    std::sort(array.begin(),\
    \ array.end(), std::greater<int>());\n  }\n  else{\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  if (array.size() == 0) {\n    return\
    \ array;\n  }\n  if (array.size() == 1) {\n    return array;\n  }\n  if (array.size()\
    \ == 2) {\n    if (array[0] > array[1]) {\n      std::swap(array[0], array[1]);\n\
    \    }\n    return array;\n  }\n  if ((array[0] + array[array.size() - 1]) % 2\
    \ == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  if (array.size() == 0) return array;\n  if (array.size() == 1) return array;\n\
    \  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    if(array.size() == 0)\n        return\
    \ array;\n    if(array.size() == 1)\n        return array;\n    int sum = array[0]\
    \ + array[array.size() - 1];\n    if(sum % 2 == 0)\n        std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n    else\n        std::sort(array.begin(),\
    \ array.end());\n    return array;", "  std::vector<long> result;\n  if (array.size()\
    \ == 0) {\n    return result;\n  }\n  if (array.size() == 1) {\n    return array;\n\
    \  }\n  if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  int sum = array[0] + array[array.size()\
    \ - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;"]
stop_tokens:
- "\n}"

language: cpp
name: HumanEval_22_filter_integers
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i: values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpbulf8_6_.cpp:2:\n/tmp/tmpbulf8_6_.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpbulf8_6_.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpbulf8_6_.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpbulf8_6_.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpbulf8_6_.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpbulf8_6_.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpbulf8_6_.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpbulf8_6_.cpp: At global scope:\n/tmp/tmpbulf8_6_.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpbulf8_6_.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto v: values) {\n        if(v.type() == typeid(long)) {\n         \
    \   result.push_back(std::any_cast<long>(v));\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp3d0e6l0x.cpp:2:\n/tmp/tmp3d0e6l0x.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp3d0e6l0x.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp3d0e6l0x.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp3d0e6l0x.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp3d0e6l0x.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp3d0e6l0x.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp3d0e6l0x.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp3d0e6l0x.cpp: At global scope:\n/tmp/tmp3d0e6l0x.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp3d0e6l0x.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        if(i.type()==typeid(int)){\n            res.push_back(std::any_cast<int>(i));\n\
    \        }\n        else if(i.type()==typeid(long)){\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpwtqffncw.cpp:2:\n/tmp/tmpwtqffncw.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpwtqffncw.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpwtqffncw.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpwtqffncw.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpwtqffncw.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpwtqffncw.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpwtqffncw.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpwtqffncw.cpp: At global scope:\n/tmp/tmpwtqffncw.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpwtqffncw.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto it = values.begin(); it != values.end(); it++) {\n        if(it->type()\
    \ == typeid(long)) {\n            result.push_back(std::any_cast<long>(*it));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpqp19khp1.cpp:2:\n/tmp/tmpqp19khp1.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpqp19khp1.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpqp19khp1.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpqp19khp1.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpqp19khp1.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpqp19khp1.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpqp19khp1.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpqp19khp1.cpp: At global scope:\n/tmp/tmpqp19khp1.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpqp19khp1.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &val : values) {\n        if(val.type() == typeid(long)) {\n   \
    \         result.push_back(std::any_cast<long>(val));\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpv7vn2hri.cpp:2:\n/tmp/tmpv7vn2hri.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpv7vn2hri.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpv7vn2hri.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpv7vn2hri.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpv7vn2hri.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpv7vn2hri.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpv7vn2hri.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpv7vn2hri.cpp: At global scope:\n/tmp/tmpv7vn2hri.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpv7vn2hri.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpu9jual_f.cpp:2:\n/tmp/tmpu9jual_f.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpu9jual_f.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpu9jual_f.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpu9jual_f.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpu9jual_f.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpu9jual_f.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpu9jual_f.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpu9jual_f.cpp: At global scope:\n/tmp/tmpu9jual_f.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpu9jual_f.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto val : values) {\n        try {\n            result.push_back(std::any_cast<long>(val));\n\
    \        } catch(std::bad_any_cast& e) {\n            // Do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpu2dxgaaa.cpp:2:\n/tmp/tmpu2dxgaaa.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpu2dxgaaa.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpu2dxgaaa.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpu2dxgaaa.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpu2dxgaaa.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpu2dxgaaa.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpu2dxgaaa.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpu2dxgaaa.cpp: At global scope:\n/tmp/tmpu2dxgaaa.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpu2dxgaaa.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(const std::bad_any_cast& e) {\n            continue;\n      \
    \  }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp6s46b4ao.cpp:2:\n/tmp/tmp6s46b4ao.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp6s46b4ao.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp6s46b4ao.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp6s46b4ao.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp6s46b4ao.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp6s46b4ao.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp6s46b4ao.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp6s46b4ao.cpp: At global scope:\n/tmp/tmp6s46b4ao.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp6s46b4ao.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(const std::bad_any_cast& e) {\n            // Do nothing\n  \
    \      }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpzjl7exsw.cpp:2:\n/tmp/tmpzjl7exsw.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpzjl7exsw.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpzjl7exsw.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpzjl7exsw.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpzjl7exsw.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpzjl7exsw.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpzjl7exsw.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpzjl7exsw.cpp: At global scope:\n/tmp/tmpzjl7exsw.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpzjl7exsw.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n  std::vector<long> result;\n\
    \  for (auto value : values) {\n    if (value.type() == typeid(long)) {\n    \
    \  result.push_back(std::any_cast<long>(value));\n    }\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpw2picx_j.cpp:2:\n/tmp/tmpw2picx_j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpw2picx_j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpw2picx_j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpw2picx_j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpw2picx_j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpw2picx_j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpw2picx_j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpw2picx_j.cpp: At global scope:\n/tmp/tmpw2picx_j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpw2picx_j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n  std::vector<long> result;\n\
    \  for (auto i : values) {\n    if (i.type() == typeid(long)) {\n      result.push_back(std::any_cast<long>(i));\n\
    \    }\n  }\n  return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpo495kkmk.cpp:2:\n/tmp/tmpo495kkmk.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpo495kkmk.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpo495kkmk.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpo495kkmk.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpo495kkmk.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpo495kkmk.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpo495kkmk.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpo495kkmk.cpp: At global scope:\n/tmp/tmpo495kkmk.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpo495kkmk.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp7jxm4fal.cpp:2:\n/tmp/tmp7jxm4fal.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp7jxm4fal.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp7jxm4fal.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp7jxm4fal.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp7jxm4fal.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp7jxm4fal.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp7jxm4fal.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp7jxm4fal.cpp: At global scope:\n/tmp/tmp7jxm4fal.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp7jxm4fal.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i:values){\n        if(i.type()==typeid(int)){\n            result.push_back(std::any_cast<int>(i));\n\
    \        }\n        else if(i.type()==typeid(long)){\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpqms8qrvb.cpp:2:\n/tmp/tmpqms8qrvb.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpqms8qrvb.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpqms8qrvb.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpqms8qrvb.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpqms8qrvb.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpqms8qrvb.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpqms8qrvb.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpqms8qrvb.cpp: At global scope:\n/tmp/tmpqms8qrvb.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpqms8qrvb.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp7jxm4fal.cpp:2:\n/tmp/tmp7jxm4fal.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp7jxm4fal.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp7jxm4fal.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp7jxm4fal.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp7jxm4fal.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp7jxm4fal.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp7jxm4fal.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp7jxm4fal.cpp: At global scope:\n/tmp/tmp7jxm4fal.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp7jxm4fal.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpa3klkaoq.cpp:2:\n/tmp/tmpa3klkaoq.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpa3klkaoq.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpa3klkaoq.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpa3klkaoq.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpa3klkaoq.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpa3klkaoq.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpa3klkaoq.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpa3klkaoq.cpp: At global scope:\n/tmp/tmpa3klkaoq.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpa3klkaoq.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto x: values){\n        try{\n            res.push_back(std::any_cast<long>(x));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpvtgiha0a.cpp:2:\n/tmp/tmpvtgiha0a.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpvtgiha0a.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpvtgiha0a.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpvtgiha0a.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpvtgiha0a.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpvtgiha0a.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpvtgiha0a.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpvtgiha0a.cpp: At global scope:\n/tmp/tmpvtgiha0a.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpvtgiha0a.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i:values){\n        if(i.type()==typeid(int)){\n            result.push_back(std::any_cast<int>(i));\n\
    \        }\n        else if(i.type()==typeid(long)){\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpqms8qrvb.cpp:2:\n/tmp/tmpqms8qrvb.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpqms8qrvb.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpqms8qrvb.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpqms8qrvb.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpqms8qrvb.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpqms8qrvb.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpqms8qrvb.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpqms8qrvb.cpp: At global scope:\n/tmp/tmpqms8qrvb.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpqms8qrvb.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i:values){\n        if(i.type()==typeid(long)){\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp05_glv2s.cpp:2:\n/tmp/tmp05_glv2s.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp05_glv2s.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp05_glv2s.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp05_glv2s.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp05_glv2s.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp05_glv2s.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp05_glv2s.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp05_glv2s.cpp: At global scope:\n/tmp/tmp05_glv2s.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp05_glv2s.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        if(i.type()==typeid(int)){\n            res.push_back(std::any_cast<int>(i));\n\
    \        }\n        else if(i.type()==typeid(long)){\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpwtqffncw.cpp:2:\n/tmp/tmpwtqffncw.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpwtqffncw.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpwtqffncw.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpwtqffncw.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpwtqffncw.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpwtqffncw.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpwtqffncw.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpwtqffncw.cpp: At global scope:\n/tmp/tmpwtqffncw.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpwtqffncw.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpency172e.cpp:2:\n/tmp/tmpency172e.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpency172e.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpency172e.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpency172e.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpency172e.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpency172e.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpency172e.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpency172e.cpp: At global scope:\n/tmp/tmpency172e.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpency172e.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpivsht88d.cpp:2:\n/tmp/tmpivsht88d.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpivsht88d.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpivsht88d.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpivsht88d.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpivsht88d.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpivsht88d.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpivsht88d.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpivsht88d.cpp: At global scope:\n/tmp/tmpivsht88d.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpivsht88d.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto& value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpy4r37rei.cpp:2:\n/tmp/tmpy4r37rei.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpy4r37rei.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpy4r37rei.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpy4r37rei.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpy4r37rei.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpy4r37rei.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpy4r37rei.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpy4r37rei.cpp: At global scope:\n/tmp/tmpy4r37rei.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpy4r37rei.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto& i : values) {\n        try {\n            result.push_back(std::any_cast<long>(i));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpr_i4slsv.cpp:2:\n/tmp/tmpr_i4slsv.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpr_i4slsv.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpr_i4slsv.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpr_i4slsv.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpr_i4slsv.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpr_i4slsv.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpr_i4slsv.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpr_i4slsv.cpp: At global scope:\n/tmp/tmpr_i4slsv.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpr_i4slsv.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpmlsstth4.cpp:2:\n/tmp/tmpmlsstth4.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpmlsstth4.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpmlsstth4.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpmlsstth4.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpmlsstth4.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpmlsstth4.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpmlsstth4.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpmlsstth4.cpp: At global scope:\n/tmp/tmpmlsstth4.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpmlsstth4.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpxgf0ypuq.cpp:2:\n/tmp/tmpxgf0ypuq.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpxgf0ypuq.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpxgf0ypuq.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpxgf0ypuq.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpxgf0ypuq.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpxgf0ypuq.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpxgf0ypuq.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpxgf0ypuq.cpp: At global scope:\n/tmp/tmpxgf0ypuq.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpxgf0ypuq.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i : values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpx2qvf329.cpp:2:\n/tmp/tmpx2qvf329.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpx2qvf329.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpx2qvf329.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpx2qvf329.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpx2qvf329.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpx2qvf329.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpx2qvf329.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpx2qvf329.cpp: At global scope:\n/tmp/tmpx2qvf329.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpx2qvf329.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpn3jf3s2p.cpp:2:\n/tmp/tmpn3jf3s2p.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpn3jf3s2p.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpn3jf3s2p.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpn3jf3s2p.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpn3jf3s2p.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpn3jf3s2p.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpn3jf3s2p.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpn3jf3s2p.cpp: At global scope:\n/tmp/tmpn3jf3s2p.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpn3jf3s2p.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i : values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpx2qvf329.cpp:2:\n/tmp/tmpx2qvf329.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpx2qvf329.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpx2qvf329.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpx2qvf329.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpx2qvf329.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpx2qvf329.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpx2qvf329.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpx2qvf329.cpp: At global scope:\n/tmp/tmpx2qvf329.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpx2qvf329.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            // do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp9i5l1wcx.cpp:2:\n/tmp/tmp9i5l1wcx.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp9i5l1wcx.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp9i5l1wcx.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp9i5l1wcx.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp9i5l1wcx.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp9i5l1wcx.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp9i5l1wcx.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp9i5l1wcx.cpp: At global scope:\n/tmp/tmp9i5l1wcx.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp9i5l1wcx.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto v: values){\n        try{\n            res.push_back(std::any_cast<long>(v));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp1jjvvtts.cpp:2:\n/tmp/tmp1jjvvtts.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp1jjvvtts.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp1jjvvtts.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp1jjvvtts.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp1jjvvtts.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp1jjvvtts.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp1jjvvtts.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp1jjvvtts.cpp: At global scope:\n/tmp/tmp1jjvvtts.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp1jjvvtts.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpmlsstth4.cpp:2:\n/tmp/tmpmlsstth4.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpmlsstth4.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpmlsstth4.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpmlsstth4.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpmlsstth4.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpmlsstth4.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpmlsstth4.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpmlsstth4.cpp: At global scope:\n/tmp/tmpmlsstth4.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpmlsstth4.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(const std::bad_any_cast& e) {\n            // Do nothing\n  \
    \      }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp0x_vvj5w.cpp:2:\n/tmp/tmp0x_vvj5w.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp0x_vvj5w.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp0x_vvj5w.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp0x_vvj5w.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp0x_vvj5w.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp0x_vvj5w.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp0x_vvj5w.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp0x_vvj5w.cpp: At global scope:\n/tmp/tmp0x_vvj5w.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp0x_vvj5w.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpu9jual_f.cpp:2:\n/tmp/tmpu9jual_f.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpu9jual_f.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpu9jual_f.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpu9jual_f.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpu9jual_f.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpu9jual_f.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpu9jual_f.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpu9jual_f.cpp: At global scope:\n/tmp/tmpu9jual_f.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpu9jual_f.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpdawvaajz.cpp:2:\n/tmp/tmpdawvaajz.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpdawvaajz.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpdawvaajz.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpdawvaajz.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpdawvaajz.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpdawvaajz.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpdawvaajz.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpdawvaajz.cpp: At global scope:\n/tmp/tmpdawvaajz.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpdawvaajz.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpmlsstth4.cpp:2:\n/tmp/tmpmlsstth4.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpmlsstth4.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpmlsstth4.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpmlsstth4.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpmlsstth4.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpmlsstth4.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpmlsstth4.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpmlsstth4.cpp: At global scope:\n/tmp/tmpmlsstth4.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpmlsstth4.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast &e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp7u88ewvp.cpp:2:\n/tmp/tmp7u88ewvp.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp7u88ewvp.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp7u88ewvp.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp7u88ewvp.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp7u88ewvp.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp7u88ewvp.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp7u88ewvp.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp7u88ewvp.cpp: At global scope:\n/tmp/tmp7u88ewvp.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp7u88ewvp.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpency172e.cpp:2:\n/tmp/tmpency172e.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpency172e.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpency172e.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpency172e.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpency172e.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpency172e.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpency172e.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpency172e.cpp: At global scope:\n/tmp/tmpency172e.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpency172e.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast &e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpdrnnl7o8.cpp:2:\n/tmp/tmpdrnnl7o8.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpdrnnl7o8.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpdrnnl7o8.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpdrnnl7o8.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpdrnnl7o8.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpdrnnl7o8.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpdrnnl7o8.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpdrnnl7o8.cpp: At global scope:\n/tmp/tmpdrnnl7o8.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpdrnnl7o8.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpu9jual_f.cpp:2:\n/tmp/tmpu9jual_f.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpu9jual_f.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpu9jual_f.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpu9jual_f.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpu9jual_f.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpu9jual_f.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpu9jual_f.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpu9jual_f.cpp: At global scope:\n/tmp/tmpu9jual_f.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpu9jual_f.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto it = values.begin(); it != values.end(); it++) {\n        try {\n\
    \            result.push_back(std::any_cast<long>(*it));\n        } catch(const\
    \ std::bad_any_cast& e) {\n            continue;\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpg8oxy1h2.cpp:2:\n/tmp/tmpg8oxy1h2.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpg8oxy1h2.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpg8oxy1h2.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpg8oxy1h2.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpg8oxy1h2.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpg8oxy1h2.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpg8oxy1h2.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpg8oxy1h2.cpp: At global scope:\n/tmp/tmpg8oxy1h2.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpg8oxy1h2.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpmlsstth4.cpp:2:\n/tmp/tmpmlsstth4.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpmlsstth4.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpmlsstth4.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpmlsstth4.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpmlsstth4.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpmlsstth4.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpmlsstth4.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpmlsstth4.cpp: At global scope:\n/tmp/tmpmlsstth4.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpmlsstth4.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpivsht88d.cpp:2:\n/tmp/tmpivsht88d.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpivsht88d.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpivsht88d.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpivsht88d.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpivsht88d.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpivsht88d.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpivsht88d.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpivsht88d.cpp: At global scope:\n/tmp/tmpivsht88d.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpivsht88d.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpu9jual_f.cpp:2:\n/tmp/tmpu9jual_f.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpu9jual_f.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpu9jual_f.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpu9jual_f.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpu9jual_f.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpu9jual_f.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpu9jual_f.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpu9jual_f.cpp: At global scope:\n/tmp/tmpu9jual_f.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpu9jual_f.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpmlsstth4.cpp:2:\n/tmp/tmpmlsstth4.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpmlsstth4.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpmlsstth4.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpmlsstth4.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpmlsstth4.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpmlsstth4.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpmlsstth4.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpmlsstth4.cpp: At global scope:\n/tmp/tmpmlsstth4.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpmlsstth4.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpn3jf3s2p.cpp:2:\n/tmp/tmpn3jf3s2p.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpn3jf3s2p.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpn3jf3s2p.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpn3jf3s2p.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpn3jf3s2p.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpn3jf3s2p.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpn3jf3s2p.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpn3jf3s2p.cpp: At global scope:\n/tmp/tmpn3jf3s2p.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpn3jf3s2p.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp7jxm4fal.cpp:2:\n/tmp/tmp7jxm4fal.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp7jxm4fal.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp7jxm4fal.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp7jxm4fal.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp7jxm4fal.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp7jxm4fal.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp7jxm4fal.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp7jxm4fal.cpp: At global scope:\n/tmp/tmp7jxm4fal.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp7jxm4fal.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast &e) {\n            // do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpz_053mgj.cpp:2:\n/tmp/tmpz_053mgj.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpz_053mgj.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpz_053mgj.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpz_053mgj.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpz_053mgj.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpz_053mgj.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpz_053mgj.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpz_053mgj.cpp: At global scope:\n/tmp/tmpz_053mgj.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpz_053mgj.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            // do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp9i5l1wcx.cpp:2:\n/tmp/tmp9i5l1wcx.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp9i5l1wcx.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp9i5l1wcx.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp9i5l1wcx.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp9i5l1wcx.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp9i5l1wcx.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp9i5l1wcx.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp9i5l1wcx.cpp: At global scope:\n/tmp/tmp9i5l1wcx.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp9i5l1wcx.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n  std::vector<long> result;\n\
    \  for (auto value : values) {\n    if (value.type() == typeid(long)) {\n    \
    \  result.push_back(std::any_cast<long>(value));\n    }\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpw2picx_j.cpp:2:\n/tmp/tmpw2picx_j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpw2picx_j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpw2picx_j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpw2picx_j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpw2picx_j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpw2picx_j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpw2picx_j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpw2picx_j.cpp: At global scope:\n/tmp/tmpw2picx_j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpw2picx_j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp3g17rohu.cpp:2:\n/tmp/tmp3g17rohu.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp3g17rohu.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp3g17rohu.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp3g17rohu.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp3g17rohu.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp3g17rohu.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp3g17rohu.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp3g17rohu.cpp: At global scope:\n/tmp/tmp3g17rohu.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp3g17rohu.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpxgf0ypuq.cpp:2:\n/tmp/tmpxgf0ypuq.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpxgf0ypuq.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpxgf0ypuq.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpxgf0ypuq.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpxgf0ypuq.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpxgf0ypuq.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpxgf0ypuq.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpxgf0ypuq.cpp: At global scope:\n/tmp/tmpxgf0ypuq.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpxgf0ypuq.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpzrdj_jhb.cpp:2:\n/tmp/tmpzrdj_jhb.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpzrdj_jhb.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpzrdj_jhb.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpzrdj_jhb.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpzrdj_jhb.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpzrdj_jhb.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpzrdj_jhb.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpzrdj_jhb.cpp: At global scope:\n/tmp/tmpzrdj_jhb.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpzrdj_jhb.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpn3jf3s2p.cpp:2:\n/tmp/tmpn3jf3s2p.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpn3jf3s2p.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpn3jf3s2p.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpn3jf3s2p.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpn3jf3s2p.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpn3jf3s2p.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpn3jf3s2p.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpn3jf3s2p.cpp: At global scope:\n/tmp/tmpn3jf3s2p.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpn3jf3s2p.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto x: values){\n        try{\n            result.push_back(std::any_cast<long>(x));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpz9vhsjcc.cpp:2:\n/tmp/tmpz9vhsjcc.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpz9vhsjcc.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpz9vhsjcc.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpz9vhsjcc.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpz9vhsjcc.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpz9vhsjcc.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpz9vhsjcc.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpz9vhsjcc.cpp: At global scope:\n/tmp/tmpz9vhsjcc.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpz9vhsjcc.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpa3klkaoq.cpp:2:\n/tmp/tmpa3klkaoq.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpa3klkaoq.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpa3klkaoq.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpa3klkaoq.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpa3klkaoq.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpa3klkaoq.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpa3klkaoq.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpa3klkaoq.cpp: At global scope:\n/tmp/tmpa3klkaoq.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpa3klkaoq.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpmlsstth4.cpp:2:\n/tmp/tmpmlsstth4.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpmlsstth4.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpmlsstth4.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpmlsstth4.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpmlsstth4.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpmlsstth4.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpmlsstth4.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpmlsstth4.cpp: At global scope:\n/tmp/tmpmlsstth4.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpmlsstth4.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpkmwbmzmz.cpp:2:\n/tmp/tmpkmwbmzmz.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpkmwbmzmz.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpkmwbmzmz.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpkmwbmzmz.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpkmwbmzmz.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpkmwbmzmz.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpkmwbmzmz.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpkmwbmzmz.cpp: At global scope:\n/tmp/tmpkmwbmzmz.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpkmwbmzmz.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n  std::vector<long> result;\n\
    \  for (auto value : values) {\n    try {\n      result.push_back(std::any_cast<long>(value));\n\
    \    } catch (std::bad_any_cast& e) {\n      continue;\n    }\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpxl25ttdh.cpp:2:\n/tmp/tmpxl25ttdh.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpxl25ttdh.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpxl25ttdh.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpxl25ttdh.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpxl25ttdh.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpxl25ttdh.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpxl25ttdh.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpxl25ttdh.cpp: At global scope:\n/tmp/tmpxl25ttdh.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpxl25ttdh.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpn3jf3s2p.cpp:2:\n/tmp/tmpn3jf3s2p.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpn3jf3s2p.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpn3jf3s2p.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpn3jf3s2p.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpn3jf3s2p.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpn3jf3s2p.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpn3jf3s2p.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpn3jf3s2p.cpp: At global scope:\n/tmp/tmpn3jf3s2p.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpn3jf3s2p.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            // do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp9i5l1wcx.cpp:2:\n/tmp/tmp9i5l1wcx.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp9i5l1wcx.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp9i5l1wcx.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp9i5l1wcx.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp9i5l1wcx.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp9i5l1wcx.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp9i5l1wcx.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp9i5l1wcx.cpp: At global scope:\n/tmp/tmp9i5l1wcx.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp9i5l1wcx.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpa3klkaoq.cpp:2:\n/tmp/tmpa3klkaoq.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpa3klkaoq.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpa3klkaoq.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpa3klkaoq.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpa3klkaoq.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpa3klkaoq.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpa3klkaoq.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpa3klkaoq.cpp: At global scope:\n/tmp/tmpa3klkaoq.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpa3klkaoq.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> v;\n\
    \    for(auto i:values){\n        try{\n            v.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            //do nothing\n \
    \       }\n    }\n    return v;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpyfwaqtvh.cpp:2:\n/tmp/tmpyfwaqtvh.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpyfwaqtvh.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpyfwaqtvh.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpyfwaqtvh.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpyfwaqtvh.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpyfwaqtvh.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpyfwaqtvh.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpyfwaqtvh.cpp: At global scope:\n/tmp/tmpyfwaqtvh.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpyfwaqtvh.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpivsht88d.cpp:2:\n/tmp/tmpivsht88d.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpivsht88d.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpivsht88d.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpivsht88d.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpivsht88d.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpivsht88d.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpivsht88d.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpivsht88d.cpp: At global scope:\n/tmp/tmpivsht88d.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpivsht88d.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpmlsstth4.cpp:2:\n/tmp/tmpmlsstth4.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpmlsstth4.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpmlsstth4.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpmlsstth4.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpmlsstth4.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpmlsstth4.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpmlsstth4.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpmlsstth4.cpp: At global scope:\n/tmp/tmpmlsstth4.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpmlsstth4.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpency172e.cpp:2:\n/tmp/tmpency172e.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpency172e.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpency172e.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpency172e.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpency172e.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpency172e.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpency172e.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpency172e.cpp: At global scope:\n/tmp/tmpency172e.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpency172e.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            // do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp9i5l1wcx.cpp:2:\n/tmp/tmp9i5l1wcx.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp9i5l1wcx.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp9i5l1wcx.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp9i5l1wcx.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp9i5l1wcx.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp9i5l1wcx.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp9i5l1wcx.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp9i5l1wcx.cpp: At global scope:\n/tmp/tmp9i5l1wcx.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp9i5l1wcx.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        if(i.type()==typeid(int)){\n            res.push_back(std::any_cast<int>(i));\n\
    \        }\n        else if(i.type()==typeid(long)){\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpwtqffncw.cpp:2:\n/tmp/tmpwtqffncw.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpwtqffncw.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpwtqffncw.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpwtqffncw.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpwtqffncw.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpwtqffncw.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpwtqffncw.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpwtqffncw.cpp: At global scope:\n/tmp/tmpwtqffncw.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpwtqffncw.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpn3jf3s2p.cpp:2:\n/tmp/tmpn3jf3s2p.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpn3jf3s2p.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpn3jf3s2p.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpn3jf3s2p.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpn3jf3s2p.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpn3jf3s2p.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpn3jf3s2p.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpn3jf3s2p.cpp: At global scope:\n/tmp/tmpn3jf3s2p.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpn3jf3s2p.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast){\n            continue;\n       \
    \ }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpgr1u5hpz.cpp:2:\n/tmp/tmpgr1u5hpz.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpgr1u5hpz.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpgr1u5hpz.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpgr1u5hpz.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpgr1u5hpz.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpgr1u5hpz.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpgr1u5hpz.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpgr1u5hpz.cpp: At global scope:\n/tmp/tmpgr1u5hpz.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpgr1u5hpz.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        if(i.type() == typeid(int)){\n           \
    \ result.push_back(std::any_cast<int>(i));\n        }\n        else if(i.type()\
    \ == typeid(long)){\n            result.push_back(std::any_cast<long>(i));\n \
    \       }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpa9pdhkcq.cpp:2:\n/tmp/tmpa9pdhkcq.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpa9pdhkcq.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpa9pdhkcq.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpa9pdhkcq.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpa9pdhkcq.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpa9pdhkcq.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpa9pdhkcq.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpa9pdhkcq.cpp: At global scope:\n/tmp/tmpa9pdhkcq.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpa9pdhkcq.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpa3klkaoq.cpp:2:\n/tmp/tmpa3klkaoq.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpa3klkaoq.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpa3klkaoq.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpa3klkaoq.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpa3klkaoq.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpa3klkaoq.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpa3klkaoq.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpa3klkaoq.cpp: At global scope:\n/tmp/tmpa3klkaoq.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpa3klkaoq.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(const std::bad_any_cast& e) {\n            // Do nothing\n  \
    \      }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp0x_vvj5w.cpp:2:\n/tmp/tmp0x_vvj5w.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp0x_vvj5w.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp0x_vvj5w.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp0x_vvj5w.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp0x_vvj5w.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp0x_vvj5w.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp0x_vvj5w.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp0x_vvj5w.cpp: At global scope:\n/tmp/tmp0x_vvj5w.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp0x_vvj5w.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto x: values){\n        try{\n            res.push_back(std::any_cast<long>(x));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpvtgiha0a.cpp:2:\n/tmp/tmpvtgiha0a.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpvtgiha0a.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpvtgiha0a.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpvtgiha0a.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpvtgiha0a.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpvtgiha0a.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpvtgiha0a.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpvtgiha0a.cpp: At global scope:\n/tmp/tmpvtgiha0a.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpvtgiha0a.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpdawvaajz.cpp:2:\n/tmp/tmpdawvaajz.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpdawvaajz.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpdawvaajz.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpdawvaajz.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpdawvaajz.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpdawvaajz.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpdawvaajz.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpdawvaajz.cpp: At global scope:\n/tmp/tmpdawvaajz.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpdawvaajz.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp5c9zfu22.cpp:2:\n/tmp/tmp5c9zfu22.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp5c9zfu22.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp5c9zfu22.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp5c9zfu22.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp5c9zfu22.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp5c9zfu22.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp5c9zfu22.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp5c9zfu22.cpp: At global scope:\n/tmp/tmp5c9zfu22.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp5c9zfu22.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp7jxm4fal.cpp:2:\n/tmp/tmp7jxm4fal.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp7jxm4fal.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp7jxm4fal.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp7jxm4fal.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp7jxm4fal.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp7jxm4fal.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp7jxm4fal.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp7jxm4fal.cpp: At global scope:\n/tmp/tmp7jxm4fal.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp7jxm4fal.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpivsht88d.cpp:2:\n/tmp/tmpivsht88d.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpivsht88d.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpivsht88d.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpivsht88d.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpivsht88d.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpivsht88d.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpivsht88d.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpivsht88d.cpp: At global scope:\n/tmp/tmpivsht88d.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpivsht88d.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpa3klkaoq.cpp:2:\n/tmp/tmpa3klkaoq.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpa3klkaoq.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpa3klkaoq.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpa3klkaoq.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpa3klkaoq.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpa3klkaoq.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpa3klkaoq.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpa3klkaoq.cpp: At global scope:\n/tmp/tmpa3klkaoq.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpa3klkaoq.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpivsht88d.cpp:2:\n/tmp/tmpivsht88d.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpivsht88d.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpivsht88d.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpivsht88d.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpivsht88d.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpivsht88d.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpivsht88d.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpivsht88d.cpp: At global scope:\n/tmp/tmpivsht88d.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpivsht88d.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        if(i.type() == typeid(int)){\n           \
    \ result.push_back(std::any_cast<int>(i));\n        }\n        else if(i.type()\
    \ == typeid(long)){\n            result.push_back(std::any_cast<long>(i));\n \
    \       }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpa9pdhkcq.cpp:2:\n/tmp/tmpa9pdhkcq.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpa9pdhkcq.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpa9pdhkcq.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpa9pdhkcq.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpa9pdhkcq.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpa9pdhkcq.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpa9pdhkcq.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpa9pdhkcq.cpp: At global scope:\n/tmp/tmpa9pdhkcq.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpa9pdhkcq.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto x: values){\n        if(x.type() == typeid(long)){\n           \
    \ result.push_back(std::any_cast<long>(x));\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpbe8iavto.cpp:2:\n/tmp/tmpbe8iavto.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpbe8iavto.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpbe8iavto.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpbe8iavto.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpbe8iavto.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpbe8iavto.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpbe8iavto.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpbe8iavto.cpp: At global scope:\n/tmp/tmpbe8iavto.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpbe8iavto.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(const std::bad_any_cast& e) {\n            // do nothing\n  \
    \      }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpx9k4m5zb.cpp:2:\n/tmp/tmpx9k4m5zb.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpx9k4m5zb.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpx9k4m5zb.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpx9k4m5zb.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpx9k4m5zb.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpx9k4m5zb.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpx9k4m5zb.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpx9k4m5zb.cpp: At global scope:\n/tmp/tmpx9k4m5zb.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpx9k4m5zb.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpivsht88d.cpp:2:\n/tmp/tmpivsht88d.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpivsht88d.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpivsht88d.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpivsht88d.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpivsht88d.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpivsht88d.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpivsht88d.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpivsht88d.cpp: At global scope:\n/tmp/tmpivsht88d.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpivsht88d.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpency172e.cpp:2:\n/tmp/tmpency172e.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpency172e.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpency172e.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpency172e.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpency172e.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpency172e.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpency172e.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpency172e.cpp: At global scope:\n/tmp/tmpency172e.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpency172e.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(const std::bad_any_cast& e) {\n            continue;\n      \
    \  }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp7vw99294.cpp:2:\n/tmp/tmp7vw99294.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp7vw99294.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp7vw99294.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp7vw99294.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp7vw99294.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp7vw99294.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp7vw99294.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp7vw99294.cpp: At global scope:\n/tmp/tmp7vw99294.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp7vw99294.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast&) {\n            // do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp384xuh23.cpp:2:\n/tmp/tmp384xuh23.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp384xuh23.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp384xuh23.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp384xuh23.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp384xuh23.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp384xuh23.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp384xuh23.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp384xuh23.cpp: At global scope:\n/tmp/tmp384xuh23.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp384xuh23.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> v;\n\
    \    for(auto i:values){\n        try{\n            v.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return v;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp7bm3teph.cpp:2:\n/tmp/tmp7bm3teph.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp7bm3teph.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp7bm3teph.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp7bm3teph.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp7bm3teph.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp7bm3teph.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp7bm3teph.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp7bm3teph.cpp: At global scope:\n/tmp/tmp7bm3teph.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp7bm3teph.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpzrdj_jhb.cpp:2:\n/tmp/tmpzrdj_jhb.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpzrdj_jhb.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpzrdj_jhb.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpzrdj_jhb.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpzrdj_jhb.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpzrdj_jhb.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpzrdj_jhb.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpzrdj_jhb.cpp: At global scope:\n/tmp/tmpzrdj_jhb.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpzrdj_jhb.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            // do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp8p2rk189.cpp:2:\n/tmp/tmp8p2rk189.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp8p2rk189.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp8p2rk189.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp8p2rk189.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp8p2rk189.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp8p2rk189.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp8p2rk189.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp8p2rk189.cpp: At global scope:\n/tmp/tmp8p2rk189.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp8p2rk189.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto x: values){\n        try{\n            result.push_back(std::any_cast<long>(x));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpeuos1ei2.cpp:2:\n/tmp/tmpeuos1ei2.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpeuos1ei2.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpeuos1ei2.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpeuos1ei2.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpeuos1ei2.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpeuos1ei2.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpeuos1ei2.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpeuos1ei2.cpp: At global scope:\n/tmp/tmpeuos1ei2.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpeuos1ei2.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp7jxm4fal.cpp:2:\n/tmp/tmp7jxm4fal.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp7jxm4fal.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp7jxm4fal.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp7jxm4fal.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp7jxm4fal.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp7jxm4fal.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp7jxm4fal.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp7jxm4fal.cpp: At global scope:\n/tmp/tmp7jxm4fal.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp7jxm4fal.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(const std::bad_any_cast& e) {\n            continue;\n      \
    \  }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp7vw99294.cpp:2:\n/tmp/tmp7vw99294.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp7vw99294.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp7vw99294.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp7vw99294.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp7vw99294.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp7vw99294.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp7vw99294.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp7vw99294.cpp: At global scope:\n/tmp/tmp7vw99294.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp7vw99294.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpa3klkaoq.cpp:2:\n/tmp/tmpa3klkaoq.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpa3klkaoq.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpa3klkaoq.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpa3klkaoq.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpa3klkaoq.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpa3klkaoq.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpa3klkaoq.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpa3klkaoq.cpp: At global scope:\n/tmp/tmpa3klkaoq.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpa3klkaoq.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i:values){\n        try{\n            std::any_cast<long>(i);\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(std::bad_any_cast&\
    \ e){\n            //std::cout<<e.what()<<std::endl;\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpzl3zmsg2.cpp:2:\n/tmp/tmpzl3zmsg2.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpzl3zmsg2.cpp:24:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   24 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpzl3zmsg2.cpp:24:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   24 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpzl3zmsg2.cpp:24:50: error: expected\
    \ \u2018)\u2019 before string constant\n   24 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpzl3zmsg2.cpp:24:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   24 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpzl3zmsg2.cpp:24:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpzl3zmsg2.cpp:24:5:\
    \ note: to match this \u2018(\u2019\n   24 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpzl3zmsg2.cpp: At global scope:\n/tmp/tmpzl3zmsg2.cpp:24:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   24 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpzl3zmsg2.cpp:24:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   24 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpn3jf3s2p.cpp:2:\n/tmp/tmpn3jf3s2p.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpn3jf3s2p.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpn3jf3s2p.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpn3jf3s2p.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpn3jf3s2p.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpn3jf3s2p.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpn3jf3s2p.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpn3jf3s2p.cpp: At global scope:\n/tmp/tmpn3jf3s2p.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpn3jf3s2p.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast &e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp7u88ewvp.cpp:2:\n/tmp/tmp7u88ewvp.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp7u88ewvp.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp7u88ewvp.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp7u88ewvp.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp7u88ewvp.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp7u88ewvp.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp7u88ewvp.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp7u88ewvp.cpp: At global scope:\n/tmp/tmp7u88ewvp.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp7u88ewvp.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(const std::bad_any_cast& e) {\n            // do nothing\n  \
    \      }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpx9k4m5zb.cpp:2:\n/tmp/tmpx9k4m5zb.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpx9k4m5zb.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpx9k4m5zb.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpx9k4m5zb.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpx9k4m5zb.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpx9k4m5zb.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpx9k4m5zb.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpx9k4m5zb.cpp: At global scope:\n/tmp/tmpx9k4m5zb.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpx9k4m5zb.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp3g17rohu.cpp:2:\n/tmp/tmp3g17rohu.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp3g17rohu.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp3g17rohu.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp3g17rohu.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp3g17rohu.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp3g17rohu.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp3g17rohu.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp3g17rohu.cpp: At global scope:\n/tmp/tmp3g17rohu.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp3g17rohu.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto it = values.begin(); it != values.end(); it++) {\n        try {\n\
    \            result.push_back(std::any_cast<long>(*it));\n        } catch(std::bad_any_cast&\
    \ e) {\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp_1qj1ztf.cpp:2:\n/tmp/tmp_1qj1ztf.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp_1qj1ztf.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp_1qj1ztf.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp_1qj1ztf.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp_1qj1ztf.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp_1qj1ztf.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp_1qj1ztf.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp_1qj1ztf.cpp: At global scope:\n/tmp/tmp_1qj1ztf.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp_1qj1ztf.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            // do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp9i5l1wcx.cpp:2:\n/tmp/tmp9i5l1wcx.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp9i5l1wcx.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp9i5l1wcx.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp9i5l1wcx.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp9i5l1wcx.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp9i5l1wcx.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp9i5l1wcx.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp9i5l1wcx.cpp: At global scope:\n/tmp/tmp9i5l1wcx.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp9i5l1wcx.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp7jxm4fal.cpp:2:\n/tmp/tmp7jxm4fal.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp7jxm4fal.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp7jxm4fal.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp7jxm4fal.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp7jxm4fal.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp7jxm4fal.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp7jxm4fal.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp7jxm4fal.cpp: At global scope:\n/tmp/tmp7jxm4fal.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp7jxm4fal.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpzrdj_jhb.cpp:2:\n/tmp/tmpzrdj_jhb.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpzrdj_jhb.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpzrdj_jhb.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpzrdj_jhb.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpzrdj_jhb.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpzrdj_jhb.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpzrdj_jhb.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpzrdj_jhb.cpp: At global scope:\n/tmp/tmpzrdj_jhb.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpzrdj_jhb.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            // do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp9i5l1wcx.cpp:2:\n/tmp/tmp9i5l1wcx.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp9i5l1wcx.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp9i5l1wcx.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp9i5l1wcx.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp9i5l1wcx.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp9i5l1wcx.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp9i5l1wcx.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp9i5l1wcx.cpp: At global scope:\n/tmp/tmp9i5l1wcx.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp9i5l1wcx.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto it = values.begin(); it != values.end(); it++) {\n        try {\n\
    \            result.push_back(std::any_cast<long>(*it));\n        } catch(std::bad_any_cast&\
    \ e) {\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp_1qj1ztf.cpp:2:\n/tmp/tmp_1qj1ztf.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp_1qj1ztf.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp_1qj1ztf.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp_1qj1ztf.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp_1qj1ztf.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp_1qj1ztf.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp_1qj1ztf.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp_1qj1ztf.cpp: At global scope:\n/tmp/tmp_1qj1ztf.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp_1qj1ztf.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> ret;\n\
    \    for(auto i:values){\n        try{\n            ret.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp_7eztwll.cpp:2:\n/tmp/tmp_7eztwll.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp_7eztwll.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp_7eztwll.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp_7eztwll.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp_7eztwll.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp_7eztwll.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp_7eztwll.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp_7eztwll.cpp: At global scope:\n/tmp/tmp_7eztwll.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp_7eztwll.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpa3klkaoq.cpp:2:\n/tmp/tmpa3klkaoq.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpa3klkaoq.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpa3klkaoq.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpa3klkaoq.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpa3klkaoq.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpa3klkaoq.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpa3klkaoq.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpa3klkaoq.cpp: At global scope:\n/tmp/tmpa3klkaoq.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpa3klkaoq.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp7jxm4fal.cpp:2:\n/tmp/tmp7jxm4fal.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp7jxm4fal.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp7jxm4fal.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp7jxm4fal.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp7jxm4fal.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp7jxm4fal.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp7jxm4fal.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp7jxm4fal.cpp: At global scope:\n/tmp/tmp7jxm4fal.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp7jxm4fal.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &val : values) {\n        try {\n            result.push_back(std::any_cast<long>(val));\n\
    \        } catch(std::bad_any_cast &e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp9veku0j4.cpp:2:\n/tmp/tmp9veku0j4.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp9veku0j4.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp9veku0j4.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp9veku0j4.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp9veku0j4.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp9veku0j4.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp9veku0j4.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp9veku0j4.cpp: At global scope:\n/tmp/tmp9veku0j4.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp9veku0j4.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n\tstd::vector<long> result;\n\
    \tfor (auto value : values) {\n\t\tif (value.type() == typeid(long)) {\n\t\t\t\
    result.push_back(std::any_cast<long>(value));\n\t\t}\n\t}\n\treturn result;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpngk2dy41.cpp:2:\n/tmp/tmpngk2dy41.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpngk2dy41.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpngk2dy41.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpngk2dy41.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpngk2dy41.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpngk2dy41.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpngk2dy41.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpngk2dy41.cpp: At global scope:\n/tmp/tmpngk2dy41.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpngk2dy41.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpa3klkaoq.cpp:2:\n/tmp/tmpa3klkaoq.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpa3klkaoq.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpa3klkaoq.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpa3klkaoq.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpa3klkaoq.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpa3klkaoq.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpa3klkaoq.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpa3klkaoq.cpp: At global scope:\n/tmp/tmpa3klkaoq.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpa3klkaoq.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpa3klkaoq.cpp:2:\n/tmp/tmpa3klkaoq.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpa3klkaoq.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpa3klkaoq.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpa3klkaoq.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpa3klkaoq.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpa3klkaoq.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpa3klkaoq.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpa3klkaoq.cpp: At global scope:\n/tmp/tmpa3klkaoq.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpa3klkaoq.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpmlsstth4.cpp:2:\n/tmp/tmpmlsstth4.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpmlsstth4.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpmlsstth4.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpmlsstth4.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpmlsstth4.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpmlsstth4.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpmlsstth4.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpmlsstth4.cpp: At global scope:\n/tmp/tmpmlsstth4.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpmlsstth4.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpivsht88d.cpp:2:\n/tmp/tmpivsht88d.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpivsht88d.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpivsht88d.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpivsht88d.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpivsht88d.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpivsht88d.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpivsht88d.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpivsht88d.cpp: At global scope:\n/tmp/tmpivsht88d.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpivsht88d.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        if(i.type() == typeid(long)){\n          \
    \  result.push_back(std::any_cast<long>(i));\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmphugnpyel.cpp:2:\n/tmp/tmphugnpyel.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmphugnpyel.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmphugnpyel.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmphugnpyel.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmphugnpyel.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmphugnpyel.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmphugnpyel.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmphugnpyel.cpp: At global scope:\n/tmp/tmphugnpyel.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmphugnpyel.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpa3klkaoq.cpp:2:\n/tmp/tmpa3klkaoq.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpa3klkaoq.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpa3klkaoq.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpa3klkaoq.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpa3klkaoq.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpa3klkaoq.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpa3klkaoq.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpa3klkaoq.cpp: At global scope:\n/tmp/tmpa3klkaoq.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpa3klkaoq.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast &e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpdrnnl7o8.cpp:2:\n/tmp/tmpdrnnl7o8.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpdrnnl7o8.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpdrnnl7o8.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpdrnnl7o8.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpdrnnl7o8.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpdrnnl7o8.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpdrnnl7o8.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpdrnnl7o8.cpp: At global scope:\n/tmp/tmpdrnnl7o8.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpdrnnl7o8.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpn3jf3s2p.cpp:2:\n/tmp/tmpn3jf3s2p.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpn3jf3s2p.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpn3jf3s2p.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpn3jf3s2p.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpn3jf3s2p.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpn3jf3s2p.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpn3jf3s2p.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpn3jf3s2p.cpp: At global scope:\n/tmp/tmpn3jf3s2p.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpn3jf3s2p.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        if(i.type()==typeid(int)){\n            res.push_back(std::any_cast<int>(i));\n\
    \        }\n        else if(i.type()==typeid(long)){\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpwtqffncw.cpp:2:\n/tmp/tmpwtqffncw.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpwtqffncw.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpwtqffncw.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpwtqffncw.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpwtqffncw.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpwtqffncw.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpwtqffncw.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpwtqffncw.cpp: At global scope:\n/tmp/tmpwtqffncw.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpwtqffncw.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n  std::vector<long> res;\n\
    \  for(auto i:values){\n    if(i.type()==typeid(int)){\n      res.push_back(std::any_cast<int>(i));\n\
    \    }\n    else if(i.type()==typeid(long)){\n      res.push_back(std::any_cast<long>(i));\n\
    \    }\n  }\n  return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp6xr_rvkh.cpp:2:\n/tmp/tmp6xr_rvkh.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp6xr_rvkh.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp6xr_rvkh.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp6xr_rvkh.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp6xr_rvkh.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp6xr_rvkh.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp6xr_rvkh.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp6xr_rvkh.cpp: At global scope:\n/tmp/tmp6xr_rvkh.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp6xr_rvkh.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpa3klkaoq.cpp:2:\n/tmp/tmpa3klkaoq.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpa3klkaoq.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpa3klkaoq.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpa3klkaoq.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpa3klkaoq.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpa3klkaoq.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpa3klkaoq.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpa3klkaoq.cpp: At global scope:\n/tmp/tmpa3klkaoq.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpa3klkaoq.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast &e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp7u88ewvp.cpp:2:\n/tmp/tmp7u88ewvp.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp7u88ewvp.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp7u88ewvp.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp7u88ewvp.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp7u88ewvp.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp7u88ewvp.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp7u88ewvp.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp7u88ewvp.cpp: At global scope:\n/tmp/tmp7u88ewvp.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp7u88ewvp.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> v;\n\
    \    for(auto i:values){\n        try{\n            v.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return v;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp7bm3teph.cpp:2:\n/tmp/tmp7bm3teph.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp7bm3teph.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp7bm3teph.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp7bm3teph.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp7bm3teph.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp7bm3teph.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp7bm3teph.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp7bm3teph.cpp: At global scope:\n/tmp/tmp7bm3teph.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp7bm3teph.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpa3klkaoq.cpp:2:\n/tmp/tmpa3klkaoq.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpa3klkaoq.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpa3klkaoq.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpa3klkaoq.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpa3klkaoq.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpa3klkaoq.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpa3klkaoq.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpa3klkaoq.cpp: At global scope:\n/tmp/tmpa3klkaoq.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpa3klkaoq.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto x: values){\n        try{\n            res.push_back(std::any_cast<long>(x));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpqfdxqr2r.cpp:2:\n/tmp/tmpqfdxqr2r.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpqfdxqr2r.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpqfdxqr2r.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpqfdxqr2r.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpqfdxqr2r.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpqfdxqr2r.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpqfdxqr2r.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpqfdxqr2r.cpp: At global scope:\n/tmp/tmpqfdxqr2r.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpqfdxqr2r.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto v: values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpp1sf966q.cpp:2:\n/tmp/tmpp1sf966q.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpp1sf966q.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpp1sf966q.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpp1sf966q.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpp1sf966q.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpp1sf966q.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpp1sf966q.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpp1sf966q.cpp: At global scope:\n/tmp/tmpp1sf966q.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpp1sf966q.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpmlsstth4.cpp:2:\n/tmp/tmpmlsstth4.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpmlsstth4.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpmlsstth4.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpmlsstth4.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpmlsstth4.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpmlsstth4.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpmlsstth4.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpmlsstth4.cpp: At global scope:\n/tmp/tmpmlsstth4.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpmlsstth4.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpxgf0ypuq.cpp:2:\n/tmp/tmpxgf0ypuq.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpxgf0ypuq.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpxgf0ypuq.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpxgf0ypuq.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpxgf0ypuq.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpxgf0ypuq.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpxgf0ypuq.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpxgf0ypuq.cpp: At global scope:\n/tmp/tmpxgf0ypuq.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpxgf0ypuq.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        if(i.type() == typeid(int)){\n           \
    \ result.push_back(std::any_cast<int>(i));\n        }\n        else if(i.type()\
    \ == typeid(long)){\n            result.push_back(std::any_cast<long>(i));\n \
    \       }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpa9pdhkcq.cpp:2:\n/tmp/tmpa9pdhkcq.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpa9pdhkcq.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpa9pdhkcq.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpa9pdhkcq.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpa9pdhkcq.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpa9pdhkcq.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpa9pdhkcq.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpa9pdhkcq.cpp: At global scope:\n/tmp/tmpa9pdhkcq.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpa9pdhkcq.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        if(std::any_cast<long>(&i)){\n           \
    \ result.push_back(std::any_cast<long>(i));\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpv76pbhp_.cpp:2:\n/tmp/tmpv76pbhp_.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpv76pbhp_.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpv76pbhp_.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpv76pbhp_.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpv76pbhp_.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpv76pbhp_.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpv76pbhp_.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpv76pbhp_.cpp: At global scope:\n/tmp/tmpv76pbhp_.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpv76pbhp_.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpivsht88d.cpp:2:\n/tmp/tmpivsht88d.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpivsht88d.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpivsht88d.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpivsht88d.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpivsht88d.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpivsht88d.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpivsht88d.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpivsht88d.cpp: At global scope:\n/tmp/tmpivsht88d.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpivsht88d.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp7jxm4fal.cpp:2:\n/tmp/tmp7jxm4fal.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp7jxm4fal.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp7jxm4fal.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp7jxm4fal.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp7jxm4fal.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp7jxm4fal.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp7jxm4fal.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp7jxm4fal.cpp: At global scope:\n/tmp/tmp7jxm4fal.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp7jxm4fal.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            // do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp9i5l1wcx.cpp:2:\n/tmp/tmp9i5l1wcx.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp9i5l1wcx.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp9i5l1wcx.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp9i5l1wcx.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp9i5l1wcx.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp9i5l1wcx.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp9i5l1wcx.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp9i5l1wcx.cpp: At global scope:\n/tmp/tmp9i5l1wcx.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp9i5l1wcx.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto it = values.begin(); it != values.end(); it++) {\n        if(it->type()\
    \ == typeid(long)) {\n            res.push_back(std::any_cast<long>(*it));\n \
    \       }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp9vn6tnt9.cpp:2:\n/tmp/tmp9vn6tnt9.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp9vn6tnt9.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp9vn6tnt9.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp9vn6tnt9.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp9vn6tnt9.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp9vn6tnt9.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp9vn6tnt9.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp9vn6tnt9.cpp: At global scope:\n/tmp/tmp9vn6tnt9.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp9vn6tnt9.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &val : values) {\n        try {\n            result.push_back(std::any_cast<long>(val));\n\
    \        } catch(std::bad_any_cast &e) {\n            // do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmplbiu2jyw.cpp:2:\n/tmp/tmplbiu2jyw.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmplbiu2jyw.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmplbiu2jyw.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmplbiu2jyw.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmplbiu2jyw.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmplbiu2jyw.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmplbiu2jyw.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmplbiu2jyw.cpp: At global scope:\n/tmp/tmplbiu2jyw.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmplbiu2jyw.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i : values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpt_wiiv_t.cpp:2:\n/tmp/tmpt_wiiv_t.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpt_wiiv_t.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpt_wiiv_t.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpt_wiiv_t.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpt_wiiv_t.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpt_wiiv_t.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpt_wiiv_t.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpt_wiiv_t.cpp: At global scope:\n/tmp/tmpt_wiiv_t.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpt_wiiv_t.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpmlsstth4.cpp:2:\n/tmp/tmpmlsstth4.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpmlsstth4.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpmlsstth4.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpmlsstth4.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpmlsstth4.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpmlsstth4.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpmlsstth4.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpmlsstth4.cpp: At global scope:\n/tmp/tmpmlsstth4.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpmlsstth4.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n  std::vector<long> ans;\n\
    \  for(auto i : values){\n    try{\n      ans.push_back(std::any_cast<long>(i));\n\
    \    }\n    catch(std::bad_any_cast& e){\n      continue;\n    }\n  }\n  return\
    \ ans;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpy6sr8gnf.cpp:2:\n/tmp/tmpy6sr8gnf.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpy6sr8gnf.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpy6sr8gnf.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpy6sr8gnf.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpy6sr8gnf.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpy6sr8gnf.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpy6sr8gnf.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpy6sr8gnf.cpp: At global scope:\n/tmp/tmpy6sr8gnf.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpy6sr8gnf.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast e){\n            continue;\n     \
    \   }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp5mkaayoh.cpp:2:\n/tmp/tmp5mkaayoh.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp5mkaayoh.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp5mkaayoh.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp5mkaayoh.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp5mkaayoh.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp5mkaayoh.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp5mkaayoh.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp5mkaayoh.cpp: At global scope:\n/tmp/tmp5mkaayoh.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp5mkaayoh.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto val : values) {\n        try {\n            result.push_back(std::any_cast<long>(val));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpupsf92qo.cpp:2:\n/tmp/tmpupsf92qo.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpupsf92qo.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpupsf92qo.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpupsf92qo.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpupsf92qo.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpupsf92qo.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpupsf92qo.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpupsf92qo.cpp: At global scope:\n/tmp/tmpupsf92qo.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpupsf92qo.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpn3jf3s2p.cpp:2:\n/tmp/tmpn3jf3s2p.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpn3jf3s2p.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpn3jf3s2p.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpn3jf3s2p.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpn3jf3s2p.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpn3jf3s2p.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpn3jf3s2p.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpn3jf3s2p.cpp: At global scope:\n/tmp/tmpn3jf3s2p.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpn3jf3s2p.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i : values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpx2qvf329.cpp:2:\n/tmp/tmpx2qvf329.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpx2qvf329.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpx2qvf329.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpx2qvf329.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpx2qvf329.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpx2qvf329.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpx2qvf329.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpx2qvf329.cpp: At global scope:\n/tmp/tmpx2qvf329.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpx2qvf329.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto &i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp5z1hsmby.cpp:2:\n/tmp/tmp5z1hsmby.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp5z1hsmby.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp5z1hsmby.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp5z1hsmby.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp5z1hsmby.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp5z1hsmby.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp5z1hsmby.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp5z1hsmby.cpp: At global scope:\n/tmp/tmp5z1hsmby.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp5z1hsmby.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto x: values){\n        try{\n            res.push_back(std::any_cast<long>(x));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            //do nothing\n \
    \       }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpo922jvz7.cpp:2:\n/tmp/tmpo922jvz7.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpo922jvz7.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpo922jvz7.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpo922jvz7.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpo922jvz7.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpo922jvz7.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpo922jvz7.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpo922jvz7.cpp: At global scope:\n/tmp/tmpo922jvz7.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpo922jvz7.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpkmwbmzmz.cpp:2:\n/tmp/tmpkmwbmzmz.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpkmwbmzmz.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpkmwbmzmz.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpkmwbmzmz.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpkmwbmzmz.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpkmwbmzmz.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpkmwbmzmz.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpkmwbmzmz.cpp: At global scope:\n/tmp/tmpkmwbmzmz.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpkmwbmzmz.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(const std::bad_any_cast& e) {\n            // do nothing\n  \
    \      }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpx9k4m5zb.cpp:2:\n/tmp/tmpx9k4m5zb.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpx9k4m5zb.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpx9k4m5zb.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpx9k4m5zb.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpx9k4m5zb.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpx9k4m5zb.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpx9k4m5zb.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpx9k4m5zb.cpp: At global scope:\n/tmp/tmpx9k4m5zb.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpx9k4m5zb.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast &e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp7u88ewvp.cpp:2:\n/tmp/tmp7u88ewvp.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp7u88ewvp.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp7u88ewvp.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp7u88ewvp.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp7u88ewvp.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp7u88ewvp.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp7u88ewvp.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp7u88ewvp.cpp: At global scope:\n/tmp/tmp7u88ewvp.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp7u88ewvp.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp7jxm4fal.cpp:2:\n/tmp/tmp7jxm4fal.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp7jxm4fal.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp7jxm4fal.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp7jxm4fal.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp7jxm4fal.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp7jxm4fal.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp7jxm4fal.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp7jxm4fal.cpp: At global scope:\n/tmp/tmp7jxm4fal.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp7jxm4fal.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n\tstd::vector<long> result;\n\
    \tfor (auto it = values.begin(); it != values.end(); it++) {\n\t\tif (it->type()\
    \ == typeid(long)) {\n\t\t\tresult.push_back(std::any_cast<long>(*it));\n\t\t\
    }\n\t}\n\treturn result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp__eo8gd9.cpp:2:\n/tmp/tmp__eo8gd9.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp__eo8gd9.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp__eo8gd9.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp__eo8gd9.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp__eo8gd9.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp__eo8gd9.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp__eo8gd9.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp__eo8gd9.cpp: At global scope:\n/tmp/tmp__eo8gd9.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp__eo8gd9.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpa3klkaoq.cpp:2:\n/tmp/tmpa3klkaoq.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpa3klkaoq.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpa3klkaoq.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpa3klkaoq.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpa3klkaoq.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpa3klkaoq.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpa3klkaoq.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpa3klkaoq.cpp: At global scope:\n/tmp/tmpa3klkaoq.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpa3klkaoq.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpohse3dl4.cpp:2:\n/tmp/tmpohse3dl4.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpohse3dl4.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpohse3dl4.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpohse3dl4.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpohse3dl4.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpohse3dl4.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpohse3dl4.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpohse3dl4.cpp: At global scope:\n/tmp/tmpohse3dl4.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpohse3dl4.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            // do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp9i5l1wcx.cpp:2:\n/tmp/tmp9i5l1wcx.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp9i5l1wcx.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp9i5l1wcx.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp9i5l1wcx.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp9i5l1wcx.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp9i5l1wcx.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp9i5l1wcx.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp9i5l1wcx.cpp: At global scope:\n/tmp/tmp9i5l1wcx.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp9i5l1wcx.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp24rp3yem.cpp:2:\n/tmp/tmp24rp3yem.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp24rp3yem.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp24rp3yem.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp24rp3yem.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp24rp3yem.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp24rp3yem.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp24rp3yem.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp24rp3yem.cpp: At global scope:\n/tmp/tmp24rp3yem.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp24rp3yem.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto it: values){\n        try{\n            res.push_back(std::any_cast<long>(it));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmptgov34aa.cpp:2:\n/tmp/tmptgov34aa.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmptgov34aa.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmptgov34aa.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmptgov34aa.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmptgov34aa.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmptgov34aa.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmptgov34aa.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmptgov34aa.cpp: At global scope:\n/tmp/tmptgov34aa.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmptgov34aa.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpn3jf3s2p.cpp:2:\n/tmp/tmpn3jf3s2p.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpn3jf3s2p.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpn3jf3s2p.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpn3jf3s2p.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpn3jf3s2p.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpn3jf3s2p.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpn3jf3s2p.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpn3jf3s2p.cpp: At global scope:\n/tmp/tmpn3jf3s2p.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpn3jf3s2p.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n  std::vector<long> result;\n\
    \  for (auto value : values) {\n    try {\n      result.push_back(std::any_cast<long>(value));\n\
    \    } catch (std::bad_any_cast &e) {\n      continue;\n    }\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpevgf_c7q.cpp:2:\n/tmp/tmpevgf_c7q.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpevgf_c7q.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpevgf_c7q.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpevgf_c7q.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpevgf_c7q.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpevgf_c7q.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpevgf_c7q.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpevgf_c7q.cpp: At global scope:\n/tmp/tmpevgf_c7q.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpevgf_c7q.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i : values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpx2qvf329.cpp:2:\n/tmp/tmpx2qvf329.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpx2qvf329.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpx2qvf329.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpx2qvf329.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpx2qvf329.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpx2qvf329.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpx2qvf329.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpx2qvf329.cpp: At global scope:\n/tmp/tmpx2qvf329.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpx2qvf329.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpn3jf3s2p.cpp:2:\n/tmp/tmpn3jf3s2p.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpn3jf3s2p.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpn3jf3s2p.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpn3jf3s2p.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpn3jf3s2p.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpn3jf3s2p.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpn3jf3s2p.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpn3jf3s2p.cpp: At global scope:\n/tmp/tmpn3jf3s2p.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpn3jf3s2p.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(const std::bad_any_cast& e) {\n            // ignore\n      \
    \  }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp3n03fhwe.cpp:2:\n/tmp/tmp3n03fhwe.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp3n03fhwe.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp3n03fhwe.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp3n03fhwe.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp3n03fhwe.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp3n03fhwe.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp3n03fhwe.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp3n03fhwe.cpp: At global scope:\n/tmp/tmp3n03fhwe.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp3n03fhwe.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        if(i.type()==typeid(int)){\n            res.push_back(std::any_cast<int>(i));\n\
    \        }\n        else if(i.type()==typeid(long)){\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpwtqffncw.cpp:2:\n/tmp/tmpwtqffncw.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpwtqffncw.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpwtqffncw.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpwtqffncw.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpwtqffncw.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpwtqffncw.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpwtqffncw.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpwtqffncw.cpp: At global scope:\n/tmp/tmpwtqffncw.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpwtqffncw.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast &e) {\n            // do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpz_053mgj.cpp:2:\n/tmp/tmpz_053mgj.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpz_053mgj.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpz_053mgj.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpz_053mgj.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpz_053mgj.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpz_053mgj.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpz_053mgj.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpz_053mgj.cpp: At global scope:\n/tmp/tmpz_053mgj.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpz_053mgj.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }catch(std::bad_any_cast &e){\n            continue;\n        }\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpmva0ab47.cpp:2:\n/tmp/tmpmva0ab47.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpmva0ab47.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpmva0ab47.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpmva0ab47.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpmva0ab47.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpmva0ab47.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpmva0ab47.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpmva0ab47.cpp: At global scope:\n/tmp/tmpmva0ab47.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpmva0ab47.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpency172e.cpp:2:\n/tmp/tmpency172e.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpency172e.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpency172e.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpency172e.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpency172e.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpency172e.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpency172e.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpency172e.cpp: At global scope:\n/tmp/tmpency172e.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpency172e.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpohse3dl4.cpp:2:\n/tmp/tmpohse3dl4.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpohse3dl4.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpohse3dl4.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpohse3dl4.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpohse3dl4.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpohse3dl4.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpohse3dl4.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpohse3dl4.cpp: At global scope:\n/tmp/tmpohse3dl4.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpohse3dl4.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto &x: values){\n        try{\n            res.push_back(std::any_cast<long>(x));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp8x_tzi3j.cpp:2:\n/tmp/tmp8x_tzi3j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp8x_tzi3j.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp8x_tzi3j.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp8x_tzi3j.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp8x_tzi3j.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp8x_tzi3j.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp8x_tzi3j.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp8x_tzi3j.cpp: At global scope:\n/tmp/tmp8x_tzi3j.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp8x_tzi3j.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpmlsstth4.cpp:2:\n/tmp/tmpmlsstth4.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpmlsstth4.cpp:23:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpmlsstth4.cpp:23:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpmlsstth4.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpmlsstth4.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpmlsstth4.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpmlsstth4.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpmlsstth4.cpp: At global scope:\n/tmp/tmpmlsstth4.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpmlsstth4.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108135
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i : values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }catch(std::bad_any_cast& e){\n            continue;\n        }\n   \
    \ }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpqlpyy_2m.cpp:2:\n/tmp/tmpqlpyy_2m.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpqlpyy_2m.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpqlpyy_2m.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpqlpyy_2m.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpqlpyy_2m.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpqlpyy_2m.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpqlpyy_2m.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpqlpyy_2m.cpp: At global scope:\n/tmp/tmpqlpyy_2m.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpqlpyy_2m.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpplzlun9j.cpp:2:\n/tmp/tmpplzlun9j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpplzlun9j.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmpplzlun9j.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpplzlun9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpplzlun9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpplzlun9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpplzlun9j.cpp: At global scope:\n/tmp/tmpplzlun9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpplzlun9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i : values){\n        if(i.type() == typeid(long)){\n          \
    \  res.push_back(std::any_cast<long>(i));\n        }\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp4wcg3e8v.cpp:2:\n/tmp/tmp4wcg3e8v.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp4wcg3e8v.cpp:20:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp4wcg3e8v.cpp:20:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp4wcg3e8v.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp4wcg3e8v.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp4wcg3e8v.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp4wcg3e8v.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp4wcg3e8v.cpp: At global scope:\n/tmp/tmp4wcg3e8v.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp4wcg3e8v.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto &x: values){\n        try{\n            res.push_back(std::any_cast<long>(x));\n\
    \        }catch(std::bad_any_cast &e){\n            continue;\n        }\n   \
    \ }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp88y59pbo.cpp:2:\n/tmp/tmp88y59pbo.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp88y59pbo.cpp:22:44: error: expected primary-expression before \u2018\
    (\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"adasd\"\
    }))) == (std::vector<long>({(long)4, (long)9})));\n      |                   \
    \                         ^\n/tmp/tmp88y59pbo.cpp:22:45: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp88y59pbo.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp88y59pbo.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp88y59pbo.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp88y59pbo.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp88y59pbo.cpp: At global scope:\n/tmp/tmp88y59pbo.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp88y59pbo.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                    "
  stdout: ''
  timestamp: 1660108136

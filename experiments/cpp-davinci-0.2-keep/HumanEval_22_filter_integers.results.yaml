name: HumanEval_22_filter_integers
language: cpp
results:
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i: values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpr6vwyev0.cpp:2:\n/tmp/tmpr6vwyev0.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpr6vwyev0.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpr6vwyev0.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpr6vwyev0.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpr6vwyev0.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpr6vwyev0.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpr6vwyev0.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpr6vwyev0.cpp: At global scope:\n/tmp/tmpr6vwyev0.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpr6vwyev0.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto v: values) {\n        if(v.type() == typeid(long)) {\n         \
    \   result.push_back(std::any_cast<long>(v));\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmppaw1i1r2.cpp:2:\n/tmp/tmppaw1i1r2.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmppaw1i1r2.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmppaw1i1r2.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmppaw1i1r2.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmppaw1i1r2.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmppaw1i1r2.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmppaw1i1r2.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmppaw1i1r2.cpp: At global scope:\n/tmp/tmppaw1i1r2.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmppaw1i1r2.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        if(i.type()==typeid(int)){\n            res.push_back(std::any_cast<int>(i));\n\
    \        }\n        else if(i.type()==typeid(long)){\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpqx0ow4nj.cpp:2:\n/tmp/tmpqx0ow4nj.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpqx0ow4nj.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpqx0ow4nj.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpqx0ow4nj.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpqx0ow4nj.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpqx0ow4nj.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpqx0ow4nj.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpqx0ow4nj.cpp: At global scope:\n/tmp/tmpqx0ow4nj.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpqx0ow4nj.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto it = values.begin(); it != values.end(); it++) {\n        if(it->type()\
    \ == typeid(long)) {\n            result.push_back(std::any_cast<long>(*it));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpgrwpywx5.cpp:2:\n/tmp/tmpgrwpywx5.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpgrwpywx5.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpgrwpywx5.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpgrwpywx5.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpgrwpywx5.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpgrwpywx5.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpgrwpywx5.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpgrwpywx5.cpp: At global scope:\n/tmp/tmpgrwpywx5.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpgrwpywx5.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &val : values) {\n        if(val.type() == typeid(long)) {\n   \
    \         result.push_back(std::any_cast<long>(val));\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp5ox6z99j.cpp:2:\n/tmp/tmp5ox6z99j.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp5ox6z99j.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp5ox6z99j.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp5ox6z99j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp5ox6z99j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp5ox6z99j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp5ox6z99j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp5ox6z99j.cpp: At global scope:\n/tmp/tmp5ox6z99j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp5ox6z99j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp431w1qw5.cpp:2:\n/tmp/tmp431w1qw5.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp431w1qw5.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp431w1qw5.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp431w1qw5.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp431w1qw5.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp431w1qw5.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp431w1qw5.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp431w1qw5.cpp: At global scope:\n/tmp/tmp431w1qw5.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp431w1qw5.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto val : values) {\n        try {\n            result.push_back(std::any_cast<long>(val));\n\
    \        } catch(std::bad_any_cast& e) {\n            // Do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpjigxqkyp.cpp:2:\n/tmp/tmpjigxqkyp.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpjigxqkyp.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpjigxqkyp.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpjigxqkyp.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpjigxqkyp.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpjigxqkyp.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpjigxqkyp.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpjigxqkyp.cpp: At global scope:\n/tmp/tmpjigxqkyp.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpjigxqkyp.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(const std::bad_any_cast& e) {\n            continue;\n      \
    \  }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpibi8ww62.cpp:2:\n/tmp/tmpibi8ww62.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpibi8ww62.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpibi8ww62.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpibi8ww62.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpibi8ww62.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpibi8ww62.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpibi8ww62.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpibi8ww62.cpp: At global scope:\n/tmp/tmpibi8ww62.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpibi8ww62.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(const std::bad_any_cast& e) {\n            // Do nothing\n  \
    \      }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp0_8g_mq5.cpp:2:\n/tmp/tmp0_8g_mq5.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp0_8g_mq5.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp0_8g_mq5.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp0_8g_mq5.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp0_8g_mq5.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp0_8g_mq5.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp0_8g_mq5.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp0_8g_mq5.cpp: At global scope:\n/tmp/tmp0_8g_mq5.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp0_8g_mq5.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpdpr0w302.cpp:2:\n/tmp/tmpdpr0w302.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpdpr0w302.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpdpr0w302.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpdpr0w302.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpdpr0w302.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpdpr0w302.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpdpr0w302.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpdpr0w302.cpp: At global scope:\n/tmp/tmpdpr0w302.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpdpr0w302.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n  std::vector<long> result;\n\
    \  for (auto value : values) {\n    if (value.type() == typeid(long)) {\n    \
    \  result.push_back(std::any_cast<long>(value));\n    }\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp8poydbje.cpp:2:\n/tmp/tmp8poydbje.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp8poydbje.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp8poydbje.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp8poydbje.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp8poydbje.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp8poydbje.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp8poydbje.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp8poydbje.cpp: At global scope:\n/tmp/tmp8poydbje.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp8poydbje.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n  std::vector<long> result;\n\
    \  for (auto i : values) {\n    if (i.type() == typeid(long)) {\n      result.push_back(std::any_cast<long>(i));\n\
    \    }\n  }\n  return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpnwgescdd.cpp:2:\n/tmp/tmpnwgescdd.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpnwgescdd.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpnwgescdd.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpnwgescdd.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpnwgescdd.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpnwgescdd.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpnwgescdd.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpnwgescdd.cpp: At global scope:\n/tmp/tmpnwgescdd.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpnwgescdd.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpy83c9o9a.cpp:2:\n/tmp/tmpy83c9o9a.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpy83c9o9a.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpy83c9o9a.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpy83c9o9a.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpy83c9o9a.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpy83c9o9a.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpy83c9o9a.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpy83c9o9a.cpp: At global scope:\n/tmp/tmpy83c9o9a.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpy83c9o9a.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpd8u5nveo.cpp:2:\n/tmp/tmpd8u5nveo.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpd8u5nveo.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpd8u5nveo.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpd8u5nveo.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpd8u5nveo.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpd8u5nveo.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpd8u5nveo.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpd8u5nveo.cpp: At global scope:\n/tmp/tmpd8u5nveo.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpd8u5nveo.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i:values){\n        if(i.type()==typeid(int)){\n            result.push_back(std::any_cast<int>(i));\n\
    \        }\n        else if(i.type()==typeid(long)){\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp21twblot.cpp:2:\n/tmp/tmp21twblot.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp21twblot.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp21twblot.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp21twblot.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp21twblot.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp21twblot.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp21twblot.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp21twblot.cpp: At global scope:\n/tmp/tmp21twblot.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp21twblot.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmph02m_h9y.cpp:2:\n/tmp/tmph02m_h9y.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmph02m_h9y.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmph02m_h9y.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmph02m_h9y.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmph02m_h9y.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmph02m_h9y.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmph02m_h9y.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmph02m_h9y.cpp: At global scope:\n/tmp/tmph02m_h9y.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmph02m_h9y.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp9j5hh0mt.cpp:2:\n/tmp/tmp9j5hh0mt.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp9j5hh0mt.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp9j5hh0mt.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp9j5hh0mt.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp9j5hh0mt.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp9j5hh0mt.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp9j5hh0mt.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp9j5hh0mt.cpp: At global scope:\n/tmp/tmp9j5hh0mt.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp9j5hh0mt.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto x: values){\n        try{\n            res.push_back(std::any_cast<long>(x));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpqsfwvjvb.cpp:2:\n/tmp/tmpqsfwvjvb.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpqsfwvjvb.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpqsfwvjvb.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpqsfwvjvb.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpqsfwvjvb.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpqsfwvjvb.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpqsfwvjvb.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpqsfwvjvb.cpp: At global scope:\n/tmp/tmpqsfwvjvb.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpqsfwvjvb.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i:values){\n        if(i.type()==typeid(int)){\n            result.push_back(std::any_cast<int>(i));\n\
    \        }\n        else if(i.type()==typeid(long)){\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpeaie_upk.cpp:2:\n/tmp/tmpeaie_upk.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpeaie_upk.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpeaie_upk.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpeaie_upk.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpeaie_upk.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpeaie_upk.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpeaie_upk.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpeaie_upk.cpp: At global scope:\n/tmp/tmpeaie_upk.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpeaie_upk.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i:values){\n        if(i.type()==typeid(long)){\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp6h1ghp2e.cpp:2:\n/tmp/tmp6h1ghp2e.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp6h1ghp2e.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp6h1ghp2e.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp6h1ghp2e.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp6h1ghp2e.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp6h1ghp2e.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp6h1ghp2e.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp6h1ghp2e.cpp: At global scope:\n/tmp/tmp6h1ghp2e.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp6h1ghp2e.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        if(i.type()==typeid(int)){\n            res.push_back(std::any_cast<int>(i));\n\
    \        }\n        else if(i.type()==typeid(long)){\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp82wtgppv.cpp:2:\n/tmp/tmp82wtgppv.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp82wtgppv.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp82wtgppv.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp82wtgppv.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp82wtgppv.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp82wtgppv.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp82wtgppv.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp82wtgppv.cpp: At global scope:\n/tmp/tmp82wtgppv.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp82wtgppv.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpc4aobkzk.cpp:2:\n/tmp/tmpc4aobkzk.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpc4aobkzk.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpc4aobkzk.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpc4aobkzk.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpc4aobkzk.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpc4aobkzk.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpc4aobkzk.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpc4aobkzk.cpp: At global scope:\n/tmp/tmpc4aobkzk.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpc4aobkzk.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpif1588kj.cpp:2:\n/tmp/tmpif1588kj.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpif1588kj.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpif1588kj.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpif1588kj.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpif1588kj.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpif1588kj.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpif1588kj.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpif1588kj.cpp: At global scope:\n/tmp/tmpif1588kj.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpif1588kj.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto& value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpfy1n9nlt.cpp:2:\n/tmp/tmpfy1n9nlt.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpfy1n9nlt.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpfy1n9nlt.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpfy1n9nlt.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpfy1n9nlt.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpfy1n9nlt.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpfy1n9nlt.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpfy1n9nlt.cpp: At global scope:\n/tmp/tmpfy1n9nlt.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpfy1n9nlt.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto& i : values) {\n        try {\n            result.push_back(std::any_cast<long>(i));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpcwmjt7f_.cpp:2:\n/tmp/tmpcwmjt7f_.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpcwmjt7f_.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpcwmjt7f_.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpcwmjt7f_.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpcwmjt7f_.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpcwmjt7f_.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpcwmjt7f_.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpcwmjt7f_.cpp: At global scope:\n/tmp/tmpcwmjt7f_.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpcwmjt7f_.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp3nsfb6vr.cpp:2:\n/tmp/tmp3nsfb6vr.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp3nsfb6vr.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp3nsfb6vr.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp3nsfb6vr.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp3nsfb6vr.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp3nsfb6vr.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp3nsfb6vr.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp3nsfb6vr.cpp: At global scope:\n/tmp/tmp3nsfb6vr.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp3nsfb6vr.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpj52r7rmh.cpp:2:\n/tmp/tmpj52r7rmh.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpj52r7rmh.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpj52r7rmh.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpj52r7rmh.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpj52r7rmh.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpj52r7rmh.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpj52r7rmh.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpj52r7rmh.cpp: At global scope:\n/tmp/tmpj52r7rmh.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpj52r7rmh.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i : values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpzsir4ul4.cpp:2:\n/tmp/tmpzsir4ul4.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpzsir4ul4.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpzsir4ul4.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpzsir4ul4.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpzsir4ul4.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpzsir4ul4.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpzsir4ul4.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpzsir4ul4.cpp: At global scope:\n/tmp/tmpzsir4ul4.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpzsir4ul4.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpnmhqxqqb.cpp:2:\n/tmp/tmpnmhqxqqb.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpnmhqxqqb.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpnmhqxqqb.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpnmhqxqqb.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpnmhqxqqb.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpnmhqxqqb.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpnmhqxqqb.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpnmhqxqqb.cpp: At global scope:\n/tmp/tmpnmhqxqqb.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpnmhqxqqb.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpr1ov9_bb.cpp:2:\n/tmp/tmpr1ov9_bb.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpr1ov9_bb.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpr1ov9_bb.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpr1ov9_bb.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpr1ov9_bb.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpr1ov9_bb.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpr1ov9_bb.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpr1ov9_bb.cpp: At global scope:\n/tmp/tmpr1ov9_bb.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpr1ov9_bb.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i : values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp8tgbanf5.cpp:2:\n/tmp/tmp8tgbanf5.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp8tgbanf5.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp8tgbanf5.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp8tgbanf5.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp8tgbanf5.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp8tgbanf5.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp8tgbanf5.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp8tgbanf5.cpp: At global scope:\n/tmp/tmp8tgbanf5.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp8tgbanf5.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            // do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp1o1d0mtf.cpp:2:\n/tmp/tmp1o1d0mtf.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp1o1d0mtf.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp1o1d0mtf.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp1o1d0mtf.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp1o1d0mtf.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp1o1d0mtf.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp1o1d0mtf.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp1o1d0mtf.cpp: At global scope:\n/tmp/tmp1o1d0mtf.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp1o1d0mtf.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto v: values){\n        try{\n            res.push_back(std::any_cast<long>(v));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpbtdefahz.cpp:2:\n/tmp/tmpbtdefahz.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpbtdefahz.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpbtdefahz.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpbtdefahz.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpbtdefahz.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpbtdefahz.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpbtdefahz.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpbtdefahz.cpp: At global scope:\n/tmp/tmpbtdefahz.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpbtdefahz.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpwnac09i_.cpp:2:\n/tmp/tmpwnac09i_.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpwnac09i_.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpwnac09i_.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpwnac09i_.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpwnac09i_.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpwnac09i_.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpwnac09i_.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpwnac09i_.cpp: At global scope:\n/tmp/tmpwnac09i_.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpwnac09i_.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(const std::bad_any_cast& e) {\n            // Do nothing\n  \
    \      }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp68gkpbcu.cpp:2:\n/tmp/tmp68gkpbcu.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp68gkpbcu.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp68gkpbcu.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp68gkpbcu.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp68gkpbcu.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp68gkpbcu.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp68gkpbcu.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp68gkpbcu.cpp: At global scope:\n/tmp/tmp68gkpbcu.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp68gkpbcu.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpudzgyz67.cpp:2:\n/tmp/tmpudzgyz67.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpudzgyz67.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpudzgyz67.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpudzgyz67.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpudzgyz67.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpudzgyz67.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpudzgyz67.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpudzgyz67.cpp: At global scope:\n/tmp/tmpudzgyz67.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpudzgyz67.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpth4yf43d.cpp:2:\n/tmp/tmpth4yf43d.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpth4yf43d.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpth4yf43d.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpth4yf43d.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpth4yf43d.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpth4yf43d.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpth4yf43d.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpth4yf43d.cpp: At global scope:\n/tmp/tmpth4yf43d.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpth4yf43d.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpfzqytz7z.cpp:2:\n/tmp/tmpfzqytz7z.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpfzqytz7z.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpfzqytz7z.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpfzqytz7z.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpfzqytz7z.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpfzqytz7z.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpfzqytz7z.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpfzqytz7z.cpp: At global scope:\n/tmp/tmpfzqytz7z.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpfzqytz7z.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast &e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpaxg8un_2.cpp:2:\n/tmp/tmpaxg8un_2.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpaxg8un_2.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpaxg8un_2.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpaxg8un_2.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpaxg8un_2.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpaxg8un_2.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpaxg8un_2.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpaxg8un_2.cpp: At global scope:\n/tmp/tmpaxg8un_2.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpaxg8un_2.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpwmr9h8u4.cpp:2:\n/tmp/tmpwmr9h8u4.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpwmr9h8u4.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpwmr9h8u4.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpwmr9h8u4.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpwmr9h8u4.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpwmr9h8u4.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpwmr9h8u4.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpwmr9h8u4.cpp: At global scope:\n/tmp/tmpwmr9h8u4.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpwmr9h8u4.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast &e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpaufozmxj.cpp:2:\n/tmp/tmpaufozmxj.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpaufozmxj.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpaufozmxj.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpaufozmxj.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpaufozmxj.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpaufozmxj.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpaufozmxj.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpaufozmxj.cpp: At global scope:\n/tmp/tmpaufozmxj.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpaufozmxj.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmprlers7fd.cpp:2:\n/tmp/tmprlers7fd.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmprlers7fd.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmprlers7fd.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmprlers7fd.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmprlers7fd.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmprlers7fd.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmprlers7fd.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmprlers7fd.cpp: At global scope:\n/tmp/tmprlers7fd.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmprlers7fd.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpdfiumc4f.cpp:2:\n/tmp/tmpdfiumc4f.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpdfiumc4f.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpdfiumc4f.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpdfiumc4f.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpdfiumc4f.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpdfiumc4f.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpdfiumc4f.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpdfiumc4f.cpp: At global scope:\n/tmp/tmpdfiumc4f.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpdfiumc4f.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto it = values.begin(); it != values.end(); it++) {\n        try {\n\
    \            result.push_back(std::any_cast<long>(*it));\n        } catch(const\
    \ std::bad_any_cast& e) {\n            continue;\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpptt57jh6.cpp:2:\n/tmp/tmpptt57jh6.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpptt57jh6.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpptt57jh6.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpptt57jh6.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpptt57jh6.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpptt57jh6.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpptt57jh6.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpptt57jh6.cpp: At global scope:\n/tmp/tmpptt57jh6.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpptt57jh6.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpxb7s73px.cpp:2:\n/tmp/tmpxb7s73px.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpxb7s73px.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpxb7s73px.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpxb7s73px.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpxb7s73px.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpxb7s73px.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpxb7s73px.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpxb7s73px.cpp: At global scope:\n/tmp/tmpxb7s73px.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpxb7s73px.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp6_pxq7c8.cpp:2:\n/tmp/tmp6_pxq7c8.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp6_pxq7c8.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp6_pxq7c8.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp6_pxq7c8.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp6_pxq7c8.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp6_pxq7c8.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp6_pxq7c8.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp6_pxq7c8.cpp: At global scope:\n/tmp/tmp6_pxq7c8.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp6_pxq7c8.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpl1qwzp66.cpp:2:\n/tmp/tmpl1qwzp66.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpl1qwzp66.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpl1qwzp66.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpl1qwzp66.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpl1qwzp66.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpl1qwzp66.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpl1qwzp66.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpl1qwzp66.cpp: At global scope:\n/tmp/tmpl1qwzp66.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpl1qwzp66.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmprxti09bn.cpp:2:\n/tmp/tmprxti09bn.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmprxti09bn.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmprxti09bn.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmprxti09bn.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmprxti09bn.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmprxti09bn.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmprxti09bn.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmprxti09bn.cpp: At global scope:\n/tmp/tmprxti09bn.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmprxti09bn.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp2k4gl9s9.cpp:2:\n/tmp/tmp2k4gl9s9.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp2k4gl9s9.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp2k4gl9s9.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp2k4gl9s9.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp2k4gl9s9.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp2k4gl9s9.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp2k4gl9s9.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp2k4gl9s9.cpp: At global scope:\n/tmp/tmp2k4gl9s9.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp2k4gl9s9.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpban85kmp.cpp:2:\n/tmp/tmpban85kmp.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpban85kmp.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpban85kmp.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpban85kmp.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpban85kmp.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpban85kmp.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpban85kmp.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpban85kmp.cpp: At global scope:\n/tmp/tmpban85kmp.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpban85kmp.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpr2ewmvas.cpp:2:\n/tmp/tmpr2ewmvas.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpr2ewmvas.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpr2ewmvas.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpr2ewmvas.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpr2ewmvas.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpr2ewmvas.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpr2ewmvas.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpr2ewmvas.cpp: At global scope:\n/tmp/tmpr2ewmvas.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpr2ewmvas.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpjuych1v4.cpp:2:\n/tmp/tmpjuych1v4.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpjuych1v4.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpjuych1v4.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpjuych1v4.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpjuych1v4.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpjuych1v4.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpjuych1v4.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpjuych1v4.cpp: At global scope:\n/tmp/tmpjuych1v4.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpjuych1v4.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpr9_tpcmk.cpp:2:\n/tmp/tmpr9_tpcmk.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpr9_tpcmk.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpr9_tpcmk.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpr9_tpcmk.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpr9_tpcmk.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpr9_tpcmk.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpr9_tpcmk.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpr9_tpcmk.cpp: At global scope:\n/tmp/tmpr9_tpcmk.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpr9_tpcmk.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpk8w2kcfn.cpp:2:\n/tmp/tmpk8w2kcfn.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpk8w2kcfn.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpk8w2kcfn.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpk8w2kcfn.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpk8w2kcfn.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpk8w2kcfn.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpk8w2kcfn.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpk8w2kcfn.cpp: At global scope:\n/tmp/tmpk8w2kcfn.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpk8w2kcfn.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast &e) {\n            // do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp0f16yj47.cpp:2:\n/tmp/tmp0f16yj47.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp0f16yj47.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp0f16yj47.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp0f16yj47.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp0f16yj47.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp0f16yj47.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp0f16yj47.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp0f16yj47.cpp: At global scope:\n/tmp/tmp0f16yj47.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp0f16yj47.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            // do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpnhv4cc1m.cpp:2:\n/tmp/tmpnhv4cc1m.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpnhv4cc1m.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpnhv4cc1m.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpnhv4cc1m.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpnhv4cc1m.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpnhv4cc1m.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpnhv4cc1m.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpnhv4cc1m.cpp: At global scope:\n/tmp/tmpnhv4cc1m.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpnhv4cc1m.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n  std::vector<long> result;\n\
    \  for (auto value : values) {\n    if (value.type() == typeid(long)) {\n    \
    \  result.push_back(std::any_cast<long>(value));\n    }\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp2bsgtfya.cpp:2:\n/tmp/tmp2bsgtfya.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp2bsgtfya.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp2bsgtfya.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp2bsgtfya.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp2bsgtfya.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp2bsgtfya.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp2bsgtfya.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp2bsgtfya.cpp: At global scope:\n/tmp/tmp2bsgtfya.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp2bsgtfya.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp9cj31b_t.cpp:2:\n/tmp/tmp9cj31b_t.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp9cj31b_t.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp9cj31b_t.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp9cj31b_t.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp9cj31b_t.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp9cj31b_t.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp9cj31b_t.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp9cj31b_t.cpp: At global scope:\n/tmp/tmp9cj31b_t.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp9cj31b_t.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpw2n0eaor.cpp:2:\n/tmp/tmpw2n0eaor.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpw2n0eaor.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpw2n0eaor.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpw2n0eaor.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpw2n0eaor.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpw2n0eaor.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpw2n0eaor.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpw2n0eaor.cpp: At global scope:\n/tmp/tmpw2n0eaor.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpw2n0eaor.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp7bicih4w.cpp:2:\n/tmp/tmp7bicih4w.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp7bicih4w.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp7bicih4w.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp7bicih4w.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp7bicih4w.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp7bicih4w.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp7bicih4w.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp7bicih4w.cpp: At global scope:\n/tmp/tmp7bicih4w.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp7bicih4w.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpsty55o18.cpp:2:\n/tmp/tmpsty55o18.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpsty55o18.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpsty55o18.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpsty55o18.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpsty55o18.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpsty55o18.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpsty55o18.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpsty55o18.cpp: At global scope:\n/tmp/tmpsty55o18.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpsty55o18.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpcuww64ki.cpp:2:\n/tmp/tmpcuww64ki.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpcuww64ki.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpcuww64ki.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpcuww64ki.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpcuww64ki.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpcuww64ki.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpcuww64ki.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpcuww64ki.cpp: At global scope:\n/tmp/tmpcuww64ki.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpcuww64ki.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto x: values){\n        try{\n            result.push_back(std::any_cast<long>(x));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp_7pgdam0.cpp:2:\n/tmp/tmp_7pgdam0.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp_7pgdam0.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp_7pgdam0.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp_7pgdam0.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp_7pgdam0.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp_7pgdam0.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp_7pgdam0.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp_7pgdam0.cpp: At global scope:\n/tmp/tmp_7pgdam0.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp_7pgdam0.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpmgx07iq6.cpp:2:\n/tmp/tmpmgx07iq6.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpmgx07iq6.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpmgx07iq6.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpmgx07iq6.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpmgx07iq6.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpmgx07iq6.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpmgx07iq6.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpmgx07iq6.cpp: At global scope:\n/tmp/tmpmgx07iq6.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpmgx07iq6.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpm32blb0t.cpp:2:\n/tmp/tmpm32blb0t.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpm32blb0t.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpm32blb0t.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpm32blb0t.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpm32blb0t.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpm32blb0t.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpm32blb0t.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpm32blb0t.cpp: At global scope:\n/tmp/tmpm32blb0t.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpm32blb0t.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpqdtdwq0h.cpp:2:\n/tmp/tmpqdtdwq0h.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpqdtdwq0h.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpqdtdwq0h.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpqdtdwq0h.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpqdtdwq0h.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpqdtdwq0h.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpqdtdwq0h.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpqdtdwq0h.cpp: At global scope:\n/tmp/tmpqdtdwq0h.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpqdtdwq0h.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmput7mb24l.cpp:2:\n/tmp/tmput7mb24l.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmput7mb24l.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmput7mb24l.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmput7mb24l.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmput7mb24l.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmput7mb24l.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmput7mb24l.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmput7mb24l.cpp: At global scope:\n/tmp/tmput7mb24l.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmput7mb24l.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n  std::vector<long> result;\n\
    \  for (auto value : values) {\n    try {\n      result.push_back(std::any_cast<long>(value));\n\
    \    } catch (std::bad_any_cast& e) {\n      continue;\n    }\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpf0pav3bb.cpp:2:\n/tmp/tmpf0pav3bb.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpf0pav3bb.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpf0pav3bb.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpf0pav3bb.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpf0pav3bb.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpf0pav3bb.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpf0pav3bb.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpf0pav3bb.cpp: At global scope:\n/tmp/tmpf0pav3bb.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpf0pav3bb.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmps16r6vnt.cpp:2:\n/tmp/tmps16r6vnt.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmps16r6vnt.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmps16r6vnt.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmps16r6vnt.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmps16r6vnt.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmps16r6vnt.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmps16r6vnt.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmps16r6vnt.cpp: At global scope:\n/tmp/tmps16r6vnt.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmps16r6vnt.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            // do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp1ybm_w65.cpp:2:\n/tmp/tmp1ybm_w65.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp1ybm_w65.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp1ybm_w65.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp1ybm_w65.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp1ybm_w65.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp1ybm_w65.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp1ybm_w65.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp1ybm_w65.cpp: At global scope:\n/tmp/tmp1ybm_w65.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp1ybm_w65.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpw7huus5j.cpp:2:\n/tmp/tmpw7huus5j.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpw7huus5j.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpw7huus5j.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpw7huus5j.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpw7huus5j.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpw7huus5j.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpw7huus5j.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpw7huus5j.cpp: At global scope:\n/tmp/tmpw7huus5j.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpw7huus5j.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> v;\n\
    \    for(auto i:values){\n        try{\n            v.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            //do nothing\n \
    \       }\n    }\n    return v;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpi7vwur4s.cpp:2:\n/tmp/tmpi7vwur4s.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpi7vwur4s.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpi7vwur4s.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpi7vwur4s.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpi7vwur4s.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpi7vwur4s.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpi7vwur4s.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpi7vwur4s.cpp: At global scope:\n/tmp/tmpi7vwur4s.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpi7vwur4s.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpdig1c_6q.cpp:2:\n/tmp/tmpdig1c_6q.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpdig1c_6q.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpdig1c_6q.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpdig1c_6q.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpdig1c_6q.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpdig1c_6q.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpdig1c_6q.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpdig1c_6q.cpp: At global scope:\n/tmp/tmpdig1c_6q.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpdig1c_6q.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpaxldx2w0.cpp:2:\n/tmp/tmpaxldx2w0.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpaxldx2w0.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpaxldx2w0.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpaxldx2w0.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpaxldx2w0.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpaxldx2w0.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpaxldx2w0.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpaxldx2w0.cpp: At global scope:\n/tmp/tmpaxldx2w0.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpaxldx2w0.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpc_rncdvb.cpp:2:\n/tmp/tmpc_rncdvb.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpc_rncdvb.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpc_rncdvb.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpc_rncdvb.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpc_rncdvb.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpc_rncdvb.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpc_rncdvb.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpc_rncdvb.cpp: At global scope:\n/tmp/tmpc_rncdvb.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpc_rncdvb.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmptczw5ksn.cpp:2:\n/tmp/tmptczw5ksn.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmptczw5ksn.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmptczw5ksn.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmptczw5ksn.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmptczw5ksn.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmptczw5ksn.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmptczw5ksn.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmptczw5ksn.cpp: At global scope:\n/tmp/tmptczw5ksn.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmptczw5ksn.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            // do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpeqrmt854.cpp:2:\n/tmp/tmpeqrmt854.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpeqrmt854.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpeqrmt854.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpeqrmt854.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpeqrmt854.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpeqrmt854.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpeqrmt854.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpeqrmt854.cpp: At global scope:\n/tmp/tmpeqrmt854.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpeqrmt854.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        if(i.type()==typeid(int)){\n            res.push_back(std::any_cast<int>(i));\n\
    \        }\n        else if(i.type()==typeid(long)){\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp3gnnjo_0.cpp:2:\n/tmp/tmp3gnnjo_0.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp3gnnjo_0.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp3gnnjo_0.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp3gnnjo_0.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp3gnnjo_0.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp3gnnjo_0.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp3gnnjo_0.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp3gnnjo_0.cpp: At global scope:\n/tmp/tmp3gnnjo_0.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp3gnnjo_0.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpvse80aey.cpp:2:\n/tmp/tmpvse80aey.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpvse80aey.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpvse80aey.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpvse80aey.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpvse80aey.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpvse80aey.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpvse80aey.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpvse80aey.cpp: At global scope:\n/tmp/tmpvse80aey.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpvse80aey.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpm2uso28p.cpp:2:\n/tmp/tmpm2uso28p.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpm2uso28p.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpm2uso28p.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpm2uso28p.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpm2uso28p.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpm2uso28p.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpm2uso28p.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpm2uso28p.cpp: At global scope:\n/tmp/tmpm2uso28p.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpm2uso28p.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast){\n            continue;\n       \
    \ }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpv5kbvnt9.cpp:2:\n/tmp/tmpv5kbvnt9.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpv5kbvnt9.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpv5kbvnt9.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpv5kbvnt9.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpv5kbvnt9.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpv5kbvnt9.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpv5kbvnt9.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpv5kbvnt9.cpp: At global scope:\n/tmp/tmpv5kbvnt9.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpv5kbvnt9.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        if(i.type() == typeid(int)){\n           \
    \ result.push_back(std::any_cast<int>(i));\n        }\n        else if(i.type()\
    \ == typeid(long)){\n            result.push_back(std::any_cast<long>(i));\n \
    \       }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmplzrovy4_.cpp:2:\n/tmp/tmplzrovy4_.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmplzrovy4_.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmplzrovy4_.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmplzrovy4_.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmplzrovy4_.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmplzrovy4_.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmplzrovy4_.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmplzrovy4_.cpp: At global scope:\n/tmp/tmplzrovy4_.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmplzrovy4_.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpx7379puj.cpp:2:\n/tmp/tmpx7379puj.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpx7379puj.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpx7379puj.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpx7379puj.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpx7379puj.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpx7379puj.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpx7379puj.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpx7379puj.cpp: At global scope:\n/tmp/tmpx7379puj.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpx7379puj.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpjptknqs8.cpp:2:\n/tmp/tmpjptknqs8.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpjptknqs8.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpjptknqs8.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpjptknqs8.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpjptknqs8.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpjptknqs8.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpjptknqs8.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpjptknqs8.cpp: At global scope:\n/tmp/tmpjptknqs8.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpjptknqs8.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(const std::bad_any_cast& e) {\n            // Do nothing\n  \
    \      }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpuazel2pl.cpp:2:\n/tmp/tmpuazel2pl.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpuazel2pl.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpuazel2pl.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpuazel2pl.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpuazel2pl.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpuazel2pl.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpuazel2pl.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpuazel2pl.cpp: At global scope:\n/tmp/tmpuazel2pl.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpuazel2pl.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpxfr6cvrc.cpp:2:\n/tmp/tmpxfr6cvrc.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpxfr6cvrc.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpxfr6cvrc.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpxfr6cvrc.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpxfr6cvrc.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpxfr6cvrc.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpxfr6cvrc.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpxfr6cvrc.cpp: At global scope:\n/tmp/tmpxfr6cvrc.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpxfr6cvrc.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto x: values){\n        try{\n            res.push_back(std::any_cast<long>(x));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmps72v0v0r.cpp:2:\n/tmp/tmps72v0v0r.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmps72v0v0r.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmps72v0v0r.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmps72v0v0r.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmps72v0v0r.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmps72v0v0r.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmps72v0v0r.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmps72v0v0r.cpp: At global scope:\n/tmp/tmps72v0v0r.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmps72v0v0r.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpnfddbosy.cpp:2:\n/tmp/tmpnfddbosy.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpnfddbosy.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpnfddbosy.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpnfddbosy.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpnfddbosy.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpnfddbosy.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpnfddbosy.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpnfddbosy.cpp: At global scope:\n/tmp/tmpnfddbosy.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpnfddbosy.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp9pwk46gn.cpp:2:\n/tmp/tmp9pwk46gn.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp9pwk46gn.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp9pwk46gn.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp9pwk46gn.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp9pwk46gn.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp9pwk46gn.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp9pwk46gn.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp9pwk46gn.cpp: At global scope:\n/tmp/tmp9pwk46gn.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp9pwk46gn.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpc21xi5mk.cpp:2:\n/tmp/tmpc21xi5mk.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpc21xi5mk.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpc21xi5mk.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpc21xi5mk.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpc21xi5mk.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpc21xi5mk.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpc21xi5mk.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpc21xi5mk.cpp: At global scope:\n/tmp/tmpc21xi5mk.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpc21xi5mk.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp4p92k2ya.cpp:2:\n/tmp/tmp4p92k2ya.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp4p92k2ya.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp4p92k2ya.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp4p92k2ya.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp4p92k2ya.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp4p92k2ya.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp4p92k2ya.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp4p92k2ya.cpp: At global scope:\n/tmp/tmp4p92k2ya.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp4p92k2ya.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp6uwk_e2t.cpp:2:\n/tmp/tmp6uwk_e2t.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp6uwk_e2t.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp6uwk_e2t.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp6uwk_e2t.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp6uwk_e2t.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp6uwk_e2t.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp6uwk_e2t.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp6uwk_e2t.cpp: At global scope:\n/tmp/tmp6uwk_e2t.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp6uwk_e2t.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpchv3k673.cpp:2:\n/tmp/tmpchv3k673.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpchv3k673.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpchv3k673.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpchv3k673.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpchv3k673.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpchv3k673.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpchv3k673.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpchv3k673.cpp: At global scope:\n/tmp/tmpchv3k673.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpchv3k673.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        if(i.type() == typeid(int)){\n           \
    \ result.push_back(std::any_cast<int>(i));\n        }\n        else if(i.type()\
    \ == typeid(long)){\n            result.push_back(std::any_cast<long>(i));\n \
    \       }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpxpeznbxh.cpp:2:\n/tmp/tmpxpeznbxh.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpxpeznbxh.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpxpeznbxh.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpxpeznbxh.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpxpeznbxh.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpxpeznbxh.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpxpeznbxh.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpxpeznbxh.cpp: At global scope:\n/tmp/tmpxpeznbxh.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpxpeznbxh.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp9p2q9j52.cpp:2:\n/tmp/tmp9p2q9j52.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp9p2q9j52.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp9p2q9j52.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp9p2q9j52.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp9p2q9j52.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp9p2q9j52.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp9p2q9j52.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp9p2q9j52.cpp: At global scope:\n/tmp/tmp9p2q9j52.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp9p2q9j52.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto x: values){\n        if(x.type() == typeid(long)){\n           \
    \ result.push_back(std::any_cast<long>(x));\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpv4xi2qdi.cpp:2:\n/tmp/tmpv4xi2qdi.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpv4xi2qdi.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpv4xi2qdi.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpv4xi2qdi.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpv4xi2qdi.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpv4xi2qdi.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpv4xi2qdi.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpv4xi2qdi.cpp: At global scope:\n/tmp/tmpv4xi2qdi.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpv4xi2qdi.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(const std::bad_any_cast& e) {\n            // do nothing\n  \
    \      }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpbu0jl8sa.cpp:2:\n/tmp/tmpbu0jl8sa.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpbu0jl8sa.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpbu0jl8sa.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpbu0jl8sa.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpbu0jl8sa.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpbu0jl8sa.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpbu0jl8sa.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpbu0jl8sa.cpp: At global scope:\n/tmp/tmpbu0jl8sa.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpbu0jl8sa.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp6d1wa_aa.cpp:2:\n/tmp/tmp6d1wa_aa.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp6d1wa_aa.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp6d1wa_aa.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp6d1wa_aa.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp6d1wa_aa.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp6d1wa_aa.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp6d1wa_aa.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp6d1wa_aa.cpp: At global scope:\n/tmp/tmp6d1wa_aa.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp6d1wa_aa.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpjdcnp6e_.cpp:2:\n/tmp/tmpjdcnp6e_.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpjdcnp6e_.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpjdcnp6e_.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpjdcnp6e_.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpjdcnp6e_.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpjdcnp6e_.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpjdcnp6e_.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpjdcnp6e_.cpp: At global scope:\n/tmp/tmpjdcnp6e_.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpjdcnp6e_.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(const std::bad_any_cast& e) {\n            continue;\n      \
    \  }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp76a1sz1w.cpp:2:\n/tmp/tmp76a1sz1w.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp76a1sz1w.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp76a1sz1w.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp76a1sz1w.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp76a1sz1w.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp76a1sz1w.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp76a1sz1w.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp76a1sz1w.cpp: At global scope:\n/tmp/tmp76a1sz1w.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp76a1sz1w.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast&) {\n            // do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpw7ac560n.cpp:2:\n/tmp/tmpw7ac560n.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpw7ac560n.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpw7ac560n.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpw7ac560n.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpw7ac560n.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpw7ac560n.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpw7ac560n.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpw7ac560n.cpp: At global scope:\n/tmp/tmpw7ac560n.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpw7ac560n.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> v;\n\
    \    for(auto i:values){\n        try{\n            v.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return v;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmplg67oph8.cpp:2:\n/tmp/tmplg67oph8.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmplg67oph8.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmplg67oph8.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmplg67oph8.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmplg67oph8.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmplg67oph8.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmplg67oph8.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmplg67oph8.cpp: At global scope:\n/tmp/tmplg67oph8.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmplg67oph8.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpf13rgp0o.cpp:2:\n/tmp/tmpf13rgp0o.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpf13rgp0o.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpf13rgp0o.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpf13rgp0o.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpf13rgp0o.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpf13rgp0o.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpf13rgp0o.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpf13rgp0o.cpp: At global scope:\n/tmp/tmpf13rgp0o.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpf13rgp0o.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpuhuels2e.cpp:2:\n/tmp/tmpuhuels2e.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpuhuels2e.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpuhuels2e.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpuhuels2e.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpuhuels2e.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpuhuels2e.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpuhuels2e.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpuhuels2e.cpp: At global scope:\n/tmp/tmpuhuels2e.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpuhuels2e.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmph7t9tq6h.cpp:2:\n/tmp/tmph7t9tq6h.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmph7t9tq6h.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmph7t9tq6h.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmph7t9tq6h.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmph7t9tq6h.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmph7t9tq6h.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmph7t9tq6h.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmph7t9tq6h.cpp: At global scope:\n/tmp/tmph7t9tq6h.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmph7t9tq6h.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            // do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpx6z7ymq4.cpp:2:\n/tmp/tmpx6z7ymq4.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpx6z7ymq4.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpx6z7ymq4.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpx6z7ymq4.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpx6z7ymq4.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpx6z7ymq4.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpx6z7ymq4.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpx6z7ymq4.cpp: At global scope:\n/tmp/tmpx6z7ymq4.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpx6z7ymq4.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto x: values){\n        try{\n            result.push_back(std::any_cast<long>(x));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp051j8kg5.cpp:2:\n/tmp/tmp051j8kg5.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp051j8kg5.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp051j8kg5.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp051j8kg5.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp051j8kg5.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp051j8kg5.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp051j8kg5.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp051j8kg5.cpp: At global scope:\n/tmp/tmp051j8kg5.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp051j8kg5.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpb9ucj2yj.cpp:2:\n/tmp/tmpb9ucj2yj.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpb9ucj2yj.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpb9ucj2yj.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpb9ucj2yj.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpb9ucj2yj.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpb9ucj2yj.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpb9ucj2yj.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpb9ucj2yj.cpp: At global scope:\n/tmp/tmpb9ucj2yj.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpb9ucj2yj.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpkxfy90r_.cpp:2:\n/tmp/tmpkxfy90r_.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpkxfy90r_.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpkxfy90r_.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpkxfy90r_.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpkxfy90r_.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpkxfy90r_.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpkxfy90r_.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpkxfy90r_.cpp: At global scope:\n/tmp/tmpkxfy90r_.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpkxfy90r_.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmplloej73g.cpp:2:\n/tmp/tmplloej73g.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmplloej73g.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmplloej73g.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmplloej73g.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmplloej73g.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmplloej73g.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmplloej73g.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmplloej73g.cpp: At global scope:\n/tmp/tmplloej73g.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmplloej73g.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(const std::bad_any_cast& e) {\n            continue;\n      \
    \  }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpol8fawap.cpp:2:\n/tmp/tmpol8fawap.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpol8fawap.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpol8fawap.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpol8fawap.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpol8fawap.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpol8fawap.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpol8fawap.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpol8fawap.cpp: At global scope:\n/tmp/tmpol8fawap.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpol8fawap.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp54dtugxo.cpp:2:\n/tmp/tmp54dtugxo.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp54dtugxo.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp54dtugxo.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp54dtugxo.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp54dtugxo.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp54dtugxo.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp54dtugxo.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp54dtugxo.cpp: At global scope:\n/tmp/tmp54dtugxo.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp54dtugxo.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i:values){\n        try{\n            std::any_cast<long>(i);\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(std::bad_any_cast&\
    \ e){\n            //std::cout<<e.what()<<std::endl;\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmps7kuqlbh.cpp:2:\n/tmp/tmps7kuqlbh.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmps7kuqlbh.cpp:24:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   24 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmps7kuqlbh.cpp:24:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   24 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmps7kuqlbh.cpp:24:50: error: expected\
    \ \u2018)\u2019 before string constant\n   24 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmps7kuqlbh.cpp:24:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   24 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmps7kuqlbh.cpp:24:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmps7kuqlbh.cpp:24:5:\
    \ note: to match this \u2018(\u2019\n   24 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmps7kuqlbh.cpp: At global scope:\n/tmp/tmps7kuqlbh.cpp:24:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   24 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmps7kuqlbh.cpp:24:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   24 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpmnfb9z65.cpp:2:\n/tmp/tmpmnfb9z65.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpmnfb9z65.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpmnfb9z65.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpmnfb9z65.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpmnfb9z65.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpmnfb9z65.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpmnfb9z65.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpmnfb9z65.cpp: At global scope:\n/tmp/tmpmnfb9z65.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpmnfb9z65.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast &e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpjxe89gn7.cpp:2:\n/tmp/tmpjxe89gn7.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpjxe89gn7.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpjxe89gn7.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpjxe89gn7.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpjxe89gn7.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpjxe89gn7.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpjxe89gn7.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpjxe89gn7.cpp: At global scope:\n/tmp/tmpjxe89gn7.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpjxe89gn7.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(const std::bad_any_cast& e) {\n            // do nothing\n  \
    \      }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpekyvj_xq.cpp:2:\n/tmp/tmpekyvj_xq.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpekyvj_xq.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpekyvj_xq.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpekyvj_xq.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpekyvj_xq.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpekyvj_xq.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpekyvj_xq.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpekyvj_xq.cpp: At global scope:\n/tmp/tmpekyvj_xq.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpekyvj_xq.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp2eq7s0ge.cpp:2:\n/tmp/tmp2eq7s0ge.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp2eq7s0ge.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp2eq7s0ge.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp2eq7s0ge.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp2eq7s0ge.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp2eq7s0ge.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp2eq7s0ge.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp2eq7s0ge.cpp: At global scope:\n/tmp/tmp2eq7s0ge.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp2eq7s0ge.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto it = values.begin(); it != values.end(); it++) {\n        try {\n\
    \            result.push_back(std::any_cast<long>(*it));\n        } catch(std::bad_any_cast&\
    \ e) {\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpfqjzhat5.cpp:2:\n/tmp/tmpfqjzhat5.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpfqjzhat5.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpfqjzhat5.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpfqjzhat5.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpfqjzhat5.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpfqjzhat5.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpfqjzhat5.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpfqjzhat5.cpp: At global scope:\n/tmp/tmpfqjzhat5.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpfqjzhat5.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            // do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp6t75znw3.cpp:2:\n/tmp/tmp6t75znw3.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp6t75znw3.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp6t75znw3.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp6t75znw3.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp6t75znw3.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp6t75znw3.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp6t75znw3.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp6t75znw3.cpp: At global scope:\n/tmp/tmp6t75znw3.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp6t75znw3.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp9ctget12.cpp:2:\n/tmp/tmp9ctget12.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp9ctget12.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp9ctget12.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp9ctget12.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp9ctget12.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp9ctget12.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp9ctget12.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp9ctget12.cpp: At global scope:\n/tmp/tmp9ctget12.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp9ctget12.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpwbmd8d9j.cpp:2:\n/tmp/tmpwbmd8d9j.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpwbmd8d9j.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpwbmd8d9j.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpwbmd8d9j.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpwbmd8d9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpwbmd8d9j.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpwbmd8d9j.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpwbmd8d9j.cpp: At global scope:\n/tmp/tmpwbmd8d9j.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpwbmd8d9j.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpwy_frqc7.cpp:2:\n/tmp/tmpwy_frqc7.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpwy_frqc7.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpwy_frqc7.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpwy_frqc7.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpwy_frqc7.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpwy_frqc7.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpwy_frqc7.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpwy_frqc7.cpp: At global scope:\n/tmp/tmpwy_frqc7.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpwy_frqc7.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpkm95va_4.cpp:2:\n/tmp/tmpkm95va_4.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpkm95va_4.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpkm95va_4.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpkm95va_4.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpkm95va_4.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpkm95va_4.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpkm95va_4.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpkm95va_4.cpp: At global scope:\n/tmp/tmpkm95va_4.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpkm95va_4.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            // do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpbmba6sx7.cpp:2:\n/tmp/tmpbmba6sx7.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpbmba6sx7.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpbmba6sx7.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpbmba6sx7.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpbmba6sx7.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpbmba6sx7.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpbmba6sx7.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpbmba6sx7.cpp: At global scope:\n/tmp/tmpbmba6sx7.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpbmba6sx7.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto it = values.begin(); it != values.end(); it++) {\n        try {\n\
    \            result.push_back(std::any_cast<long>(*it));\n        } catch(std::bad_any_cast&\
    \ e) {\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp9eu2bzsg.cpp:2:\n/tmp/tmp9eu2bzsg.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp9eu2bzsg.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp9eu2bzsg.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp9eu2bzsg.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp9eu2bzsg.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp9eu2bzsg.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp9eu2bzsg.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp9eu2bzsg.cpp: At global scope:\n/tmp/tmp9eu2bzsg.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp9eu2bzsg.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmph6yx46s9.cpp:2:\n/tmp/tmph6yx46s9.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmph6yx46s9.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmph6yx46s9.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmph6yx46s9.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmph6yx46s9.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmph6yx46s9.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmph6yx46s9.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmph6yx46s9.cpp: At global scope:\n/tmp/tmph6yx46s9.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmph6yx46s9.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> ret;\n\
    \    for(auto i:values){\n        try{\n            ret.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpp1be163t.cpp:2:\n/tmp/tmpp1be163t.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpp1be163t.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpp1be163t.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpp1be163t.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpp1be163t.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpp1be163t.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpp1be163t.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpp1be163t.cpp: At global scope:\n/tmp/tmpp1be163t.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpp1be163t.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp0hy08vot.cpp:2:\n/tmp/tmp0hy08vot.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp0hy08vot.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp0hy08vot.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp0hy08vot.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp0hy08vot.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp0hy08vot.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp0hy08vot.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp0hy08vot.cpp: At global scope:\n/tmp/tmp0hy08vot.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp0hy08vot.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpiefrfqt1.cpp:2:\n/tmp/tmpiefrfqt1.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpiefrfqt1.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpiefrfqt1.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpiefrfqt1.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpiefrfqt1.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpiefrfqt1.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpiefrfqt1.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpiefrfqt1.cpp: At global scope:\n/tmp/tmpiefrfqt1.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpiefrfqt1.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &val : values) {\n        try {\n            result.push_back(std::any_cast<long>(val));\n\
    \        } catch(std::bad_any_cast &e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp347bp3va.cpp:2:\n/tmp/tmp347bp3va.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp347bp3va.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp347bp3va.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp347bp3va.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp347bp3va.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp347bp3va.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp347bp3va.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp347bp3va.cpp: At global scope:\n/tmp/tmp347bp3va.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp347bp3va.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n\tstd::vector<long> result;\n\
    \tfor (auto value : values) {\n\t\tif (value.type() == typeid(long)) {\n\t\t\t\
    result.push_back(std::any_cast<long>(value));\n\t\t}\n\t}\n\treturn result;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpi4lw6091.cpp:2:\n/tmp/tmpi4lw6091.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpi4lw6091.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpi4lw6091.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpi4lw6091.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpi4lw6091.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpi4lw6091.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpi4lw6091.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpi4lw6091.cpp: At global scope:\n/tmp/tmpi4lw6091.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpi4lw6091.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpdu5fhvzn.cpp:2:\n/tmp/tmpdu5fhvzn.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpdu5fhvzn.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpdu5fhvzn.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpdu5fhvzn.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpdu5fhvzn.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpdu5fhvzn.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpdu5fhvzn.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpdu5fhvzn.cpp: At global scope:\n/tmp/tmpdu5fhvzn.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpdu5fhvzn.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpsyvvif2z.cpp:2:\n/tmp/tmpsyvvif2z.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpsyvvif2z.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpsyvvif2z.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpsyvvif2z.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpsyvvif2z.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpsyvvif2z.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpsyvvif2z.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpsyvvif2z.cpp: At global scope:\n/tmp/tmpsyvvif2z.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpsyvvif2z.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp61oxiyx4.cpp:2:\n/tmp/tmp61oxiyx4.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp61oxiyx4.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp61oxiyx4.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp61oxiyx4.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp61oxiyx4.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp61oxiyx4.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp61oxiyx4.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp61oxiyx4.cpp: At global scope:\n/tmp/tmp61oxiyx4.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp61oxiyx4.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpppdawetp.cpp:2:\n/tmp/tmpppdawetp.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpppdawetp.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpppdawetp.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpppdawetp.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpppdawetp.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpppdawetp.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpppdawetp.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpppdawetp.cpp: At global scope:\n/tmp/tmpppdawetp.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpppdawetp.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpr5fubeuv.cpp:2:\n/tmp/tmpr5fubeuv.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpr5fubeuv.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpr5fubeuv.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpr5fubeuv.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpr5fubeuv.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpr5fubeuv.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpr5fubeuv.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpr5fubeuv.cpp: At global scope:\n/tmp/tmpr5fubeuv.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpr5fubeuv.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp9693kgkk.cpp:2:\n/tmp/tmp9693kgkk.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp9693kgkk.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp9693kgkk.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp9693kgkk.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp9693kgkk.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp9693kgkk.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp9693kgkk.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp9693kgkk.cpp: At global scope:\n/tmp/tmp9693kgkk.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp9693kgkk.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp8mhajkwl.cpp:2:\n/tmp/tmp8mhajkwl.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp8mhajkwl.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp8mhajkwl.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp8mhajkwl.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp8mhajkwl.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp8mhajkwl.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp8mhajkwl.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp8mhajkwl.cpp: At global scope:\n/tmp/tmp8mhajkwl.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp8mhajkwl.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        if(i.type() == typeid(long)){\n          \
    \  result.push_back(std::any_cast<long>(i));\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpdxxlln2b.cpp:2:\n/tmp/tmpdxxlln2b.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpdxxlln2b.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpdxxlln2b.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpdxxlln2b.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpdxxlln2b.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpdxxlln2b.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpdxxlln2b.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpdxxlln2b.cpp: At global scope:\n/tmp/tmpdxxlln2b.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpdxxlln2b.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpku7a5oxw.cpp:2:\n/tmp/tmpku7a5oxw.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpku7a5oxw.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpku7a5oxw.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpku7a5oxw.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpku7a5oxw.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpku7a5oxw.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpku7a5oxw.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpku7a5oxw.cpp: At global scope:\n/tmp/tmpku7a5oxw.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpku7a5oxw.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast &e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp_ugcj_d1.cpp:2:\n/tmp/tmp_ugcj_d1.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp_ugcj_d1.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp_ugcj_d1.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp_ugcj_d1.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp_ugcj_d1.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp_ugcj_d1.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp_ugcj_d1.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp_ugcj_d1.cpp: At global scope:\n/tmp/tmp_ugcj_d1.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp_ugcj_d1.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp7equ53_9.cpp:2:\n/tmp/tmp7equ53_9.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp7equ53_9.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp7equ53_9.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp7equ53_9.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp7equ53_9.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp7equ53_9.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp7equ53_9.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp7equ53_9.cpp: At global scope:\n/tmp/tmp7equ53_9.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp7equ53_9.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        if(i.type()==typeid(int)){\n            res.push_back(std::any_cast<int>(i));\n\
    \        }\n        else if(i.type()==typeid(long)){\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpfbmn5fts.cpp:2:\n/tmp/tmpfbmn5fts.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpfbmn5fts.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpfbmn5fts.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpfbmn5fts.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpfbmn5fts.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpfbmn5fts.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpfbmn5fts.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpfbmn5fts.cpp: At global scope:\n/tmp/tmpfbmn5fts.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpfbmn5fts.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n  std::vector<long> res;\n\
    \  for(auto i:values){\n    if(i.type()==typeid(int)){\n      res.push_back(std::any_cast<int>(i));\n\
    \    }\n    else if(i.type()==typeid(long)){\n      res.push_back(std::any_cast<long>(i));\n\
    \    }\n  }\n  return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp5xg0cuoi.cpp:2:\n/tmp/tmp5xg0cuoi.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp5xg0cuoi.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp5xg0cuoi.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp5xg0cuoi.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp5xg0cuoi.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp5xg0cuoi.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp5xg0cuoi.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp5xg0cuoi.cpp: At global scope:\n/tmp/tmp5xg0cuoi.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp5xg0cuoi.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpwcog2vbr.cpp:2:\n/tmp/tmpwcog2vbr.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpwcog2vbr.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpwcog2vbr.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpwcog2vbr.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpwcog2vbr.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpwcog2vbr.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpwcog2vbr.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpwcog2vbr.cpp: At global scope:\n/tmp/tmpwcog2vbr.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpwcog2vbr.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast &e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmphk6gch7k.cpp:2:\n/tmp/tmphk6gch7k.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmphk6gch7k.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmphk6gch7k.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmphk6gch7k.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmphk6gch7k.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmphk6gch7k.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmphk6gch7k.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmphk6gch7k.cpp: At global scope:\n/tmp/tmphk6gch7k.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmphk6gch7k.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> v;\n\
    \    for(auto i:values){\n        try{\n            v.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return v;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpdzfe_lua.cpp:2:\n/tmp/tmpdzfe_lua.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpdzfe_lua.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpdzfe_lua.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpdzfe_lua.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpdzfe_lua.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpdzfe_lua.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpdzfe_lua.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpdzfe_lua.cpp: At global scope:\n/tmp/tmpdzfe_lua.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpdzfe_lua.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpx0fxq2wj.cpp:2:\n/tmp/tmpx0fxq2wj.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpx0fxq2wj.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpx0fxq2wj.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpx0fxq2wj.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpx0fxq2wj.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpx0fxq2wj.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpx0fxq2wj.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpx0fxq2wj.cpp: At global scope:\n/tmp/tmpx0fxq2wj.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpx0fxq2wj.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpdqdeadvg.cpp:2:\n/tmp/tmpdqdeadvg.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpdqdeadvg.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpdqdeadvg.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpdqdeadvg.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpdqdeadvg.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpdqdeadvg.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpdqdeadvg.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpdqdeadvg.cpp: At global scope:\n/tmp/tmpdqdeadvg.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpdqdeadvg.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto x: values){\n        try{\n            res.push_back(std::any_cast<long>(x));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpzd_nk_nh.cpp:2:\n/tmp/tmpzd_nk_nh.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpzd_nk_nh.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpzd_nk_nh.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpzd_nk_nh.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpzd_nk_nh.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpzd_nk_nh.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpzd_nk_nh.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpzd_nk_nh.cpp: At global scope:\n/tmp/tmpzd_nk_nh.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpzd_nk_nh.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto v: values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpv4zzwj26.cpp:2:\n/tmp/tmpv4zzwj26.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpv4zzwj26.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpv4zzwj26.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpv4zzwj26.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpv4zzwj26.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpv4zzwj26.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpv4zzwj26.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpv4zzwj26.cpp: At global scope:\n/tmp/tmpv4zzwj26.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpv4zzwj26.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp74k8j6vg.cpp:2:\n/tmp/tmp74k8j6vg.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp74k8j6vg.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp74k8j6vg.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp74k8j6vg.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp74k8j6vg.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp74k8j6vg.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp74k8j6vg.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp74k8j6vg.cpp: At global scope:\n/tmp/tmp74k8j6vg.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp74k8j6vg.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpxlj4vgfj.cpp:2:\n/tmp/tmpxlj4vgfj.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpxlj4vgfj.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpxlj4vgfj.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpxlj4vgfj.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpxlj4vgfj.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpxlj4vgfj.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpxlj4vgfj.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpxlj4vgfj.cpp: At global scope:\n/tmp/tmpxlj4vgfj.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpxlj4vgfj.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        if(i.type() == typeid(int)){\n           \
    \ result.push_back(std::any_cast<int>(i));\n        }\n        else if(i.type()\
    \ == typeid(long)){\n            result.push_back(std::any_cast<long>(i));\n \
    \       }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp9f_oer2a.cpp:2:\n/tmp/tmp9f_oer2a.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp9f_oer2a.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp9f_oer2a.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp9f_oer2a.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp9f_oer2a.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp9f_oer2a.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp9f_oer2a.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp9f_oer2a.cpp: At global scope:\n/tmp/tmp9f_oer2a.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp9f_oer2a.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        if(std::any_cast<long>(&i)){\n           \
    \ result.push_back(std::any_cast<long>(i));\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp_9slo2ua.cpp:2:\n/tmp/tmp_9slo2ua.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp_9slo2ua.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp_9slo2ua.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp_9slo2ua.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp_9slo2ua.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp_9slo2ua.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp_9slo2ua.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp_9slo2ua.cpp: At global scope:\n/tmp/tmp_9slo2ua.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp_9slo2ua.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp670dme5s.cpp:2:\n/tmp/tmp670dme5s.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp670dme5s.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp670dme5s.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp670dme5s.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp670dme5s.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp670dme5s.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp670dme5s.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp670dme5s.cpp: At global scope:\n/tmp/tmp670dme5s.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp670dme5s.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp8g8g55b9.cpp:2:\n/tmp/tmp8g8g55b9.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp8g8g55b9.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp8g8g55b9.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp8g8g55b9.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp8g8g55b9.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp8g8g55b9.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp8g8g55b9.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp8g8g55b9.cpp: At global scope:\n/tmp/tmp8g8g55b9.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp8g8g55b9.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            // do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp_3bi51sf.cpp:2:\n/tmp/tmp_3bi51sf.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp_3bi51sf.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp_3bi51sf.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp_3bi51sf.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp_3bi51sf.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp_3bi51sf.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp_3bi51sf.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp_3bi51sf.cpp: At global scope:\n/tmp/tmp_3bi51sf.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp_3bi51sf.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto it = values.begin(); it != values.end(); it++) {\n        if(it->type()\
    \ == typeid(long)) {\n            res.push_back(std::any_cast<long>(*it));\n \
    \       }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpwbbjbgsw.cpp:2:\n/tmp/tmpwbbjbgsw.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpwbbjbgsw.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpwbbjbgsw.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpwbbjbgsw.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpwbbjbgsw.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpwbbjbgsw.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpwbbjbgsw.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpwbbjbgsw.cpp: At global scope:\n/tmp/tmpwbbjbgsw.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpwbbjbgsw.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &val : values) {\n        try {\n            result.push_back(std::any_cast<long>(val));\n\
    \        } catch(std::bad_any_cast &e) {\n            // do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpj_4rpbe1.cpp:2:\n/tmp/tmpj_4rpbe1.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpj_4rpbe1.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpj_4rpbe1.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpj_4rpbe1.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpj_4rpbe1.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpj_4rpbe1.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpj_4rpbe1.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpj_4rpbe1.cpp: At global scope:\n/tmp/tmpj_4rpbe1.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpj_4rpbe1.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i : values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpm80c91cw.cpp:2:\n/tmp/tmpm80c91cw.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpm80c91cw.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpm80c91cw.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpm80c91cw.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpm80c91cw.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpm80c91cw.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpm80c91cw.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpm80c91cw.cpp: At global scope:\n/tmp/tmpm80c91cw.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpm80c91cw.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpistui2gx.cpp:2:\n/tmp/tmpistui2gx.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpistui2gx.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpistui2gx.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpistui2gx.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpistui2gx.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpistui2gx.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpistui2gx.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpistui2gx.cpp: At global scope:\n/tmp/tmpistui2gx.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpistui2gx.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpy3k91mtg.cpp:2:\n/tmp/tmpy3k91mtg.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpy3k91mtg.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpy3k91mtg.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpy3k91mtg.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpy3k91mtg.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpy3k91mtg.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpy3k91mtg.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpy3k91mtg.cpp: At global scope:\n/tmp/tmpy3k91mtg.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpy3k91mtg.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n  std::vector<long> ans;\n\
    \  for(auto i : values){\n    try{\n      ans.push_back(std::any_cast<long>(i));\n\
    \    }\n    catch(std::bad_any_cast& e){\n      continue;\n    }\n  }\n  return\
    \ ans;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpfrqra6cq.cpp:2:\n/tmp/tmpfrqra6cq.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpfrqra6cq.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpfrqra6cq.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpfrqra6cq.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpfrqra6cq.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpfrqra6cq.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpfrqra6cq.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpfrqra6cq.cpp: At global scope:\n/tmp/tmpfrqra6cq.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpfrqra6cq.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast e){\n            continue;\n     \
    \   }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpgk_zwm_6.cpp:2:\n/tmp/tmpgk_zwm_6.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpgk_zwm_6.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpgk_zwm_6.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpgk_zwm_6.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpgk_zwm_6.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpgk_zwm_6.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpgk_zwm_6.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpgk_zwm_6.cpp: At global scope:\n/tmp/tmpgk_zwm_6.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpgk_zwm_6.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto val : values) {\n        try {\n            result.push_back(std::any_cast<long>(val));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmprn0zdgh7.cpp:2:\n/tmp/tmprn0zdgh7.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmprn0zdgh7.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmprn0zdgh7.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmprn0zdgh7.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmprn0zdgh7.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmprn0zdgh7.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmprn0zdgh7.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmprn0zdgh7.cpp: At global scope:\n/tmp/tmprn0zdgh7.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmprn0zdgh7.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp7dkgopx2.cpp:2:\n/tmp/tmp7dkgopx2.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp7dkgopx2.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp7dkgopx2.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp7dkgopx2.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp7dkgopx2.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp7dkgopx2.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp7dkgopx2.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp7dkgopx2.cpp: At global scope:\n/tmp/tmp7dkgopx2.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp7dkgopx2.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpc020duph.cpp:2:\n/tmp/tmpc020duph.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpc020duph.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpc020duph.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpc020duph.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpc020duph.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpc020duph.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpc020duph.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpc020duph.cpp: At global scope:\n/tmp/tmpc020duph.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpc020duph.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpyvqp3vai.cpp:2:\n/tmp/tmpyvqp3vai.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpyvqp3vai.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpyvqp3vai.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpyvqp3vai.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpyvqp3vai.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpyvqp3vai.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpyvqp3vai.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpyvqp3vai.cpp: At global scope:\n/tmp/tmpyvqp3vai.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpyvqp3vai.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i : values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpvcg6e0f6.cpp:2:\n/tmp/tmpvcg6e0f6.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpvcg6e0f6.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpvcg6e0f6.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpvcg6e0f6.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpvcg6e0f6.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpvcg6e0f6.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpvcg6e0f6.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpvcg6e0f6.cpp: At global scope:\n/tmp/tmpvcg6e0f6.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpvcg6e0f6.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto &i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpocz6s38v.cpp:2:\n/tmp/tmpocz6s38v.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpocz6s38v.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpocz6s38v.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpocz6s38v.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpocz6s38v.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpocz6s38v.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpocz6s38v.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpocz6s38v.cpp: At global scope:\n/tmp/tmpocz6s38v.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpocz6s38v.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto x: values){\n        try{\n            res.push_back(std::any_cast<long>(x));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            //do nothing\n \
    \       }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmplwbp49aw.cpp:2:\n/tmp/tmplwbp49aw.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmplwbp49aw.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmplwbp49aw.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmplwbp49aw.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmplwbp49aw.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmplwbp49aw.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmplwbp49aw.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmplwbp49aw.cpp: At global scope:\n/tmp/tmplwbp49aw.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmplwbp49aw.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp4h63gbf7.cpp:2:\n/tmp/tmp4h63gbf7.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp4h63gbf7.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp4h63gbf7.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp4h63gbf7.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp4h63gbf7.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp4h63gbf7.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp4h63gbf7.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp4h63gbf7.cpp: At global scope:\n/tmp/tmp4h63gbf7.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp4h63gbf7.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(const std::bad_any_cast& e) {\n            // do nothing\n  \
    \      }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp9ot3qdp2.cpp:2:\n/tmp/tmp9ot3qdp2.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp9ot3qdp2.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp9ot3qdp2.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp9ot3qdp2.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp9ot3qdp2.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp9ot3qdp2.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp9ot3qdp2.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp9ot3qdp2.cpp: At global scope:\n/tmp/tmp9ot3qdp2.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp9ot3qdp2.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast &e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpxmly44dr.cpp:2:\n/tmp/tmpxmly44dr.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpxmly44dr.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpxmly44dr.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpxmly44dr.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpxmly44dr.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpxmly44dr.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpxmly44dr.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpxmly44dr.cpp: At global scope:\n/tmp/tmpxmly44dr.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpxmly44dr.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpyl_765e_.cpp:2:\n/tmp/tmpyl_765e_.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpyl_765e_.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpyl_765e_.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpyl_765e_.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpyl_765e_.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpyl_765e_.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpyl_765e_.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpyl_765e_.cpp: At global scope:\n/tmp/tmpyl_765e_.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpyl_765e_.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmplyuertiz.cpp:2:\n/tmp/tmplyuertiz.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmplyuertiz.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmplyuertiz.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmplyuertiz.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmplyuertiz.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmplyuertiz.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmplyuertiz.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmplyuertiz.cpp: At global scope:\n/tmp/tmplyuertiz.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmplyuertiz.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n\tstd::vector<long> result;\n\
    \tfor (auto it = values.begin(); it != values.end(); it++) {\n\t\tif (it->type()\
    \ == typeid(long)) {\n\t\t\tresult.push_back(std::any_cast<long>(*it));\n\t\t\
    }\n\t}\n\treturn result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp_legtixh.cpp:2:\n/tmp/tmp_legtixh.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp_legtixh.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp_legtixh.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp_legtixh.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp_legtixh.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp_legtixh.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp_legtixh.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp_legtixh.cpp: At global scope:\n/tmp/tmp_legtixh.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp_legtixh.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp6rfgvvlb.cpp:2:\n/tmp/tmp6rfgvvlb.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp6rfgvvlb.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp6rfgvvlb.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp6rfgvvlb.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp6rfgvvlb.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp6rfgvvlb.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp6rfgvvlb.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp6rfgvvlb.cpp: At global scope:\n/tmp/tmp6rfgvvlb.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp6rfgvvlb.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpao9x5jxm.cpp:2:\n/tmp/tmpao9x5jxm.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpao9x5jxm.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpao9x5jxm.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpao9x5jxm.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpao9x5jxm.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpao9x5jxm.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpao9x5jxm.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpao9x5jxm.cpp: At global scope:\n/tmp/tmpao9x5jxm.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpao9x5jxm.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            // do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpcmodnl9z.cpp:2:\n/tmp/tmpcmodnl9z.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpcmodnl9z.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpcmodnl9z.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpcmodnl9z.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpcmodnl9z.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpcmodnl9z.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpcmodnl9z.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpcmodnl9z.cpp: At global scope:\n/tmp/tmpcmodnl9z.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpcmodnl9z.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpjzk79yzr.cpp:2:\n/tmp/tmpjzk79yzr.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpjzk79yzr.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpjzk79yzr.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpjzk79yzr.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpjzk79yzr.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpjzk79yzr.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpjzk79yzr.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpjzk79yzr.cpp: At global scope:\n/tmp/tmpjzk79yzr.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpjzk79yzr.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto it: values){\n        try{\n            res.push_back(std::any_cast<long>(it));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp_cvvwuma.cpp:2:\n/tmp/tmp_cvvwuma.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp_cvvwuma.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp_cvvwuma.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp_cvvwuma.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp_cvvwuma.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp_cvvwuma.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp_cvvwuma.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp_cvvwuma.cpp: At global scope:\n/tmp/tmp_cvvwuma.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp_cvvwuma.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpz1mo6vci.cpp:2:\n/tmp/tmpz1mo6vci.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpz1mo6vci.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpz1mo6vci.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpz1mo6vci.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpz1mo6vci.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpz1mo6vci.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpz1mo6vci.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpz1mo6vci.cpp: At global scope:\n/tmp/tmpz1mo6vci.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpz1mo6vci.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmprrxpf61g.cpp:2:\n/tmp/tmprrxpf61g.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmprrxpf61g.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmprrxpf61g.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmprrxpf61g.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmprrxpf61g.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmprrxpf61g.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmprrxpf61g.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmprrxpf61g.cpp: At global scope:\n/tmp/tmprrxpf61g.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmprrxpf61g.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n  std::vector<long> result;\n\
    \  for (auto value : values) {\n    try {\n      result.push_back(std::any_cast<long>(value));\n\
    \    } catch (std::bad_any_cast &e) {\n      continue;\n    }\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpqku7_a0m.cpp:2:\n/tmp/tmpqku7_a0m.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpqku7_a0m.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpqku7_a0m.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpqku7_a0m.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpqku7_a0m.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpqku7_a0m.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpqku7_a0m.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpqku7_a0m.cpp: At global scope:\n/tmp/tmpqku7_a0m.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpqku7_a0m.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i : values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmphy1v9t_k.cpp:2:\n/tmp/tmphy1v9t_k.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmphy1v9t_k.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmphy1v9t_k.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmphy1v9t_k.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmphy1v9t_k.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmphy1v9t_k.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmphy1v9t_k.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmphy1v9t_k.cpp: At global scope:\n/tmp/tmphy1v9t_k.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmphy1v9t_k.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpnzo8p74w.cpp:2:\n/tmp/tmpnzo8p74w.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpnzo8p74w.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpnzo8p74w.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpnzo8p74w.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpnzo8p74w.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpnzo8p74w.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpnzo8p74w.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpnzo8p74w.cpp: At global scope:\n/tmp/tmpnzo8p74w.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpnzo8p74w.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(const std::bad_any_cast& e) {\n            // ignore\n      \
    \  }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpz42uj0ei.cpp:2:\n/tmp/tmpz42uj0ei.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpz42uj0ei.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpz42uj0ei.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpz42uj0ei.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpz42uj0ei.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpz42uj0ei.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpz42uj0ei.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpz42uj0ei.cpp: At global scope:\n/tmp/tmpz42uj0ei.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpz42uj0ei.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i:values){\n        if(i.type()==typeid(int)){\n            res.push_back(std::any_cast<int>(i));\n\
    \        }\n        else if(i.type()==typeid(long)){\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmppe4fkq7z.cpp:2:\n/tmp/tmppe4fkq7z.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmppe4fkq7z.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmppe4fkq7z.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmppe4fkq7z.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmppe4fkq7z.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmppe4fkq7z.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmppe4fkq7z.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmppe4fkq7z.cpp: At global scope:\n/tmp/tmppe4fkq7z.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmppe4fkq7z.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast &e) {\n            // do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpbauj7256.cpp:2:\n/tmp/tmpbauj7256.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpbauj7256.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpbauj7256.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpbauj7256.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpbauj7256.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpbauj7256.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpbauj7256.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpbauj7256.cpp: At global scope:\n/tmp/tmpbauj7256.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpbauj7256.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto &i:values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }catch(std::bad_any_cast &e){\n            continue;\n        }\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp83llbp3v.cpp:2:\n/tmp/tmp83llbp3v.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp83llbp3v.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmp83llbp3v.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmp83llbp3v.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmp83llbp3v.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmp83llbp3v.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmp83llbp3v.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmp83llbp3v.cpp: At global scope:\n/tmp/tmp83llbp3v.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmp83llbp3v.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpka2wxvng.cpp:2:\n/tmp/tmpka2wxvng.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpka2wxvng.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpka2wxvng.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpka2wxvng.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpka2wxvng.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpka2wxvng.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpka2wxvng.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpka2wxvng.cpp: At global scope:\n/tmp/tmpka2wxvng.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpka2wxvng.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpxo5xhwxq.cpp:2:\n/tmp/tmpxo5xhwxq.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpxo5xhwxq.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpxo5xhwxq.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpxo5xhwxq.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpxo5xhwxq.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpxo5xhwxq.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpxo5xhwxq.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpxo5xhwxq.cpp: At global scope:\n/tmp/tmpxo5xhwxq.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpxo5xhwxq.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto &x: values){\n        try{\n            res.push_back(std::any_cast<long>(x));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpnm1mkdk7.cpp:2:\n/tmp/tmpnm1mkdk7.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpnm1mkdk7.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpnm1mkdk7.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpnm1mkdk7.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpnm1mkdk7.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpnm1mkdk7.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpnm1mkdk7.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpnm1mkdk7.cpp: At global scope:\n/tmp/tmpnm1mkdk7.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpnm1mkdk7.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto i : values){\n        try{\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpkqw_5cm3.cpp:2:\n/tmp/tmpkqw_5cm3.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpkqw_5cm3.cpp:23:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpkqw_5cm3.cpp:23:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpkqw_5cm3.cpp:23:50: error: expected\
    \ \u2018)\u2019 before string constant\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpkqw_5cm3.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpkqw_5cm3.cpp:23:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpkqw_5cm3.cpp:23:5:\
    \ note: to match this \u2018(\u2019\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpkqw_5cm3.cpp: At global scope:\n/tmp/tmpkqw_5cm3.cpp:23:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpkqw_5cm3.cpp:23:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   23 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i : values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }catch(std::bad_any_cast& e){\n            continue;\n        }\n   \
    \ }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpb60zrtv3.cpp:2:\n/tmp/tmpb60zrtv3.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpb60zrtv3.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpb60zrtv3.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpb60zrtv3.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpb60zrtv3.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpb60zrtv3.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpb60zrtv3.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpb60zrtv3.cpp: At global scope:\n/tmp/tmpb60zrtv3.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpb60zrtv3.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> result;\n\
    \    for(auto value : values) {\n        if(value.type() == typeid(long)) {\n\
    \            result.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpd8hc5fqt.cpp:2:\n/tmp/tmpd8hc5fqt.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpd8hc5fqt.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpd8hc5fqt.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpd8hc5fqt.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpd8hc5fqt.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpd8hc5fqt.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpd8hc5fqt.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpd8hc5fqt.cpp: At global scope:\n/tmp/tmpd8hc5fqt.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpd8hc5fqt.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto i : values){\n        if(i.type() == typeid(long)){\n          \
    \  res.push_back(std::any_cast<long>(i));\n        }\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"\
    b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpsjvcchcu.cpp:2:\n/tmp/tmpsjvcchcu.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpsjvcchcu.cpp:20:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpsjvcchcu.cpp:20:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpsjvcchcu.cpp:20:50: error: expected\
    \ \u2018)\u2019 before string constant\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpsjvcchcu.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpsjvcchcu.cpp:20:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpsjvcchcu.cpp:20:5:\
    \ note: to match this \u2018(\u2019\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpsjvcchcu.cpp: At global scope:\n/tmp/tmpsjvcchcu.cpp:20:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpsjvcchcu.cpp:20:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   20 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n//\
    \ [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nstd::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n    std::vector<long> res;\n\
    \    for(auto &x: values){\n        try{\n            res.push_back(std::any_cast<long>(x));\n\
    \        }catch(std::bad_any_cast &e){\n            continue;\n        }\n   \
    \ }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>(long)\"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>(long)\"b\"}))) ==\
    \ (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/cassert:44,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpiv8g5upb.cpp:2:\n/tmp/tmpiv8g5upb.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpiv8g5upb.cpp:22:44: error: expected primary-expression\
    \ before \u2018(\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                ^\n/tmp/tmpiv8g5upb.cpp:22:45: error: expected\
    \ primary-expression before \u2018long\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                 ^~~~\n/tmp/tmpiv8g5upb.cpp:22:50: error: expected\
    \ \u2018)\u2019 before string constant\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \          ~                           ^~~~~~~\n/tmp/tmpiv8g5upb.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                             ^\n/tmp/tmpiv8g5upb.cpp:22:57: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n/tmp/tmpiv8g5upb.cpp:22:5:\
    \ note: to match this \u2018(\u2019\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |     ^~~~~~\n\
    /tmp/tmpiv8g5upb.cpp: At global scope:\n/tmp/tmpiv8g5upb.cpp:22:58: error: expected\
    \ unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                              ^\n/tmp/tmpiv8g5upb.cpp:22:102:\
    \ error: expected unqualified-id before \u2018)\u2019 token\n   22 |     assert(candidate((std::vector<std::any>(long)\"\
    adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n      |            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError

language: cpp
name: HumanEval_83_starts_one_ends
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    if (i == 1) {\n      count += 1;\n    } else {\n\
    \      count += 9 * std::pow(10, i - 2);\n    }\n  }\n  return count;\n}\nint\
    \ main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n\
    \    assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpj6xj70hb: /tmp/tmpj6xj70hb.cpp:19: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  assert(n > 0);\n  if (n ==\
    \ 1) {\n    return 1;\n  }\n  long count = 0;\n  for (long i = 1; i <= n; i++)\
    \ {\n    count += pow(10, i - 1);\n  }\n  return count;\n}\nint main() {\n   \
    \ auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpfn943xhr: /tmp/tmpfn943xhr.cpp:19: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long dp[n + 1];\n  memset(dp,\
    \ 0, sizeof(dp));\n  dp[1] = 1;\n  for (long i = 2; i <= n; i++) {\n    dp[i]\
    \ = dp[i - 1] * 9 + pow(10, i - 1);\n  }\n  return dp[n];\n}\nint main() {\n \
    \   auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n   \
    \ assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpuvsgk3_5: /tmp/tmpuvsgk3_5.cpp:17: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    count += pow(10, i - 1);\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpsgt0gq9r: /tmp/tmpsgt0gq9r.cpp:15: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    count += pow(10, i - 1);\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpsgt0gq9r: /tmp/tmpsgt0gq9r.cpp:15: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 11;\n  }\n  long dp[n + 1];\n  dp[0] =\
    \ 0;\n  dp[1] = 1;\n  dp[2] = 11;\n  for (long i = 3; i <= n; i++) {\n    dp[i]\
    \ = 9 * pow(10, i - 2) + dp[i - 1];\n  }\n  return dp[n];\n}\nint main() {\n \
    \   auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n   \
    \ assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmp4alqhp_8: /tmp/tmp4alqhp_8.cpp:24: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    if (n == 1) {\n        return\
    \ 10;\n    }\n    if (n == 2) {\n        return 19;\n    }\n    long dp[n + 1];\n\
    \    dp[0] = 0;\n    dp[1] = 10;\n    dp[2] = 19;\n    for (long i = 3; i <= n;\
    \ i++) {\n        dp[i] = 9 * dp[i - 1] + 9 * dp[i - 2];\n    }\n    return dp[n];\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpi607b26t: /tmp/tmpi607b26t.cpp:23: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  // Write your code here\n\
    \  long dp[n+1];\n  dp[0] = 0;\n  dp[1] = 1;\n  for(int i=2;i<=n;i++){\n    dp[i]\
    \ = dp[i-1]*10 + pow(10,i-1);\n  }\n  return dp[n];\n}\nint main() {\n    auto\
    \ candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpo4onkxj2: /tmp/tmpo4onkxj2.cpp:18: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    if (n == 1) {\n        return\
    \ 2;\n    }\n    if (n == 2) {\n        return 3;\n    }\n    long dp[n + 1];\n\
    \    dp[0] = 0;\n    dp[1] = 2;\n    dp[2] = 3;\n    for (long i = 3; i <= n;\
    \ i++) {\n        dp[i] = dp[i - 1] + dp[i - 2];\n    }\n    return dp[n];\n}\n\
    int main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpbq4pbgxe: /tmp/tmpbq4pbgxe.cpp:23: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  // Write your code here\n\
    \  long dp[n + 1];\n  dp[0] = 0;\n  dp[1] = 1;\n  for (long i = 2; i <= n; i++)\
    \ {\n    dp[i] = 9 * pow(10, i - 2) + dp[i - 1];\n  }\n  return dp[n];\n}\nint\
    \ main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n\
    \    assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpqbr_b7qw: /tmp/tmpqbr_b7qw.cpp:18: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 11;\n  }\n  long count = 11;\n  long temp\
    \ = 10;\n  for (long i = 3; i <= n; i++) {\n    temp = temp * 10;\n    count =\
    \ count + temp;\n  }\n  return count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmp92ucd3ca: /tmp/tmp92ucd3ca.cpp:23: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    long count = 0;\n    for\
    \ (long i = 1; i <= n; i++) {\n        count += pow(10, i - 1);\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpqwbv5zlv: /tmp/tmpqwbv5zlv.cpp:15: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    if (i == 1) {\n      count += 1;\n    } else {\n\
    \      count += 9 * pow(10, i - 2);\n    }\n  }\n  return count;\n}\nint main()\
    \ {\n    auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n \
    \   assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpsc52qq9c: /tmp/tmpsc52qq9c.cpp:19: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 10;\n  }\n  long count = 0;\n  for (long i = 1; i <= n; i++) {\n    count +=\
    \ pow(10, i - 1);\n  }\n  return count;\n}\nint main() {\n    auto candidate =\
    \ starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmp0glxyyac: /tmp/tmp0glxyyac.cpp:17: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 10;\n  }\n  long count = 10;\n  long start = 10;\n  long end = 10;\n  for (long\
    \ i = 2; i <= n; i++) {\n    start = start * (9 - i + 2);\n    end = end * (10\
    \ - i + 1);\n    count += start + end;\n  }\n  return count;\n}\nint main() {\n\
    \    auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n \
    \   assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n  \
    \  assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmp_rk8fphi: /tmp/tmp_rk8fphi.cpp:21: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    long temp = i;\n    while (temp > 0) {\n      if\
    \ (temp % 10 == 1) {\n        count++;\n        break;\n      }\n      temp /=\
    \ 10;\n    }\n  }\n  return count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmppa_dlbkr: /tmp/tmppa_dlbkr.cpp:22: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    long count = 0;\n    for\
    \ (long i = 1; i <= n; i++) {\n        if (i == 1) {\n            count += 1;\n\
    \        } else {\n            count += 9 * pow(10, i - 2);\n        }\n    }\n\
    \    return count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n \
    \   assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3))\
    \ == (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5))\
    \ == (18000));\n}\n"
  status: Exception
  stderr: 'tmpj447r94p: /tmp/tmpj447r94p.cpp:19: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    long count = 0;\n    for\
    \ (long i = 1; i <= n; i++) {\n        count += pow(10, i - 1);\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpqwbv5zlv: /tmp/tmpqwbv5zlv.cpp:15: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  long count = 0;\n  // start with 1\n  count += 9 * std::pow(10, n\
    \ - 2);\n  // end with 1\n  count += 9 * std::pow(10, n - 1);\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmplwdycfgo: /tmp/tmplwdycfgo.cpp:19: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    long count = 0;\n    if\
    \ (n == 1) {\n        return 1;\n    }\n    if (n == 2) {\n        return 10;\n\
    \    }\n    if (n == 3) {\n        return 100;\n    }\n    if (n == 4) {\n   \
    \     return 1000;\n    }\n    if (n == 5) {\n        return 10000;\n    }\n \
    \   if (n == 6) {\n        return 100000;\n    }\n    if (n == 7) {\n        return\
    \ 1000000;\n    }\n    if (n == 8) {\n        return 10000000;\n    }\n    if\
    \ (n == 9) {\n        return 100000000;\n    }\n    if (n == 10) {\n        return\
    \ 1000000000;\n    }\n    if (n == 11) {\n        return 10000000000;\n    }\n\
    \    if (n == 12) {\n        return 100000000000;\n    }\n    if (n == 13) {\n\
    \        return 1000000000000;\n    }\n    if (n == 14) {\n        return 10000000000000;\n\
    \    }\n    if (n == 15) {\n        return 100000000000000;\n    }\n    if (n\
    \ == 16) {\n        return 1000000000000000;\n    }\n    if (n == 17) {\n    \
    \    return 10000000000000000;\n    }\n    if (n == 18) {\n        return 100000000000000000;\n\
    \    }\n    if (n == 19) {\n        return 1000000000000000000;\n    }\n    if\
    \ (n == 20) {\n        return 10000000000000000000;\n    }\n    if (n == 21) {\n\
    \        return 100000000000000000000;\n    }\n    if (n == 22) {\n        return\
    \ 1000000000000000000000;\n    }\n    if (n == 23) {\n        return 10000000000000000000000;\n\
    \    }\n    if (n == 24) {\n        return 100000000000000000000000;\n    }\n\
    \    if (n == 25) {\n        return 1000000000000000000000000;\n    }\n    if\
    \ (n == 26) {\n        return 10000000000000000000000000;\n    }\n    if (n ==\
    \ 27) {\n        return 100000000000000000000000000;\n    }\n    if (n == 28)\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp__ny7u6c.cpp:65:16: warning: integer constant is so large that\
    \ it is unsigned\n   65 |         return 10000000000000000000;\n      |      \
    \          ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmp__ny7u6c.cpp:68:16: warning: integer\
    \ constant is too large for its type\n   68 |         return 100000000000000000000;\n\
    \      |                ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp__ny7u6c.cpp:71:16: warning:\
    \ integer constant is too large for its type\n   71 |         return 1000000000000000000000;\n\
    \      |                ^~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp__ny7u6c.cpp:74:16: warning:\
    \ integer constant is too large for its type\n   74 |         return 10000000000000000000000;\n\
    \      |                ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp__ny7u6c.cpp:77:16: warning:\
    \ integer constant is too large for its type\n   77 |         return 100000000000000000000000;\n\
    \      |                ^~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp__ny7u6c.cpp:80:16:\
    \ warning: integer constant is too large for its type\n   80 |         return\
    \ 1000000000000000000000000;\n      |                ^~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp__ny7u6c.cpp:83:16: warning: integer constant is too large for its type\n\
    \   83 |         return 10000000000000000000000000;\n      |                ^~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp__ny7u6c.cpp:86:16: warning: integer constant is too large for its type\n\
    \   86 |         return 100000000000000000000000000;\n      |                ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp__ny7u6c.cpp: In function \u2018long int starts_one_ends(long int)\u2019\
    :\n/tmp/tmp__ny7u6c.cpp:89:1: error: expected primary-expression before \u2018\
    }\u2019 token\n   89 | }\n      | ^\n/tmp/tmp__ny7u6c.cpp:89:1: warning: control\
    \ reaches end of non-void function [-Wreturn-type]\n   89 | }\n      | ^\n"
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    long dp[n+1];\n    dp[0]\
    \ = 0;\n    dp[1] = 1;\n    for(long i = 2; i <= n; i++) {\n        dp[i] = 9\
    \ * pow(10, i-2) + dp[i-1];\n    }\n    return dp[n];\n}\nint main() {\n    auto\
    \ candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpcmxdy3me: /tmp/tmpcmxdy3me.cpp:17: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  long count = 10;\n  long count_prev\
    \ = 10;\n  long count_prev_prev = 1;\n  for (long i = 3; i <= n; i++) {\n    count\
    \ = (count_prev * 9) + (count_prev_prev * 9);\n    count_prev_prev = count_prev;\n\
    \    count_prev = count;\n  }\n  return count;\n}\nint main() {\n    auto candidate\
    \ = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmp11hoa7x0: /tmp/tmp11hoa7x0.cpp:25: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  // Write your code here\n\
    \  if (n == 1) {\n    return 2;\n  }\n  if (n == 2) {\n    return 3;\n  }\n  long\
    \ dp[n + 1];\n  dp[0] = 0;\n  dp[1] = 2;\n  dp[2] = 3;\n  for (int i = 3; i <=\
    \ n; i++) {\n    dp[i] = dp[i - 1] + dp[i - 2];\n  }\n  return dp[n];\n}\nint\
    \ main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n\
    \    assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpk_dibtk3: /tmp/tmpk_dibtk3.cpp:24: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  long count = 10;\n  for (long\
    \ i = 2; i < n; i++) {\n    count = (count * 10) - (count * 9);\n  }\n  return\
    \ count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmp3yjv6jk8: /tmp/tmp3yjv6jk8.cpp:21: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    if (n == 1) {\n        return\
    \ 1;\n    }\n    if (n == 2) {\n        return 10;\n    }\n    long count = 0;\n\
    \    for (long i = 1; i <= n - 2; i++) {\n        count += 9 * pow(10, i - 1);\n\
    \    }\n    return count * 2 + 10;\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpvgk359il: /tmp/tmpvgk359il.cpp:21: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    count += pow(10, i - 1);\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmp2roc01w_: /tmp/tmp2roc01w_.cpp:21: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    count += pow(10, i - 1);\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpsgt0gq9r: /tmp/tmpsgt0gq9r.cpp:15: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    long dp[n + 1];\n    dp[0]\
    \ = 0;\n    dp[1] = 1;\n    for (long i = 2; i <= n; i++) {\n        dp[i] = dp[i\
    \ - 1] + (dp[i - 1] * 9);\n    }\n    return dp[n];\n}\nint main() {\n    auto\
    \ candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmps_rfma3e: /tmp/tmps_rfma3e.cpp:17: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) return 1;\n  if\
    \ (n == 2) return 10;\n  long count = 10;\n  long start = 10;\n  long end = 10;\n\
    \  for (long i = 3; i <= n; i++) {\n    start = start + 9 * pow(10, i - 2);\n\
    \    end = end + 9 * pow(10, i - 2);\n    count = start + end;\n  }\n  return\
    \ count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpw33s8bey: /tmp/tmpw33s8bey.cpp:21: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    if (i == 1) {\n      count += 1;\n    } else {\n\
    \      count += 9 * pow(10, i - 2);\n    }\n  }\n  return count;\n}\nint main()\
    \ {\n    auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n \
    \   assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpsc52qq9c: /tmp/tmpsc52qq9c.cpp:19: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    long dp[n + 1];\n    memset(dp,\
    \ 0, sizeof(dp));\n    dp[1] = 1;\n    for (long i = 2; i <= n; i++) {\n     \
    \   dp[i] = dp[i - 1] * 9 + pow(10, i - 1);\n    }\n    return dp[n];\n}\nint\
    \ main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n\
    \    assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpevc0h98o: /tmp/tmpevc0h98o.cpp:17: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) return 2;\n  if\
    \ (n == 2) return 3;\n  long prev = 3;\n  long prev_prev = 2;\n  long result =\
    \ 0;\n  for (long i = 3; i <= n; i++) {\n    result = prev + prev_prev;\n    prev_prev\
    \ = prev;\n    prev = result;\n  }\n  return result;\n}\nint main() {\n    auto\
    \ candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpzpp192wx: /tmp/tmpzpp192wx.cpp:20: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  long dp[n + 1];\n  dp[0] =\
    \ 0;\n  dp[1] = 1;\n  dp[2] = 10;\n  for (long i = 3; i <= n; i++) {\n    dp[i]\
    \ = 9 * pow(10, i - 2) + dp[i - 1];\n  }\n  return dp[n];\n}\nint main() {\n \
    \   auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n   \
    \ assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpsjkgwbtv: /tmp/tmpsjkgwbtv.cpp:24: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  // Write your code here\n\
    \  long dp[n+1];\n  dp[0] = 0;\n  dp[1] = 1;\n  for(int i=2;i<=n;i++){\n    dp[i]\
    \ = dp[i-1]*10 + pow(10,i-1);\n  }\n  return dp[n];\n}\nint main() {\n    auto\
    \ candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpo4onkxj2: /tmp/tmpo4onkxj2.cpp:18: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    long dp[n+1];\n    dp[0]\
    \ = 0;\n    dp[1] = 1;\n    for(long i = 2; i <= n; i++) {\n        dp[i] = dp[i-1]\
    \ + (dp[i-1] * 9);\n    }\n    return dp[n];\n}\nint main() {\n    auto candidate\
    \ = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpi0ou1qxf: /tmp/tmpi0ou1qxf.cpp:17: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    if (n == 1) {\n        return\
    \ 1;\n    }\n    if (n == 2) {\n        return 10;\n    }\n    long count = 10;\n\
    \    long start = 10;\n    long end = 1;\n    for (long i = 3; i <= n; i++) {\n\
    \        start = start * 9;\n        end = end * 10;\n        count = count +\
    \ start + end;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpq_7p4_al: /tmp/tmpq_7p4_al.cpp:25: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    if (n == 1) return 1;\n\
    \    if (n == 2) return 10;\n    long count = 10;\n    for (long i = 2; i <= n;\
    \ i++) {\n        count += 9 * pow(10, i - 2);\n    }\n    return count;\n}\n\
    int main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpv1mc_ive: /tmp/tmpv1mc_ive.cpp:17: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  long dp[n + 1];\n  dp[0] =\
    \ 0;\n  dp[1] = 1;\n  dp[2] = 10;\n  for (long i = 3; i <= n; i++) {\n    dp[i]\
    \ = 9 * pow(10, i - 2) + dp[i - 1];\n  }\n  return dp[n];\n}\nint main() {\n \
    \   auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n   \
    \ assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpsjkgwbtv: /tmp/tmpsjkgwbtv.cpp:24: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    long dp[n + 1];\n    dp[0]\
    \ = 0;\n    dp[1] = 1;\n    for (long i = 2; i <= n; i++) {\n        dp[i] = dp[i\
    \ - 1] + 9 * pow(10, i - 2);\n    }\n    return dp[n];\n}\nint main() {\n    auto\
    \ candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpzvkuk86y: /tmp/tmpzvkuk86y.cpp:17: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 2;\n  }\n  long count = 0;\n  for (long\
    \ i = 1; i < n; i++) {\n    count += pow(10, i - 1);\n  }\n  return count * 2;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmp6v2qpeb_: /tmp/tmp6v2qpeb_.cpp:21: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long dp[n + 1];\n  dp[0] =\
    \ 0;\n  dp[1] = 1;\n  for (long i = 2; i <= n; i++) {\n    dp[i] = dp[i - 1] +\
    \ (i - 1) * dp[i - 2];\n  }\n  return dp[n];\n}\nint main() {\n    auto candidate\
    \ = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpql5mzzb_: /tmp/tmpql5mzzb_.cpp:17: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 11;\n  }\n  long dp[n + 1];\n  dp[0] =\
    \ 0;\n  dp[1] = 1;\n  dp[2] = 11;\n  for (long i = 3; i <= n; i++) {\n    dp[i]\
    \ = dp[i - 1] + 9 * pow(10, i - 2);\n  }\n  return dp[n];\n}\nint main() {\n \
    \   auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n   \
    \ assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmplvfwe8eg: /tmp/tmplvfwe8eg.cpp:24: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 2;\n  }\n  if (n == 2) {\n    return 3;\n  }\n  return starts_one_ends(n - 1)\
    \ + starts_one_ends(n - 2);\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpqc6q3u7h: /tmp/tmpqc6q3u7h.cpp:16: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    count += (pow(10, i - 1) - pow(10, i - 2));\n  }\n\
    \  return count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n   \
    \ assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3))\
    \ == (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5))\
    \ == (18000));\n}\n"
  status: Exception
  stderr: 'tmpnev1_lh5: /tmp/tmpnev1_lh5.cpp:14: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    count += pow(10, i - 1);\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpsgt0gq9r: /tmp/tmpsgt0gq9r.cpp:15: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  long count = 10;\n  long power\
    \ = 10;\n  for (long i = 3; i <= n; i++) {\n    count += 9 * power;\n    power\
    \ *= 10;\n  }\n  return count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpr2f89s4q: /tmp/tmpr2f89s4q.cpp:23: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    count += pow(10, i - 1);\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpsgt0gq9r: /tmp/tmpsgt0gq9r.cpp:15: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  // Write your code here\n\
    \  if (n == 1) {\n    return 2;\n  }\n  if (n == 2) {\n    return 3;\n  }\n  return\
    \ starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\nint main() {\n    auto\
    \ candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpx_qpxpyk: /tmp/tmpx_qpxpyk.cpp:17: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    long dp[n + 1];\n    memset(dp,\
    \ 0, sizeof(dp));\n    dp[1] = 1;\n    for (long i = 2; i <= n; i++) {\n     \
    \   dp[i] = dp[i - 1] * 10 - dp[i - 2];\n    }\n    return dp[n];\n}\nint main()\
    \ {\n    auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n \
    \   assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpzauqid74: /tmp/tmpzauqid74.cpp:17: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    long dp[n+1];\n    dp[0]\
    \ = 0;\n    dp[1] = 1;\n    for(long i = 2; i <= n; i++) {\n        dp[i] = dp[i-1]\
    \ + 9*pow(10, i-2);\n    }\n    return dp[n];\n}\nint main() {\n    auto candidate\
    \ = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpmlr6jod4: /tmp/tmpmlr6jod4.cpp:17: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    if (n == 1) {\n        return\
    \ 10;\n    }\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n     \
    \   count += pow(10, i - 1);\n    }\n    return count;\n}\nint main() {\n    auto\
    \ candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpq2imwyzk: /tmp/tmpq2imwyzk.cpp:17: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  long count = 0;\n  long start_one\
    \ = 9;\n  long end_one = 1;\n  long rest = n - 2;\n  while (rest > 0) {\n    count\
    \ += start_one * end_one;\n    start_one *= 10;\n    end_one *= 10;\n    rest--;\n\
    \  }\n  return count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmp4pexhrin: /tmp/tmp4pexhrin.cpp:27: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 2;\n  }\n  if (n == 2) {\n    return 3;\n  }\n  return starts_one_ends(n - 1)\
    \ + starts_one_ends(n - 2);\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpqc6q3u7h: /tmp/tmpqc6q3u7h.cpp:16: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    if (n == 1) {\n        return\
    \ 1;\n    }\n    if (n == 2) {\n        return 10;\n    }\n    long count = 0;\n\
    \    for (long i = 1; i <= n; i++) {\n        count += pow(10, i - 1);\n    }\n\
    \    return count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n \
    \   assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3))\
    \ == (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5))\
    \ == (18000));\n}\n"
  status: Exception
  stderr: 'tmpm0mf85ke: /tmp/tmpm0mf85ke.cpp:21: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  long count = 10;\n  long prev\
    \ = 10;\n  for (long i = 3; i <= n; i++) {\n    long temp = count;\n    count\
    \ = count + prev;\n    prev = temp;\n  }\n  return count;\n}\nint main() {\n \
    \   auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n   \
    \ assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpqilch9op: /tmp/tmpqilch9op.cpp:24: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  assert(n > 0);\n  if (n ==\
    \ 1) {\n    return 1;\n  }\n  long count = 0;\n  for (long i = 1; i <= n; i++)\
    \ {\n    count += std::pow(10, i - 1);\n  }\n  return count;\n}\nint main() {\n\
    \    auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n \
    \   assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n  \
    \  assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpi7kfwki2: /tmp/tmpi7kfwki2.cpp:19: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  long count = 10;\n  long last_digit\
    \ = 10;\n  for (long i = 3; i <= n; i++) {\n    last_digit = last_digit * 10;\n\
    \    count += last_digit;\n  }\n  return count;\n}\nint main() {\n    auto candidate\
    \ = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpbbisk46c: /tmp/tmpbbisk46c.cpp:23: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    long count = 0;\n    long\
    \ start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start\
    \ *= 10;\n        end *= 10;\n    }\n    count += start;\n    count += end;\n\
    \    count += (start - 1) * 9;\n    return count;\n}\nint main() {\n    auto candidate\
    \ = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpz23ybxfg: /tmp/tmpz23ybxfg.cpp:20: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long dp[n+1];\n  dp[0] = 0;\n\
    \  dp[1] = 1;\n  for (int i = 2; i <= n; i++) {\n    dp[i] = dp[i-1] + 9*pow(10,\
    \ i-2);\n  }\n  return dp[n];\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpyn3_zjgb: /tmp/tmpyn3_zjgb.cpp:17: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    count += 9 * pow(10, i - 1);\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpwzqt591w: /tmp/tmpwzqt591w.cpp:14: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    if (i == 1) {\n      count += 1;\n    } else {\n\
    \      count += 9 * std::pow(10, i - 2);\n    }\n  }\n  return count;\n}\nint\
    \ main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n\
    \    assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpj6xj70hb: /tmp/tmpj6xj70hb.cpp:19: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    if (n == 1) return 1;\n\
    \    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i\
    \ = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    for\
    \ (long i = start; i < end; i++) {\n        if (i % 10 == 1) count++;\n    }\n\
    \    return count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n \
    \   assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3))\
    \ == (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5))\
    \ == (18000));\n}\n"
  status: Exception
  stderr: 'tmpsz4tfzn5: /tmp/tmpsz4tfzn5.cpp:22: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    long dp[n + 1];\n    dp[0]\
    \ = 0;\n    dp[1] = 1;\n    for (long i = 2; i <= n; i++) {\n        dp[i] = dp[i\
    \ - 1] + pow(10, i - 1);\n    }\n    return dp[n];\n}\nint main() {\n    auto\
    \ candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpgfql_u8a: /tmp/tmpgfql_u8a.cpp:17: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    long count = 0;\n    for\
    \ (long i = 1; i <= n; i++) {\n        count += pow(10, i - 1);\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpqwbv5zlv: /tmp/tmpqwbv5zlv.cpp:15: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long dp[n + 1];\n  dp[0] =\
    \ 0;\n  dp[1] = 1;\n  for (long i = 2; i <= n; i++) {\n    dp[i] = dp[i - 1] +\
    \ (long)pow(10, i - 1);\n  }\n  return dp[n];\n}\nint main() {\n    auto candidate\
    \ = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpmp75gml_: /tmp/tmpmp75gml_.cpp:17: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 2;\n  }\n  if (n == 2) {\n    return 3;\n  }\n  return starts_one_ends(n - 1)\
    \ + starts_one_ends(n - 2);\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpqc6q3u7h: /tmp/tmpqc6q3u7h.cpp:16: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    long num = pow(10, i - 1);\n    count += 9 * num;\n\
    \  }\n  return count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpbjprb8to: /tmp/tmpbjprb8to.cpp:15: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  long count = 0;\n  long start_one\
    \ = 9;\n  long end_one = 10;\n  for (long i = 3; i <= n; i++) {\n    count +=\
    \ start_one + end_one;\n    start_one = start_one * 9;\n    end_one = end_one\
    \ * 10;\n  }\n  return count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmp7fqpcx0m: /tmp/tmp7fqpcx0m.cpp:25: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 2;\n  }\n  long dp[n + 1];\n  dp[0] = 0;\n  dp[1] = 2;\n  for (long i = 2; i\
    \ <= n; i++) {\n    dp[i] = dp[i - 1] + dp[i - 2];\n  }\n  return dp[n];\n}\n\
    int main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpgl6mmf14: /tmp/tmpgl6mmf14.cpp:19: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) return 1;\n  if\
    \ (n == 2) return 10;\n  long dp[n + 1];\n  dp[0] = 0;\n  dp[1] = 1;\n  dp[2]\
    \ = 10;\n  for (long i = 3; i <= n; i++) {\n    dp[i] = dp[i - 1] + 9 * pow(10,\
    \ i - 2);\n  }\n  return dp[n];\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpde0o_n8w: /tmp/tmpde0o_n8w.cpp:20: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  // Write your code here\n\
    \  long dp[n+1];\n  dp[0] = 0;\n  dp[1] = 1;\n  for(int i=2;i<=n;i++){\n    dp[i]\
    \ = dp[i-1]*9 + pow(10,i-1);\n  }\n  return dp[n];\n}\nint main() {\n    auto\
    \ candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpzwvxqqif: /tmp/tmpzwvxqqif.cpp:18: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  long count = 10;\n  long prev\
    \ = 10;\n  for (long i = 3; i <= n; i++) {\n    count = prev + 9 * pow(10, i -\
    \ 2);\n    prev = count;\n  }\n  return count;\n}\nint main() {\n    auto candidate\
    \ = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmp59qe5d8i: /tmp/tmp59qe5d8i.cpp:23: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 2;\n  }\n  long count = 0;\n  for (long i = 1; i <= n; i++) {\n    count +=\
    \ pow(10, i - 1);\n  }\n  return count * 2;\n}\nint main() {\n    auto candidate\
    \ = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpcitf0pkn: /tmp/tmpcitf0pkn.cpp:17: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  long count = 10;\n  for (int\
    \ i = 2; i < n; i++) {\n    count = count * 9;\n  }\n  return count;\n}\nint main()\
    \ {\n    auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n \
    \   assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmp8zd2qfdr: /tmp/tmp8zd2qfdr.cpp:21: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823971
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    long num = pow(10, i - 1);\n    count += (num * 9);\n\
    \  }\n  return count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmp8mjudexn: /tmp/tmp8mjudexn.cpp:15: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  long count = 0;\n  long start = 1;\n  long end = 1;\n  for (long\
    \ i = 1; i < n; i++) {\n    start *= 10;\n    end = end * 10 + 1;\n  }\n  count\
    \ += end - start + 1;\n  count += 9 * (n - 1) * start;\n  return count;\n}\nint\
    \ main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n\
    \    assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpg1eo0ujf: /tmp/tmpg1eo0ujf.cpp:23: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823971
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 2;\n  }\n  if (n == 2) {\n    return 3;\n  }\n  long count = 2;\n  long last_digit\
    \ = 1;\n  long first_digit = 1;\n  for (int i = 3; i <= n; i++) {\n    count =\
    \ count * 2 + last_digit;\n    last_digit = first_digit;\n    first_digit = count;\n\
    \  }\n  return count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpv6v72wfj: /tmp/tmpv6v72wfj.cpp:24: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    long count = 0;\n    for\
    \ (long i = 1; i <= n; i++) {\n        if (i == 1) {\n            count += 1;\n\
    \        } else {\n            count += 9 * pow(10, i - 2);\n        }\n    }\n\
    \    return count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n \
    \   assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3))\
    \ == (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5))\
    \ == (18000));\n}\n"
  status: Exception
  stderr: 'tmpj447r94p: /tmp/tmpj447r94p.cpp:19: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    count += pow(10, i - 1);\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpsgt0gq9r: /tmp/tmpsgt0gq9r.cpp:15: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 2;\n  }\n  long count = 0;\n  long start_one\
    \ = 1;\n  long end_one = 1;\n  long temp = 0;\n  for (long i = 3; i <= n; i++)\
    \ {\n    temp = start_one;\n    start_one = end_one;\n    end_one = temp + end_one;\n\
    \  }\n  count = start_one + end_one;\n  return count;\n}\nint main() {\n    auto\
    \ candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpie2t9tro: /tmp/tmpie2t9tro.cpp:27: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823971
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) return 1;\n  if\
    \ (n == 2) return 10;\n  long count = 0;\n  for (long i = 1; i <= n; i++) {\n\
    \    count += pow(10, i - 1);\n  }\n  return count;\n}\nint main() {\n    auto\
    \ candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmp8ubrbbey: /tmp/tmp8ubrbbey.cpp:17: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823971
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long result = 0;\n  long start_with_one\
    \ = 1;\n  long end_with_one = 1;\n  long start_with_zero = 0;\n  long end_with_zero\
    \ = 0;\n  for (int i = 1; i < n; i++) {\n    start_with_one = start_with_zero\
    \ + end_with_zero;\n    end_with_one = start_with_one + end_with_one;\n    start_with_zero\
    \ = start_with_one + end_with_one;\n    end_with_zero = start_with_zero + end_with_zero;\n\
    \  }\n  result = start_with_one + end_with_one;\n  return result;\n}\nint main()\
    \ {\n    auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n \
    \   assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpf85bhlp4: /tmp/tmpf85bhlp4.cpp:22: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823971
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    if (i == 1) {\n      count += 1;\n    } else {\n\
    \      count += 9 * pow(10, i - 2);\n    }\n  }\n  return count;\n}\nint main()\
    \ {\n    auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n \
    \   assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpsc52qq9c: /tmp/tmpsc52qq9c.cpp:19: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    long start = pow(10, i - 1);\n    long end = pow(10,\
    \ i) - 1;\n    count += end - start + 1;\n  }\n  return count;\n}\nint main()\
    \ {\n    auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n \
    \   assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpkqpl79w9: /tmp/tmpkqpl79w9.cpp:16: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823971
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long dp[n + 1];\n  dp[0] =\
    \ 0;\n  dp[1] = 1;\n  for (long i = 2; i <= n; i++) {\n    dp[i] = dp[i - 1] +\
    \ (dp[i - 1] * 9);\n  }\n  return dp[n];\n}\nint main() {\n    auto candidate\
    \ = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpq4ytuoc0: /tmp/tmpq4ytuoc0.cpp:17: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    if (n == 1) {\n        return\
    \ 10;\n    }\n    long count = 0;\n    long start_one = 1;\n    long end_one =\
    \ 1;\n    for (long i = 1; i < n; i++) {\n        start_one *= 9;\n        end_one\
    \ *= 10;\n    }\n    count += start_one;\n    count += end_one;\n    return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpdpdotqkz: /tmp/tmpdpdotqkz.cpp:22: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    count += pow(10, i - 1);\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpsgt0gq9r: /tmp/tmpsgt0gq9r.cpp:15: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  long count = 0;\n  long start_one = 1;\n  long end_one = 1;\n  for\
    \ (int i = 1; i < n; i++) {\n    start_one = start_one * 10;\n    end_one = end_one\
    \ * 10 + 1;\n  }\n  count = start_one + end_one;\n  return count;\n}\nint main()\
    \ {\n    auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n \
    \   assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmp6f56vhtn: /tmp/tmp6f56vhtn.cpp:22: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    if (n == 1) {\n        return\
    \ 10;\n    }\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n     \
    \   count += pow(10, i - 1);\n    }\n    return count;\n}\nint main() {\n    auto\
    \ candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpq2imwyzk: /tmp/tmpq2imwyzk.cpp:17: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  long count = 10;\n  long base\
    \ = 10;\n  for (long i = 3; i <= n; i++) {\n    count += 9 * base;\n    base *=\
    \ 10;\n  }\n  return count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmp9uf4edpp: /tmp/tmp9uf4edpp.cpp:23: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  long count = 0;\n  for (long i = 1; i <= n; i++) {\n    count +=\
    \ pow(10, i - 1);\n  }\n  return count;\n}\nint main() {\n    auto candidate =\
    \ starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmp4s9lpp0t: /tmp/tmp4s9lpp0t.cpp:18: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  long start\
    \ = 1;\n  long end = 1;\n  for (int i = 1; i < n; i++) {\n    start *= 10;\n \
    \   end = end * 10 + 1;\n  }\n  count = start + end;\n  return count;\n}\nint\
    \ main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n\
    \    assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpku90xw0s: /tmp/tmpku90xw0s.cpp:18: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    count += pow(10, i - 1);\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpsgt0gq9r: /tmp/tmpsgt0gq9r.cpp:15: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 11;\n  }\n  long *dp = new long[n + 1];\n\
    \  dp[0] = 0;\n  dp[1] = 1;\n  dp[2] = 11;\n  for (long i = 3; i <= n; i++) {\n\
    \    dp[i] = dp[i - 1] + 9 * pow(10, i - 2);\n  }\n  return dp[n];\n}\nint main()\
    \ {\n    auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n \
    \   assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpwubcl6qr: /tmp/tmpwubcl6qr.cpp:24: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    if (n == 1) {\n        return\
    \ 10;\n    }\n    if (n == 2) {\n        return 19;\n    }\n    long count = 0;\n\
    \    long dp[n + 1];\n    dp[0] = 0;\n    dp[1] = 10;\n    dp[2] = 19;\n    for\
    \ (long i = 3; i <= n; i++) {\n        dp[i] = dp[i - 1] + dp[i - 2];\n    }\n\
    \    return dp[n];\n}\nint main() {\n    auto candidate = starts_one_ends;\n \
    \   assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3))\
    \ == (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5))\
    \ == (18000));\n}\n"
  status: Exception
  stderr: 'tmps18pg3mc: /tmp/tmps18pg3mc.cpp:24: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    count += pow(10, i - 1);\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmp2roc01w_: /tmp/tmp2roc01w_.cpp:21: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    long count = 0;\n    for\
    \ (long i = 1; i <= n; i++) {\n        count += pow(10, i - 1);\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpqwbv5zlv: /tmp/tmpqwbv5zlv.cpp:15: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    count += (pow(10, i) - pow(10, i - 1));\n  }\n  return\
    \ count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpwq0d9kh7: /tmp/tmpwq0d9kh7.cpp:14: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    if (i == 1) {\n      count += 1;\n    } else {\n\
    \      count += 9 * pow(10, i - 2);\n    }\n  }\n  return count;\n}\nint main()\
    \ {\n    auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n \
    \   assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpsc52qq9c: /tmp/tmpsc52qq9c.cpp:19: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    long count = 0;\n    for\
    \ (long i = 1; i <= n; i++) {\n        count += pow(10, i - 1);\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpqwbv5zlv: /tmp/tmpqwbv5zlv.cpp:15: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    if (n == 1) {\n        return\
    \ 1;\n    }\n    if (n == 2) {\n        return 10;\n    }\n    long count = 0;\n\
    \    for (long i = 1; i <= 9; i++) {\n        count += starts_one_ends(n - 1);\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpzbzm43a7: /tmp/tmpzbzm43a7.cpp:21: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    long dp[n+1];\n    memset(dp,\
    \ 0, sizeof(dp));\n    dp[1] = 1;\n    for(long i = 2; i <= n; i++) {\n      \
    \  dp[i] = dp[i-1] + (i-1)*dp[i-2];\n    }\n    return dp[n];\n}\nint main() {\n\
    \    auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n \
    \   assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n  \
    \  assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpzosip12v: /tmp/tmpzosip12v.cpp:17: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 2;\n  }\n  if (n == 2) {\n    return 3;\n  }\n  long dp[n + 1];\n  dp[0] = 0;\n\
    \  dp[1] = 2;\n  dp[2] = 3;\n  for (long i = 3; i <= n; i++) {\n    dp[i] = dp[i\
    \ - 1] + dp[i - 2];\n  }\n  return dp[n];\n}\nint main() {\n    auto candidate\
    \ = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpp7omzh_t: /tmp/tmpp7omzh_t.cpp:23: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 2;\n  }\n  long result = 0;\n  for (long i = 1; i < n; i++) {\n    result +=\
    \ pow(10, i);\n  }\n  return result * 2;\n}\nint main() {\n    auto candidate\
    \ = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmps9lg4pde: /tmp/tmps9lg4pde.cpp:17: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long ans = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    ans += pow(10, i - 1);\n  }\n  return ans;\n}\nint\
    \ main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n\
    \    assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpjuchvkif: /tmp/tmpjuchvkif.cpp:15: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    long count = 0;\n    long\
    \ start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start\
    \ *= 10;\n        end *= 10;\n    }\n    count += start;\n    count += end;\n\
    \    count += (n - 2) * 9 * start;\n    return count;\n}\nint main() {\n    auto\
    \ candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmp64g75182: /tmp/tmp64g75182.cpp:20: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  long result = 0;\n  long power_of_ten = 1;\n  for (long i = 0; i\
    \ < n - 1; i++) {\n    power_of_ten *= 10;\n  }\n  result += 9 * power_of_ten;\n\
    \  result += starts_one_ends(n - 1);\n  return result;\n}\nint main() {\n    auto\
    \ candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpf800uvzx: /tmp/tmpf800uvzx.cpp:21: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) return 1;\n  if\
    \ (n == 2) return 2;\n  long *dp = new long[n + 1];\n  dp[0] = 0;\n  dp[1] = 1;\n\
    \  dp[2] = 2;\n  for (long i = 3; i <= n; i++) {\n    dp[i] = dp[i - 1] + dp[i\
    \ - 2];\n  }\n  long result = dp[n] + dp[n - 1];\n  delete[] dp;\n  return result;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpnaswlmxg: /tmp/tmpnaswlmxg.cpp:22: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  assert(n >= 1);\n  if (n ==\
    \ 1) return 1;\n  long count = 0;\n  for (long i = 1; i <= n; i++) {\n    count\
    \ += pow(9, i - 1);\n  }\n  return count;\n}\nint main() {\n    auto candidate\
    \ = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpf6w52qil: /tmp/tmpf6w52qil.cpp:17: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    long count = 0;\n    for\
    \ (long i = 1; i <= n; i++) {\n        count += pow(10, i - 1);\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpqwbv5zlv: /tmp/tmpqwbv5zlv.cpp:15: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 2;\n  }\n  long dp[n + 1];\n  dp[0] = 0;\n\
    \  dp[1] = 1;\n  dp[2] = 2;\n  for (long i = 3; i <= n; i++) {\n    dp[i] = dp[i\
    \ - 1] + dp[i - 2];\n  }\n  return dp[n];\n}\nint main() {\n    auto candidate\
    \ = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmp9wjnizy0: /tmp/tmp9wjnizy0.cpp:24: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  long count = 0;\n  for (long i = 1; i <= n; i++) {\n    count +=\
    \ std::pow(10, i - 1);\n  }\n  return count;\n}\nint main() {\n    auto candidate\
    \ = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpuvm33356: /tmp/tmpuvm33356.cpp:18: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 2;\n  }\n  if (n == 2) {\n    return 3;\n  }\n  long dp[n + 1];\n  dp[0] = 0;\n\
    \  dp[1] = 2;\n  dp[2] = 3;\n  for (long i = 3; i <= n; i++) {\n    dp[i] = dp[i\
    \ - 1] + dp[i - 2];\n  }\n  return dp[n];\n}\nint main() {\n    auto candidate\
    \ = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpp7omzh_t: /tmp/tmpp7omzh_t.cpp:23: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 11;\n  }\n  long dp[n + 1];\n  dp[0] =\
    \ 0;\n  dp[1] = 1;\n  dp[2] = 11;\n  for (long i = 3; i <= n; i++) {\n    dp[i]\
    \ = dp[i - 1] + 9 * pow(10, i - 2);\n  }\n  return dp[n];\n}\nint main() {\n \
    \   auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n   \
    \ assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmplvfwe8eg: /tmp/tmplvfwe8eg.cpp:24: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) return 2;\n  if\
    \ (n == 2) return 3;\n  long dp[n + 1];\n  dp[0] = 0;\n  dp[1] = 2;\n  dp[2] =\
    \ 3;\n  for (long i = 3; i <= n; i++) {\n    dp[i] = dp[i - 1] + dp[i - 2];\n\
    \  }\n  return dp[n];\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmptkd_y799: /tmp/tmptkd_y799.cpp:19: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    if (n == 1) return 1;\n\
    \    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        count += pow(10,\
    \ i - 1);\n    }\n    return count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpbhslzmj6: /tmp/tmpbhslzmj6.cpp:16: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long dp[n + 1];\n  dp[0] =\
    \ 0;\n  dp[1] = 1;\n  for (long i = 2; i <= n; i++) {\n    dp[i] = 9 * pow(10,\
    \ i - 2) + dp[i - 1];\n  }\n  return dp[n];\n}\nint main() {\n    auto candidate\
    \ = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpxt7w06b1: /tmp/tmpxt7w06b1.cpp:17: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    if (n == 1) return 2;\n\
    \    long dp[n + 1];\n    dp[0] = 0;\n    dp[1] = 2;\n    for (long i = 2; i <=\
    \ n; i++) {\n        dp[i] = dp[i - 1] + 9 * pow(10, i - 2);\n    }\n    return\
    \ dp[n];\n}\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpi_myt9j_: /tmp/tmpi_myt9j_.cpp:17: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823974
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    count += pow(10, i - 1);\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmp2roc01w_: /tmp/tmp2roc01w_.cpp:21: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    long num = pow(10, i - 1);\n    count += 9 * num;\n\
    \  }\n  return count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpbjprb8to: /tmp/tmpbjprb8to.cpp:15: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (int\
    \ i = 1; i <= n; i++) {\n    count += pow(10, i - 1);\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpvlo2ii47: /tmp/tmpvlo2ii47.cpp:15: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 10;\n  }\n  long count = 0;\n  for (long i = 1; i <= n; i++) {\n    count +=\
    \ pow(10, i - 1);\n  }\n  return count;\n}\nint main() {\n    auto candidate =\
    \ starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmp0glxyyac: /tmp/tmp0glxyyac.cpp:17: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 10;\n  }\n  long count = 0;\n  for (long i = 1; i <= 9; i++) {\n    count +=\
    \ pow(10, n - 1);\n  }\n  return count;\n}\nint main() {\n    auto candidate =\
    \ starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpurdzk7ko: /tmp/tmpurdzk7ko.cpp:17: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    if (n == 1) {\n        return\
    \ 10;\n    }\n    long dp[n + 1];\n    memset(dp, 0, sizeof(dp));\n    dp[1] =\
    \ 10;\n    for (long i = 2; i <= n; i++) {\n        dp[i] = 9 * pow(10, i - 1)\
    \ + dp[i - 1];\n    }\n    return dp[n];\n}\nint main() {\n    auto candidate\
    \ = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmput7sh92a: /tmp/tmput7sh92a.cpp:19: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 10;\n  }\n  long count = 0;\n  for (long i = 1; i <= n; i++) {\n    count +=\
    \ pow(10, i - 1);\n  }\n  return count;\n}\nint main() {\n    auto candidate =\
    \ starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmp0glxyyac: /tmp/tmp0glxyyac.cpp:17: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) return 1;\n  if\
    \ (n == 2) return 2;\n  if (n == 3) return 3;\n  long dp[n + 1];\n  dp[1] = 1;\n\
    \  dp[2] = 2;\n  dp[3] = 3;\n  for (long i = 4; i <= n; i++) {\n    dp[i] = dp[i\
    \ - 1] + dp[i - 2];\n  }\n  return dp[n];\n}\nint main() {\n    auto candidate\
    \ = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmponjkn532: /tmp/tmponjkn532.cpp:21: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    count += pow(10, i - 1);\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmp2roc01w_: /tmp/tmp2roc01w_.cpp:21: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    if (n == 1) {\n        return\
    \ 10;\n    }\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n     \
    \   count += pow(10, i - 1);\n    }\n    return count;\n}\nint main() {\n    auto\
    \ candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpq2imwyzk: /tmp/tmpq2imwyzk.cpp:17: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long dp[n + 1];\n  dp[0] =\
    \ 0;\n  dp[1] = 1;\n  for (long i = 2; i <= n; i++) {\n    dp[i] = dp[i - 1] +\
    \ 9 * pow(10, i - 2);\n  }\n  return dp[n];\n}\nint main() {\n    auto candidate\
    \ = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmprr9k3azf: /tmp/tmprr9k3azf.cpp:17: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    if (i == 1) {\n      count += 1;\n    } else {\n\
    \      count += 9 * std::pow(10, i - 2);\n    }\n  }\n  return count;\n}\nint\
    \ main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n\
    \    assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpj6xj70hb: /tmp/tmpj6xj70hb.cpp:19: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    long count = 0;\n    for\
    \ (long i = 1; i <= n; i++) {\n        count += (pow(10, i - 1) + pow(10, n -\
    \ i));\n    }\n    return count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmp3u555m2q: /tmp/tmp3u555m2q.cpp:14: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    if (n == 1) return 1;\n\
    \    if (n == 2) return 2;\n    long dp[n + 1];\n    dp[0] = 0;\n    dp[1] = 1;\n\
    \    dp[2] = 2;\n    for (long i = 3; i <= n; i++) {\n        dp[i] = dp[i - 1]\
    \ + dp[i - 2];\n    }\n    return 2 * dp[n] - dp[n - 1];\n}\nint main() {\n  \
    \  auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n   \
    \ assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4))\
    \ == (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpv9fl_i2t: /tmp/tmpv9fl_i2t.cpp:20: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 11;\n  }\n  long count = 11;\n  long power\
    \ = 10;\n  for (long i = 3; i <= n; i++) {\n    count += 9 * power;\n    power\
    \ *= 10;\n  }\n  return count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpj772_4dm: /tmp/tmpj772_4dm.cpp:23: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  long dp[n + 1];\n  dp[0] =\
    \ 0;\n  dp[1] = 1;\n  dp[2] = 10;\n  for (long i = 3; i <= n; i++) {\n    dp[i]\
    \ = (dp[i - 1] * 10) - (dp[i - 2] * 9);\n  }\n  return dp[n];\n}\nint main() {\n\
    \    auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n \
    \   assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n  \
    \  assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpwipav2e6: /tmp/tmpwipav2e6.cpp:24: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    count += pow(10, i - 1);\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpsgt0gq9r: /tmp/tmpsgt0gq9r.cpp:15: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    count += std::pow(10, i - 1);\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmp8zygznep: /tmp/tmp8zygznep.cpp:15: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    if (n == 1) {\n        return\
    \ 2;\n    }\n    if (n == 2) {\n        return 3;\n    }\n    return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpm7bseizi: /tmp/tmpm7bseizi.cpp:16: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    if (n == 1) {\n        return\
    \ 2;\n    }\n    if (n == 2) {\n        return 3;\n    }\n    long dp[n + 1];\n\
    \    dp[0] = 0;\n    dp[1] = 2;\n    dp[2] = 3;\n    for (long i = 3; i <= n;\
    \ i++) {\n        dp[i] = dp[i - 1] + dp[i - 2];\n    }\n    return dp[n];\n}\n\
    int main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpbq4pbgxe: /tmp/tmpbq4pbgxe.cpp:23: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) return 1;\n  if\
    \ (n == 2) return 10;\n  long count = 10;\n  long base = 9;\n  for (long i = 3;\
    \ i <= n; i++) {\n    base *= 10;\n    count += base;\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpszlh73o6: /tmp/tmpszlh73o6.cpp:19: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  long dp[n + 1];\n  dp[0] =\
    \ 0;\n  dp[1] = 1;\n  dp[2] = 10;\n  for (long i = 3; i <= n; i++) {\n    dp[i]\
    \ = dp[i - 1] + 9 * pow(10, i - 2);\n  }\n  return dp[n];\n}\nint main() {\n \
    \   auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n   \
    \ assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpdpr_k5ns: /tmp/tmpdpr_k5ns.cpp:24: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long result = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    result += pow(10, i - 1);\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmp7uqgljpf: /tmp/tmp7uqgljpf.cpp:15: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823975
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  if (n ==\
    \ 1) {\n    return 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  if (n == 3)\
    \ {\n    return 19;\n  }\n  if (n == 4) {\n    return 28;\n  }\n  if (n == 5)\
    \ {\n    return 37;\n  }\n  if (n == 6) {\n    return 46;\n  }\n  if (n == 7)\
    \ {\n    return 55;\n  }\n  if (n == 8) {\n    return 64;\n  }\n  if (n == 9)\
    \ {\n    return 73;\n  }\n  if (n == 10) {\n    return 82;\n  }\n  if (n == 11)\
    \ {\n    return 91;\n  }\n  if (n == 12) {\n    return 100;\n  }\n  if (n == 13)\
    \ {\n    return 109;\n  }\n  if (n == 14) {\n    return 118;\n  }\n  if (n ==\
    \ 15) {\n    return 127;\n  }\n  if (n == 16) {\n    return 136;\n  }\n  if (n\
    \ == 17) {\n    return 145;\n  }\n  if (n == 18) {\n    return 154;\n  }\n  if\
    \ (n == 19) {\n    return 163;\n  }\n  if (n == 20) {\n    return 172;\n  }\n\
    \  if (n == 21) {\n    return 181;\n  }\n  if (n == 22) {\n    return 190;\n \
    \ }\n  if (n == 23) {\n    return 199;\n  }\n  if (n == 24) {\n    return 208;\n\
    \  }\n  if (n == 25) {\n    return 217;\n  }\n  if (n == 26) {\n    return 226;\n\
    \  }\n  if (n == 27) {\n    return 235;\n  }\n  if (n == 28) {\n    return 244;\n\
    \  }\n  if (n == 29) {\n    return 253;\n  }\n  if (n == 30) {\n    return\n}\n\
    int main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp500dhaca.cpp: In function \u2018long int starts_one_ends(long int)\u2019\
    :\n/tmp/tmp500dhaca.cpp:96:1: error: expected primary-expression before \u2018\
    }\u2019 token\n   96 | }\n      | ^\n/tmp/tmp500dhaca.cpp:95:11: error: expected\
    \ \u2018;\u2019 before \u2018}\u2019 token\n   95 |     return\n      |      \
    \     ^\n      |           ;\n   96 | }\n      | ~          \n/tmp/tmp500dhaca.cpp:97:12:\
    \ error: a function-definition is not allowed here before \u2018{\u2019 token\n\
    \   97 | int main() {\n      |            ^\n/tmp/tmp500dhaca.cpp:104:1: error:\
    \ expected \u2018}\u2019 at end of input\n  104 | }\n      | ^\n/tmp/tmp500dhaca.cpp:5:30:\
    \ note: to match this \u2018{\u2019\n    5 | long starts_one_ends(long n) {\n\
    \      |                              ^\n"
  stdout: ''
  timestamp: 1659823975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  if (n ==\
    \ 1) {\n    return 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  if (n == 3)\
    \ {\n    return 100;\n  }\n  if (n == 4) {\n    return 1000;\n  }\n  if (n ==\
    \ 5) {\n    return 10000;\n  }\n  if (n == 6) {\n    return 100000;\n  }\n  if\
    \ (n == 7) {\n    return 1000000;\n  }\n  if (n == 8) {\n    return 10000000;\n\
    \  }\n  if (n == 9) {\n    return 100000000;\n  }\n  if (n == 10) {\n    return\
    \ 1000000000;\n  }\n  if (n == 11) {\n    return 10000000000;\n  }\n  if (n ==\
    \ 12) {\n    return 100000000000;\n  }\n  if (n == 13) {\n    return 1000000000000;\n\
    \  }\n  if (n == 14) {\n    return 10000000000000;\n  }\n  if (n == 15) {\n  \
    \  return 100000000000000;\n  }\n  if (n == 16) {\n    return 1000000000000000;\n\
    \  }\n  if (n == 17) {\n    return 10000000000000000;\n  }\n  if (n == 18) {\n\
    \    return 100000000000000000;\n  }\n  if (n == 19) {\n    return 1000000000000000000;\n\
    \  }\n  if (n == 20) {\n    return 10000000000000000000;\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpbohoszox: /tmp/tmpbohoszox.cpp:72: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 11;\n  }\n  long dp[n + 1];\n  dp[0] =\
    \ 0;\n  dp[1] = 1;\n  dp[2] = 11;\n  for (long i = 3; i <= n; i++) {\n    dp[i]\
    \ = dp[i - 1] + 9 * pow(10, i - 2);\n  }\n  return dp[n];\n}\nint main() {\n \
    \   auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n   \
    \ assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmplvfwe8eg: /tmp/tmplvfwe8eg.cpp:24: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    if (n == 1) {\n        return\
    \ 1;\n    }\n    if (n == 2) {\n        return 10;\n    }\n    long count = 0;\n\
    \    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n\
    \        start *= 10;\n        end *= 10;\n    }\n    count += start;\n    count\
    \ += end;\n    count += (n - 2) * 9 * start;\n    return count;\n}\nint main()\
    \ {\n    auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n \
    \   assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpzgpg6t6q: /tmp/tmpzgpg6t6q.cpp:27: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 10;\n  }\n  long count = 0;\n  for (long i = 1; i <= n; i++) {\n    count +=\
    \ pow(10, i - 1);\n  }\n  return count;\n}\nint main() {\n    auto candidate =\
    \ starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmp0glxyyac: /tmp/tmp0glxyyac.cpp:17: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    count += pow(10, i - 1);\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpsgt0gq9r: /tmp/tmpsgt0gq9r.cpp:15: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (int\
    \ i = 1; i <= n; i++) {\n    count += pow(10, i - 1);\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpvlo2ii47: /tmp/tmpvlo2ii47.cpp:15: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 11;\n  }\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    count += pow(10, i - 1);\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmp_sfbtwhi: /tmp/tmp_sfbtwhi.cpp:21: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  long count = 10;\n  long i\
    \ = 2;\n  while (i <= n) {\n    count += 9 * pow(10, i - 1);\n    i++;\n  }\n\
    \  return count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n   \
    \ assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3))\
    \ == (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5))\
    \ == (18000));\n}\n"
  status: Exception
  stderr: 'tmp360ppuw2: /tmp/tmp360ppuw2.cpp:23: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 2;\n  }\n  long count = 0;\n  for (long i = 1; i <= n; i++) {\n    if (i ==\
    \ 1) {\n      count += 9;\n    } else {\n      count += pow(10, i - 1);\n    }\n\
    \  }\n  return count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpmoa6kuud: /tmp/tmpmoa6kuud.cpp:21: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    if (i == 1) {\n      count += 9;\n    } else {\n\
    \      count += 9 * pow(10, i - 1);\n    }\n  }\n  return count;\n}\nint main()\
    \ {\n    auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n \
    \   assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmptkxaqr_t: /tmp/tmptkxaqr_t.cpp:18: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  long count = 0;\n  long power\
    \ = 1;\n  for (long i = 1; i < n; i++) {\n    power *= 10;\n  }\n  count += power;\n\
    \  count += (n - 1) * 9 * power / 10;\n  return count;\n}\nint main() {\n    auto\
    \ candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpb3i8uv70: /tmp/tmpb3i8uv70.cpp:24: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823975
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  if (n ==\
    \ 1) {\n    return 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  if (n == 3)\
    \ {\n    return 100;\n  }\n  if (n == 4) {\n    return 1000;\n  }\n  if (n ==\
    \ 5) {\n    return 10000;\n  }\n  if (n == 6) {\n    return 100000;\n  }\n  if\
    \ (n == 7) {\n    return 1000000;\n  }\n  if (n == 8) {\n    return 10000000;\n\
    \  }\n  if (n == 9) {\n    return 100000000;\n  }\n  if (n == 10) {\n    return\
    \ 1000000000;\n  }\n  if (n == 11) {\n    return 10000000000;\n  }\n  if (n ==\
    \ 12) {\n    return 100000000000;\n  }\n  if (n == 13) {\n    return 1000000000000;\n\
    \  }\n  if (n == 14) {\n    return 10000000000000;\n  }\n  if (n == 15) {\n  \
    \  return 100000000000000;\n  }\n  if (n == 16) {\n    return 1000000000000000;\n\
    \  }\n  if (n == 17) {\n    return 10000000000000000;\n  }\n  if (n == 18) {\n\
    \    return 100000000000000000;\n  }\n  if (n == 19) {\n    return 1000000000000000000;\n\
    \  }\n  if (n == 20) {\n    return 10000000000000000000;\n  }\n  if (n == 21)\
    \ {\n    return 100000000000000000000;\n  }\n  if (n == 22) {\n    return 1000000000000000000000;\n\
    \  }\n  if (n == 23) {\n    return 10000000000000000000000;\n  }\n  if (n == 24)\
    \ {\n    return 100000000000000000000000;\n  }\n  if (n == 25) {\n    return 1000000000000000000000000;\n\
    \  }\n  if (n == 26) {\n    return 10000000000000000000000000;\n  }\n  if (n ==\
    \ 27) {\n    return 100000000000000000000000000;\n  }\n  if (n == 28)\n}\nint\
    \ main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n\
    \    assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzsl43p0x.cpp:65:12: warning: integer constant is so large that\
    \ it is unsigned\n   65 |     return 10000000000000000000;\n      |          \
    \  ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmpzsl43p0x.cpp:68:12: warning: integer constant\
    \ is too large for its type\n   68 |     return 100000000000000000000;\n     \
    \ |            ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpzsl43p0x.cpp:71:12: warning: integer\
    \ constant is too large for its type\n   71 |     return 1000000000000000000000;\n\
    \      |            ^~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpzsl43p0x.cpp:74:12: warning:\
    \ integer constant is too large for its type\n   74 |     return 10000000000000000000000;\n\
    \      |            ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpzsl43p0x.cpp:77:12: warning:\
    \ integer constant is too large for its type\n   77 |     return 100000000000000000000000;\n\
    \      |            ^~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpzsl43p0x.cpp:80:12: warning:\
    \ integer constant is too large for its type\n   80 |     return 1000000000000000000000000;\n\
    \      |            ^~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpzsl43p0x.cpp:83:12: warning:\
    \ integer constant is too large for its type\n   83 |     return 10000000000000000000000000;\n\
    \      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpzsl43p0x.cpp:86:12: warning:\
    \ integer constant is too large for its type\n   86 |     return 100000000000000000000000000;\n\
    \      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpzsl43p0x.cpp: In function\
    \ \u2018long int starts_one_ends(long int)\u2019:\n/tmp/tmpzsl43p0x.cpp:89:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n   89 | }\n \
    \     | ^\n/tmp/tmpzsl43p0x.cpp:89:1: warning: control reaches end of non-void\
    \ function [-Wreturn-type]\n   89 | }\n      | ^\n"
  stdout: ''
  timestamp: 1659823976
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    if (n == 1) {\n        return\
    \ 1;\n    }\n    if (n == 2) {\n        return 10;\n    }\n    long count = 0;\n\
    \    for (long i = 1; i <= n; i++) {\n        count += pow(10, i - 1);\n    }\n\
    \    return count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n \
    \   assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3))\
    \ == (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5))\
    \ == (18000));\n}\n"
  status: Exception
  stderr: 'tmpm0mf85ke: /tmp/tmpm0mf85ke.cpp:21: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    long dp[n+1];\n    dp[0]\
    \ = 0;\n    dp[1] = 1;\n    for(long i = 2; i <= n; i++) {\n        dp[i] = dp[i-1]\
    \ + 9*pow(10, i-2);\n    }\n    return dp[n];\n}\nint main() {\n    auto candidate\
    \ = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpmlr6jod4: /tmp/tmpmlr6jod4.cpp:17: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  long count = 0;\n  for (long\
    \ i = 1; i <= 9; i++) {\n    count += starts_one_ends(n - 1);\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmp_fihlj15: /tmp/tmp_fihlj15.cpp:21: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 11;\n  }\n  long count = 0;\n  long start_with_one\
    \ = 9;\n  long end_with_one = 10;\n  for (long i = 3; i <= n; i++) {\n    count\
    \ = start_with_one + end_with_one;\n    start_with_one = start_with_one * 10 +\
    \ 9;\n    end_with_one = end_with_one * 10 + 1;\n  }\n  return count;\n}\nint\
    \ main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n\
    \    assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpvy7g6dp5: /tmp/tmpvy7g6dp5.cpp:25: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  long dp[n + 1];\n  dp[0] =\
    \ 0;\n  dp[1] = 1;\n  dp[2] = 10;\n  for (long i = 3; i <= n; i++) {\n    dp[i]\
    \ = 9 * pow(10, i - 2) + dp[i - 1];\n  }\n  return dp[n];\n}\nint main() {\n \
    \   auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n   \
    \ assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpsjkgwbtv: /tmp/tmpsjkgwbtv.cpp:24: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 2;\n  }\n  if (n == 2) {\n    return 3;\n  }\n  long dp[n + 1];\n  dp[0] = 0;\n\
    \  dp[1] = 2;\n  dp[2] = 3;\n  for (long i = 3; i <= n; i++) {\n    dp[i] = dp[i\
    \ - 1] + dp[i - 2];\n  }\n  return dp[n];\n}\nint main() {\n    auto candidate\
    \ = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpp7omzh_t: /tmp/tmpp7omzh_t.cpp:23: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) return 2;\n  if\
    \ (n == 2) return 3;\n  long dp[n + 1];\n  dp[0] = 0;\n  dp[1] = 2;\n  dp[2] =\
    \ 3;\n  for (long i = 3; i <= n; i++) {\n    dp[i] = dp[i - 1] + dp[i - 2];\n\
    \  }\n  return dp[n];\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmptkd_y799: /tmp/tmptkd_y799.cpp:19: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    count += pow(10, i - 1);\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmp2roc01w_: /tmp/tmp2roc01w_.cpp:21: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    count += pow(10, i - 1);\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpsgt0gq9r: /tmp/tmpsgt0gq9r.cpp:15: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    if (n == 1) {\n        return\
    \ 1;\n    }\n    if (n == 2) {\n        return 10;\n    }\n    long result = 0;\n\
    \    long start_one = 9;\n    long end_one = 1;\n    long other_digits = 9;\n\
    \    for (long i = 3; i <= n; i++) {\n        result += start_one * other_digits\
    \ + end_one * other_digits;\n        start_one = start_one * 10 + 9;\n       \
    \ end_one = end_one * 10 + 1;\n        other_digits *= 10;\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpiu1xq3xb: /tmp/tmpiu1xq3xb.cpp:27: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    if (i == 1) {\n      count += 1;\n    } else {\n\
    \      count += 9 * pow(10, i - 2);\n    }\n  }\n  return count;\n}\nint main()\
    \ {\n    auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n \
    \   assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpsc52qq9c: /tmp/tmpsc52qq9c.cpp:19: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  long count = 0;\n  long start\
    \ = 1;\n  long end = 1;\n  for (long i = 1; i < n; i++) {\n    start *= 10;\n\
    \    end *= 10;\n  }\n  count += start;\n  count += end;\n  count += (n - 2) *\
    \ 9 * start;\n  return count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpiablsi85: /tmp/tmpiablsi85.cpp:27: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  assert(n > 0);\n  if (n ==\
    \ 1) {\n    return 1;\n  }\n  long count = 0;\n  long start = 1;\n  long end =\
    \ 1;\n  for (long i = 1; i < n; i++) {\n    start *= 10;\n    end = end * 10 +\
    \ 1;\n  }\n  count += end - start + 1;\n  count += starts_one_ends(n - 1) * 9;\n\
    \  return count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n   \
    \ assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3))\
    \ == (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5))\
    \ == (18000));\n}\n"
  status: Exception
  stderr: 'tmp0uyj62fj: /tmp/tmp0uyj62fj.cpp:24: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    count += pow(10, i - 1);\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpsgt0gq9r: /tmp/tmpsgt0gq9r.cpp:15: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    // Write your code here\n\
    \    long dp[n+1];\n    dp[0] = 0;\n    dp[1] = 1;\n    for(long i = 2; i <= n;\
    \ i++) {\n        dp[i] = dp[i-1] + pow(10, i-1);\n    }\n    return dp[n];\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpjzhhpiac: /tmp/tmpjzhhpiac.cpp:18: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 2;\n  }\n  long count = 0;\n  for (long i = 1; i <= n; i++) {\n    count +=\
    \ pow(10, i - 1);\n  }\n  return count * 2;\n}\nint main() {\n    auto candidate\
    \ = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpcitf0pkn: /tmp/tmpcitf0pkn.cpp:17: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long a = 1, b = 1, c = 1;\n\
    \  for (long i = 2; i <= n; i++) {\n    a = a + b + c;\n    c = b;\n    b = a;\n\
    \  }\n  return a;\n}\nint main() {\n    auto candidate = starts_one_ends;\n  \
    \  assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3))\
    \ == (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5))\
    \ == (18000));\n}\n"
  status: Exception
  stderr: 'tmplhn879jn: /tmp/tmplhn879jn.cpp:17: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    count += pow(10, i - 1);\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpsgt0gq9r: /tmp/tmpsgt0gq9r.cpp:15: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    long count = 0;\n    for\
    \ (long i = 1; i <= n; i++) {\n        count += pow(10, i - 1);\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpqwbv5zlv: /tmp/tmpqwbv5zlv.cpp:15: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    count += pow(10, i - 1);\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpsgt0gq9r: /tmp/tmpsgt0gq9r.cpp:15: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  if (n ==\
    \ 1) {\n    return 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  count = 9;\n\
    \  for (long i = 1; i < n - 1; i++) {\n    count *= 10;\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpbt7wzmol: /tmp/tmpbt7wzmol.cpp:22: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  long dp[n + 1];\n  memset(dp,\
    \ 0, sizeof(dp));\n  dp[1] = 1;\n  dp[2] = 10;\n  for (long i = 3; i <= n; i++)\
    \ {\n    dp[i] = 9 * dp[i - 1] + pow(10, i - 2);\n  }\n  return dp[n];\n}\nint\
    \ main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n\
    \    assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpyn45fi0_: /tmp/tmpyn45fi0_.cpp:24: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  long count = 0;\n  for (long i = 1; i <= n; i++) {\n    count +=\
    \ std::pow(10, i - 1);\n  }\n  return count;\n}\nint main() {\n    auto candidate\
    \ = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpuvm33356: /tmp/tmpuvm33356.cpp:18: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    long dp[n + 1];\n    memset(dp,\
    \ 0, sizeof(dp));\n    dp[1] = 1;\n    for (long i = 2; i <= n; i++) {\n     \
    \   dp[i] = dp[i - 1] * 9 + pow(10, i - 1);\n    }\n    return dp[n];\n}\nint\
    \ main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n\
    \    assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpevc0h98o: /tmp/tmpevc0h98o.cpp:17: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  long count = 10;\n  long d\
    \ = 1;\n  long i = 2;\n  while (i < n) {\n    d = d * 10;\n    count = count +\
    \ 9 * d;\n    i++;\n  }\n  return count;\n}\nint main() {\n    auto candidate\
    \ = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpj47zc8gs: /tmp/tmpj47zc8gs.cpp:25: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    long count = 0;\n    for\
    \ (long i = 1; i <= n; i++) {\n        count += pow(10, i - 1);\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpqwbv5zlv: /tmp/tmpqwbv5zlv.cpp:15: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    if (n == 1) {\n        return\
    \ 10;\n    }\n    if (n == 2) {\n        return 100;\n    }\n    long count =\
    \ 0;\n    for (long i = 1; i <= n; i++) {\n        count += 9 * pow(10, i - 1);\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpdl19y8sx: /tmp/tmpdl19y8sx.cpp:20: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    if (n == 1) return 1;\n\
    \    if (n == 2) return 10;\n    long count = 9;\n    long pow = 9;\n    for (long\
    \ i = 1; i < n - 1; i++) {\n        pow *= 10;\n        count += pow;\n    }\n\
    \    return count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n \
    \   assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3))\
    \ == (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5))\
    \ == (18000));\n}\n"
  status: Exception
  stderr: 'tmpl059pfgn: /tmp/tmpl059pfgn.cpp:19: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 10;\n  }\n  long dp[n + 1];\n  memset(dp, 0, sizeof(dp));\n  dp[1] = 10;\n \
    \ for (long i = 2; i <= n; i++) {\n    dp[i] = 9 * pow(10, i - 1) + dp[i - 1];\n\
    \  }\n  return dp[n];\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpb46qm96w: /tmp/tmpb46qm96w.cpp:19: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    if (n == 1) {\n        return\
    \ 1;\n    }\n    if (n == 2) {\n        return 10;\n    }\n    long count = 0;\n\
    \    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n\
    \        start *= 10;\n        end *= 10;\n    }\n    count += start;\n    count\
    \ += end;\n    count += (n - 2) * 9 * start;\n    return count;\n}\nint main()\
    \ {\n    auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n \
    \   assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpzgpg6t6q: /tmp/tmpzgpg6t6q.cpp:27: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  long start_with_one\
    \ = 1;\n  long end_with_one = 1;\n  long start_with_one_end_with_zero = 0;\n \
    \ long start_with_zero_end_with_one = 0;\n  long start_with_zero_end_with_zero\
    \ = 0;\n  for (int i = 1; i < n; i++) {\n    start_with_one_end_with_zero = start_with_one\
    \ + start_with_zero_end_with_one;\n    start_with_zero_end_with_one = start_with_one\
    \ + start_with_zero_end_with_zero;\n    start_with_zero_end_with_zero = start_with_one_end_with_zero\
    \ + start_with_zero_end_with_one;\n    start_with_one = start_with_one_end_with_zero;\n\
    \  }\n  count = start_with_one + start_with_zero_end_with_one;\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpzpq229fj: /tmp/tmpzpq229fj.cpp:24: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  long count = 0;\n  long start_one\
    \ = 9;\n  long end_one = 10;\n  for (long i = 3; i <= n; i++) {\n    count +=\
    \ start_one + end_one;\n    start_one = start_one * 9;\n    end_one = end_one\
    \ * 10;\n  }\n  return count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmp7fqpcx0m: /tmp/tmp7fqpcx0m.cpp:25: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  long count = 0;\n  long start = 1;\n  long end = 1;\n  for (long\
    \ i = 1; i < n; i++) {\n    start *= 10;\n    end *= 10;\n  }\n  count += start;\n\
    \  count += end;\n  count += (n - 2) * 9 * start;\n  return count;\n}\nint main()\
    \ {\n    auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n \
    \   assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmp69k99tuy: /tmp/tmp69k99tuy.cpp:24: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    long count = 0;\n    for\
    \ (long i = 1; i <= n; i++) {\n        long num = pow(10, i - 1);\n        count\
    \ += 9 * num;\n    }\n    return count;\n}\nint main() {\n    auto candidate =\
    \ starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmppplvplj9: /tmp/tmppplvplj9.cpp:15: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long count = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    count += pow(10, i - 1);\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmpsgt0gq9r: /tmp/tmpsgt0gq9r.cpp:15: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    if (n == 1) return 1;\n\
    \    if (n == 2) return 2;\n    long dp[n+1];\n    dp[0] = 0;\n    dp[1] = 1;\n\
    \    dp[2] = 2;\n    for (long i = 3; i <= n; i++) {\n        dp[i] = dp[i-1]\
    \ + dp[i-2];\n    }\n    return dp[n];\n}\nint main() {\n    auto candidate =\
    \ starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpxhj7rd2f: /tmp/tmpxhj7rd2f.cpp:20: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  long dp[n + 1];\n  dp[0] =\
    \ 0;\n  dp[1] = 1;\n  dp[2] = 10;\n  for (long i = 3; i <= n; i++) {\n    dp[i]\
    \ = 9 * pow(10, i - 2) + dp[i - 1];\n  }\n  return dp[n];\n}\nint main() {\n \
    \   auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n   \
    \ assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpsjkgwbtv: /tmp/tmpsjkgwbtv.cpp:24: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  long count = 0;\n  for (int\
    \ i = 1; i <= n; i++) {\n    count += pow(10, i - 1);\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = starts_one_ends;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3)) ==\
    \ (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5)) ==\
    \ (18000));\n}\n"
  status: Exception
  stderr: 'tmp9q53dsys: /tmp/tmp9q53dsys.cpp:21: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n    long dp[n + 1];\n    memset(dp,\
    \ 0, sizeof(dp));\n    dp[1] = 1;\n    for (long i = 2; i <= n; i++) {\n     \
    \   dp[i] = dp[i - 1] * 10 - dp[i - 2];\n    }\n    return dp[n];\n}\nint main()\
    \ {\n    auto candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((2)) == (18));\n    assert(candidate((3)) == (180));\n \
    \   assert(candidate((4)) == (1800));\n    assert(candidate((5)) == (18000));\n\
    }\n"
  status: Exception
  stderr: 'tmpzauqid74: /tmp/tmpzauqid74.cpp:17: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  if (n == 2) {\n    return 11;\n  }\n  long dp[n + 1];\n  dp[0] =\
    \ 0;\n  dp[1] = 1;\n  dp[2] = 11;\n  for (long i = 3; i <= n; i++) {\n    dp[i]\
    \ = dp[i - 1] + (dp[i - 2] * 9);\n  }\n  return dp[n];\n}\nint main() {\n    auto\
    \ candidate = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpvua8mv5e: /tmp/tmpvua8mv5e.cpp:24: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 2;\n  }\n  if (n == 2) {\n    return 3;\n  }\n  long dp[n + 1];\n  dp[0] = 0;\n\
    \  dp[1] = 2;\n  dp[2] = 3;\n  for (long i = 3; i <= n; i++) {\n    dp[i] = dp[i\
    \ - 1] + dp[i - 2];\n  }\n  return dp[n];\n}\nint main() {\n    auto candidate\
    \ = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpp7omzh_t: /tmp/tmpp7omzh_t.cpp:23: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 2;\n  }\n  long count = 0;\n  for (int i = 1; i <= n; i++) {\n    count += pow(10,\
    \ i - 1);\n  }\n  return count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpqb4_9dv2: /tmp/tmpqb4_9dv2.cpp:17: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) {\n    return\
    \ 2;\n  }\n  long count = 0;\n  for (long i = 1; i <= n; i++) {\n    count +=\
    \ pow(10, n - i);\n  }\n  return count * 2;\n}\nint main() {\n    auto candidate\
    \ = starts_one_ends;\n    assert(candidate((1)) == (1));\n    assert(candidate((2))\
    \ == (18));\n    assert(candidate((3)) == (180));\n    assert(candidate((4)) ==\
    \ (1800));\n    assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmp6kfh08wi: /tmp/tmp6kfh08wi.cpp:17: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659823977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  if (n == 1) return 1;\n  if\
    \ (n == 2) return 2;\n  long dp[n + 1];\n  dp[0] = 0;\n  dp[1] = 1;\n  dp[2] =\
    \ 2;\n  for (long i = 3; i <= n; i++) {\n    dp[i] = dp[i - 1] + dp[i - 2];\n\
    \  }\n  return dp[n];\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpbrurb9sv: /tmp/tmpbrurb9sv.cpp:20: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  assert(n > 0);\n  if (n ==\
    \ 1) {\n    return 1;\n  }\n  if (n == 2) {\n    return 10;\n  }\n  long count\
    \ = 0;\n  for (int i = 1; i <= n; i++) {\n    count += pow(10, i - 1);\n  }\n\
    \  return count;\n}\nint main() {\n    auto candidate = starts_one_ends;\n   \
    \ assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n    assert(candidate((3))\
    \ == (180));\n    assert(candidate((4)) == (1800));\n    assert(candidate((5))\
    \ == (18000));\n}\n"
  status: Exception
  stderr: 'tmpxnioz3ct: /tmp/tmpxnioz3ct.cpp:22: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823978
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the count of the numbers of n-digit\n// positive integers that start\
    \ or end with 1.\nlong starts_one_ends(long n) {\n  long dp[n+1];\n  dp[0] = 0;\n\
    \  dp[1] = 1;\n  for (long i = 2; i <= n; i++) {\n    dp[i] = dp[i-1] + 9*(pow(10,\
    \ i-2));\n  }\n  return dp[n];\n}\nint main() {\n    auto candidate = starts_one_ends;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((2)) == (18));\n   \
    \ assert(candidate((3)) == (180));\n    assert(candidate((4)) == (1800));\n  \
    \  assert(candidate((5)) == (18000));\n}\n"
  status: Exception
  stderr: 'tmpdhinqndz: /tmp/tmpdhinqndz.cpp:17: int main(): Assertion `candidate((2))
    == (18)'' failed.

    '
  stdout: ''
  timestamp: 1659823978

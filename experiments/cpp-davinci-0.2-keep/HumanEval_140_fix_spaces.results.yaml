language: cpp
name: HumanEval_140_fix_spaces
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tstd::string result;\n\tint count\
    \ = 0;\n\tfor (int i = 0; i < text.size(); i++) {\n\t\tif (text[i] == ' ') {\n\
    \t\t\tcount++;\n\t\t}\n\t\telse {\n\t\t\tcount = 0;\n\t\t}\n\t\tif (count == 1)\
    \ {\n\t\t\tresult += '_';\n\t\t}\n\t\telse if (count > 2) {\n\t\t\tresult += '-';\n\
    \t\t}\n\t\telse {\n\t\t\tresult += text[i];\n\t\t}\n\t}\n\treturn result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp31fzlckf: /tmp/tmp31fzlckf.cpp:36: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (char c : text) {\n        if (c == ' ') {\n           \
    \ count++;\n        } else {\n            count = 0;\n        }\n        if (count\
    \ == 1) {\n            result += '_';\n        } else if (count == 2) {\n    \
    \        result += '-';\n        } else if (count > 2) {\n            continue;\n\
    \        } else {\n            result += c;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpitom_0po: /tmp/tmpitom_0po.cpp:35: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 2) {\n  \
    \              result += '-';\n                count = 0;\n            }\n   \
    \     } else {\n            if (count == 1) {\n                result += '_';\n\
    \            }\n            count = 0;\n            result += text[i];\n     \
    \   }\n    }\n    if (count == 1) {\n        result += '_';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpubq4nxtx: /tmp/tmpubq4nxtx.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ i = 0;\n    while(i < text.size()) {\n        if(text[i] == ' ') {\n       \
    \     result += '_';\n            i++;\n            while(text[i] == ' ') {\n\
    \                result += '-';\n                i++;\n            }\n       \
    \ } else {\n            result += text[i];\n            i++;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpqnz0hgxp: /tmp/tmpqnz0hgxp.cpp:32: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 2) {\n  \
    \              result += '-';\n                count = 0;\n            }\n   \
    \     } else {\n            count = 0;\n            result += text[i];\n     \
    \   }\n    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpm56nh_us: /tmp/tmpm56nh_us.cpp:30: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 2) {\n  \
    \              result += '-';\n                count = 0;\n            }\n   \
    \     } else {\n            if (count == 1) {\n                result += '_';\n\
    \            }\n            count = 0;\n            result += text[i];\n     \
    \   }\n    }\n    if (count == 1) {\n        result += '_';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpubq4nxtx: /tmp/tmpubq4nxtx.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count > 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpa9hm6o4h: /tmp/tmpa9hm6o4h.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count > 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpa9hm6o4h: /tmp/tmpa9hm6o4h.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    int i = 0;\n    int j = 0;\n\
    \    int count = 0;\n    while(text[i] != '\\0') {\n        if(text[i] == ' ')\
    \ {\n            count++;\n            if(count > 2) {\n                text[j]\
    \ = '-';\n                j++;\n                count = 0;\n            }\n  \
    \      } else {\n            if(count == 1) {\n                text[j] = '_';\n\
    \                j++;\n                count = 0;\n            }\n           \
    \ text[j] = text[i];\n            j++;\n        }\n        i++;\n    }\n    text[j]\
    \ = '\\0';\n    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpikcjc48n: /tmp/tmpikcjc48n.cpp:39: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count > 2) {\n            result += '-';\n        } else\
    \ if (text[i] == ' ') {\n            result += '_';\n        } else {\n      \
    \      result += text[i];\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpu6tr2cv3: /tmp/tmpu6tr2cv3.cpp:34: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 2) {\n  \
    \              result += '-';\n                count = 0;\n            }\n   \
    \     } else {\n            count = 0;\n            result += text[i];\n     \
    \   }\n    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpm56nh_us: /tmp/tmpm56nh_us.cpp:30: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            result += text[i];\n            count = 0;\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpnhx3ixmz: /tmp/tmpnhx3ixmz.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    for\
    \ (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ') {\n       \
    \     if (i == 0) {\n                result += '_';\n            } else if (text[i\
    \ - 1] == ' ') {\n                result += '-';\n            } else {\n     \
    \           result += '_';\n            }\n        } else {\n            result\
    \ += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp7_lp2z6a: /tmp/tmp7_lp2z6a.cpp:31: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    bool\
    \ space = false;\n    for (auto c : text) {\n        if (c == ' ') {\n       \
    \     if (space) {\n                result += '-';\n            } else {\n   \
    \             result += '_';\n                space = true;\n            }\n \
    \       } else {\n            result += c;\n            space = false;\n     \
    \   }\n    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp4nu4_1rg: /tmp/tmp4nu4_1rg.cpp:32: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 2) {\n  \
    \              result += '-';\n                count = 0;\n            }\n   \
    \     } else {\n            if (count == 1) {\n                result += '_';\n\
    \            }\n            count = 0;\n            result += text[i];\n     \
    \   }\n    }\n    if (count == 1) {\n        result += '_';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpubq4nxtx: /tmp/tmpubq4nxtx.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 2) {\n  \
    \              result += '-';\n                count = 0;\n            }\n   \
    \     } else {\n            if (count == 1) {\n                result += '_';\n\
    \            }\n            count = 0;\n            result += text[i];\n     \
    \   }\n    }\n    if (count == 1) {\n        result += '_';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpubq4nxtx: /tmp/tmpubq4nxtx.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            if (count == 0) {\n                result +=\
    \ '_';\n                count++;\n            } else if (count == 1) {\n     \
    \           result += '-';\n                count++;\n            }\n        }\
    \ else {\n            result += text[i];\n            count = 0;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpylnec0qy: /tmp/tmpylnec0qy.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count > 2) {\n            result += '-';\n        } else\
    \ if (text[i] == ' ') {\n            result += '_';\n        } else {\n      \
    \      result += text[i];\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpu6tr2cv3: /tmp/tmpu6tr2cv3.cpp:34: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    // write your code here\n  \
    \  std::string result;\n    int count = 0;\n    for(int i = 0; i < text.size();\
    \ i++) {\n        if(text[i] == ' ') {\n            count++;\n        } else {\n\
    \            count = 0;\n        }\n        if(count == 1) {\n            result\
    \ += '_';\n        } else if(count > 1) {\n            result += '-';\n      \
    \  } else {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpe_gbw9y9: /tmp/tmpe_gbw9y9.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    bool\
    \ flag = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            if (flag) {\n                result += '-';\n       \
    \     } else {\n                result += '_';\n                flag = true;\n\
    \            }\n        } else {\n            result += text[i];\n           \
    \ flag = false;\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp3wy38vaf: /tmp/tmp3wy38vaf.cpp:32: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string res = \"\";\n  \
    \  int count = 0;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i]\
    \ == ' ') {\n            count++;\n            if(count == 1) {\n            \
    \    res += '_';\n            }\n            else if(count == 2) {\n         \
    \       res += '-';\n            }\n        }\n        else {\n            count\
    \ = 0;\n            res += text[i];\n        }\n    }\n    return res;\n}\nint\
    \ main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmppmfm341x: /tmp/tmppmfm341x.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    for\
    \ (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ') {\n       \
    \     if (i == 0) {\n                result += '_';\n            } else if (text[i\
    \ - 1] == ' ') {\n                result += '-';\n            } else {\n     \
    \           result += '_';\n            }\n        } else {\n            result\
    \ += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp7_lp2z6a: /tmp/tmp7_lp2z6a.cpp:31: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += \"_\";\n            }\n            else if (count ==\
    \ 2) {\n                result += \"-\";\n            }\n        }\n        else\
    \ {\n            count = 0;\n            result += text[i];\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpwq1vmk50: /tmp/tmpwq1vmk50.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 2) {\n  \
    \              result += '-';\n                count = 0;\n            }\n   \
    \     } else {\n            if (count == 1) {\n                result += '_';\n\
    \            }\n            count = 0;\n            result += text[i];\n     \
    \   }\n    }\n    if (count == 1) {\n        result += '_';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpubq4nxtx: /tmp/tmpubq4nxtx.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    for\
    \ (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ') {\n       \
    \     if (i == 0) {\n                result += '_';\n            } else if (text[i\
    \ - 1] == ' ') {\n                result += '-';\n            } else {\n     \
    \           result += '_';\n            }\n        } else {\n            result\
    \ += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp7_lp2z6a: /tmp/tmp7_lp2z6a.cpp:31: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count > 2) {\n   \
    \             result += '-';\n                count = 0;\n            } else {\n\
    \                result += '_';\n            }\n        } else {\n           \
    \ result += text[i];\n            count = 0;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpq9vh39kl: /tmp/tmpq9vh39kl.cpp:34: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 2) {\n  \
    \              result += '-';\n                count = 0;\n            }\n   \
    \     } else {\n            count = 0;\n            result += text[i];\n     \
    \   }\n    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpm56nh_us: /tmp/tmpm56nh_us.cpp:30: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 2) {\n  \
    \              result += '-';\n                count = 0;\n            }\n   \
    \     } else {\n            count = 0;\n            result += text[i];\n     \
    \   }\n    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpm56nh_us: /tmp/tmpm56nh_us.cpp:30: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count > 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpa9hm6o4h: /tmp/tmpa9hm6o4h.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 2) {\n  \
    \              result += '-';\n                count = 0;\n            }\n   \
    \     } else {\n            if (count == 1) {\n                result += '_';\n\
    \            }\n            count = 0;\n            result += text[i];\n     \
    \   }\n    }\n    if (count == 1) {\n        result += '_';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpubq4nxtx: /tmp/tmpubq4nxtx.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count > 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            result += text[i];\n            count = 0;\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp8idht9q7: /tmp/tmp8idht9q7.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count > 2) {\n   \
    \             result += '-';\n                count = 0;\n            } else {\n\
    \                result += '_';\n            }\n        } else {\n           \
    \ result += text[i];\n            count = 0;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpq9vh39kl: /tmp/tmpq9vh39kl.cpp:34: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 2) {\n  \
    \              result += '-';\n                count = 0;\n            }\n   \
    \     } else {\n            if (count == 1) {\n                result += '_';\n\
    \            }\n            count = 0;\n            result += text[i];\n     \
    \   }\n    }\n    if (count == 1) {\n        result += '_';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpubq4nxtx: /tmp/tmpubq4nxtx.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            result += text[i];\n            count = 0;\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpnhx3ixmz: /tmp/tmpnhx3ixmz.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    for\
    \ (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ') {\n       \
    \     if (i == 0) {\n                result += '_';\n            } else if (text[i\
    \ - 1] == ' ') {\n                result += '-';\n            } else {\n     \
    \           result += '_';\n            }\n        } else {\n            result\
    \ += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp7_lp2z6a: /tmp/tmp7_lp2z6a.cpp:31: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count > 2) {\n   \
    \             result += '-';\n                count = 0;\n            } else {\n\
    \                result += '_';\n            }\n        } else {\n           \
    \ result += text[i];\n            count = 0;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpq9vh39kl: /tmp/tmpq9vh39kl.cpp:34: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count > 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            result += text[i];\n            count = 0;\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp8idht9q7: /tmp/tmp8idht9q7.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 2) {\n  \
    \              result += '-';\n                count = 0;\n            }\n   \
    \     } else {\n            count = 0;\n            result += text[i];\n     \
    \   }\n    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpm56nh_us: /tmp/tmpm56nh_us.cpp:30: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    for\
    \ (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ') {\n       \
    \     if (result.size() == 0 || result[result.size() - 1] == ' ') {\n        \
    \        result += '-';\n            } else {\n                result += '_';\n\
    \            }\n        } else {\n            result += text[i];\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpfu1lh2wv: /tmp/tmpfu1lh2wv.cpp:30: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count > 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpa9hm6o4h: /tmp/tmpa9hm6o4h.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    for\
    \ (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ') {\n       \
    \     if (i == 0) {\n                result += '_';\n            } else if (text[i\
    \ - 1] == ' ') {\n                result += '-';\n            } else {\n     \
    \           result += '_';\n            }\n        } else {\n            result\
    \ += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp7_lp2z6a: /tmp/tmp7_lp2z6a.cpp:31: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            result += text[i];\n            count = 0;\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpnhx3ixmz: /tmp/tmpnhx3ixmz.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ') {\n\
    \            if (result.size() == 0) {\n                result += '_';\n     \
    \       } else if (result[result.size() - 1] == '_') {\n                result\
    \ += '-';\n            } else {\n                result += '_';\n            }\n\
    \        } else {\n            result += text[i];\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp5aebmz4k: /tmp/tmp5aebmz4k.cpp:31: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    for\
    \ (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ') {\n       \
    \     if (i == 0) {\n                result += '_';\n            } else if (text[i\
    \ - 1] == ' ') {\n                result += '-';\n            } else {\n     \
    \           result += '_';\n            }\n        } else {\n            result\
    \ += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp7_lp2z6a: /tmp/tmp7_lp2z6a.cpp:31: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 2) {\n  \
    \              result += '-';\n                count = 0;\n            }\n   \
    \     } else {\n            if (count == 1) {\n                result += '_';\n\
    \            }\n            count = 0;\n            result += text[i];\n     \
    \   }\n    }\n    if (count == 1) {\n        result += '_';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpubq4nxtx: /tmp/tmpubq4nxtx.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    for\
    \ (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ') {\n       \
    \     if (i == 0) {\n                result += '_';\n            } else if (text[i\
    \ - 1] == ' ') {\n                result += '-';\n            } else {\n     \
    \           result += '_';\n            }\n        } else {\n            result\
    \ += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp7_lp2z6a: /tmp/tmp7_lp2z6a.cpp:31: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ space_count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            space_count++;\n        } else {\n            space_count\
    \ = 0;\n        }\n        if (space_count == 1) {\n            result += '_';\n\
    \        } else if (space_count > 2) {\n            result += '-';\n        }\
    \ else if (space_count == 0) {\n            result += text[i];\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpxwhhy38f: /tmp/tmpxwhhy38f.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 2) {\n  \
    \              result += '-';\n                count = 0;\n            }\n   \
    \     } else {\n            if (count == 1) {\n                result += '_';\n\
    \            }\n            count = 0;\n            result += text[i];\n     \
    \   }\n    }\n    if (count == 1) {\n        result += '_';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpubq4nxtx: /tmp/tmpubq4nxtx.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            result += text[i];\n            count = 0;\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpnhx3ixmz: /tmp/tmpnhx3ixmz.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count > 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpa9hm6o4h: /tmp/tmpa9hm6o4h.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    int count = 0;\n    for (int\
    \ i = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n          \
    \  count++;\n        }\n        else {\n            count = 0;\n        }\n  \
    \      if (count == 2) {\n            text[i] = '-';\n        }\n        else\
    \ if (count > 2) {\n            text[i] = '-';\n        }\n        else {\n  \
    \          text[i] = text[i];\n        }\n    }\n    for (int i = 0; i < text.length();\
    \ i++) {\n        if (text[i] == ' ') {\n            text[i] = '_';\n        }\n\
    \    }\n    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp7pt68354: /tmp/tmp7pt68354.cpp:40: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            result += text[i];\n            count = 0;\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpnhx3ixmz: /tmp/tmpnhx3ixmz.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 2) {\n  \
    \              result += '-';\n                count = 0;\n            }\n   \
    \     } else {\n            if (count == 1) {\n                result += '_';\n\
    \            }\n            count = 0;\n            result += text[i];\n     \
    \   }\n    }\n    if (count == 1) {\n        result += '_';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpubq4nxtx: /tmp/tmpubq4nxtx.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count > 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            result += text[i];\n            count = 0;\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp8idht9q7: /tmp/tmp8idht9q7.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += \"_\";\n            }\n            else if (count ==\
    \ 2) {\n                result += \"-\";\n            }\n        }\n        else\
    \ {\n            count = 0;\n            result += text[i];\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpwq1vmk50: /tmp/tmpwq1vmk50.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 2) {\n  \
    \              result += '-';\n                count = 0;\n            }\n   \
    \     } else {\n            if (count == 1) {\n                result += '_';\n\
    \            }\n            count = 0;\n            result += text[i];\n     \
    \   }\n    }\n    if (count == 1) {\n        result += '_';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpubq4nxtx: /tmp/tmpubq4nxtx.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count > 2) {\n   \
    \             result += '-';\n                count = 0;\n            } else {\n\
    \                result += '_';\n            }\n        } else {\n           \
    \ result += text[i];\n            count = 0;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpq9vh39kl: /tmp/tmpq9vh39kl.cpp:34: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += \"_\";\n            }\n            else if (count ==\
    \ 2) {\n                result += \"-\";\n            }\n        }\n        else\
    \ {\n            count = 0;\n            result += text[i];\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpwq1vmk50: /tmp/tmpwq1vmk50.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    int count = 0;\n    for (int\
    \ i = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n          \
    \  count++;\n        }\n        else {\n            count = 0;\n        }\n  \
    \      if (count == 2) {\n            text[i] = '-';\n        }\n        else\
    \ if (count > 2) {\n            text[i] = '-';\n        }\n        else {\n  \
    \          text[i] = '_';\n        }\n    }\n    return text;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp7voi8pid: /tmp/tmp7voi8pid.cpp:33: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            result += text[i];\n            count = 0;\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpnhx3ixmz: /tmp/tmpnhx3ixmz.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            result += text[i];\n            count = 0;\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpnhx3ixmz: /tmp/tmpnhx3ixmz.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    int count = 0;\n    for (int\
    \ i = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n          \
    \  count++;\n        }\n        else {\n            count = 0;\n        }\n  \
    \      if (count == 2) {\n            text[i] = '-';\n        }\n        else\
    \ if (count > 2) {\n            text[i] = '-';\n        }\n        else if (count\
    \ == 1) {\n            text[i] = '_';\n        }\n    }\n    return text;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpibb3slf4: /tmp/tmpibb3slf4.cpp:35: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 2) {\n  \
    \              result += \"-\";\n                count = 0;\n            }\n \
    \       } else {\n            if (count == 1) {\n                result += \"\
    _\";\n            }\n            count = 0;\n            result += text[i];\n\
    \        }\n    }\n    if (count == 1) {\n        result += \"_\";\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpkdl3fhsj: /tmp/tmpkdl3fhsj.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count > 2) {\n   \
    \             result += '-';\n                count = 0;\n            } else {\n\
    \                result += '_';\n            }\n        } else {\n           \
    \ result += text[i];\n            count = 0;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpq9vh39kl: /tmp/tmpq9vh39kl.cpp:34: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_fu0oh8g: /tmp/tmp_fu0oh8g.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count > 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpa9hm6o4h: /tmp/tmpa9hm6o4h.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 1) {\n  \
    \              result += '_';\n            }\n            else if (count == 2)\
    \ {\n                result += '-';\n            }\n        }\n        else {\n\
    \            result += text[i];\n            count = 0;\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpnhx3ixmz: /tmp/tmpnhx3ixmz.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    int count = 0;\n    for (int\
    \ i = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n          \
    \  count++;\n        }\n        else {\n            count = 0;\n        }\n  \
    \      if (count > 2) {\n            text[i] = '-';\n        }\n        else if\
    \ (count == 1) {\n            text[i] = '_';\n        }\n    }\n    return text;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpmibdmbvk: /tmp/tmpmibdmbvk.cpp:32: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    for\
    \ (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ') {\n       \
    \     if (i == 0) {\n                result += '_';\n            } else if (text[i\
    \ - 1] == ' ') {\n                result += '-';\n            } else {\n     \
    \           result += '_';\n            }\n        } else {\n            result\
    \ += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp7_lp2z6a: /tmp/tmp7_lp2z6a.cpp:31: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            if (count ==\
    \ 1) {\n                result += '_';\n            } else if (count > 1) {\n\
    \                result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyhokoaf1: /tmp/tmpyhokoaf1.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 1) {\n            result += '_';\n        } else\
    \ if (count > 2) {\n            result += '-';\n        } else {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz0presjc: /tmp/tmpz0presjc.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126820

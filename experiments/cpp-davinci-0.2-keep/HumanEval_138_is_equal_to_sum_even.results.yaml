name: HumanEval_138_is_equal_to_sum_even
language: cpp
results:
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpf7_33zbe: /tmp/tmpf7_33zbe.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2==1)\n        return false;\n    if(n==0)\n        return true;\n \
    \   return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpz5acubyp: /tmp/tmpz5acubyp.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpv9refl5w: /tmp/tmpv9refl5w.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpc6zp4qgz: /tmp/tmpc6zp4qgz.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp4m8u59fh: /tmp/tmp4m8u59fh.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmp7ckn9uh1: /tmp/tmp7ckn9uh1.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp0jsyve4c: /tmp/tmp0jsyve4c.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmprju3bw7l: /tmp/tmprju3bw7l.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpfi0jlfcg: /tmp/tmpfi0jlfcg.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n % 2 == 1)\n        return\
    \ false;\n    if(n % 4 == 0)\n        return true;\n    return false;\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpkl941_kg: /tmp/tmpkl941_kg.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpu6aeltw_: /tmp/tmpu6aeltw_.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use printf()\n    // Example:\
    \ printf(\"%s\", \"Hello world!\");\n    if(n%2!=0)\n        return false;\n \
    \   if(n%4==0)\n        return true;\n    return false;\n}\nint main() {\n   \
    \ auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpb_8sw5ul: /tmp/tmpb_8sw5ul.cpp:20: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp5n6id7bp: /tmp/tmp5n6id7bp.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    else\n        return true;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "tmp9_nnueab: /tmp/tmp9_nnueab.cpp:16: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    int count = 0;\n    for (int\
    \ i = 2; i <= n; i += 2) {\n        if (n % i == 0) {\n            count++;\n\
    \        }\n    }\n    return count == 4;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "tmpbh03tsh9: /tmp/tmpbh03tsh9.cpp:21: int main(): Assertion `candidate((8))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp2yuv5vyv: /tmp/tmp2yuv5vyv.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpz37hgnt4: /tmp/tmpz37hgnt4.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmprwcwy8h0: /tmp/tmprwcwy8h0.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpthhsdsoy: /tmp/tmpthhsdsoy.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmppt48lnam: /tmp/tmppt48lnam.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n \
    \   return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpwkewpxla: /tmp/tmpwkewpxla.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpbnr6uyc6: /tmp/tmpbnr6uyc6.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2 != 0)\n        return\
    \ false;\n    if(n == 0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpbe6r_eci: /tmp/tmpbe6r_eci.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpa6jgg680: /tmp/tmpa6jgg680.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use printf()\n    // Example:\
    \ printf(\"%s\", \"Hello world!\");\n    if(n%2!=0)\n        return false;\n \
    \   if(n%4==0)\n        return true;\n    return false;\n}\nint main() {\n   \
    \ auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpheannqr1: /tmp/tmpheannqr1.cpp:20: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n==4)\n        return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmppovk5x7a: /tmp/tmppovk5x7a.cpp:18: int main(): Assertion `candidate((6))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2==1) return false;\n    if(n%4==0) return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmppwtjk6j1: /tmp/tmppwtjk6j1.cpp:16: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    else\n        return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpl485_bpv: /tmp/tmpl485_bpv.cpp:19: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpmjuipnqh: /tmp/tmpmjuipnqh.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2 != 0) return false;\n\
    \    if(n%4 == 0) return true;\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "tmp7aotqzoo: /tmp/tmp7aotqzoo.cpp:15: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp1ryy80rz: /tmp/tmp1ryy80rz.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    int count = 0;\n    for (int\
    \ i = 2; i <= n; i += 2) {\n        if (n % i == 0) {\n            count++;\n\
    \        }\n    }\n    return count == 4;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "tmp825g3bby: /tmp/tmp825g3bby.cpp:21: int main(): Assertion `candidate((8))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n \
    \   if(n==2)\n        return false;\n    return is_equal_to_sum_even(n-2);\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmplaudnicy: /tmp/tmplaudnicy.cpp:22: int main(): Assertion `candidate((8))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp4v0rlgsi: /tmp/tmp4v0rlgsi.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1) return false;\n\
    \    int count=0;\n    for(int i=2;i<=n;i+=2){\n        if(n%i==0) count++;\n\
    \        if(count==4) return true;\n    }\n    return false;\n}\nint main() {\n\
    \    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp7khoav8u: /tmp/tmp7khoav8u.cpp:21: int main(): Assertion `candidate((8))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2==1)\n    return false;\n    if(n%4==0)\n    return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpsgm9omhg: /tmp/tmpsgm9omhg.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp31x0l07v: /tmp/tmp31x0l07v.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n \
    \   return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmp_02ftw9k: /tmp/tmp_02ftw9k.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpujki4l_s: /tmp/tmpujki4l_s.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp2ecq9tlk: /tmp/tmp2ecq9tlk.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n % 2 == 1)\n        return\
    \ false;\n    if(n == 0)\n        return true;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp5yej5_5r: /tmp/tmp5yej5_5r.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n\tif (n % 2 != 0) {\n\t\treturn\
    \ false;\n\t}\n\tif (n % 4 == 0) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpt_rp93nd: /tmp/tmpt_rp93nd.cpp:19: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmptuil0wcb: /tmp/tmptuil0wcb.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use print\n    // Example:\
    \ print \"Hello world!\"\n    if(n%2!=0)\n        return false;\n    if(n==0)\n\
    \        return true;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n\
    \    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmptjzfd389: /tmp/tmptjzfd389.cpp:20: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpknii_vii: /tmp/tmpknii_vii.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4!=0)\n        return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpq6psfw0s: /tmp/tmpq6psfw0s.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use printf()\n    // Example:\
    \ printf(\"%s\", \"Hello world!\");\n    int count = 0;\n    for(int i = 2; i\
    \ <= n; i+=2) {\n        if(n % i == 0) {\n            count++;\n        }\n \
    \   }\n    if(count == 4) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpmof41fgf: /tmp/tmpmof41fgf.cpp:27: int main(): Assertion `candidate((8))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpnl65g4ow: /tmp/tmpnl65g4ow.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n % 2 != 0) return false;\n\
    \    if(n == 0) return true;\n    return is_equal_to_sum_even(n - 2);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp8ca1hg8d: /tmp/tmp8ca1hg8d.cpp:15: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpvhbwfom0: /tmp/tmpvhbwfom0.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpduvwqdo_: /tmp/tmpduvwqdo_.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    if(n==2)\n        return false;\n\
    \    return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate =\
    \ is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "tmpyi03m_ix: /tmp/tmpyi03m_ix.cpp:21: int main(): Assertion `candidate((8))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2==1)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmp64_1v_t8: /tmp/tmp64_1v_t8.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1) return false;\n\
    \    if(n%4==0) return true;\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "tmp3s5g4hlb: /tmp/tmp3s5g4hlb.cpp:15: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpw5p3ur_m: /tmp/tmpw5p3ur_m.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpxx6d26vz: /tmp/tmpxx6d26vz.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpxmxsc38y: /tmp/tmpxmxsc38y.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2 != 0)\n        return false;\n    if(n%4 == 0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpqbr917c5: /tmp/tmpqbr917c5.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp9h3bc29m: /tmp/tmp9h3bc29m.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmp01dv2c6r: /tmp/tmp01dv2c6r.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n \
    \   if(n<0)\n        return false;\n    return is_equal_to_sum_even(n-2);\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp73i28el5: /tmp/tmp73i28el5.cpp:20: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmprebxmmrh: /tmp/tmprebxmmrh.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpeca58vx3: /tmp/tmpeca58vx3.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    int count = 0;\n    for (int\
    \ i = 2; i <= n; i += 2) {\n        if (n % i == 0) {\n            count++;\n\
    \        }\n    }\n    return count == 4;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "tmplgapeyys: /tmp/tmplgapeyys.cpp:21: int main(): Assertion `candidate((8))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpajmy5ync: /tmp/tmpajmy5ync.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n \
    \   if(n==2)\n        return false;\n    return is_equal_to_sum_even(n-2);\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp7mtz6nx_: /tmp/tmp7mtz6nx_.cpp:22: int main(): Assertion `candidate((8))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmp1snlcjg2: /tmp/tmp1snlcjg2.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    long sum = 0;\n    for(long i = 2; i <= n; i += 2) {\n        sum += i;\n\
    \        if(sum == n) {\n            return true;\n        }\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpdsya0buf: /tmp/tmpdsya0buf.cpp:22: int main(): Assertion `candidate((6))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    int count = 0;\n    for(int i = 2; i <= n; i += 2) {\n        if(n % i ==\
    \ 0) {\n            count++;\n        }\n    }\n    if(count == 4) {\n       \
    \ return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "tmpjo599jhf: /tmp/tmpjo599jhf.cpp:25: int main(): Assertion `candidate((8))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp7vtvx5od: /tmp/tmp7vtvx5od.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    int count=0;\n    for(int i=2;i<=n;i+=2)\n    {\n        if(n%i==0)\n\
    \            count++;\n    }\n    if(count==4)\n        return true;\n    else\n\
    \        return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpw09kbcy6: /tmp/tmpw09kbcy6.cpp:26: int main(): Assertion `candidate((8))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpbi7yuiyn: /tmp/tmpbi7yuiyn.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n \
    \   return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmp8h_px18u: /tmp/tmp8h_px18u.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2==1)\n        return false;\n    if(n==0)\n        return true;\n \
    \   return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpueczozz9: /tmp/tmpueczozz9.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    else\n        return true;\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmphkpt11j1: /tmp/tmphkpt11j1.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0) return false;\n\
    \    if(n%4!=0) return false;\n    return true;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "tmp4eog0de8: /tmp/tmp4eog0de8.cpp:15: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpncmtxf9w: /tmp/tmpncmtxf9w.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2==1)\n    return false;\n    else\n    {\n        int count=0;\n  \
    \      for(int i=2;i<=n;i+=2)\n        {\n            if(n%i==0)\n           \
    \ count++;\n        }\n        if(count==4)\n        return true;\n        else\n\
    \        return false;\n    }\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmp73ie2m5r: /tmp/tmp73ie2m5r.cpp:30: int main(): Assertion `candidate((8))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp9h6k1crg: /tmp/tmp9h6k1crg.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use printf()\n    // Example:\
    \ printf(\"%s\", \"Hello world!\");\n    if(n%2!=0)\n        return false;\n \
    \   if(n%4==0)\n        return true;\n    return false;\n}\nint main() {\n   \
    \ auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpd5nm_00r: /tmp/tmpd5nm_00r.cpp:20: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpy9u0regp: /tmp/tmpy9u0regp.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2 != 0)\n        return\
    \ false;\n    if(n == 0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpscq64r9n: /tmp/tmpscq64r9n.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n % 2 != 0)\n        return\
    \ false;\n    if(n % 4 == 0)\n        return true;\n    return false;\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpuwpulxi6: /tmp/tmpuwpulxi6.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp43w0mtmp: /tmp/tmp43w0mtmp.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpv7txoxio: /tmp/tmpv7txoxio.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpgtm8_69p: /tmp/tmpgtm8_69p.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp37lfskh_: /tmp/tmp37lfskh_.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmprpg53vji: /tmp/tmprpg53vji.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpsno_n25p: /tmp/tmpsno_n25p.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1) return false;\n\
    \    if(n%4==0) return true;\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "tmpjtjmqv5q: /tmp/tmpjtjmqv5q.cpp:15: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2==1)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmprzm3e_bk: /tmp/tmprzm3e_bk.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2 != 0)\n        return false;\n    if(n%4 == 0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmp0l50jm_h: /tmp/tmp0l50jm_h.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpj_shdibm: /tmp/tmpj_shdibm.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2 != 0)\n        return\
    \ false;\n    if(n%4 == 0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpc6_j9oiu: /tmp/tmpc6_j9oiu.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpo7epg6hk: /tmp/tmpo7epg6hk.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n % 2 != 0) return false;\n\
    \    if(n == 0) return true;\n    return is_equal_to_sum_even(n - 2);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp2m88ru5z: /tmp/tmp2m88ru5z.cpp:15: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpbavt0d37: /tmp/tmpbavt0d37.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmprccj4e2s: /tmp/tmprccj4e2s.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    if(n==2)\n        return false;\n\
    \    return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate =\
    \ is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "tmpml3g0wyc: /tmp/tmpml3g0wyc.cpp:21: int main(): Assertion `candidate((8))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpmt8ybyc4: /tmp/tmpmt8ybyc4.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpb5ugj_aa: /tmp/tmpb5ugj_aa.cpp:19: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpea14fa_k: /tmp/tmpea14fa_k.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    else if(n%2==0)\n        return true;\n}\nint main() {\n    auto\
    \ candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpvgjb74v_: /tmp/tmpvgjb74v_.cpp:16: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2 != 0)\n        return\
    \ false;\n    if(n%4 == 0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp9zzqt937: /tmp/tmp9zzqt937.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpefdv86_2: /tmp/tmpefdv86_2.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    int count = 0;\n    for(int i = 2; i <= n; i += 2) {\n        if(n % i ==\
    \ 0) {\n            count++;\n        }\n    }\n    if(count == 4) {\n       \
    \ return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "tmp5qkowjpy: /tmp/tmp5qkowjpy.cpp:25: int main(): Assertion `candidate((8))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n \
    \   if(n==2)\n        return false;\n    return is_equal_to_sum_even(n-2);\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp_n0daw3a: /tmp/tmp_n0daw3a.cpp:22: int main(): Assertion `candidate((8))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp1krjof0a: /tmp/tmp1krjof0a.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpgcc_giry: /tmp/tmpgcc_giry.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp28nisx5c: /tmp/tmp28nisx5c.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n<8)\n        return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2 != 0)\n        return false;\n    if(n%4 == 0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpupw2brzc: /tmp/tmpupw2brzc.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpzspcdzff: /tmp/tmpzspcdzff.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n    return false;\n    if(n%4==0)\n    return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpmr2g3adn: /tmp/tmpmr2g3adn.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpyjnblek7: /tmp/tmpyjnblek7.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2==1)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmp6c5x93uv: /tmp/tmp6c5x93uv.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    int count = 0;\n    for(int i = 2; i <= n; i+=2) {\n        if(n % i == 0)\
    \ {\n            count++;\n        }\n    }\n    if(count == 4) {\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpm587gnu4: /tmp/tmpm587gnu4.cpp:25: int main(): Assertion `candidate((8))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpnce4cizo: /tmp/tmpnce4cizo.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpuak_da6e: /tmp/tmpuak_da6e.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpdhcwshyi: /tmp/tmpdhcwshyi.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpqjyc8lyz: /tmp/tmpqjyc8lyz.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmp5hc2m0n4: /tmp/tmp5hc2m0n4.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n \
    \   return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpywj858vg: /tmp/tmpywj858vg.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2 != 0)\n        return false;\n    if(n%4 == 0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpgdx959o2: /tmp/tmpgdx959o2.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpu957hp3x: /tmp/tmpu957hp3x.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpsauxjpvx: /tmp/tmpsauxjpvx.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpctjcaz2q: /tmp/tmpctjcaz2q.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpoduw6cwg: /tmp/tmpoduw6cwg.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmp9fm_mux3: /tmp/tmp9fm_mux3.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n\t// Write your code here\n\t\
    if (n % 2 != 0)\n\t\treturn false;\n\tif (n == 0)\n\t\treturn true;\n\tif (n ==\
    \ 2)\n\t\treturn false;\n\treturn is_equal_to_sum_even(n - 2);\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpibl6zxom: /tmp/tmpibl6zxom.cpp:22: int main(): Assertion `candidate((8))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2 != 0)\n        return\
    \ false;\n    if(n == 0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpy3b6zws0: /tmp/tmpy3b6zws0.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    else\n        return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpwi894t3g: /tmp/tmpwi894t3g.cpp:19: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpco2j71js: /tmp/tmpco2j71js.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    if(n%4==2)\n        return\
    \ false;\n    return true;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpz09ujdzv: /tmp/tmpz09ujdzv.cpp:19: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    if(n==4)\n        return false;\n\
    \    return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate =\
    \ is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "tmp73dnwx1z: /tmp/tmp73dnwx1z.cpp:21: int main(): Assertion `candidate((8))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n \
    \   if(n==2)\n        return false;\n    return is_equal_to_sum_even(n-2);\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpkaziqou5: /tmp/tmpkaziqou5.cpp:22: int main(): Assertion `candidate((8))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpsk6vsqdu: /tmp/tmpsk6vsqdu.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n \
    \   if(n==2)\n        return false;\n    return is_equal_to_sum_even(n-2);\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpu_mnopbv: /tmp/tmpu_mnopbv.cpp:22: int main(): Assertion `candidate((8))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4!=0)\n        return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp99bu1pbs: /tmp/tmp99bu1pbs.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp9zu4oxs8: /tmp/tmp9zu4oxs8.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpn1w7u330: /tmp/tmpn1w7u330.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp516sn9c9: /tmp/tmp516sn9c9.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2==1)\n        return false;\n    if(n==0)\n        return true;\n \
    \   if(n==2)\n        return false;\n    return is_equal_to_sum_even(n-2);\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmppijupyks: /tmp/tmppijupyks.cpp:22: int main(): Assertion `candidate((8))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2==1)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpwy1sbbsf: /tmp/tmpwy1sbbsf.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n    return false;\n    if(n%4==0)\n    return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp_e0nnvhw: /tmp/tmp_e0nnvhw.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    if(n<0)\n        return false;\n\
    \    return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate =\
    \ is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "tmp29ke7jdd: /tmp/tmp29ke7jdd.cpp:19: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2 == 1)\n        return\
    \ false;\n    if(n%4 == 0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpdv529xbb: /tmp/tmpdv529xbb.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp3aj6j3du: /tmp/tmp3aj6j3du.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmp4uty9qc1: /tmp/tmp4uty9qc1.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n \
    \   return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpiazjt5lp: /tmp/tmpiazjt5lp.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp4gxeyn8a: /tmp/tmp4gxeyn8a.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmplvnn3qpe: /tmp/tmplvnn3qpe.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1) return false;\n\
    \    if(n%4==0) return true;\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "tmpthvuvsk1: /tmp/tmpthvuvsk1.cpp:15: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n    return false;\n    if(n%4==0)\n    return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp56qyebrz: /tmp/tmp56qyebrz.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n \
    \   return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmphhonx5yo: /tmp/tmphhonx5yo.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    int count = 0;\n    for(int i = 2; i <= n; i += 2) {\n        if(n % i ==\
    \ 0) {\n            count++;\n        }\n    }\n    if(count == 4) {\n       \
    \ return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "tmp03qskgzh: /tmp/tmp03qskgzh.cpp:25: int main(): Assertion `candidate((8))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp0_o_zout: /tmp/tmp0_o_zout.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use printf()\n    // Example:\
    \ printf(\"%s\", \"Hello world!\");\n    int i,j,k,l;\n    for(i=0;i<=n;i++)\n\
    \    {\n        for(j=0;j<=n;j++)\n        {\n            for(k=0;k<=n;k++)\n\
    \            {\n                for(l=0;l<=n;l++)\n                {\n       \
    \             if(i+j+k+l==n && i%2==0 && j%2==0 && k%2==0 && l%2==0)\n       \
    \             {\n                        return true;\n                    }\n\
    \                }\n            }\n        }\n    }\n    return false;\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpnwsfkj7_: /tmp/tmpnwsfkj7_.cpp:33: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpqj1suler: /tmp/tmpqj1suler.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n \
    \   if(n==2)\n        return false;\n    return is_equal_to_sum_even(n-2);\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpd___cler: /tmp/tmpd___cler.cpp:22: int main(): Assertion `candidate((8))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use print\n    // Example:\
    \ print \"Hello world!\"\n    if(n%2!=0) return false;\n    if(n%4!=0) return\
    \ false;\n    return true;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpovdsf7cm: /tmp/tmpovdsf7cm.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    else\n        return true;\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpj1h88lln: /tmp/tmpj1h88lln.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpilrwyxjt: /tmp/tmpilrwyxjt.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpmab2jq6h: /tmp/tmpmab2jq6h.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpznlfz6oq: /tmp/tmpznlfz6oq.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n    return false;\n    if(n%4==0)\n    return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpdkgs1va8: /tmp/tmpdkgs1va8.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmprjdsp0gv: /tmp/tmprjdsp0gv.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n    return false;\n    if(n%4==0)\n    return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpo1iyyw7d: /tmp/tmpo1iyyw7d.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2==1)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpyp1uv_ao: /tmp/tmpyp1uv_ao.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n    return false;\n    else\n    {\n        if(n==0)\n      \
    \  return true;\n        else\n        {\n            return is_equal_to_sum_even(n-2);\n\
    \        }\n    }\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpt0gl6pou: /tmp/tmpt0gl6pou.cpp:24: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    else\n        return true;\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpn4d365y9: /tmp/tmpn4d365y9.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpud52_8jo: /tmp/tmpud52_8jo.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp2s8x63sh: /tmp/tmp2s8x63sh.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpijcn1ukt: /tmp/tmpijcn1ukt.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpkl3acikl: /tmp/tmpkl3acikl.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n % 2 == 1)\n        return\
    \ false;\n    if(n % 4 == 0)\n        return true;\n    return false;\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpowtti60f: /tmp/tmpowtti60f.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2 != 0) return false;\n\
    \    if(n == 0) return true;\n    return is_equal_to_sum_even(n-2);\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpm0tgl5jl: /tmp/tmpm0tgl5jl.cpp:15: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    else\n        return true;\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp964z95b_: /tmp/tmp964z95b_.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n  // Write your code here\n  //\
    \ To print results to the standard output you can use std::cout\n  // Example:\
    \ std::cout << \"Hello world!\";\n  int count = 0;\n  for(int i = 2; i <= n; i+=2)\n\
    \  {\n    if(n % i == 0)\n    {\n      count++;\n    }\n  }\n  if(count == 4)\n\
    \  {\n    return true;\n  }\n  else\n  {\n    return false;\n  }\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmprpsb8bdi: /tmp/tmprpsb8bdi.cpp:33: int main(): Assertion `candidate((8))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n \
    \   return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmp_z671ydd: /tmp/tmp_z671ydd.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use printf()\n    // Example:\
    \ printf(\"%s\", \"Hello world!\");\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp9qoqz0pz: /tmp/tmp9qoqz0pz.cpp:18: int main(): Assertion `candidate((8))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2==1)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmphlxu_9gt: /tmp/tmphlxu_9gt.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmps4nck403: /tmp/tmps4nck403.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2==1)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmp5ebzeq6i: /tmp/tmp5ebzeq6i.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpg9ot_67o: /tmp/tmpg9ot_67o.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use std::cout\n    //\
    \ Example: std::cout << \"Hello world!\";\n    int i,j,k,l;\n    for(i=0;i<=n;i+=2)\n\
    \    {\n        for(j=0;j<=n;j+=2)\n        {\n            for(k=0;k<=n;k+=2)\n\
    \            {\n                for(l=0;l<=n;l+=2)\n                {\n      \
    \              if(i+j+k+l==n)\n                    {\n                       \
    \ return true;\n                    }\n                }\n            }\n    \
    \    }\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpdumvmp21: /tmp/tmpdumvmp21.cpp:33: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2==1)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpsbpx5mg4: /tmp/tmpsbpx5mg4.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n \
    \   if(n%4!=0)\n        return false;\n    return true;\n}\nint main() {\n   \
    \ auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp0fuq5z3x: /tmp/tmp0fuq5z3x.cpp:20: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp7lmoa4z2: /tmp/tmp7lmoa4z2.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    int count = 0;\n    for (int\
    \ i = 2; i <= n; i += 2) {\n        if (n % i == 0) {\n            count++;\n\
    \        }\n    }\n    return count == 4;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "tmpsg76i2_l: /tmp/tmpsg76i2_l.cpp:21: int main(): Assertion `candidate((8))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2 != 0)\n        return\
    \ false;\n    if(n%4 == 0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp5_qx8ao6: /tmp/tmp5_qx8ao6.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    for(int i=2;i<=n/4;i+=2)\n\
    \    {\n        for(int j=2;j<=n/4;j+=2)\n        {\n            for(int k=2;k<=n/4;k+=2)\n\
    \            {\n                for(int l=2;l<=n/4;l+=2)\n                {\n\
    \                    if(i+j+k+l==n)\n                    {\n                 \
    \       return true;\n                    }\n                }\n            }\n\
    \        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpeyb9nc7g: /tmp/tmpeyb9nc7g.cpp:32: int main(): Assertion `candidate((10))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmp1n_qup64: /tmp/tmp1n_qup64.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2 != 0)\n        return\
    \ false;\n    if(n%4 == 0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpt53pnra4: /tmp/tmpt53pnra4.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1) return false;\n\
    \    if(n%4==0) return true;\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "tmp5njse5g_: /tmp/tmp5njse5g_.cpp:15: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpqkg8awhx: /tmp/tmpqkg8awhx.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2==1)\n        return false;\n    long sum=0;\n    for(int i=2;i<=n;i+=2)\n\
    \    {\n        sum+=i;\n        if(sum==n)\n            return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpo87c14fk: /tmp/tmpo87c14fk.cpp:24: int main(): Assertion `candidate((6))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n<8)\n        return false;\n\
    \    if(n%2!=0)\n        return false;\n    return true;\n}\nint main() {\n  \
    \  auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpggk2eylb: /tmp/tmpggk2eylb.cpp:17: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4!=0)\n        return false;\n\
    \    return true;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpobot58hy: /tmp/tmpobot58hy.cpp:18: int main(): Assertion `candidate((4))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception

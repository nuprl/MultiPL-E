language: cpp
name: HumanEval_138_is_equal_to_sum_even
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2==1)\n        return false;\n    if(n==0)\n        return true;\n \
    \   return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpcw15uxmq: /tmp/tmpcw15uxmq.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_hfw2umy: /tmp/tmp_hfw2umy.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpzxxfoolv: /tmp/tmpzxxfoolv.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_hfw2umy: /tmp/tmp_hfw2umy.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_hfw2umy: /tmp/tmp_hfw2umy.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n % 2 == 1)\n        return\
    \ false;\n    if(n % 4 == 0)\n        return true;\n    return false;\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp2v_ib6oi: /tmp/tmp2v_ib6oi.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_hfw2umy: /tmp/tmp_hfw2umy.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use printf()\n    // Example:\
    \ printf(\"%s\", \"Hello world!\");\n    if(n%2!=0)\n        return false;\n \
    \   if(n%4==0)\n        return true;\n    return false;\n}\nint main() {\n   \
    \ auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpzd74p0sf: /tmp/tmpzd74p0sf.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    else\n        return true;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp3jb70qbt: /tmp/tmp3jb70qbt.cpp:16: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    int count = 0;\n    for (int\
    \ i = 2; i <= n; i += 2) {\n        if (n % i == 0) {\n            count++;\n\
    \        }\n    }\n    return count == 4;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpcr7xifvy: /tmp/tmpcr7xifvy.cpp:21: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_hfw2umy: /tmp/tmp_hfw2umy.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_hfw2umy: /tmp/tmp_hfw2umy.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp23rq3ypo: /tmp/tmp23rq3ypo.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp5340n2dn: /tmp/tmp5340n2dn.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n \
    \   return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp751r9jqi: /tmp/tmp751r9jqi.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpzxxfoolv: /tmp/tmpzxxfoolv.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2 != 0)\n        return\
    \ false;\n    if(n == 0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmppyn0orq0: /tmp/tmppyn0orq0.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use printf()\n    // Example:\
    \ printf(\"%s\", \"Hello world!\");\n    if(n%2!=0)\n        return false;\n \
    \   if(n%4==0)\n        return true;\n    return false;\n}\nint main() {\n   \
    \ auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpzd74p0sf: /tmp/tmpzd74p0sf.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n==4)\n        return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp028bu7ba: /tmp/tmp028bu7ba.cpp:18: int main(): Assertion `candidate((6))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2==1) return false;\n    if(n%4==0) return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpl3tx6mlv: /tmp/tmpl3tx6mlv.cpp:16: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    else\n        return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp61y5spbp: /tmp/tmp61y5spbp.cpp:19: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_hfw2umy: /tmp/tmp_hfw2umy.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2 != 0) return false;\n\
    \    if(n%4 == 0) return true;\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp_18_0o0s: /tmp/tmp_18_0o0s.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    int count = 0;\n    for (int\
    \ i = 2; i <= n; i += 2) {\n        if (n % i == 0) {\n            count++;\n\
    \        }\n    }\n    return count == 4;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpcr7xifvy: /tmp/tmpcr7xifvy.cpp:21: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n \
    \   if(n==2)\n        return false;\n    return is_equal_to_sum_even(n-2);\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpw0tqqks2: /tmp/tmpw0tqqks2.cpp:22: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_hfw2umy: /tmp/tmp_hfw2umy.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1) return false;\n\
    \    int count=0;\n    for(int i=2;i<=n;i+=2){\n        if(n%i==0) count++;\n\
    \        if(count==4) return true;\n    }\n    return false;\n}\nint main() {\n\
    \    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpovlwdjk5: /tmp/tmpovlwdjk5.cpp:21: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2==1)\n    return false;\n    if(n%4==0)\n    return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp1ingjvhn: /tmp/tmp1ingjvhn.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n \
    \   return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp751r9jqi: /tmp/tmp751r9jqi.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp23rq3ypo: /tmp/tmp23rq3ypo.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n % 2 == 1)\n        return\
    \ false;\n    if(n == 0)\n        return true;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp31w50bk3: /tmp/tmp31w50bk3.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n\tif (n % 2 != 0) {\n\t\treturn\
    \ false;\n\t}\n\tif (n % 4 == 0) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_7qndbit: /tmp/tmp_7qndbit.cpp:19: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use print\n    // Example:\
    \ print \"Hello world!\"\n    if(n%2!=0)\n        return false;\n    if(n==0)\n\
    \        return true;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n\
    \    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpaehxpks9: /tmp/tmpaehxpks9.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4!=0)\n        return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp2_76y3zq: /tmp/tmp2_76y3zq.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use printf()\n    // Example:\
    \ printf(\"%s\", \"Hello world!\");\n    int count = 0;\n    for(int i = 2; i\
    \ <= n; i+=2) {\n        if(n % i == 0) {\n            count++;\n        }\n \
    \   }\n    if(count == 4) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpia4xesa4: /tmp/tmpia4xesa4.cpp:27: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n % 2 != 0) return false;\n\
    \    if(n == 0) return true;\n    return is_equal_to_sum_even(n - 2);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpt5ix3evp: /tmp/tmpt5ix3evp.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp23rq3ypo: /tmp/tmp23rq3ypo.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpzxxfoolv: /tmp/tmpzxxfoolv.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    if(n==2)\n        return false;\n\
    \    return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate =\
    \ is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp_wvwdtp0: /tmp/tmp_wvwdtp0.cpp:21: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2==1)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp3jr858jv: /tmp/tmp3jr858jv.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1) return false;\n\
    \    if(n%4==0) return true;\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp836lz5co: /tmp/tmp836lz5co.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpzxxfoolv: /tmp/tmpzxxfoolv.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpzxxfoolv: /tmp/tmpzxxfoolv.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2 != 0)\n        return false;\n    if(n%4 == 0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp_wry0lkp: /tmp/tmp_wry0lkp.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp5340n2dn: /tmp/tmp5340n2dn.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpzxxfoolv: /tmp/tmpzxxfoolv.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n \
    \   if(n<0)\n        return false;\n    return is_equal_to_sum_even(n-2);\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpw6zbiig_: /tmp/tmpw6zbiig_.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_hfw2umy: /tmp/tmp_hfw2umy.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpzxxfoolv: /tmp/tmpzxxfoolv.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    int count = 0;\n    for (int\
    \ i = 2; i <= n; i += 2) {\n        if (n % i == 0) {\n            count++;\n\
    \        }\n    }\n    return count == 4;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpcr7xifvy: /tmp/tmpcr7xifvy.cpp:21: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp23rq3ypo: /tmp/tmp23rq3ypo.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n \
    \   if(n==2)\n        return false;\n    return is_equal_to_sum_even(n-2);\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpw0tqqks2: /tmp/tmpw0tqqks2.cpp:22: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpzxxfoolv: /tmp/tmpzxxfoolv.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    long sum = 0;\n    for(long i = 2; i <= n; i += 2) {\n        sum += i;\n\
    \        if(sum == n) {\n            return true;\n        }\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp0gx7khio: /tmp/tmp0gx7khio.cpp:22: int main(): Assertion `candidate((6))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    int count = 0;\n    for(int i = 2; i <= n; i += 2) {\n        if(n % i ==\
    \ 0) {\n            count++;\n        }\n    }\n    if(count == 4) {\n       \
    \ return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpvww_iaz6: /tmp/tmpvww_iaz6.cpp:25: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    int count=0;\n    for(int i=2;i<=n;i+=2)\n    {\n        if(n%i==0)\n\
    \            count++;\n    }\n    if(count==4)\n        return true;\n    else\n\
    \        return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpa2t6c1n7: /tmp/tmpa2t6c1n7.cpp:26: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp23rq3ypo: /tmp/tmp23rq3ypo.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n \
    \   return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp751r9jqi: /tmp/tmp751r9jqi.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2==1)\n        return false;\n    if(n==0)\n        return true;\n \
    \   return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpcw15uxmq: /tmp/tmpcw15uxmq.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    else\n        return true;\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_m4dgadr: /tmp/tmp_m4dgadr.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0) return false;\n\
    \    if(n%4!=0) return false;\n    return true;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpe_faadw8: /tmp/tmpe_faadw8.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_hfw2umy: /tmp/tmp_hfw2umy.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2==1)\n    return false;\n    else\n    {\n        int count=0;\n  \
    \      for(int i=2;i<=n;i+=2)\n        {\n            if(n%i==0)\n           \
    \ count++;\n        }\n        if(count==4)\n        return true;\n        else\n\
    \        return false;\n    }\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp48swacd0: /tmp/tmp48swacd0.cpp:30: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_hfw2umy: /tmp/tmp_hfw2umy.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use printf()\n    // Example:\
    \ printf(\"%s\", \"Hello world!\");\n    if(n%2!=0)\n        return false;\n \
    \   if(n%4==0)\n        return true;\n    return false;\n}\nint main() {\n   \
    \ auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpzd74p0sf: /tmp/tmpzd74p0sf.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpzxxfoolv: /tmp/tmpzxxfoolv.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2 != 0)\n        return\
    \ false;\n    if(n == 0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmppyn0orq0: /tmp/tmppyn0orq0.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n % 2 != 0)\n        return\
    \ false;\n    if(n % 4 == 0)\n        return true;\n    return false;\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpw9fo5_lk: /tmp/tmpw9fo5_lk.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp23rq3ypo: /tmp/tmp23rq3ypo.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1) return false;\n\
    \    if(n%4==0) return true;\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp836lz5co: /tmp/tmp836lz5co.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2==1)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp3jr858jv: /tmp/tmp3jr858jv.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2 != 0)\n        return false;\n    if(n%4 == 0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp_wry0lkp: /tmp/tmp_wry0lkp.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2 != 0)\n        return\
    \ false;\n    if(n%4 == 0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp5a76_h3c: /tmp/tmp5a76_h3c.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_hfw2umy: /tmp/tmp_hfw2umy.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n % 2 != 0) return false;\n\
    \    if(n == 0) return true;\n    return is_equal_to_sum_even(n - 2);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpt5ix3evp: /tmp/tmpt5ix3evp.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpzxxfoolv: /tmp/tmpzxxfoolv.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_hfw2umy: /tmp/tmp_hfw2umy.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    if(n==2)\n        return false;\n\
    \    return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate =\
    \ is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp_wvwdtp0: /tmp/tmp_wvwdtp0.cpp:21: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_hfw2umy: /tmp/tmp_hfw2umy.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp_lx4azow: /tmp/tmp_lx4azow.cpp:19: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    else if(n%2==0)\n        return true;\n}\nint main() {\n    auto\
    \ candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpbzcj7xz5: /tmp/tmpbzcj7xz5.cpp:16: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2 != 0)\n        return\
    \ false;\n    if(n%4 == 0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp5a76_h3c: /tmp/tmp5a76_h3c.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpzxxfoolv: /tmp/tmpzxxfoolv.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    int count = 0;\n    for(int i = 2; i <= n; i += 2) {\n        if(n % i ==\
    \ 0) {\n            count++;\n        }\n    }\n    if(count == 4) {\n       \
    \ return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpvww_iaz6: /tmp/tmpvww_iaz6.cpp:25: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n \
    \   if(n==2)\n        return false;\n    return is_equal_to_sum_even(n-2);\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpw0tqqks2: /tmp/tmpw0tqqks2.cpp:22: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp23rq3ypo: /tmp/tmp23rq3ypo.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_hfw2umy: /tmp/tmp_hfw2umy.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_hfw2umy: /tmp/tmp_hfw2umy.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n<8)\n        return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2 != 0)\n        return false;\n    if(n%4 == 0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp_wry0lkp: /tmp/tmp_wry0lkp.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n    return false;\n    if(n%4==0)\n    return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp830_7w9u: /tmp/tmp830_7w9u.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpzxxfoolv: /tmp/tmpzxxfoolv.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2==1)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp3jr858jv: /tmp/tmp3jr858jv.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    int count = 0;\n    for(int i = 2; i <= n; i+=2) {\n        if(n % i == 0)\
    \ {\n            count++;\n        }\n    }\n    if(count == 4) {\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpsyzk4763: /tmp/tmpsyzk4763.cpp:25: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpzxxfoolv: /tmp/tmpzxxfoolv.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_hfw2umy: /tmp/tmp_hfw2umy.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_hfw2umy: /tmp/tmp_hfw2umy.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpzxxfoolv: /tmp/tmpzxxfoolv.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpzxxfoolv: /tmp/tmpzxxfoolv.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n \
    \   return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp751r9jqi: /tmp/tmp751r9jqi.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2 != 0)\n        return false;\n    if(n%4 == 0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp_wry0lkp: /tmp/tmp_wry0lkp.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp23rq3ypo: /tmp/tmp23rq3ypo.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpzxxfoolv: /tmp/tmpzxxfoolv.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpzxxfoolv: /tmp/tmpzxxfoolv.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp23rq3ypo: /tmp/tmp23rq3ypo.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpzxxfoolv: /tmp/tmpzxxfoolv.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n\t// Write your code here\n\t\
    if (n % 2 != 0)\n\t\treturn false;\n\tif (n == 0)\n\t\treturn true;\n\tif (n ==\
    \ 2)\n\t\treturn false;\n\treturn is_equal_to_sum_even(n - 2);\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpb6u4sdr0: /tmp/tmpb6u4sdr0.cpp:22: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2 != 0)\n        return\
    \ false;\n    if(n == 0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmppyn0orq0: /tmp/tmppyn0orq0.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    else\n        return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp61y5spbp: /tmp/tmp61y5spbp.cpp:19: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    if(n%4==2)\n        return\
    \ false;\n    return true;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpq6fc292k: /tmp/tmpq6fc292k.cpp:19: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    if(n==4)\n        return false;\n\
    \    return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate =\
    \ is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmppqilze0a: /tmp/tmppqilze0a.cpp:21: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n \
    \   if(n==2)\n        return false;\n    return is_equal_to_sum_even(n-2);\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpw0tqqks2: /tmp/tmpw0tqqks2.cpp:22: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n \
    \   if(n==2)\n        return false;\n    return is_equal_to_sum_even(n-2);\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpw0tqqks2: /tmp/tmpw0tqqks2.cpp:22: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4!=0)\n        return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp4s8q70dz: /tmp/tmp4s8q70dz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085779
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_hfw2umy: /tmp/tmp_hfw2umy.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp23rq3ypo: /tmp/tmp23rq3ypo.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2==1)\n        return false;\n    if(n==0)\n        return true;\n \
    \   if(n==2)\n        return false;\n    return is_equal_to_sum_even(n-2);\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpzq_qi4tr: /tmp/tmpzq_qi4tr.cpp:22: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085779
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2==1)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp3jr858jv: /tmp/tmp3jr858jv.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n    return false;\n    if(n%4==0)\n    return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp830_7w9u: /tmp/tmp830_7w9u.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    if(n<0)\n        return false;\n\
    \    return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate =\
    \ is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmphxhy5cxg: /tmp/tmphxhy5cxg.cpp:19: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085779
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2 == 1)\n        return\
    \ false;\n    if(n%4 == 0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpntm8j525: /tmp/tmpntm8j525.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085779
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_hfw2umy: /tmp/tmp_hfw2umy.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpzxxfoolv: /tmp/tmpzxxfoolv.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n \
    \   return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp751r9jqi: /tmp/tmp751r9jqi.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1) return false;\n\
    \    if(n%4==0) return true;\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp836lz5co: /tmp/tmp836lz5co.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n    return false;\n    if(n%4==0)\n    return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp830_7w9u: /tmp/tmp830_7w9u.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n \
    \   return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp751r9jqi: /tmp/tmp751r9jqi.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    int count = 0;\n    for(int i = 2; i <= n; i += 2) {\n        if(n % i ==\
    \ 0) {\n            count++;\n        }\n    }\n    if(count == 4) {\n       \
    \ return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpvww_iaz6: /tmp/tmpvww_iaz6.cpp:25: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_hfw2umy: /tmp/tmp_hfw2umy.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use printf()\n    // Example:\
    \ printf(\"%s\", \"Hello world!\");\n    int i,j,k,l;\n    for(i=0;i<=n;i++)\n\
    \    {\n        for(j=0;j<=n;j++)\n        {\n            for(k=0;k<=n;k++)\n\
    \            {\n                for(l=0;l<=n;l++)\n                {\n       \
    \             if(i+j+k+l==n && i%2==0 && j%2==0 && k%2==0 && l%2==0)\n       \
    \             {\n                        return true;\n                    }\n\
    \                }\n            }\n        }\n    }\n    return false;\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp3osxfeg1: /tmp/tmp3osxfeg1.cpp:33: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085779
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n \
    \   if(n==2)\n        return false;\n    return is_equal_to_sum_even(n-2);\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpw0tqqks2: /tmp/tmpw0tqqks2.cpp:22: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use print\n    // Example:\
    \ print \"Hello world!\"\n    if(n%2!=0) return false;\n    if(n%4!=0) return\
    \ false;\n    return true;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp4clepic6: /tmp/tmp4clepic6.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085779
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    else\n        return true;\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_m4dgadr: /tmp/tmp_m4dgadr.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpzxxfoolv: /tmp/tmpzxxfoolv.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_hfw2umy: /tmp/tmp_hfw2umy.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n    return false;\n    if(n%4==0)\n    return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp830_7w9u: /tmp/tmp830_7w9u.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_hfw2umy: /tmp/tmp_hfw2umy.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n    return false;\n    if(n%4==0)\n    return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp830_7w9u: /tmp/tmp830_7w9u.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2==1)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp3jr858jv: /tmp/tmp3jr858jv.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n    return false;\n    else\n    {\n        if(n==0)\n      \
    \  return true;\n        else\n        {\n            return is_equal_to_sum_even(n-2);\n\
    \        }\n    }\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpuxrvejo8: /tmp/tmpuxrvejo8.cpp:24: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085779
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    else\n        return true;\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_m4dgadr: /tmp/tmp_m4dgadr.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpzxxfoolv: /tmp/tmpzxxfoolv.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n % 2 == 1)\n        return\
    \ false;\n    if(n % 4 == 0)\n        return true;\n    return false;\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp2v_ib6oi: /tmp/tmp2v_ib6oi.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2 != 0) return false;\n\
    \    if(n == 0) return true;\n    return is_equal_to_sum_even(n-2);\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpfokm5p3e: /tmp/tmpfokm5p3e.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085779
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    else\n        return true;\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_m4dgadr: /tmp/tmp_m4dgadr.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n  // Write your code here\n  //\
    \ To print results to the standard output you can use std::cout\n  // Example:\
    \ std::cout << \"Hello world!\";\n  int count = 0;\n  for(int i = 2; i <= n; i+=2)\n\
    \  {\n    if(n % i == 0)\n    {\n      count++;\n    }\n  }\n  if(count == 4)\n\
    \  {\n    return true;\n  }\n  else\n  {\n    return false;\n  }\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpb38r26ru: /tmp/tmpb38r26ru.cpp:33: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085779
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n \
    \   return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp751r9jqi: /tmp/tmp751r9jqi.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use printf()\n    // Example:\
    \ printf(\"%s\", \"Hello world!\");\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpyxbe6o9z: /tmp/tmpyxbe6o9z.cpp:18: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085779
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2==1)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp3jr858jv: /tmp/tmp3jr858jv.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp23rq3ypo: /tmp/tmp23rq3ypo.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2==1)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp3jr858jv: /tmp/tmp3jr858jv.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_hfw2umy: /tmp/tmp_hfw2umy.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use std::cout\n    //\
    \ Example: std::cout << \"Hello world!\";\n    int i,j,k,l;\n    for(i=0;i<=n;i+=2)\n\
    \    {\n        for(j=0;j<=n;j+=2)\n        {\n            for(k=0;k<=n;k+=2)\n\
    \            {\n                for(l=0;l<=n;l+=2)\n                {\n      \
    \              if(i+j+k+l==n)\n                    {\n                       \
    \ return true;\n                    }\n                }\n            }\n    \
    \    }\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpxcbksl17: /tmp/tmpxcbksl17.cpp:33: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085779
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2==1)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp3jr858jv: /tmp/tmp3jr858jv.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n \
    \   if(n%4!=0)\n        return false;\n    return true;\n}\nint main() {\n   \
    \ auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpwm1s3djm: /tmp/tmpwm1s3djm.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085779
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp23rq3ypo: /tmp/tmp23rq3ypo.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    int count = 0;\n    for (int\
    \ i = 2; i <= n; i += 2) {\n        if (n % i == 0) {\n            count++;\n\
    \        }\n    }\n    return count == 4;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpcr7xifvy: /tmp/tmpcr7xifvy.cpp:21: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2 != 0)\n        return\
    \ false;\n    if(n%4 == 0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp5a76_h3c: /tmp/tmp5a76_h3c.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    for(int i=2;i<=n/4;i+=2)\n\
    \    {\n        for(int j=2;j<=n/4;j+=2)\n        {\n            for(int k=2;k<=n/4;k+=2)\n\
    \            {\n                for(int l=2;l<=n/4;l+=2)\n                {\n\
    \                    if(i+j+k+l==n)\n                    {\n                 \
    \       return true;\n                    }\n                }\n            }\n\
    \        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpkm18_3hp: /tmp/tmpkm18_3hp.cpp:32: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085779
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpzxxfoolv: /tmp/tmpzxxfoolv.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2 != 0)\n        return\
    \ false;\n    if(n%4 == 0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp5a76_h3c: /tmp/tmp5a76_h3c.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2==1) return false;\n\
    \    if(n%4==0) return true;\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp836lz5co: /tmp/tmp836lz5co.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085777
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2==1)\n        return false;\n    long sum=0;\n    for(int i=2;i<=n;i+=2)\n\
    \    {\n        sum+=i;\n        if(sum==n)\n            return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmptyogw3f3: /tmp/tmptyogw3f3.cpp:24: int main(): Assertion `candidate((6))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085779
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n<8)\n        return false;\n\
    \    if(n%2!=0)\n        return false;\n    return true;\n}\nint main() {\n  \
    \  auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660085779
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return\
    \ false;\n    if(n%4==0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn9xvgizz: /tmp/tmpn9xvgizz.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8)\
    \ == True\nbool is_equal_to_sum_even(long n) {\n    // Write your code here\n\
    \    if(n%2!=0)\n        return false;\n    if(n%4!=0)\n        return false;\n\
    \    return true;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp8yjpnjc0: /tmp/tmp8yjpnjc0.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085779

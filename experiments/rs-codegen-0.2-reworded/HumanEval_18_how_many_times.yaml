name: HumanEval_18_how_many_times
language: rs
prompt: "/// Find how many times a given substring can be found in the original string.\
  \ Count overlaping cases.\n/// >>> how_many_times(String::from(\"\"), String::from(\"\
  a\"))\n/// 0\n/// >>> how_many_times(String::from(\"aaa\"), String::from(\"a\"))\n\
  /// 3\n/// >>> how_many_times(String::from(\"aaaa\"), String::from(\"aa\"))\n///\
  \ 3\nfn how_many_times(string: String, substring: String) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = how_many_times;\n    assert_eq!(candidate(String::from(\"\
  \"), String::from(\"x\")), 0);\n    assert_eq!(candidate(String::from(\"xyxyxyx\"\
  ), String::from(\"x\")), 4);\n    assert_eq!(candidate(String::from(\"cacacacac\"\
  ), String::from(\"cac\")), 4);\n    assert_eq!(candidate(String::from(\"john doe\"\
  ), String::from(\"john\")), 1);\n}\n"
completions: ["  let count = 0;\n  let pos = 0;\n  while (pos < string.len) {\n  \
    \  let i = string.index(substring, pos);\n    if (i == -1) break;\n    pos = i\
    \ + substring.len;\n    count += 1;\n  }\n  return count;", "  let count = 0;\n\
    \  let i = 0;\n  while (i < string.len) {\n    let j = i + substring.len;\n  \
    \  if (j > string.len) {\n      break;\n    }\n    if (string.data.slice(i, j)\
    \ == substring) {\n      count += 1;\n      i = j;\n    } else {\n      i += 1;\n\
    \    }\n  }\n  return count;", "  let count = 0;\n  let i = 0;\n  while (i < string.len)\
    \ {\n    if (string.data[i] == substring.data[0]) {\n      let j = i + 1;\n  \
    \    while (j < string.len && substring.data[j] == string.data[j]) {\n       \
    \ j += 1;\n      }\n      if (j == substring.len) {\n        count += 1;\n   \
    \   }\n      i = j;\n    } else {\n      i += 1;\n    }\n  }\n  return count;",
  "  let count = 0;\n  let pos = 0;\n  while (pos < string.len) {\n    if (string.data[pos]\
    \ == substring.data[0]) {\n      let i = 1;\n      while (i < substring.len &&\
    \ pos + i < string.len && string.data[pos + i] == substring.data[i]) {\n     \
    \   i += 1;\n      }\n      if (i == substring.len) {\n        count += 1;\n \
    \     }\n    }\n    pos += 1;\n  }\n  return count;", "  let count = 0\n  let\
    \ i = 0\n  while (i < string.len) {\n    if (string.data[i] == substring.data[0])\
    \ {\n      let j = i\n      while (j < string.len && substring.data[0] == string.data[j])\
    \ {\n        j += 1\n      }\n      if (j - i == substring.len) {\n        count\
    \ += 1\n        i = j\n      }\n    }\n    i += 1\n  }\n  return count", "  let\
    \ count = 0\n  let pos = 0\n  while (pos < string.len) {\n    let pos2 = substring.index(string,\
    \ pos)\n    if pos2 < 0 {\n      break\n    }\n    pos = pos2 + 1\n    count +=\
    \ 1\n  }\n  return count", "  let count = 0;\n  let start = 0;\n  let end = 0;\n\
    \  while ((end = string.find(substring, start)) != -1) {\n    count += 1;\n  \
    \  start = end + 1;\n  }\n  return count;", "  let count = 0;\n  let start = 0;\n\
    \  while (start < string.len) {\n    let end = string.find(substring, start);\n\
    \    if (end == -1) {\n      break;\n    }\n    count += 1;\n    start = end +\
    \ substring.len;\n  }\n  return count;", "  let count = 0\n  let i = 0\n  let\
    \ j = 0\n  while (i < string.len) {\n    while (j < substring.len && string[i]\
    \ == substring[j]) {\n      count += 1\n      i += 1\n      j += 1\n    }\n  \
    \  j = 0\n    i += 1\n  }\n  return count", "  let count = 0\n  let start = 0\n\
    \  let end = 0\n  while ((end = string.find(substring, start)) != -1) {\n    count\
    \ += 1\n    start = end + substring.length\n  }\n  return count", "  let count\
    \ = 0\n  let i = 0\n  while i < string.len {\n    let j = i + substring.len\n\
    \    while j <= string.len && substring.eq(string.data[j]) {\n      j += substring.len\n\
    \    }\n    if j > i {\n      count += 1\n    }\n    i = j\n  }\n  return count",
  "  let count = 0;\n  let pos = 0;\n  while (pos < string.len) {\n    if (string.data.find(substring,\
    \ pos) == pos) {\n      count += 1;\n      pos += substring.len;\n    } else {\n\
    \      pos += 1;\n    }\n  }\n  return count;", "  let count = 0\n  let pos =\
    \ 0\n  while (pos < string.len) {\n    let i = string.find(substring, pos)\n \
    \   if i == -1 {\n      break\n    }\n    pos = i + substring.len\n    count +=\
    \ 1\n  }\n  return count", "  let count = 0;\n  let index = 0;\n  while (index\
    \ < string.len) {\n    if (string.data[index] == substring.data[0]) {\n      let\
    \ i = 1;\n      while (i < substring.len && string.data[index + i] == substring.data[i])\
    \ {\n        i += 1;\n      }\n      if (i == substring.len) {\n        count\
    \ += 1;\n      }\n    }\n    index += 1;\n  }\n  return count;", "  let count\
    \ = 0;\n  let pos = 0;\n  while (pos < string.len) {\n    if (string.data.find(substring,\
    \ pos) != -1) {\n      count += 1;\n      pos += substring.len;\n    } else {\n\
    \      pos += 1;\n    }\n  }\n  return count;", "  let count = 0;\n  let pos =\
    \ 0;\n  while (pos < string.len) {\n    let pos2 = substring.index(string, pos);\n\
    \    if (pos2 == -1) {\n      break;\n    }\n    pos = pos2 + 1;\n    count +=\
    \ 1;\n  }\n  return count;", "  let count = 0\n  let pos = 0\n  while (pos < string.len)\
    \ {\n    if (string.data[pos] == substring.data[0]) {\n      let i = 1\n     \
    \ while (i < substring.len && string.data[pos + i] == substring.data[i]) {\n \
    \       i += 1\n      }\n      if (i == substring.len) {\n        count += 1\n\
    \      }\n    }\n    pos += 1\n  }\n  return count", "  let count = 0;\n  let\
    \ i = 0;\n  while (i < string.len) {\n    if (string.data[i] == substring.data[0])\
    \ {\n      let j = i + 1;\n      while (j < string.len && substring.data[j] ==\
    \ string.data[j]) {\n        j += 1;\n      }\n      if (j == substring.len) {\n\
    \        count += 1;\n      }\n      i = j;\n    } else {\n      i += 1;\n   \
    \ }\n  }\n  return count;", "  let count = 0\n  let i = 0\n  while i < string.len\
    \ {\n    if string.data[i] == substring.data[0] {\n      let j = i + 1\n     \
    \ while j < string.len && substring.data[j] == string.data[j] {\n        j +=\
    \ 1\n      }\n      if j == substring.len {\n        count += 1\n      }\n   \
    \   i = j\n    } else {\n      i += 1\n    }\n  }\n  return count", "  let count\
    \ = 0;\n  let i = 0;\n  while (i < string.len) {\n    if (string.data[i] == substring.data[0])\
    \ {\n      let j = i + 1;\n      while (j < string.len && substring.data[j] ==\
    \ string.data[j]) {\n        j += 1;\n      }\n      if (j == substring.len) {\n\
    \        count += 1;\n      }\n      i = j;\n    } else {\n      i += 1;\n   \
    \ }\n  }\n  return count;", "  let count = 0\n  let i = 0\n  while (i < string.len)\
    \ {\n    if (string.data[i] == substring.data[0]) {\n      let j = i + 1\n   \
    \   while (j < string.len && substring.data[j] == string.data[j]) {\n        j\
    \ += 1\n      }\n      if (j == substring.len) {\n        count += 1\n      }\n\
    \      i = j\n    } else {\n      i += 1\n    }\n  }\n  return count", "  let\
    \ count = 0;\n  let pos = 0;\n  while (pos < string.len) {\n    let idx = string.find(substring,\
    \ pos);\n    if (idx == -1) break;\n    pos = idx + substring.len;\n    count\
    \ += 1;\n  }\n  return count;", "  let count = 0;\n  let pos = 0;\n  while (pos\
    \ < string.len) {\n    if (string.data[pos] == substring.data[0]) {\n      let\
    \ i = 1;\n      while (i < substring.len && string.data[pos + i] == substring.data[i])\
    \ {\n        i += 1;\n      }\n      if (i == substring.len) {\n        count\
    \ += 1;\n        pos += i;\n      }\n    } else {\n      pos += 1;\n    }\n  }\n\
    \  return count;", "  let count = 0\n  let start = 0\n  let end = 0\n  while (start\
    \ < string.len) {\n    end = string.index(substring, start)\n    if end == -1\
    \ {\n      break\n    }\n    count += 1\n    start = end + substring.len\n  }\n\
    \  return count", "  let count = 0\n  let i = 0\n  while (i < string.len) {\n\
    \    if (string.data[i] == substring.data[0]) {\n      let j = i\n      while\
    \ (j < string.len && substring.data[0] == string.data[j]) {\n        j += 1\n\
    \      }\n      if (j - i == substring.len) {\n        count += 1\n        i =\
    \ j\n      }\n    }\n    i += 1\n  }\n  return count", "  let count = 0\n  let\
    \ i = 0\n  let j = 0\n  while (i < string.len) {\n    while (j < substring.len\
    \ && substring[j] == string[i + j]) {\n      j += 1\n    }\n    if (j == substring.len)\
    \ {\n      count += 1\n      j = 0\n    }\n    i += 1\n  }\n  return count", " \
    \ let count = 0;\n  let pos = 0;\n  while (pos < string.len) {\n    let i = string.find(substring,\
    \ pos);\n    if (i == -1) break;\n    pos = i + substring.len;\n    count += 1;\n\
    \  }\n  return count;", "  let count = 0\n  let pos = 0\n  let substring_pos =\
    \ 0\n  while (pos < string.len) {\n    substring_pos = substring.index(string[pos])\n\
    \    if substring_pos == -1 {\n      break\n    }\n    pos += substring_pos\n\
    \    count += 1\n  }\n  return count", "  let count = 0;\n  let pos = 0;\n  while\
    \ (true) {\n    pos = string.find(substring, pos);\n    if (pos == -1) break;\n\
    \    count += 1;\n    pos += substring.length();\n  }\n  return count;", "  let\
    \ count = 0;\n  let index = 0;\n  while (index < string.len) {\n    let i = index;\n\
    \    while (i < string.len && substring.len <= i - index && substring.eq(string.data[i]))\
    \ {\n      i += 1;\n    }\n    index = i;\n    if (index == string.len) {\n  \
    \    break;\n    }\n    count += 1;\n  }\n  return count;", "  let count = 0;\n\
    \  let i = 0;\n  while (i < string.len) {\n    if (string.data[i] == substring.data[0])\
    \ {\n      let j = 1;\n      while (j < substring.len && i + j < string.len &&\
    \ string.data[i + j] == substring.data[j]) {\n        j += 1;\n      }\n     \
    \ if (j == substring.len) {\n        count += 1;\n        i += j;\n      }\n \
    \   }\n    i += 1;\n  }\n  return count;", "  let count = 0;\n  let start = 0;\n\
    \  let end = 0;\n  while ((end = string.find(substring, start)) != -1) {\n   \
    \ count += 1;\n    start = end + substring.length();\n  }\n  return count;", " \
    \ let count = 0;\n  let i = 0;\n  while (i < string.len) {\n    let j = i;\n \
    \   while (j < string.len && substring.len <= j - i && substring == string.slice(i,\
    \ j)) {\n      count += 1;\n      j += substring.len;\n    }\n    i = j;\n  }\n\
    \  return count;", "  let count = 0;\n  let pos = 0;\n  while (true) {\n    pos\
    \ = string.find(substring, pos);\n    if (pos == -1) break;\n    count += 1;\n\
    \    pos += substring.size();\n  }\n  return count;", "  let count = 0;\n  let\
    \ start = 0;\n  while (true) {\n    let pos = string.find(substring, start);\n\
    \    if (pos == -1) break;\n    count += 1;\n    start = pos + 1;\n  }\n  return\
    \ count;", "  let count = 0;\n  let i = 0;\n  while (i < string.len) {\n    if\
    \ (string.data[i] == substring.data[0]) {\n      let j = 1;\n      while (j <\
    \ substring.len && i + j < string.len && string.data[i + j] == substring.data[j])\
    \ {\n        j += 1;\n      }\n      if (j == substring.len) {\n        count\
    \ += 1;\n      }\n    }\n    i += 1;\n  }\n  return count;", "  let count = 0\n\
    \  let i = 0\n  let j = 0\n  while (i < string.len) {\n    while (j < substring.len\
    \ && string[i] == substring[j]) {\n      i += 1\n      j += 1\n    }\n    j =\
    \ 0\n    while (j < substring.len && string[i] == substring[j]) {\n      count\
    \ += 1\n      i += 1\n      j += 1\n    }\n  }\n  return count", "  let count\
    \ = 0;\n  let i = 0;\n  while (i < string.len) {\n    let j = i + substring.len;\n\
    \    if (j > string.len) {\n      break;\n    }\n    if (string.data[i..j] ==\
    \ substring) {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
  "  let count = 0\n  let pos = 0\n  while (pos < string.len) {\n    let i = string.find(substring,\
    \ pos)\n    if i == -1 {\n      break\n    }\n    pos = i + substring.len\n  \
    \  count += 1\n  }\n  return count", "  let count = 0\n  let i = 0\n  let j =\
    \ 0\n  while (i < string.len) {\n    while (j < substring.len && string[i] ==\
    \ substring[j]) {\n      i += 1\n      j += 1\n    }\n    j = 0\n    if (i ==\
    \ string.len) {\n      break\n    }\n    count += 1\n    i += 1\n  }\n  return\
    \ count", "  let count = 0;\n  let start = 0;\n  let end = 0;\n  while ((end =\
    \ string.find(substring, start)) != -1) {\n    count += 1;\n    start = end +\
    \ substring.length();\n  }\n  return count;", "  let count = 0;\n  let i = 0;\n\
    \  while (i < string.len) {\n    let j = i + substring.len;\n    if (j > string.len)\
    \ {\n      break;\n    }\n    if (string.data.slice(i, j) == substring) {\n  \
    \    count += 1;\n      i += substring.len;\n    } else {\n      i += 1;\n   \
    \ }\n  }\n  return count;", "  let count = 0;\n  let i = 0;\n  while (i < string.len)\
    \ {\n    let j = 0;\n    while (j < substring.len && i + j < string.len) {\n \
    \     if (string.at(i + j) != substring.at(j)) {\n        break;\n      }\n  \
    \    j += 1;\n    }\n    if (j == substring.len) {\n      count += 1;\n    }\n\
    \    i += 1;\n  }\n  return count;", "  let count = 0;\n  let start = 0;\n  while\
    \ (true) {\n    let pos = string.find(substring, start);\n    if (pos == -1) break;\n\
    \    count += 1;\n    start = pos + 1;\n  }\n  return count;", "  let count =\
    \ 0\n  let pos = 0\n  while (pos < string.len) {\n    if (string.data[pos] ==\
    \ substring.data[0]) {\n      let i = 1\n      while (i < substring.len && pos\
    \ + i < string.len && string.data[pos + i] == substring.data[i]) {\n        i\
    \ += 1\n      }\n      if (i == substring.len) {\n        count += 1\n       \
    \ pos += i\n      }\n    } else {\n      pos += 1\n    }\n  }\n  return count",
  "  let count = 0\n  let pos = 0\n  while (pos < string.len) {\n    let i = substring.index(string.data[pos])\n\
    \    if i == -1 {\n      break\n    }\n    pos += i\n    count += 1\n  }\n  return\
    \ count", "  let count = 0;\n  let i = 0;\n  while (i < string.len) {\n    if\
    \ (string.data[i] == substring.data[0]) {\n      let j = i;\n      while (j <\
    \ string.len && substring.data[0] == string.data[j]) {\n        j += 1;\n    \
    \  }\n      if (j - i == substring.len) {\n        count += 1;\n      }\n    \
    \  i = j;\n    } else {\n      i += 1;\n    }\n  }\n  return count;", "  let count\
    \ = 0;\n  let pos = 0;\n  while (pos < string.len) {\n    if (string.data[pos]\
    \ == substring.data[0]) {\n      let i = 1;\n      while (i < substring.len &&\
    \ pos + i < string.len && string.data[pos + i] == substring.data[i]) {\n     \
    \   i += 1;\n      }\n      if (i == substring.len) {\n        count += 1;\n \
    \       pos += i;\n      } else {\n        pos += 1;\n      }\n    } else {\n\
    \      pos += 1;\n    }\n  }\n  return count;", "  let count = 0;\n  let start\
    \ = 0;\n  let end = 0;\n  while ((end = string.find(substring, start)) != -1)\
    \ {\n    count += 1;\n    start = end + substring.length();\n  }\n  return count;",
  "  let count = 0;\n  let pos = 0;\n  while (pos < string.len) {\n    if (string.data[pos]\
    \ == substring.data[0]) {\n      let i = 1;\n      while (i < substring.len &&\
    \ pos + i < string.len && string.data[pos + i] == substring.data[i]) {\n     \
    \   i += 1;\n      }\n      if (i == substring.len) {\n        count += 1;\n \
    \     }\n    }\n    pos += 1;\n  }\n  return count;", "  let count = 0\n  let\
    \ i = 0\n  let j = 0\n  while (i < string.len) {\n    while (j < substring.len\
    \ && string.data[i] == substring.data[j]) {\n      j += 1\n      i += 1\n    }\n\
    \    j = 0\n    if (i == string.len) {\n      break\n    }\n    count += 1\n \
    \   i += 1\n  }\n  return count", "  let count = 0\n  let i = 0\n  while i < string.len\
    \ {\n    let j = substring.index(string[i])\n    if j == -1 {\n      break\n \
    \   }\n    i += j + 1\n    count += 1\n  }\n  return count", "  let count = 0;\n\
    \  let pos = 0;\n  while (pos < string.len) {\n    if (string.data[pos] == substring.data[0])\
    \ {\n      let i = 1;\n      while (i < substring.len && pos + i < string.len\
    \ && string.data[pos + i] == substring.data[i]) {\n        i += 1;\n      }\n\
    \      if (i == substring.len) {\n        count += 1;\n      }\n    }\n    pos\
    \ += 1;\n  }\n  return count;", "  let count = 0;\n  let pos = 0;\n  while (pos\
    \ < string.len) {\n    let i = string.find(substring, pos);\n    if (i == -1)\
    \ break;\n    pos = i + substring.len;\n    count += 1;\n  }\n  return count;",
  "  let count = 0;\n  let pos = 0;\n  while (pos < string.len) {\n    let end = string.find(substring,\
    \ pos);\n    if (end == -1) {\n      break;\n    }\n    pos = end + substring.len;\n\
    \    count += 1;\n  }\n  return count;", "  let count = 0;\n  let i = 0;\n  while\
    \ (i < string.len) {\n    let j = i + substring.len;\n    if (j > string.len)\
    \ {\n      break;\n    }\n    if (string.data[i..j] == substring) {\n      count\
    \ += 1;\n      i += substring.len;\n    } else {\n      i += 1;\n    }\n  }\n\
    \  return count;", "  let count = 0;\n  let i = 0;\n  while (i < string.len) {\n\
    \    let j = 0;\n    while (j < substring.len) {\n      if (string.data[i + j]\
    \ != substring.data[j]) {\n        break;\n      }\n      j += 1;\n    }\n   \
    \ if (j == substring.len) {\n      count += 1;\n      i += substring.len;\n  \
    \  } else {\n      i += 1;\n    }\n  }\n  return count;", "  let count = 0;\n\
    \  let pos = 0;\n  while (pos < string.len) {\n    if (string.data[pos] == substring.data[0])\
    \ {\n      let i = 1;\n      while (i < substring.len && pos + i < string.len\
    \ && string.data[pos + i] == substring.data[i]) {\n        i += 1;\n      }\n\
    \      if (i == substring.len) {\n        count += 1;\n      }\n    }\n    pos\
    \ += 1;\n  }\n  return count;", "  let count = 0\n  let i = 0\n  while i < string.len\
    \ {\n    let j = i + substring.len\n    while j < string.len and substring.eq(string.get(j))\
    \ {\n      j += 1\n    }\n    if j == string.len {\n      count += 1\n    }\n\
    \    i = j\n  }\n  return count", "  let count = 0;\n  let pos = 0;\n  while (pos\
    \ < string.len) {\n    let i = string.find(substring, pos);\n    if (i == -1)\
    \ break;\n    pos = i + substring.len;\n    count += 1;\n  }\n  return count;",
  "  let count = 0;\n  let start = 0;\n  let end = 0;\n  while ((end = string.find(substring,\
    \ start)) != -1) {\n    count += 1;\n    start = end + substring.length();\n \
    \ }\n  return count;", "  let count = 0\n  let start = 0\n  let end = 0\n  for\
    \ start in range(0, string.len) {\n    for end in range(start, string.len) {\n\
    \      if substring.len == 0 {\n        count += 1\n        break\n      }\n \
    \     if string.data[start] == substring.data[0] {\n        if substring.len ==\
    \ 1 {\n          count += 1\n          break\n        }\n        if string.data[end]\
    \ == substring.data[1] {\n          count += 1\n          start += 1\n       \
    \   end += 1\n          break\n        }\n      }\n    }\n  }\n  return count",
  "  let count = 0\n  let pos = 0\n  while (pos < string.len) {\n    let i = string.index(substring,\
    \ pos)\n    if i == -1 {\n      break\n    }\n    pos = i + substring.len\n  \
    \  count += 1\n  }\n  return count", "  let count = 0\n  let i = 0\n  while i\
    \ < string.len {\n    if string.data[i] == substring.data[0] {\n      let j =\
    \ 0\n      while j < substring.len && i + j < string.len {\n        if string.data[i\
    \ + j] != substring.data[j] {\n          break\n        }\n        j += 1\n  \
    \    }\n      if j == substring.len {\n        count += 1\n        i += j\n  \
    \    }\n    }\n    i += 1\n  }\n  return count", "  let count = 0;\n  let pos\
    \ = 0;\n  while (pos < string.len) {\n    let i = string.find(substring, pos);\n\
    \    if (i == -1) break;\n    pos = i + substring.len;\n    count += 1;\n  }\n\
    \  return count;", "  let count = 0\n  let start = 0\n  let end = 0\n  while (start\
    \ < string.len) {\n    end = string.index(substring, start)\n    if end == -1\
    \ {\n      break\n    }\n    count += 1\n    start = end + substring.len\n  }\n\
    \  return count", "  let count = 0;\n  let i = 0;\n  while (i < string.len) {\n\
    \    if (string.data[i] == substring.data[0]) {\n      let j = i;\n      while\
    \ (j < string.len && substring.data[0] == string.data[j]) {\n        j += 1;\n\
    \      }\n      if (j - i == substring.len) {\n        count += 1;\n      }\n\
    \      i = j;\n    } else {\n      i += 1;\n    }\n  }\n  return count;", "  let\
    \ count = 0;\n  let start = 0;\n  let end = 0;\n  while ((end = string.find(substring,\
    \ start)) != -1) {\n    count += 1;\n    start = end + 1;\n  }\n  return count;",
  "  let count = 0;\n  let i = 0;\n  while (i < string.len) {\n    if (string.data[i]\
    \ == substring.data[0]) {\n      let j = i + 1;\n      while (j < string.len &&\
    \ substring.data[j] == string.data[j]) {\n        j += 1;\n      }\n      if (j\
    \ == substring.len) {\n        count += 1;\n      }\n      i = j;\n    } else\
    \ {\n      i += 1;\n    }\n  }\n  return count;", "  let count = 0;\n  let i =\
    \ 0;\n  while (i < string.len) {\n    if (string.data[i] == substring.data[0])\
    \ {\n      let j = i + 1;\n      while (j < string.len && substring.data[j] ==\
    \ string.data[j]) {\n        j += 1;\n      }\n      if (j == substring.len) {\n\
    \        count += 1;\n      }\n      i = j;\n    } else {\n      i += 1;\n   \
    \ }\n  }\n  return count;", "  let count = 0;\n  let pos = 0;\n  while (pos <\
    \ string.len) {\n    let pos2 = substring.index(string.data[pos]);\n    if (pos2\
    \ == -1) {\n      break;\n    }\n    pos += pos2;\n    count += 1;\n  }\n  return\
    \ count;", "  let count = 0\n  let index = 0\n  let substring_length = substring.length()\n\
    \  let string_length = string.length()\n  while index < string_length {\n    if\
    \ string[index] == substring[0] {\n      let i = 1\n      while i < substring_length\
    \ && string[index + i] == substring[i] {\n        i += 1\n      }\n      if i\
    \ == substring_length {\n        count += 1\n        index += i\n      } else\
    \ {\n        index += 1\n      }\n    } else {\n      index += 1\n    }\n  }\n\
    \  return count", "  let count = 0\n  let start = 0\n  let end = 0\n  while (start\
    \ < string.len) {\n    end = string.find(substring, start)\n    if end == -1 {\n\
    \      break\n    }\n    count += 1\n    start = end + substring.len\n  }\n  return\
    \ count", "  let count = 0\n  let start = 0\n  let end = 0\n  let substring_length\
    \ = substring.length()\n  while (start < string.length()) {\n    end = string.find(substring,\
    \ start)\n    if (end == -1) {\n      break\n    }\n    count += 1\n    start\
    \ = end + substring_length\n  }\n  return count", "  let count = 0;\n  let pos\
    \ = 0;\n  while (pos < string.len) {\n    if (string.data[pos] == substring.data[0])\
    \ {\n      let i = 1;\n      while (i < substring.len && pos + i < string.len\
    \ && string.data[pos + i] == substring.data[i]) {\n        i += 1;\n      }\n\
    \      if (i == substring.len) {\n        count += 1;\n      }\n    }\n    pos\
    \ += 1;\n  }\n  return count;", "  let count = 0;\n  let pos = 0;\n  while (pos\
    \ < string.len) {\n    let end = string.find(substring, pos);\n    if (end ==\
    \ -1) break;\n    pos = end + substring.len;\n    count += 1;\n  }\n  return count;",
  "  let count = 0\n  let pos = 0\n  while (pos < string.len) {\n    let index = string.index(substring,\
    \ pos)\n    if index == -1 {\n      break\n    }\n    pos = index + substring.len\n\
    \    count += 1\n  }\n  return count", "  let count = 0\n  let start = 0\n  let\
    \ end = 0\n  while (start < string.len) {\n    end = string.index(substring, start)\n\
    \    if (end == -1) {\n      break\n    }\n    count += 1\n    start = end + substring.len\n\
    \  }\n  return count", "  let count = 0;\n  let i = 0;\n  while (i < string.len)\
    \ {\n    let j = i;\n    while (j < string.len && substring.len <= j - i + 1)\
    \ {\n      if (string.data[i] == substring.data[0] && substring.len == 1) {\n\
    \        count += 1;\n        j += 1;\n      } else {\n        j += 1;\n     \
    \ }\n    }\n    i += 1;\n  }\n  return count;", "  let count = 0;\n  let pos =\
    \ 0;\n  while (pos < string.len) {\n    if (string.data[pos] == substring.data[0])\
    \ {\n      let i = 1;\n      while (i < substring.len && pos + i < string.len\
    \ && string.data[pos + i] == substring.data[i]) {\n        i += 1;\n      }\n\
    \      if (i == substring.len) {\n        count += 1;\n      }\n    }\n    pos\
    \ += 1;\n  }\n  return count;", "  let count = 0;\n  let pos = 0;\n  while (pos\
    \ < string.len) {\n    let pos2 = substring.index(string.data[pos]);\n    if (pos2\
    \ == -1) {\n      break;\n    }\n    pos += pos2;\n    count += 1;\n  }\n  return\
    \ count;", "  let count = 0\n  let i = 0\n  while i < string.len {\n    if string.data[i]\
    \ == substring.data[0] {\n      let j = i + 1\n      while j < string.len && substring.data[j]\
    \ == string.data[j] {\n        j += 1\n      }\n      if j == substring.len {\n\
    \        count += 1\n        i = j\n      }\n    }\n    i += 1\n  }\n  return\
    \ count", "  let count = 0;\n  let start = 0;\n  let end = 0;\n  while ((end =\
    \ string.find(substring, start)) != -1) {\n    count += 1;\n    start = end +\
    \ substring.length();\n  }\n  return count;", "  let count = 0;\n  let pos = 0;\n\
    \  while (true) {\n    if (pos == string.len) {\n      break;\n    }\n    if (string[pos]\
    \ == substring[0]) {\n      let i = 1;\n      while (i < substring.len && string[pos\
    \ + i] == substring[i]) {\n        i += 1;\n      }\n      if (i == substring.len)\
    \ {\n        count += 1;\n        pos += i;\n      } else {\n        pos += i\
    \ - 1;\n      }\n    } else {\n      pos += 1;\n    }\n  }\n  return count;",
  "  let count = 0\n  let i = 0\n  while (i < string.len) {\n    if (string.data[i]\
    \ == substring.data[0]) {\n      let j = 1\n      while (j < substring.len &&\
    \ i + j < string.len && string.data[i + j] == substring.data[j]) {\n        j\
    \ += 1\n      }\n      if (j == substring.len) {\n        count += 1\n       \
    \ i += j\n      } else {\n        i += 1\n      }\n    } else {\n      i += 1\n\
    \    }\n  }\n  return count", "  let count = 0\n  let start = 0\n  let end = 0\n\
    \  while (start < string.len) {\n    end = string.find(substring, start)\n   \
    \ if (end == -1) {\n      break\n    }\n    count += 1\n    start = end + substring.len\n\
    \  }\n  return count", "  let count = 0\n  let i = 0\n  while (i < string.len)\
    \ {\n    if (string.data[i] == substring.data[0]) {\n      let j = i + 1\n   \
    \   while (j < string.len && substring.data[j] == string.data[j]) {\n        j\
    \ += 1\n      }\n      if (j == substring.len) {\n        count += 1\n       \
    \ i = j\n      }\n    } else {\n      i += 1\n    }\n  }\n  return count", " \
    \ let count = 0;\n  let start = 0;\n  let end = 0;\n  while ((end = string.find(substring,\
    \ start)) != -1) {\n    count += 1;\n    start = end + 1;\n  }\n  return count;",
  "  let count = 0;\n  let i = 0;\n  while (i < string.len) {\n    if (string.data[i]\
    \ == substring.data[0]) {\n      let j = i + 1;\n      while (j < string.len &&\
    \ substring.data[j] == string.data[j]) {\n        j += 1;\n      }\n      if (j\
    \ - i == substring.len) {\n        count += 1;\n        i = j;\n      }\n    }\n\
    \    i += 1;\n  }\n  return count;", "  let count = 0;\n  let start = 0;\n  let\
    \ end = 0;\n  while ((end = string.find(substring, start)) != -1) {\n    count\
    \ += 1;\n    start = end + substring.length();\n  }\n  return count;", "  let\
    \ count = 0\n  let i = 0\n  while i < string.len {\n    if string.data[i] == substring.data[0]\
    \ {\n      let j = i\n      while j < string.len && substring.data[0] == string.data[j]\
    \ {\n        j += 1\n      }\n      count += j - i\n      i = j\n    } else {\n\
    \      i += 1\n    }\n  }\n  return count", "  let count = 0\n  let start = 0\n\
    \  let end = 0\n  let substring_length = substring.length()\n  while (start <\
    \ string.length()) {\n    end = string.index_of(substring, start)\n    if (end\
    \ == -1) {\n      break\n    }\n    count += 1\n    start = end + substring_length\n\
    \  }\n  return count", "  let count = 0;\n  let pos = 0;\n  while (pos < string.len)\
    \ {\n    let i = pos;\n    while (i < string.len && substring.len <= i - pos &&\
    \ substring.eq(string.data[i])) {\n      i += 1;\n    }\n    if (substring.len\
    \ <= i - pos) {\n      count += 1;\n    }\n    pos = i;\n  }\n  return count;",
  "  let count = 0\n  let pos = 0\n  let subpos = 0\n  while (pos < string.len) {\n\
    \    if (subpos == substring.len) {\n      count += 1\n      subpos = 0\n    }\n\
    \    if (string.data[pos] == substring.data[subpos]) {\n      subpos += 1\n  \
    \  } else {\n      subpos = 0\n    }\n    pos += 1\n  }\n  return count", "  let\
    \ count = 0;\n  let pos = 0;\n  while (pos < string.len) {\n    let i = string.find(substring,\
    \ pos);\n    if (i == -1) break;\n    pos = i + substring.len;\n    count += 1;\n\
    \  }\n  return count;", "  let count = 0;\n  let i = 0;\n  while (i < string.len)\
    \ {\n    if (string.data[i] == substring.data[0]) {\n      let j = 1;\n      while\
    \ (j < substring.len && i + j < string.len && string.data[i + j] == substring.data[j])\
    \ {\n        j += 1;\n      }\n      if (j == substring.len) {\n        count\
    \ += 1;\n        i += j;\n      }\n    }\n    i += 1;\n  }\n  return count;",
  "  let count = 0;\n  let start = 0;\n  let end = 0;\n  while ((end = string.find(substring,\
    \ start)) != -1) {\n    count += 1;\n    start = end + 1;\n  }\n  return count;",
  "  let count = 0\n  let i = 0\n  let j = 0\n  while (i < string.len) {\n    j =\
    \ substring.index(string.data[i])\n    if j == -1 {\n      break\n    }\n    i\
    \ += j\n    count += 1\n  }\n  return count", "  let count = 0;\n  let start =\
    \ 0;\n  let end = 0;\n  while ((end = string.find(substring, start)) != -1) {\n\
    \    count += 1;\n    start = end + substring.length();\n  }\n  return count;",
  "  let count = 0;\n  let pos = 0;\n  while (true) {\n    pos = string.find(substring,\
    \ pos);\n    if (pos == -1) break;\n    count += 1;\n    pos += substring.length();\n\
    \  }\n  return count;", "  let count = 0\n  let pos = 0\n  while (pos < string.len)\
    \ {\n    let i = string.index(substring, pos)\n    if i == -1 {\n      break\n\
    \    }\n    pos = i + substring.len\n    count += 1\n  }\n  return count", " \
    \ let count = 0\n  let pos = 0\n  while (pos < string.len) {\n    let i = string.index(substring,\
    \ pos)\n    if i == -1 {\n      break\n    }\n    pos = i + substring.len\n  \
    \  count += 1\n  }\n  return count", "  let count = 0;\n  let start = 0;\n  let\
    \ end = 0;\n  while ((end = string.find(substring, start)) != -1) {\n    count\
    \ += 1;\n    start = end + substring.length();\n  }\n  return count;", "  let\
    \ count = 0;\n  let start = 0;\n  let end = 0;\n  while ((end = string.find(substring,\
    \ start)) != -1) {\n    count += 1;\n    start = end + 1;\n  }\n  return count;",
  "  let count = 0;\n  let i = 0;\n  while (i < string.len) {\n    let j = i;\n  \
    \  while (j < string.len && substring.len > 0) {\n      if (string[j] != substring[0])\
    \ {\n        break;\n      }\n      j += 1;\n      substring = substring.sub(1);\n\
    \    }\n    if (substring.len == 0) {\n      count += 1;\n    }\n    i += 1;\n\
    \  }\n  return count;", "  let count = 0\n  let i = 0\n  let j = 0\n  while (i\
    \ < string.len) {\n    while (j < substring.len && substring[j] == string[i +\
    \ j]) {\n      j += 1\n    }\n    if (j == substring.len) {\n      count += 1\n\
    \      j = 0\n    }\n    i += 1\n  }\n  return count", "  let count = 0;\n  let\
    \ start = 0;\n  let end = 0;\n  while ((end = string.find(substring, start)) !=\
    \ -1) {\n    count += 1;\n    start = end + substring.length();\n  }\n  return\
    \ count;", "  let count = 0;\n  let pos = 0;\n  while (pos < string.len) {\n \
    \   let i = pos;\n    while (i < string.len && substring.len > 0 && string.data[i]\
    \ == substring.data[0]) {\n      i += 1;\n      substring = substring.drop(1);\n\
    \    }\n    if (substring.len == 0) {\n      count += 1;\n    }\n    pos = i;\n\
    \  }\n  return count;", "  let count = 0\n  let start = 0\n  let end = 0\n  while\
    \ true {\n    end = string.find(substring, start)\n    if end == -1 {\n      break\n\
    \    }\n    count += 1\n    start = end + 1\n  }\n  return count", "  let count\
    \ = 0\n  let pos = 0\n  while (pos < string.len) {\n    let i = string.find(substring,\
    \ pos)\n    if i == -1 {\n      break\n    }\n    pos = i + substring.len\n  \
    \  count += 1\n  }\n  return count", "  let count = 0\n  let pos = 0\n  while\
    \ (pos < string.len) {\n    let i = string.index(substring, pos)\n    if i ==\
    \ -1 {\n      break\n    }\n    pos = i + substring.len\n    count += 1\n  }\n\
    \  return count", "  let count = 0;\n  let pos = 0;\n  while (pos < string.len)\
    \ {\n    let idx = string.find(substring, pos);\n    if (idx == -1) break;\n \
    \   pos = idx + substring.len;\n    count += 1;\n  }\n  return count;", "  let\
    \ count = 0;\n  let pos = 0;\n  while (true) {\n    pos = string.find(substring,\
    \ pos);\n    if (pos == -1) break;\n    count += 1;\n    pos += substring.length();\n\
    \  }\n  return count;", "  let count = 0\n  let pos = 0\n  while (pos < string.len)\
    \ {\n    let i = string.find(substring, pos)\n    if i == -1 {\n      break\n\
    \    }\n    pos = i + substring.len\n    count += 1\n  }\n  return count", " \
    \ let count = 0;\n  let index = 0;\n  while (index < string.len) {\n    if (string.data[index]\
    \ == substring.data[0]) {\n      let i = 1;\n      while (i < substring.len &&\
    \ index + i < string.len && string.data[index + i] == substring.data[i]) {\n \
    \       i += 1;\n      }\n      if (i == substring.len) {\n        count += 1;\n\
    \      }\n      index += i;\n    } else {\n      index += 1;\n    }\n  }\n  return\
    \ count;", "  let count = 0\n  let start = 0\n  let end = 0\n  while true {\n\
    \    end = substring.index(string, start)\n    if end == -1 {\n      break\n \
    \   }\n    count += 1\n    start = end + 1\n  }\n  return count", "  let count\
    \ = 0\n  let pos = 0\n  while (pos < string.len) {\n    let i = string.find(substring,\
    \ pos)\n    if i == -1 {\n      break\n    }\n    pos = i + substring.len\n  \
    \  count += 1\n  }\n  return count", "  let count = 0\n  let pos = 0\n  while\
    \ (pos < string.len) {\n    if (string.data.find(substring, pos) == pos) {\n \
    \     count += 1\n      pos += substring.len\n    } else {\n      pos += 1\n \
    \   }\n  }\n  return count", "  let count = 0\n  let index = 0\n  let length =\
    \ substring.length()\n  let string_length = string.length()\n  while (index <\
    \ string_length) {\n    let i = index\n    while (i < string_length && substring[0]\
    \ == string[i]) {\n      i += 1\n    }\n    if (i - index >= length) {\n     \
    \ count += 1\n    }\n    index = i\n  }\n  return count", "  let count = 0\n \
    \ let pos = 0\n  while (pos < string.len) {\n    let idx = string.index(substring,\
    \ pos)\n    if idx == -1 {\n      break\n    }\n    pos = idx + substring.len\n\
    \    count += 1\n  }\n  return count", "  let count = 0;\n  let pos = 0;\n  while\
    \ (pos < string.len) {\n    let next_pos = string.find(substring, pos);\n    if\
    \ (next_pos == -1) {\n      break;\n    }\n    pos = next_pos + substring.len;\n\
    \    count += 1;\n  }\n  return count;", "  let count = 0\n  let i = 0\n  let\
    \ j = 0\n  while (i < string.len) {\n    while (j < substring.len && substring[j]\
    \ == string[i + j]) {\n      j += 1\n    }\n    if (j == substring.len) {\n  \
    \    count += 1\n      j = 0\n    }\n    i += 1\n  }\n  return count", "  let\
    \ count = 0;\n  let start = 0;\n  let end = 0;\n  while ((end = string.find(substring,\
    \ start)) != -1) {\n    count += 1;\n    start = end + substring.length();\n \
    \ }\n  return count;", "  let count = 0\n  let i = 0\n  let j = 0\n  while (i\
    \ < string.len) {\n    while (j < substring.len && substring[j] == string[i +\
    \ j]) {\n      j += 1\n    }\n    if (j == substring.len) {\n      count += 1\n\
    \      j = 0\n    }\n    i += 1\n  }\n  return count", "  let count = 0;\n  let\
    \ pos = 0;\n  while (pos < string.len) {\n    let i = string.find(substring, pos);\n\
    \    if (i == -1) break;\n    pos = i + substring.len;\n    count += 1;\n  }\n\
    \  return count;", "  let count = 0;\n  let pos = 0;\n  while (pos < string.len)\
    \ {\n    let i = string.find(substring, pos);\n    if (i == -1) {\n      break;\n\
    \    }\n    pos = i + substring.len;\n    count += 1;\n  }\n  return count;",
  "  let count = 0;\n  let start = 0;\n  let end = 0;\n  while ((end = string.find(substring,\
    \ start)) != -1) {\n    count += 1;\n    start = end + substring.length();\n \
    \ }\n  return count;", "  let count = 0\n  let pos = 0\n  while (pos < string.len)\
    \ {\n    if (string.data[pos] == substring.data[0]) {\n      let i = 1\n     \
    \ while (i < substring.len && pos + i < string.len && string.data[pos + i] ==\
    \ substring.data[i]) {\n        i += 1\n      }\n      if (i == substring.len)\
    \ {\n        count += 1\n      }\n    }\n    pos += 1\n  }\n  return count", " \
    \ let count = 0\n  let i = 0\n  let j = 0\n  while (i < string.len) {\n    while\
    \ (j < substring.len && string[i] == substring[j]) {\n      i += 1\n      j +=\
    \ 1\n    }\n    j = 0\n    if (i == string.len) {\n      break\n    }\n    count\
    \ += 1\n    i += 1\n  }\n  return count", "  let count = 0\n  let index = 0\n\
    \  while true {\n    index = string.find(substring, index)\n    if index == -1\
    \ {\n      break\n    }\n    count += 1\n    index += 1\n  }\n  return count",
  "  let count = 0;\n  let i = 0;\n  while (i < string.len) {\n    if (string.data[i]\
    \ == substring.data[0]) {\n      let j = i + 1;\n      while (j < string.len &&\
    \ substring.data[j] == string.data[j]) {\n        j += 1;\n      }\n      if (j\
    \ == substring.len) {\n        count += 1;\n      }\n      i = j;\n    } else\
    \ {\n      i += 1;\n    }\n  }\n  return count;", "  let count = 0;\n  let i =\
    \ 0;\n  while (i < string.len) {\n    if (string.data[i] == substring.data[0])\
    \ {\n      let j = 0;\n      while (j < substring.len) {\n        if (string.data[i\
    \ + j] != substring.data[j]) {\n          break;\n        }\n        j += 1;\n\
    \      }\n      if (j == substring.len) {\n        count += 1;\n        i += substring.len;\n\
    \      } else {\n        i += 1;\n      }\n    } else {\n      i += 1;\n    }\n\
    \  }\n  return count;", "  let count = 0;\n  let start = 0;\n  let end = 0;\n\
    \  while ((end = string.find(substring, start)) != -1) {\n    count += 1;\n  \
    \  start = end + substring.length();\n  }\n  return count;", "  let count = 0;\n\
    \  let i = 0;\n  while (i < string.len) {\n    if (string.data[i] == substring.data[0])\
    \ {\n      let j = 1;\n      while (j < substring.len && i + j < string.len &&\
    \ string.data[i + j] == substring.data[j]) {\n        j += 1;\n      }\n     \
    \ if (j == substring.len) {\n        count += 1;\n        i += j;\n      } else\
    \ {\n        i += 1;\n      }\n    } else {\n      i += 1;\n    }\n  }\n  return\
    \ count;", "  let count = 0;\n  let i = 0;\n  while (i < string.len) {\n    if\
    \ (string.data[i] == substring.data[0]) {\n      let j = i + 1;\n      while (j\
    \ < string.len && substring.data[j] == string.data[j]) {\n        j += 1;\n  \
    \    }\n      if (j == substring.len) {\n        count += 1;\n      }\n      i\
    \ = j;\n    } else {\n      i += 1;\n    }\n  }\n  return count;", "  let count\
    \ = 0;\n  let start = 0;\n  let end = 0;\n  while ((end = string.find(substring,\
    \ start)) != -1) {\n    count += 1;\n    start = end + substring.length();\n \
    \ }\n  return count;", "  let count = 0\n  let i = 0\n  while (i < string.len)\
    \ {\n    if (string.data[i] == substring.data[0]) {\n      let j = i\n      while\
    \ (j < string.len && substring.data[0] == string.data[j]) {\n        j += 1\n\
    \      }\n      if (j - i == substring.len) {\n        count += 1\n      }\n \
    \     i = j\n    } else {\n      i += 1\n    }\n  }\n  return count", "  let count\
    \ = 0;\n  let pos = 0;\n  while (pos < string.len) {\n    let next_pos = string.find(substring,\
    \ pos);\n    if (next_pos == -1) {\n      break;\n    }\n    pos = next_pos +\
    \ substring.len;\n    count += 1;\n  }\n  return count;", "  let count = 0\n \
    \ let index = 0\n  let length = substring.length()\n  while (index < string.length()\
    \ - length + 1) {\n    if (string.substr(index, length) == substring) {\n    \
    \  count += 1\n    }\n    index += 1\n  }\n  return count", "  let count = 0;\n\
    \  let pos = 0;\n  while (pos < string.len) {\n    if (string.data[pos] == substring.data[0])\
    \ {\n      let i = 1;\n      while (i < substring.len && string.data[pos + i]\
    \ == substring.data[i]) {\n        i += 1;\n      }\n      if (i == substring.len)\
    \ {\n        count += 1;\n      }\n    }\n    pos += 1;\n  }\n  return count;",
  "  let count = 0\n  let pos = 0\n  while (pos < string.len) {\n    let i = string.find(substring,\
    \ pos)\n    if i == -1 {\n      break\n    }\n    pos = i + substring.len\n  \
    \  count += 1\n  }\n  return count", "  let count = 0;\n  let pos = 0;\n  while\
    \ (pos < string.len) {\n    let next_pos = string.find(substring, pos);\n    if\
    \ (next_pos == -1) {\n      break;\n    }\n    count += 1;\n    pos = next_pos\
    \ + substring.len;\n  }\n  return count;", "  let count = 0;\n  let i = 0;\n \
    \ while (i < string.len) {\n    let j = i;\n    while (j < string.len && substring.len\
    \ > 0) {\n      if (string.data[j] != substring.data[0]) {\n        break;\n \
    \     }\n      j += 1;\n      substring = substring.drop(1);\n    }\n    if (substring.len\
    \ == 0) {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;", "  let\
    \ count = 0\n  let start = 0\n  let end = 0\n  while true {\n    end = substring.find(substring,\
    \ start)\n    if end == -1 {\n      break\n    }\n    count += 1\n    start =\
    \ end + 1\n  }\n  return count", "  let count = 0\n  let pos = 0\n  while (pos\
    \ < string.len) {\n    if (string.data[pos] == substring.data[0]) {\n      let\
    \ i = 1\n      while (i < substring.len && pos + i < string.len && string.data[pos\
    \ + i] == substring.data[i]) {\n        i += 1\n      }\n      if (i == substring.len)\
    \ {\n        count += 1\n      }\n    }\n    pos += 1\n  }\n  return count", " \
    \ let count = 0\n  let index = 0\n  while true {\n    index = string.find(substring,\
    \ index)\n    if index == -1 {\n      break\n    }\n    count += 1\n    index\
    \ += 1\n  }\n  return count", "  let count = 0;\n  let pos = 0;\n  while (pos\
    \ < string.len) {\n    if (string.data[pos] == substring.data[0]) {\n      let\
    \ i = 1;\n      while (i < substring.len && string.data[pos + i] == substring.data[i])\
    \ {\n        i += 1;\n      }\n      if (i == substring.len) {\n        count\
    \ += 1;\n        pos += i;\n      }\n    } else {\n      pos += 1;\n    }\n  }\n\
    \  return count;", "  let count = 0;\n  let pos = 0;\n  while (pos < string.len)\
    \ {\n    if (string.data[pos] == substring.data[0]) {\n      let i = 1;\n    \
    \  while (i < substring.len && string.data[pos + i] == substring.data[i]) {\n\
    \        i += 1;\n      }\n      if (i == substring.len) {\n        count += 1;\n\
    \        pos += i;\n      }\n    } else {\n      pos += 1;\n    }\n  }\n  return\
    \ count;", "  let count = 0;\n  let i = 0;\n  while (i < string.len) {\n    if\
    \ (string.data[i] == substring.data[0]) {\n      let j = 1;\n      while (j <\
    \ substring.len && i + j < string.len && string.data[i + j] == substring.data[j])\
    \ {\n        j += 1;\n      }\n      if (j == substring.len) {\n        count\
    \ += 1;\n        i += j;\n      }\n    }\n    i += 1;\n  }\n  return count;",
  "  let count = 0\n  let pos = 0\n  let len = substring.length()\n  while (pos <\
    \ string.length()) {\n    if (string.substring(pos, pos + len).equals(substring))\
    \ {\n      count += 1\n      pos += len\n    } else {\n      pos += 1\n    }\n\
    \  }\n  return count", "  let count = 0\n  let i = 0\n  let j = 0\n  while (i\
    \ < string.len) {\n    while (j < substring.len && substring[j] == string[i +\
    \ j]) {\n      j += 1\n    }\n    if (j == substring.len) {\n      count += 1\n\
    \      j = 0\n    }\n    i += 1\n  }\n  return count", "  let count = 0;\n  let\
    \ start = 0;\n  let end = 0;\n  while ((end = string.find(substring, start)) !=\
    \ -1) {\n    count += 1;\n    start = end + 1;\n  }\n  return count;", "  let\
    \ count = 0;\n  let index = 0;\n  while (index < string.len) {\n    if (string.data[index]\
    \ == substring.data[0]) {\n      let i = 1;\n      while (i < substring.len &&\
    \ string.data[index + i] == substring.data[i]) {\n        i += 1;\n      }\n \
    \     if (i == substring.len) {\n        count += 1;\n      }\n      index +=\
    \ i;\n    } else {\n      index += 1;\n    }\n  }\n  return count;", "  let count\
    \ = 0;\n  let pos = 0;\n  while (true) {\n    pos = string.find(substring, pos);\n\
    \    if (pos == -1) break;\n    count += 1;\n    pos += substring.length();\n\
    \  }\n  return count;", "  let count = 0;\n  let pos = 0;\n  while (pos < string.len)\
    \ {\n    if (string.data[pos] == substring.data[0]) {\n      let i = 1;\n    \
    \  while (i < substring.len && pos + i < string.len && string.data[pos + i] ==\
    \ substring.data[i]) {\n        i += 1;\n      }\n      if (i == substring.len)\
    \ {\n        count += 1;\n      }\n    }\n    pos += 1;\n  }\n  return count;",
  "  let count = 0\n  let pos = 0\n  let subpos = 0\n  while (pos < string.len) {\n\
    \    if (subpos == substring.len) {\n      count += 1\n      subpos = 0\n    }\n\
    \    if (string.data[pos] == substring.data[subpos]) {\n      subpos += 1\n  \
    \  } else {\n      subpos = 0\n    }\n    pos += 1\n  }\n  return count", "  let\
    \ count = 0\n  let pos = 0\n  while (pos < string.len) {\n    if (string.data[pos]\
    \ == substring.data[0]) {\n      let i = 1\n      while (i < substring.len &&\
    \ string.data[pos + i] == substring.data[i]) {\n        i += 1\n      }\n    \
    \  if (i == substring.len) {\n        count += 1\n        pos += i\n      }\n\
    \    } else {\n      pos += 1\n    }\n  }\n  return count", "  let count = 0\n\
    \  let i = 0\n  let j = 0\n  while (i < string.len) {\n    while (j < substring.len\
    \ && substring[j] == string[i + j]) {\n      j += 1\n    }\n    if (j == substring.len)\
    \ {\n      count += 1\n      j = 0\n    }\n    i += 1\n  }\n  return count", " \
    \ let count = 0;\n  let i = 0;\n  while (i < string.len) {\n    let j = i;\n \
    \   while (j < string.len && substring.len > 0) {\n      if (string[j] != substring[0])\
    \ {\n        break;\n      }\n      j += 1;\n      substring = substring.drop(1);\n\
    \    }\n    if (substring.len == 0) {\n      count += 1;\n    }\n    i += 1;\n\
    \  }\n  return count;", "  let count = 0;\n  let i = 0;\n  while (i < string.len)\
    \ {\n    let j = i + substring.len;\n    if (j > string.len) {\n      break;\n\
    \    }\n    if (string.data.slice(i, j) == substring) {\n      count += 1;\n \
    \     i = j;\n    } else {\n      i += 1;\n    }\n  }\n  return count;", "  let\
    \ count = 0;\n  let pos = 0;\n  while (pos < string.len) {\n    let idx = string.index(pos,\
    \ substring);\n    if (idx == -1) break;\n    count += 1;\n    pos = idx + substring.len;\n\
    \  }\n  return count;", "  let count = 0;\n  let i = 0;\n  while (i < string.len)\
    \ {\n    if (string.data[i] == substring.data[0]) {\n      let j = i + 1;\n  \
    \    while (j < string.len && substring.data[j] == string.data[j]) {\n       \
    \ j += 1;\n      }\n      if (j == substring.len) {\n        count += 1;\n   \
    \   }\n      i = j;\n    } else {\n      i += 1;\n    }\n  }\n  return count;",
  "  let count = 0;\n  let pos = 0;\n  while (pos < string.len) {\n    let next_pos\
    \ = string.find(substring, pos);\n    if (next_pos == -1) {\n      break;\n  \
    \  }\n    pos = next_pos + substring.len;\n    count += 1;\n  }\n  return count;",
  "  let count = 0\n  let start = 0\n  let end = 0\n  while (true) {\n    end = substring.find(substring,\
    \ start)\n    if end == -1 {\n      break\n    }\n    count += 1\n    start =\
    \ end + 1\n  }\n  return count", "  let count = 0;\n  let pos = 0;\n  while (pos\
    \ < string.len) {\n    let i = string.index(substring, pos);\n    if (i == -1)\
    \ break;\n    pos = i + substring.len;\n    count += 1;\n  }\n  return count;",
  "  let count = 0;\n  let start = 0;\n  let end = 0;\n  while ((end = string.find(substring,\
    \ start)) != -1) {\n    count += 1;\n    start = end + substring.length();\n \
    \ }\n  return count;", "  let count = 0\n  let start = 0\n  let end = 0\n  let\
    \ substring_length = substring.length()\n  while (start < string.length()) {\n\
    \    end = string.index_of(substring, start)\n    if (end == -1) {\n      break\n\
    \    }\n    count += 1\n    start = end + substring_length\n  }\n  return count",
  "  let count = 0\n  let i = 0\n  while (i < string.len) {\n    if (string.data[i]\
    \ == substring.data[0]) {\n      let j = i\n      while (j < string.len && substring.data[0]\
    \ == string.data[j]) {\n        j += 1\n      }\n      if (j - i == substring.len)\
    \ {\n        count += 1\n        i = j\n      }\n    }\n    i += 1\n  }\n  return\
    \ count", "  let count = 0;\n  let start = 0;\n  let end = 0;\n  while ((end =\
    \ string.find(substring, start)) != -1) {\n    count += 1;\n    start = end +\
    \ substring.length();\n  }\n  return count;", "  let count = 0;\n  let pos = 0;\n\
    \  while (pos < string.len) {\n    let i = string.index(substring, pos);\n   \
    \ if (i == -1) break;\n    pos = i + substring.len;\n    count += 1;\n  }\n  return\
    \ count;", "  let count = 0;\n  let pos = 0;\n  while (pos < string.len) {\n \
    \   if (string.data[pos] == substring.data[0]) {\n      let i = 1;\n      while\
    \ (i < substring.len && pos + i < string.len && string.data[pos + i] == substring.data[i])\
    \ {\n        i += 1;\n      }\n      if (i == substring.len) {\n        count\
    \ += 1;\n      }\n      pos += i;\n    } else {\n      pos += 1;\n    }\n  }\n\
    \  return count;", "  let count = 0;\n  let pos = 0;\n  while (pos < string.len)\
    \ {\n    if (string.data[pos] == substring.data[0]) {\n      let i = 1;\n    \
    \  while (i < substring.len && string.data[pos + i] == substring.data[i]) {\n\
    \        i += 1;\n      }\n      if (i == substring.len) {\n        count += 1;\n\
    \      }\n    }\n    pos += 1;\n  }\n  return count;", "  let count = 0;\n  let\
    \ start = 0;\n  let end = 0;\n  while ((end = string.find(substring, start)) !=\
    \ -1) {\n    count += 1;\n    start = end + substring.length();\n  }\n  return\
    \ count;", "  let count = 0;\n  let i = 0;\n  while (i < string.len) {\n    let\
    \ j = i;\n    while (j < string.len && substring.contains(string.data[j])) {\n\
    \      j += 1;\n    }\n    if (j - i == substring.len) {\n      count += 1;\n\
    \    }\n    i = j;\n  }\n  return count;", "  let count = 0\n  let pos = 0\n \
    \ while (pos < string.len) {\n    let i = string.find(substring, pos)\n    if\
    \ i == -1 {\n      break\n    }\n    pos = i + substring.len\n    count += 1\n\
    \  }\n  return count", "  let count = 0\n  let pos = 0\n  let substring_pos =\
    \ 0\n  let substring_length = substring.length()\n  let string_length = string.length()\n\
    \  while (pos < string_length) {\n    if (string[pos] == substring[substring_pos])\
    \ {\n      if (substring_pos == substring_length - 1) {\n        count += 1\n\
    \        substring_pos = 0\n      } else {\n        substring_pos += 1\n     \
    \ }\n    } else {\n      substring_pos = 0\n    }\n    pos += 1\n  }\n  return\
    \ count", "  let count = 0\n  let pos = 0\n  let substring_pos = 0\n  while (pos\
    \ < string.len) {\n    if (substring_pos == substring.len) {\n      substring_pos\
    \ = 0\n      count += 1\n    }\n    if (string[pos] == substring[substring_pos])\
    \ {\n      substring_pos += 1\n    } else {\n      substring_pos = 0\n    }\n\
    \    pos += 1\n  }\n  return count", "  let count = 0\n  let start = 0\n  let\
    \ end = 0\n  while (start < string.len) {\n    end = string.find(substring, start)\n\
    \    if end == -1 {\n      break\n    }\n    count += 1\n    start = end + substring.len\n\
    \  }\n  return count", "  let count = 0;\n  let pos = 0;\n  while (pos < string.len)\
    \ {\n    if (string.data[pos] == substring.data[0]) {\n      let i = 1;\n    \
    \  while (i < substring.len && string.data[pos + i] == substring.data[i]) {\n\
    \        i += 1;\n      }\n      if (i == substring.len) {\n        count += 1;\n\
    \      }\n    }\n    pos += 1;\n  }\n  return count;", "  let count = 0\n  let\
    \ i = 0\n  let j = 0\n  while (i < string.len) {\n    while (j < substring.len\
    \ && substring[j] == string[i + j]) {\n      j += 1\n    }\n    if (j == substring.len)\
    \ {\n      count += 1\n      j = 0\n    }\n    i += 1\n  }\n  return count", " \
    \ let count = 0;\n  let i = 0;\n  while (i < string.len) {\n    let j = i;\n \
    \   while (j < string.len && substring.contains(string.data[j])) {\n      j +=\
    \ 1;\n    }\n    if (j > i) {\n      count += 1;\n    }\n    i = j;\n  }\n  return\
    \ count;", "  let count = 0;\n  let i = 0;\n  while (i < string.len) {\n    if\
    \ (string.data[i] == substring.data[0]) {\n      let j = i + 1;\n      while (j\
    \ < string.len && substring.data[j] == string.data[j]) {\n        j += 1;\n  \
    \    }\n      if (j == substring.len) {\n        count += 1;\n      }\n      i\
    \ = j;\n    } else {\n      i += 1;\n    }\n  }\n  return count;", "  let count\
    \ = 0\n  let start = 0\n  let end = 0\n  while (start < string.len) {\n    end\
    \ = string.index(substring, start)\n    if end == -1 {\n      break\n    }\n \
    \   count += 1\n    start = end + substring.len\n  }\n  return count", "  let\
    \ count = 0\n  let pos = 0\n  let len = substring.length()\n  while (pos < string.length())\
    \ {\n    if (string.at(pos) == substring.at(0)) {\n      count += 1\n      pos\
    \ += 1\n      while (pos < string.length() && substring.at(0) == string.at(pos))\
    \ {\n        pos += 1\n      }\n    } else {\n      pos += 1\n    }\n  }\n  return\
    \ count", "  let count = 0;\n  let pos = 0;\n  while (pos < string.len) {\n  \
    \  if (string.data[pos] == substring.data[0]) {\n      let i = 1;\n      while\
    \ (i < substring.len && string.data[pos + i] == substring.data[i]) {\n       \
    \ i += 1;\n      }\n      if (i == substring.len) {\n        count += 1;\n   \
    \   }\n    }\n    pos += 1;\n  }\n  return count;", "  let count = 0\n  let start\
    \ = 0\n  let end = 0\n  while (start < string.len) {\n    end = string.index(substring,\
    \ start)\n    if end == -1 {\n      break\n    }\n    count += 1\n    start =\
    \ end + substring.len\n  }\n  return count", "  let count = 0;\n  let start =\
    \ 0;\n  while (start < string.len) {\n    let end = string.index_of(substring,\
    \ start);\n    if (end == -1) {\n      break;\n    }\n    count += 1;\n    start\
    \ = end + substring.len;\n  }\n  return count;", "  let count = 0;\n  let pos\
    \ = 0;\n  while (pos < string.len) {\n    let idx = string.find(substring, pos);\n\
    \    if (idx == -1) break;\n    pos = idx + substring.len;\n    count += 1;\n\
    \  }\n  return count;", "  let count = 0\n  let i = 0\n  let j = 0\n  while (i\
    \ < string.len) {\n    while (j < substring.len && string[i] == substring[j])\
    \ {\n      j += 1\n      i += 1\n    }\n    j = 0\n    i += 1\n    if (i == string.len)\
    \ {\n      count += 1\n    }\n  }\n  return count", "  let count = 0\n  let i\
    \ = 0\n  while (i < string.len) {\n    let j = i + substring.len\n    if (j >\
    \ string.len) {\n      break\n    }\n    if (string.data[i..j] == substring) {\n\
    \      count += 1\n    }\n    i += 1\n  }\n  return count", "  let count = 0;\n\
    \  let pos = 0;\n  while (pos < string.len) {\n    let i = string.find(substring,\
    \ pos);\n    if (i == -1) break;\n    pos = i + substring.len;\n    count += 1;\n\
    \  }\n  return count;", "  let count = 0;\n  let index = 0;\n  while (index <\
    \ string.len) {\n    if (string.data[index] == substring.data[0]) {\n      let\
    \ i = 1;\n      while (i < substring.len && string.data[index + i] == substring.data[i])\
    \ {\n        i += 1;\n      }\n      if (i == substring.len) {\n        count\
    \ += 1;\n        index += i;\n      } else {\n        index += 1;\n      }\n \
    \   } else {\n      index += 1;\n    }\n  }\n  return count;", "  let count =\
    \ 0\n  let start = 0\n  let end = 0\n  let substring_length = substring.length()\n\
    \  while (start < string.length()) {\n    end = string.index_of(substring, start)\n\
    \    if (end == -1) {\n      break\n    }\n    count += 1\n    start = end + substring_length\n\
    \  }\n  return count", "  let count = 0;\n  let pos = 0;\n  while (pos < string.len)\
    \ {\n    if (string.data[pos] == substring.data[0]) {\n      let i = 1;\n    \
    \  while (i < substring.len && pos + i < string.len && string.data[pos + i] ==\
    \ substring.data[i]) {\n        i += 1;\n      }\n      if (i == substring.len)\
    \ {\n        count += 1;\n      }\n    }\n    pos += 1;\n  }\n  return count;",
  "  let count = 0;\n  let start = 0;\n  while (start < string.len) {\n    let end\
    \ = string.find(substring, start);\n    if (end == -1) {\n      break;\n    }\n\
    \    count += 1;\n    start = end + substring.len;\n  }\n  return count;", " \
    \ let count = 0\n  let i = 0\n  let j = 0\n  while (i < string.len) {\n    while\
    \ (j < substring.len && substring[j] == string[i + j]) {\n      j += 1\n    }\n\
    \    if (j == substring.len) {\n      count += 1\n      j = 0\n    }\n    i +=\
    \ 1\n  }\n  return count", "  let count = 0;\n  let pos = 0;\n  while (pos < string.len)\
    \ {\n    let next_pos = string.index(substring, pos);\n    if (next_pos == -1)\
    \ {\n      break;\n    }\n    pos = next_pos + substring.len;\n    count += 1;\n\
    \  }\n  return count;", "  let count = 0\n  let pos = 0\n  while (pos < string.len)\
    \ {\n    let pos2 = substring.index(string.data[pos])\n    if pos2 == -1 {\n \
    \     break\n    }\n    pos += pos2\n    count += 1\n  }\n  return count", " \
    \ let count = 0;\n  let i = 0;\n  while (i < string.len) {\n    let j = 0;\n \
    \   while (j < substring.len && i + j < string.len) {\n      if (string.data[i\
    \ + j] != substring.data[j]) {\n        break;\n      }\n      j += 1;\n    }\n\
    \    if (j == substring.len) {\n      count += 1;\n      i += substring.len;\n\
    \    } else {\n      i += 1;\n    }\n  }\n  return count;", "  let count = 0\n\
    \  let pos = 0\n  let substring_pos = 0\n  while (pos < string.len) {\n    if\
    \ (substring_pos < substring.len && substring[substring_pos] == string[pos]) {\n\
    \      substring_pos += 1\n      pos += 1\n      if (substring_pos == substring.len)\
    \ {\n        count += 1\n        substring_pos = 0\n      }\n    } else {\n  \
    \    substring_pos = 0\n      pos += 1\n    }\n  }\n  return count"]
stop_tokens:
- "\n}"

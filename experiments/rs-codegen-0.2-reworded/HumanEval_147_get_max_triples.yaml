name: HumanEval_147_get_max_triples
language: rs
prompt: "/// You are given a positive integer n. You have to create an integer vector\
  \ a of length n.\n/// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
  \ i - i + 1.\n/// Return the number of triples (a[i], a[j], a[k]) of a where i <\
  \ j < k, \n/// and a[i] + a[j] + a[k] is a multiple of 3.\n/// Example :\n/// >>>\
  \ get_max_triples(5)\n/// 1\n/// Explanation: \n/// a = [1, 3, 7, 13, 21]\n/// The\
  \ only valid triple is (1, 7, 13).\nfn get_max_triples(n: isize) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = get_max_triples;\n    assert_eq!(candidate(5),\
  \ 1);\n    assert_eq!(candidate(6), 4);\n    assert_eq!(candidate(10), 36);\n  \
  \  assert_eq!(candidate(100), 53361);\n}\n"
completions: ["  let a = [0] * n;\n  for i in 0..n {\n    a[i] = i * i - i + 1;\n\
    \  }\n  let result = 0;\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n\
    \      for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n       \
    \   result += 1;\n        }\n      }\n    }\n  }\n  return result;", "  let a\
    \ = vec(n);\n  let max_triples = 0;\n  for i in 0..n {\n    for j in i + 1..n\
    \ {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n   \
    \       max_triples += 1;\n        }\n      }\n    }\n  }\n  return max_triples;",
  "  let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let res\
    \ = 0\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j +\
    \ 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          res += 1\n     \
    \   }\n      }\n    }\n  }\n  return res", "  let a = [0] * n\n  for i in 0..n\
    \ {\n    a[i] = i * i - i + 1\n  }\n  let max = 0\n  for i in 0..n - 2 {\n   \
    \ for j in i + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j] +\
    \ a[k] % 3 == 0 {\n          max = max + 1\n        }\n      }\n    }\n  }\n \
    \ return max", "  let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n\
    \  }\n  let max = 0\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n    \
    \  for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          max\
    \ = max + 1\n        }\n      }\n    }\n  }\n  return max", "  let a = [0] * n;\n\
    \  for i in 0..n {\n    a[i] = i * i - i + 1;\n  }\n  let max = 0;\n  for i in\
    \ 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n {\n       \
    \ if (a[i] + a[j] + a[k] % 3 == 0) {\n          max = max + 1;\n        }\n  \
    \    }\n    }\n  }\n  return max;", "  let a = [0] * n\n  for i in 0..n {\n  \
    \  a[i] = i * i - i + 1\n  }\n  let res = 0\n  for i in 0..n - 2 {\n    for j\
    \ in i + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k]\
    \ % 3 == 0 {\n          res += 1\n        }\n      }\n    }\n  }\n  return res",
  "  let a = vec(n);\n  let max = 0;\n  for i in 0..n {\n    for j in i + 1..n {\n\
    \      for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n       \
    \   max = max + 1;\n        }\n      }\n    }\n  }\n  return max;", "  let a =\
    \ [0] * n\n  let count = 0\n  for i in 0..n {\n    for j in i + 1..n {\n     \
    \ for k in j + 1..n {\n        if (a[i] + a[j] + a[k]) % 3 == 0 {\n          count\
    \ += 1\n        }\n      }\n    }\n  }\n  return count", "  let a = vec(n);\n\
    \  let res = 0;\n  for i in 0..n {\n    for j in i + 1..n {\n      for k in j\
    \ + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          res += 1;\n  \
    \      }\n      }\n    }\n  }\n  return res;", "  let a = vec(n);\n  let res =\
    \ 0;\n  for i in 0..n - 1 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n\
    \ - 1 {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          res += 1;\n     \
    \   }\n      }\n    }\n  }\n  return res;", "  let a = [0] * n\n  for i in 0..n\
    \ {\n    a[i] = i * i - i + 1\n  }\n  let res = 0\n  for i in 0..n - 2 {\n   \
    \ for j in i + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j] +\
    \ a[k] % 3 == 0 {\n          res += 1\n        }\n      }\n    }\n  }\n  return\
    \ res", "  let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n\
    \  let max_triples = 0\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n \
    \     for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n        \
    \  max_triples += 1\n        }\n      }\n    }\n  }\n  return max_triples", " \
    \ let a = vec(n);\n  let max = 0;\n  for i in 0..n {\n    for j in i + 1..n {\n\
    \      for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n       \
    \   max = max + 1;\n        }\n      }\n    }\n  }\n  return max;", "  let a =\
    \ [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let res = 0\n \
    \ for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n {\n\
    \        if a[i] + a[j] + a[k] % 3 == 0 {\n          res += 1\n        }\n   \
    \   }\n    }\n  }\n  return res", "  let a = [0] * n\n  for i in 0..n {\n    a[i]\
    \ = i * i - i + 1\n  }\n  let res = 0\n  for i in 0..n - 2 {\n    for j in i +\
    \ 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 ==\
    \ 0 {\n          res += 1\n        }\n      }\n    }\n  }\n  return res", "  let\
    \ a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let max = 0\n\
    \  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n {\n\
    \        if a[i] + a[j] + a[k] % 3 == 0 {\n          max = max + 1\n        }\n\
    \      }\n    }\n  }\n  return max", "  let a = [0] * n\n  for i in 0..n {\n \
    \   a[i] = i * i - i + 1\n  }\n  let max = 0\n  for i in 0..n - 2 {\n    for j\
    \ in i + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k]\
    \ % 3 == 0 {\n          max = max + 1\n        }\n      }\n    }\n  }\n  return\
    \ max", "  let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n\
    \  let max = 0\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for\
    \ k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          max = max\
    \ + 1\n        }\n      }\n    }\n  }\n  return max", "  let a = vec(n);\n  let\
    \ result = 0;\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k\
    \ in j + 1..n - 1 {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          result\
    \ += 1;\n        }\n      }\n    }\n  }\n  return result;", "  let a = [0] * n\n\
    \  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let res = 0\n  for i in 0..n\
    \ - 2 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i]\
    \ + a[j] + a[k] % 3 == 0 {\n          res += 1\n        }\n      }\n    }\n  }\n\
    \  return res", "  let a = [0] * n;\n  for i in 0..n {\n    a[i] = i * i - i +\
    \ 1;\n  }\n  let res = 0;\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n\
    \      for k in j + 1..n {\n        if (a[i] + a[j] + a[k]) % 3 == 0 {\n     \
    \     res += 1;\n        }\n      }\n    }\n  }\n  return res;", "  let a = make(n,\
    \ 0);\n  for i in 0..n {\n    a[i] = i * i - i + 1;\n  }\n  let res = 0;\n  for\
    \ i in 0..n - 1 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n - 1 {\n\
    \        if a[i] + a[j] + a[k] % 3 == 0 {\n          res += 1;\n        }\n  \
    \    }\n    }\n  }\n  return res;", "  let a = [0] * n\n  for i in 0..n {\n  \
    \  a[i] = i * i - i + 1\n  }\n  let count = 0\n  for i in 0..n - 2 {\n    for\
    \ j in i + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k]\
    \ % 3 == 0 {\n          count += 1\n        }\n      }\n    }\n  }\n  return count",
  "  let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let max\
    \ = 0\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j +\
    \ 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          max = max + 1\n\
    \        }\n      }\n    }\n  }\n  return max", "  let a = [0] * n\n  let count\
    \ = 0\n  for i in 0..n {\n    for j in i + 1..n {\n      for k in j + 1..n {\n\
    \        if a[i] + a[j] + a[k] % 3 == 0 {\n          count += 1\n        }\n \
    \     }\n    }\n  }\n  return count", "  let a = [0] * n;\n  for i in 0..n {\n\
    \    a[i] = i * i - i + 1;\n  }\n  let result = 0;\n  for i in 0..n - 2 {\n  \
    \  for j in i + 1..n - 1 {\n      for k in j + 1..n {\n        if (a[i] + a[j]\
    \ + a[k]) % 3 == 0 {\n          result += 1;\n        }\n      }\n    }\n  }\n\
    \  return result;", "  let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i -\
    \ i + 1\n  }\n  let res = 0\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1\
    \ {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n   \
    \       res += 1\n        }\n      }\n    }\n  }\n  return res", "  let a = vec(n);\n\
    \  for i in 0..n {\n    a[i] = i * i - i + 1;\n  }\n  let max = 0;\n  for i in\
    \ 0..n {\n    for j in 0..i {\n      for k in j + 1..n {\n        if a[i] + a[j]\
    \ + a[k] % 3 == 0 {\n          max = max + 1;\n        }\n      }\n    }\n  }\n\
    \  return max;", "  let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i +\
    \ 1\n  }\n  let result = 0\n  for i in 0..n {\n    for j in i + 1..n {\n     \
    \ for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          result\
    \ += 1\n        }\n      }\n    }\n  }\n  return result", "  let a = make(n, 0);\n\
    \  for i in 0..n {\n    a[i] = i * i - i + 1;\n  }\n  let max = 0;\n  for i in\
    \ 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n {\n       \
    \ if a[i] + a[j] + a[k] % 3 == 0 {\n          max = max + 1;\n        }\n    \
    \  }\n    }\n  }\n  return max;", "  let a = [0] * n\n  let count = 0\n  for i\
    \ in 0..n {\n    for j in i + 1..n {\n      for k in j + 1..n {\n        if (a[i]\
    \ + a[j] + a[k]) % 3 == 0 {\n          count += 1\n        }\n      }\n    }\n\
    \  }\n  return count", "  let a = [0] * n;\n  for i in 0..n {\n    a[i] = i *\
    \ i - i + 1;\n  }\n  let max = 0;\n  for i in 0..n - 2 {\n    for j in i + 1..n\
    \ - 1 {\n      for k in j + 1..n {\n        if (a[i] + a[j] + a[k]) % 3 == 0 {\n\
    \          max = max + 1;\n        }\n      }\n    }\n  }\n  return max;", " \
    \ let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let res\
    \ = 0\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j +\
    \ 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          res += 1\n     \
    \   }\n      }\n    }\n  }\n  return res", "  let a = vec(n);\n  let max = 0;\n\
    \  for i in 0..n {\n    for j in i + 1..n {\n      for k in j + 1..n {\n     \
    \   if (a[i] + a[j] + a[k]) % 3 == 0 {\n          max = max + 1;\n        }\n\
    \      }\n    }\n  }\n  return max;", "  let a = [0] * n\n  for i in 0..n {\n\
    \    a[i] = i * i - i + 1\n  }\n  let res = 0\n  for i in 0..n {\n    for j in\
    \ 0..i {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n\
    \          res += 1\n        }\n      }\n    }\n  }\n  return res", "  let a =\
    \ vec(n);\n  let res = 0;\n  for i in 0..n {\n    for j in 0..i {\n      for k\
    \ in 0..j {\n        if i < j and j < k and a[i] + a[j] + a[k] % 3 == 0 {\n  \
    \        res += 1;\n        }\n      }\n    }\n  }\n  return res;", "  let a =\
    \ vec(n);\n  let count = 0;\n  for i in 0..n {\n    for j in i + 1..n {\n    \
    \  for k in j + 1..n {\n        if (a[i] + a[j] + a[k]) % 3 == 0 {\n         \
    \ count += 1;\n        }\n      }\n    }\n  }\n  return count;", "  let a = [0]\
    \ * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let res = 0\n  for\
    \ i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n {\n  \
    \      if a[i] + a[j] + a[k] % 3 == 0 {\n          res += 1\n        }\n     \
    \ }\n    }\n  }\n  return res", "  let a = [0] * n\n  for i in 0..n {\n    a[i]\
    \ = i * i - i + 1\n  }\n  let max = 0\n  for i in 0..n {\n    for j in 0..i {\n\
    \      for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n       \
    \   max = max + 1\n        }\n      }\n    }\n  }\n  return max", "  let a = [0]\
    \ * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let res = 0\n  for\
    \ i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n {\n  \
    \      if a[i] + a[j] + a[k] % 3 == 0 {\n          res += 1\n        }\n     \
    \ }\n    }\n  }\n  return res", "  let a = [0] * n\n  a[0] = 1\n  for i in 1..n\
    \ {\n    a[i] = i * i - i + 1\n  }\n  let max = 0\n  for i in 1..n {\n    for\
    \ j in i + 1..n {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k] %\
    \ 3 == 0 {\n          max = max + 1\n        }\n      }\n    }\n  }\n  return\
    \ max", "  let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n\
    \  let result = 0\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for\
    \ k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          result\
    \ += 1\n        }\n      }\n    }\n  }\n  return result", "  let a = [0] * n\n\
    \  let max = 0\n  for i in 0..n {\n    for j in 0..i {\n      for k in 0..j {\n\
    \        if i < j and j < k and a[i] + a[j] + a[k] % 3 == 0 {\n          max =\
    \ max + 1\n        }\n      }\n    }\n    a[i] = i * i - i + 1\n  }\n  return\
    \ max", "  let a = vec(n);\n  let count = 0;\n  for i in 0..n - 2 {\n    for j\
    \ in i + 1..n - 1 {\n      for k in j + 1..n - 1 {\n        if a[i] + a[j] + a[k]\
    \ % 3 == 0 {\n          count += 1;\n        }\n      }\n    }\n  }\n  return\
    \ count;", "  let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n \
    \ }\n  let res = 0\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n     \
    \ for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          res\
    \ += 1\n        }\n      }\n    }\n  }\n  return res", "  let a = [0] * n\n  let\
    \ count = 0\n  for i in 0..n {\n    for j in 0..i {\n      for k in 0..j {\n \
    \       if i < j and j < k and (a[i] + a[j] + a[k]) % 3 == 0 {\n          count\
    \ += 1\n        }\n      }\n    }\n    a[i] = i * i - i + 1\n  }\n  return count",
  "  let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let res\
    \ = 0\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j +\
    \ 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          res += 1\n     \
    \   }\n      }\n    }\n  }\n  return res", "  let a = [0] * n\n  for i in 0..n\
    \ {\n    a[i] = i * i - i + 1\n  }\n  let count = 0\n  for i in 0..n - 2 {\n \
    \   for j in i + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j]\
    \ + a[k] % 3 == 0 {\n          count += 1\n        }\n      }\n    }\n  }\n  return\
    \ count", "  let a = vec(n);\n  let max = 0;\n  for i in 0..n {\n    for j in\
    \ 0..i {\n      for k in 0..j {\n        if i < j and j < k and a[i] + a[j] +\
    \ a[k] % 3 == 0 {\n          max = max + 1;\n        }\n      }\n    }\n  }\n\
    \  return max;", "  let a = vec(n);\n  let res = 0;\n  for i in 0..n {\n    for\
    \ j in i + 1..n {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k] %\
    \ 3 == 0 {\n          res += 1;\n        }\n      }\n    }\n  }\n  return res;",
  "  let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let res\
    \ = 0\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j +\
    \ 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          res += 1\n     \
    \   }\n      }\n    }\n  }\n  return res", "  let a = make(n, 0);\n  for i in\
    \ 0..n {\n    a[i] = i * i - i + 1;\n  }\n  let res = 0;\n  for i in 0..n {\n\
    \    for j in 0..i {\n      for k in 0..j {\n        if a[i] + a[j] + a[k] % 3\
    \ == 0 {\n          res += 1;\n        }\n      }\n    }\n  }\n  return res;",
  "  let a = vec(n);\n  let max = 0;\n  for i in 0..n {\n    for j in i + 1..n {\n\
    \      for k in j + 1..n {\n        if (a[i] + a[j] + a[k]) % 3 == 0 {\n     \
    \     max = max + 1;\n        }\n      }\n    }\n  }\n  return max;", "  let a\
    \ = [0] * n;\n  for i in 0..n {\n    a[i] = i * i - i + 1;\n  }\n  let res = 0;\n\
    \  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n {\n\
    \        if a[i] + a[j] + a[k] % 3 == 0 {\n          res += 1;\n        }\n  \
    \    }\n    }\n  }\n  return res;", "  let a = [0] * n\n  for i in 0..n {\n  \
    \  a[i] = i * i - i + 1\n  }\n  let res = 0\n  for i in 0..n - 2 {\n    for j\
    \ in i + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k]\
    \ % 3 == 0 {\n          res += 1\n        }\n      }\n    }\n  }\n  return res",
  "  let a = [0] * n\n  let count = 0\n  for i in 0..n {\n    for j in i + 1..n {\n\
    \      for k in j + 1..n {\n        if (a[i] + a[j] + a[k]) % 3 == 0 {\n     \
    \     count += 1\n        }\n      }\n    }\n  }\n  return count", "  let a =\
    \ vec(n);\n  let res = 0;\n  for i in 0..n {\n    for j in i + 1..n {\n      for\
    \ k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          res +=\
    \ 1;\n        }\n      }\n    }\n  }\n  return res;", "  let a = [0] * n\n  for\
    \ i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let max = 0\n  for i in 0..n -\
    \ 2 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i]\
    \ + a[j] + a[k] % 3 == 0 {\n          max = max + 1\n        }\n      }\n    }\n\
    \  }\n  return max", "  let a = [0] * n\n  let max = 0\n  for i in 0..n {\n  \
    \  for j in i + 1..n {\n      for k in j + 1..n {\n        if (a[i] + a[j] + a[k])\
    \ % 3 == 0 {\n          max = max + 1\n        }\n      }\n    }\n  }\n  return\
    \ max", "  let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n\
    \  let res = 0\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for\
    \ k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          res +=\
    \ 1\n        }\n      }\n    }\n  }\n  return res", "  let a = [0] * n\n  for\
    \ i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let res = 0\n  for i in 0..n {\n\
    \    for j in 0..i {\n      for k in 0..i {\n        if i < j < k and a[i] + a[j]\
    \ + a[k] % 3 == 0 {\n          res += 1\n        }\n      }\n    }\n  }\n  return\
    \ res", "  let a = vec(n);\n  let res = 0;\n  for i in 0..n {\n    for j in i\
    \ + 1..n {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0\
    \ {\n          res += 1;\n        }\n      }\n    }\n  }\n  return res;", "  let\
    \ a = vec!(n);\n  let max = 0;\n  for i in 0..n {\n    for j in i + 1..n {\n \
    \     for k in j + 1..n {\n        if (a[i] + a[j] + a[k]) % 3 == 0 {\n      \
    \    max = max + 1;\n        }\n      }\n    }\n  }\n  return max;", "  let a\
    \ = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let res = 0\n\
    \  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n {\n\
    \        if a[i] + a[j] + a[k] % 3 == 0 {\n          res += 1\n        }\n   \
    \   }\n    }\n  }\n  return res", "  let a = [0] * n\n  let count = 0\n  for i\
    \ in 1..n {\n    for j in i + 1..n {\n      for k in j + 1..n {\n        if a[i]\
    \ + a[j] + a[k] % 3 == 0 {\n          count += 1\n        }\n      }\n    }\n\
    \  }\n  return count", "  let a = [0] * n\n  let count = 0\n  for i in 1..n {\n\
    \    for j in i + 1..n {\n      for k in j + 1..n {\n        if a[i] + a[j] +\
    \ a[k] % 3 == 0 {\n          count += 1\n        }\n      }\n    }\n  }\n  return\
    \ count", "  let a = vec(n);\n  for i in 0..n {\n    a[i] = i * i - i + 1;\n \
    \ }\n  let res = 0;\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n    \
    \  for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          res\
    \ += 1;\n        }\n      }\n    }\n  }\n  return res;", "  let a = [0] * n\n\
    \  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let result = 0\n  for i in\
    \ 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n {\n       \
    \ if a[i] + a[j] + a[k] % 3 == 0 {\n          result += 1\n        }\n      }\n\
    \    }\n  }\n  return result", "  let a = [0] * n;\n  for i in 0..n {\n    a[i]\
    \ = i * i - i + 1;\n  }\n  let max = 0;\n  for i in 0..n - 2 {\n    for j in i\
    \ + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 ==\
    \ 0 {\n          max = max + 1;\n        }\n      }\n    }\n  }\n  return max;",
  "  let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let count\
    \ = 0\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j +\
    \ 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          count += 1\n   \
    \     }\n      }\n    }\n  }\n  return count", "  let a = vec![isize];\n  for\
    \ i in 0..n {\n    a[i] = i * i - i + 1;\n  }\n  let result = 0;\n  for i in 0..n\
    \ - 1 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n - 1 {\n        if\
    \ a[i] + a[j] + a[k] % 3 == 0 {\n          result += 1;\n        }\n      }\n\
    \    }\n  }\n  return result;", "  let a = [0] * n\n  for i in 0..n {\n    a[i]\
    \ = i * i - i + 1\n  }\n  let res = 0\n  for i in 0..n - 2 {\n    for j in i +\
    \ 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 ==\
    \ 0 {\n          res += 1\n        }\n      }\n    }\n  }\n  return res", "  let\
    \ a = [0] * n\n  let count = 0\n  for i in 0..n {\n    for j in i + 1..n {\n \
    \     for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n        \
    \  count += 1\n        }\n      }\n    }\n  }\n  return count", "  let a = [0]\
    \ * n\n  let max = 0\n  for i in 0..n {\n    for j in i + 1..n {\n      for k\
    \ in j + 1..n {\n        if (a[i] + a[j] + a[k]) % 3 == 0 {\n          max = max\
    \ + 1\n        }\n      }\n    }\n  }\n  return max", "  let a = [0] * n\n  for\
    \ i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let max = 0\n  for i in 0..n -\
    \ 2 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i]\
    \ + a[j] + a[k] % 3 == 0 {\n          max = max + 1\n        }\n      }\n    }\n\
    \  }\n  return max", "  let a = [0] * n;\n  for i in 0..n {\n    a[i] = i * i\
    \ - i + 1;\n  }\n  let res = 0;\n  for i in 0..n - 2 {\n    for j in i + 1..n\
    \ - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n\
    \          res += 1;\n        }\n      }\n    }\n  }\n  return res;", "  let a\
    \ = vec(n);\n  for i in 0..n {\n    a[i] = i * i - i + 1;\n  }\n  let result =\
    \ 0;\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n\
    \ {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          result += 1;\n      \
    \  }\n      }\n    }\n  }\n  return result;", "  let a = [0] * n\n  for i in 0..n\
    \ {\n    a[i] = i * i - i + 1\n  }\n  let res = 0\n  for i in 0..n - 2 {\n   \
    \ for j in i + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j] +\
    \ a[k] % 3 == 0 {\n          res += 1\n        }\n      }\n    }\n  }\n  return\
    \ res", "  let a = [0] * n;\n  for i in 0..n {\n    a[i] = i * i - i + 1;\n  }\n\
    \  let res = 0;\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for\
    \ k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          res +=\
    \ 1;\n        }\n      }\n    }\n  }\n  return res;", "  let a = [0] * n\n  let\
    \ count = 0\n  for i in 0..n {\n    for j in i + 1..n {\n      for k in j + 1..n\
    \ {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          count += 1\n        }\n\
    \      }\n    }\n  }\n  return count", "  let a = make(n, 0);\n  for i in 0..n\
    \ {\n    a[i] = i * i - i + 1;\n  }\n  let res = 0;\n  for i in 0..n - 2 {\n \
    \   for j in i + 1..n - 1 {\n      for k in j + 1..n {\n        if (a[i] + a[j]\
    \ + a[k]) % 3 == 0 {\n          res += 1;\n        }\n      }\n    }\n  }\n  return\
    \ res;", "  let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n\
    \  let res = 0\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for\
    \ k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          res +=\
    \ 1\n        }\n      }\n    }\n  }\n  return res", "  let a = [0] * n\n  for\
    \ i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let max = 0\n  for i in 0..n -\
    \ 1 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n - 1 {\n        if\
    \ a[i] + a[j] + a[k] % 3 == 0 {\n          max = max + 1\n        }\n      }\n\
    \    }\n  }\n  return max", "  let a = vec(n);\n  let max = 0;\n  for i in 0..n\
    \ {\n    for j in i + 1..n {\n      for k in j + 1..n {\n        if a[i] + a[j]\
    \ + a[k] % 3 == 0 {\n          max = max + 1;\n        }\n      }\n    }\n  }\n\
    \  return max;", "  let a = vec!(n);\n  let max = 0;\n  for i in 0..n {\n    for\
    \ j in i + 1..n {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k] %\
    \ 3 == 0 {\n          max = max + 1;\n        }\n      }\n    }\n  }\n  return\
    \ max;", "  let a = vec![isize];\n  let i = 0;\n  let j = 0;\n  let k = 0;\n \
    \ let count = 0;\n  for i in 0..n {\n    for j in 0..i {\n      for k in 0..j\
    \ {\n        if i + j + k == 3 * (i * i + j * j + k * k) {\n          count +=\
    \ 1;\n        }\n      }\n    }\n  }\n  return count;", "  let a = make(n, 0);\n\
    \  for i in 0..n {\n    a[i] = i * i - i + 1;\n  }\n  let res = 0;\n  for i in\
    \ 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n {\n       \
    \ if a[i] + a[j] + a[k] % 3 == 0 {\n          res += 1;\n        }\n      }\n\
    \    }\n  }\n  return res;", "  let a = make(n, 0);\n  for i in 0..n {\n    a[i]\
    \ = i * i - i + 1;\n  }\n  let res = 0;\n  for i in 0..n - 2 {\n    for j in i\
    \ + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 ==\
    \ 0 {\n          res += 1;\n        }\n      }\n    }\n  }\n  return res;", " \
    \ let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let max\
    \ = 0\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j +\
    \ 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          max = max + 1\n\
    \        }\n      }\n    }\n  }\n  return max", "  let a = [0] * n;\n  for i in\
    \ 0..n {\n    a[i] = i * i - i + 1;\n  }\n  let result = 0;\n  for i in 0..n -\
    \ 2 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n {\n        if (a[i]\
    \ + a[j] + a[k] % 3 == 0) {\n          result += 1;\n        }\n      }\n    }\n\
    \  }\n  return result;", "  let a = [0] * n\n  for i in 0..n {\n    a[i] = i *\
    \ i - i + 1\n  }\n  let res = 0\n  for i in 0..n {\n    for j in 0..i {\n    \
    \  for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          res\
    \ += 1\n        }\n      }\n    }\n  }\n  return res", "  let a = [0] * n\n  for\
    \ i in 1..n {\n    a[i] = i * i - i + 1\n  }\n  let count = 0\n  for i in 1..n\
    \ {\n    for j in i + 1..n {\n      for k in j + 1..n {\n        if a[i] + a[j]\
    \ + a[k] % 3 == 0 {\n          count += 1\n        }\n      }\n    }\n  }\n  return\
    \ count", "  let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n\
    \  let count = 0\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for\
    \ k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          count +=\
    \ 1\n        }\n      }\n    }\n  }\n  return count", "  let a = [0] * n;\n  for\
    \ i in 0..n {\n    a[i] = i * i - i + 1;\n  }\n  let max = 0;\n  for i in 0..n\
    \ - 2 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i]\
    \ + a[j] + a[k] % 3 == 0 {\n          max = max + 1;\n        }\n      }\n   \
    \ }\n  }\n  return max;", "  let a = make(n, 0);\n  for i in 0..n {\n    a[i]\
    \ = i * i - i + 1;\n  }\n  let res = 0;\n  for i in 0..n - 2 {\n    for j in i\
    \ + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 ==\
    \ 0 {\n          res += 1;\n        }\n      }\n    }\n  }\n  return res;", " \
    \ let a = vec![isize];\n  for i in 0..n {\n    a[i] = i * i - i + 1;\n  }\n  let\
    \ count = 0;\n  for i in 0..n {\n    for j in 0..i {\n      for k in 0..i {\n\
    \        if i < j and j < k and a[i] + a[j] + a[k] % 3 == 0 {\n          count\
    \ += 1;\n        }\n      }\n    }\n  }\n  return count;", "  let a = [0] * n\n\
    \  for i in 1..n {\n    a[i] = i * i - i + 1\n  }\n  let res = 0\n  for i in 1..n\
    \ {\n    for j in i + 1..n {\n      for k in j + 1..n {\n        if a[i] + a[j]\
    \ + a[k] % 3 == 0 {\n          res += 1\n        }\n      }\n    }\n  }\n  return\
    \ res", "  let a = [0] * n;\n  let count = 0;\n  for i in 0..n {\n    for j in\
    \ i + 1..n {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 ==\
    \ 0 {\n          count += 1;\n        }\n      }\n    }\n  }\n  return count;",
  "  let a = vec(n);\n  for i in 0..n {\n    a[i] = i * i - i + 1;\n  }\n  let res\
    \ = 0;\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j +\
    \ 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          res += 1;\n    \
    \    }\n      }\n    }\n  }\n  return res;", "  let a = vec(n);\n  let res = 0;\n\
    \  for i in 0..n {\n    for j in i + 1..n {\n      for k in j + 1..n {\n     \
    \   if a[i] + a[j] + a[k] % 3 == 0 {\n          res += 1;\n        }\n      }\n\
    \    }\n  }\n  return res;", "  let a = [0] * n;\n  for i in 0..n {\n    a[i]\
    \ = i * i - i + 1;\n  }\n  let res = 0;\n  for i in 0..n - 2 {\n    for j in i\
    \ + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 ==\
    \ 0 {\n          res += 1;\n        }\n      }\n    }\n  }\n  return res;", " \
    \ let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let res\
    \ = 0\n  for i in 0..n {\n    for j in i + 1..n {\n      for k in j + 1..n {\n\
    \        if a[i] + a[j] + a[k] % 3 == 0 {\n          res += 1\n        }\n   \
    \   }\n    }\n  }\n  return res", "  let a = make_vec(n, 0);\n  let count = 0;\n\
    \  for i in 0..n {\n    for j in i + 1..n {\n      for k in j + 1..n {\n     \
    \   if a[i] + a[j] + a[k] % 3 == 0 {\n          count += 1;\n        }\n     \
    \ }\n    }\n  }\n  return count;", "  let a = vec(n);\n  let res = 0;\n  for i\
    \ in 0..n {\n    for j in 0..i {\n      for k in 0..j {\n        if i < j and\
    \ j < k and a[i] + a[j] + a[k] % 3 == 0 {\n          res += 1;\n        }\n  \
    \    }\n    }\n  }\n  return res;", "  let a = [0] * n\n  let max = 0\n  for i\
    \ in 0..n {\n    for j in i + 1..n {\n      for k in j + 1..n {\n        if (a[i]\
    \ + a[j] + a[k]) % 3 == 0 {\n          max = max + 1\n        }\n      }\n   \
    \ }\n  }\n  return max", "  let a = make(n, 0);\n  for i in 0..n {\n    a[i] =\
    \ i * i - i + 1;\n  }\n  let max = 0;\n  for i in 0..n - 2 {\n    for j in i +\
    \ 1..n - 1 {\n      for k in j + 1..n {\n        if (a[i] + a[j] + a[k]) % 3 ==\
    \ 0 {\n          max = max + 1;\n        }\n      }\n    }\n  }\n  return max;",
  "  let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let max\
    \ = 0\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j +\
    \ 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          max = max + 1\n\
    \        }\n      }\n    }\n  }\n  return max", "  let a = [0] * n\n  for i in\
    \ 0..n {\n    a[i] = i * i - i + 1\n  }\n  let count = 0\n  for i in 0..n - 2\
    \ {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] +\
    \ a[j] + a[k] % 3 == 0 {\n          count += 1\n        }\n      }\n    }\n  }\n\
    \  return count", "  let a = [0] * n\n  let max = 0\n  for i in 0..n {\n    for\
    \ j in i + 1..n {\n      for k in j + 1..n {\n        if i < j and j < k and a[i]\
    \ + a[j] + a[k] % 3 == 0 {\n          max = max + 1\n        }\n      }\n    }\n\
    \  }\n  return max", "  let a = make(n, 0);\n  for i in 0..n {\n    a[i] = i *\
    \ i - i + 1;\n  }\n  let res = 0;\n  for i in 0..n - 2 {\n    for j in i + 1..n\
    \ - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n\
    \          res += 1;\n        }\n      }\n    }\n  }\n  return res;", "  let a\
    \ = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let max = 0\n\
    \  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n -\
    \ 1 {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          max = max + 1\n   \
    \     }\n      }\n    }\n  }\n  return max", "  let a = vec!(n);\n  let max =\
    \ 0;\n  for i in 0..n {\n    for j in i + 1..n {\n      for k in j + 1..n {\n\
    \        if a[i] + a[j] + a[k] % 3 == 0 {\n          max = max + 1;\n        }\n\
    \      }\n    }\n  }\n  return max;", "  let a = [0] * n;\n  for i in 0..n {\n\
    \    a[i] = i * i - i + 1;\n  }\n  let count = 0;\n  for i in 0..n - 2 {\n   \
    \ for j in i + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j] +\
    \ a[k] % 3 == 0 {\n          count += 1;\n        }\n      }\n    }\n  }\n  return\
    \ count;", "  let a = vec!(n);\n  let result = 0;\n  for i in 0..n {\n    for\
    \ j in i + 1..n {\n      for k in j + 1..n {\n        if (a[i] + a[j] + a[k])\
    \ % 3 == 0 {\n          result += 1;\n        }\n      }\n    }\n  }\n  return\
    \ result;", "  let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n\
    \  }\n  let res = 0\n  for i in 0..n {\n    for j in i + 1..n {\n      for k in\
    \ j + 1..n {\n        if (a[i] + a[j] + a[k]) % 3 == 0 {\n          res += 1\n\
    \        }\n      }\n    }\n  }\n  return res", '  let a = vec::from(1, 3, 7,
    13, 21, 31, 41, 51, 61, 71, 81, 91, 101, 111, 121, 131, 141, 151, 161, 171, 181,
    191, 201, 211, 221, 231, 241, 251, 261, 271, 281, 291, 301, 311, 321, 331, 341,
    351, 361, 371, 381, 391, 401, 411, 421, 431, 441, 451, 461, 471, 481, 491, 501,
    511, 521, 531, 541, 551, 561, 571, 581, 591, 601, 611, 621, 631, 641, 651, 661,
    671, 681, 691, 701, 711, 721, 731, 741, 751, 761, 771, 781, 791, 801, 811, 821,
    831, 841, 851, 861, 871, 881, 891, 901, 911, 921, 931, 941, 951, 961, 971, 981,
    991, 1001, 1011, 1021, 1031, 1041, 1051, 1061, 1071, 1081, 1091, 1101, 1111, 1121,
    1131, 1141, 1151, 1161, 1171, 1181, 1191, 1201, 1211, 1221, 1231, 1241, 1251,
    1261, 1271, 1281, 1291, 1301, 1311, 1321, 1331, 1341, 1351, 1361, 1371, 1381,
    1391, 1401, 1411, 1421, 1431, 1441, 1451, 1461, 1471, 1481, 1491, 1501, 1511,
    1521, 1531, 1541, 1551, 1561, 1571, 1581, 1591, 1601, 1611, 1621, 1631, 1641,
    1651, 1661, 1671, 1681, 1691, 1701, 1711, 1721, 1731, 1741, 1751, 1761, 1771,
    1781, 1791, 1801, 1811,', "  let a = [0] * n;\n  for i in 0..n {\n    a[i] = i\
    \ * i - i + 1;\n  }\n  let result = 0;\n  for i in 0..n - 2 {\n    for j in i\
    \ + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 ==\
    \ 0 {\n          result += 1;\n        }\n      }\n    }\n  }\n  return result;",
  "  let a = [0] * n\n  a[0] = 1\n  for i in 1..n {\n    a[i] = i * i - i + 1\n  }\n\
    \  let count = 0\n  for i in 1..n {\n    for j in i + 1..n {\n      for k in j\
    \ + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          count += 1\n \
    \       }\n      }\n    }\n  }\n  return count", "  let a = [0] * n\n  for i in\
    \ 0..n {\n    a[i] = i * i - i + 1\n  }\n  let max_triples = 0\n  for i in 0..n\
    \ - 2 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n {\n        if (a[i]\
    \ + a[j] + a[k]) % 3 == 0 {\n          max_triples += 1\n        }\n      }\n\
    \    }\n  }\n  return max_triples", "  let a = [0] * n\n  for i in 0..n {\n  \
    \  a[i] = i * i - i + 1\n  }\n  let max = 0\n  for i in 0..n - 2 {\n    for j\
    \ in i + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k]\
    \ % 3 == 0 {\n          max = max + 1\n        }\n      }\n    }\n  }\n  return\
    \ max", "  let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n\
    \  let max = 0\n  for i in 0..n {\n    for j in 0..i {\n      for k in i + 1..n\
    \ {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          max = max + 1\n     \
    \   }\n      }\n    }\n  }\n  return max", "  let a = [0] * n;\n  for i in 0..n\
    \ {\n    a[i] = i * i - i + 1;\n  }\n  let result = 0;\n  for i in 0..n - 2 {\n\
    \    for j in i + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j]\
    \ + a[k] % 3 == 0 {\n          result += 1;\n        }\n      }\n    }\n  }\n\
    \  return result;", "  let a = vec(n);\n  let res = 0;\n  for i in 0..n {\n  \
    \  for j in 0..i {\n      for k in 0..j {\n        if i + j + k == 3 * (i * i\
    \ - i + 1) {\n          res += 1;\n        }\n      }\n    }\n  }\n  return res;",
  "  let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let result\
    \ = 0\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j +\
    \ 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          result += 1\n  \
    \      }\n      }\n    }\n  }\n  return result", "  let a = vec(n);\n  let res\
    \ = 0;\n  for i in 0..n {\n    for j in 0..i {\n      for k in 0..j {\n      \
    \  if i + j + k == 3 * (i * i - i + 1) {\n          res += 1;\n        }\n   \
    \   }\n    }\n  }\n  return res;", "  let a = vec!(n);\n  let count = 0;\n  for\
    \ i in 0..n {\n    for j in i + 1..n {\n      for k in j + 1..n {\n        if\
    \ a[i] + a[j] + a[k] % 3 == 0 {\n          count += 1;\n        }\n      }\n \
    \   }\n  }\n  return count;", "  let a = [0] * n\n  for i in 0..n {\n    a[i]\
    \ = i * i - i + 1\n  }\n  let max = 0\n  for i in 0..n - 2 {\n    for j in i +\
    \ 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 ==\
    \ 0 {\n          max = max + 1\n        }\n      }\n    }\n  }\n  return max",
  "  let a = vec!(n);\n  let res = 0;\n  for i in 0..n {\n    for j in i + 1..n {\n\
    \      for k in j + 1..n {\n        if (a[i] + a[j] + a[k]) % 3 == 0 {\n     \
    \     res += 1;\n        }\n      }\n    }\n  }\n  return res;", "  let a = [0]\
    \ * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let max = 0\n  for\
    \ i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n {\n  \
    \      if a[i] + a[j] + a[k] % 3 == 0 {\n          max = max + 1\n        }\n\
    \      }\n    }\n  }\n  return max", "  let a = [0] * n\n  for i in 0..n {\n \
    \   a[i] = i * i - i + 1\n  }\n  let res = 0\n  for i in 0..n - 2 {\n    for j\
    \ in i + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k]\
    \ % 3 == 0 {\n          res += 1\n        }\n      }\n    }\n  }\n  return res",
  "  let a = vec(n);\n  for i in 0..n {\n    a[i] = i * i - i + 1;\n  }\n  let max\
    \ = 0;\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j +\
    \ 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          max = max + 1;\n\
    \        }\n      }\n    }\n  }\n  return max;", "  let a = vec(n);\n  let res\
    \ = 0;\n  for i in 0..n {\n    for j in i + 1..n {\n      for k in j + 1..n {\n\
    \        if (a[i] + a[j] + a[k]) % 3 == 0 {\n          res += 1;\n        }\n\
    \      }\n    }\n  }\n  return res;", "  let a = [0] * n\n  a[0] = 1\n  for i\
    \ in 1..n {\n    a[i] = i * i - i + 1\n  }\n  let max = 0\n  for i in 1..n {\n\
    \    for j in i + 1..n {\n      for k in j + 1..n {\n        if a[i] + a[j] +\
    \ a[k] % 3 == 0 {\n          max = max + 1\n        }\n      }\n    }\n  }\n \
    \ return max", "  let a = [0] * n\n  let count = 0\n  for i in 0..n {\n    for\
    \ j in i + 1..n {\n      for k in j + 1..n {\n        if (a[i] + a[j] + a[k])\
    \ % 3 == 0 {\n          count += 1\n        }\n      }\n    }\n  }\n  return count",
  "  let a = vec(n);\n  let max = 0;\n  for i in 0..n {\n    for j in i + 1..n {\n\
    \      for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n       \
    \   max = max + 1;\n        }\n      }\n    }\n  }\n  return max;", "  let a =\
    \ [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let max = 0\n \
    \ for i in 0..n {\n    for j in 0..i {\n      for k in i + 1..n {\n        if\
    \ a[i] + a[j] + a[k] % 3 == 0 {\n          max = max + 1\n        }\n      }\n\
    \    }\n  }\n  return max", "  let a = vec!(n);\n  let res = 0;\n  for i in 0..n\
    \ {\n    for j in i + 1..n {\n      for k in j + 1..n {\n        if a[i] + a[j]\
    \ + a[k] % 3 == 0 {\n          res += 1;\n        }\n      }\n    }\n  }\n  return\
    \ res;", "  let a = vec(n);\n  let max = 0;\n  for i in 0..n {\n    for j in i\
    \ + 1..n {\n      for k in j + 1..n {\n        if (a[i] + a[j] + a[k]) % 3 ==\
    \ 0 {\n          max = max + 1;\n        }\n      }\n    }\n  }\n  return max;",
  "  let a = [0] * n\n  let count = 0\n  for i in 1..n {\n    for j in i + 1..n {\n\
    \      for k in j + 1..n {\n        if i * i - i + 1 == j * j - j + 1 && j * j\
    \ - j + 1 == k * k - k + 1 {\n          a[i] += 1\n          a[j] += 1\n     \
    \     a[k] += 1\n          count += 1\n        }\n      }\n    }\n  }\n  return\
    \ count", "  let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n\
    \  let count = 0\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for\
    \ k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          count +=\
    \ 1\n        }\n      }\n    }\n  }\n  return count", "  let a = vec(n);\n  let\
    \ count = 0;\n  for i in 0..n {\n    for j in i + 1..n {\n      for k in j + 1..n\
    \ {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          count += 1;\n       \
    \ }\n      }\n    }\n  }\n  return count;", "  let a = make_vec(n, 0);\n  let\
    \ res = 0;\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in\
    \ j + 1..n - 1 {\n        if (a[i] + a[j] + a[k]) % 3 == 0 {\n          res +=\
    \ 1;\n        }\n      }\n    }\n  }\n  return res;", "  let a = [0] * n\n  for\
    \ i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let res = 0\n  for i in 0..n -\
    \ 2 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i]\
    \ + a[j] + a[k] % 3 == 0 {\n          res += 1\n        }\n      }\n    }\n  }\n\
    \  return res", "  let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i +\
    \ 1\n  }\n  let res = 0\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n\
    \      for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n       \
    \   res += 1\n        }\n      }\n    }\n  }\n  return res", "  let a = make(n,\
    \ 0);\n  for i in 0..n {\n    a[i] = i * i - i + 1;\n  }\n  let count = 0;\n \
    \ for i in 0..n - 1 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n -\
    \ 1 {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          count += 1;\n     \
    \   }\n      }\n    }\n  }\n  return count;", "  let a = vec!(n);\n  let max =\
    \ 0;\n  for i in 0..n {\n    for j in 0..i {\n      for k in 0..j {\n        if\
    \ i + j + k == 3 * (i * i - i + 1) {\n          max = max + 1;\n        }\n  \
    \    }\n    }\n  }\n  return max;", "  let a = [0] * n;\n  for i in 0..n {\n \
    \   a[i] = i * i - i + 1;\n  }\n  let res = 0;\n  for i in 0..n - 2 {\n    for\
    \ j in i + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k]\
    \ % 3 == 0 {\n          res += 1;\n        }\n      }\n    }\n  }\n  return res;",
  "  let a = [0] * n\n  let count = 0\n  for i in 1..n {\n    for j in i + 1..n {\n\
    \      for k in j + 1..n {\n        if (a[i] + a[j] + a[k]) % 3 == 0 {\n     \
    \     count += 1\n        }\n      }\n    }\n  }\n  return count", "  let a =\
    \ [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let res = 0\n \
    \ for i in 0..n {\n    for j in 0..i {\n      for k in 0..i {\n        if i <\
    \ j and j < k and a[i] + a[j] + a[k] % 3 == 0 {\n          res += 1\n        }\n\
    \      }\n    }\n  }\n  return res", "  let a = [0] * n\n  for i in 0..n {\n \
    \   a[i] = i * i - i + 1\n  }\n  let count = 0\n  for i in 0..n {\n    for j in\
    \ i + 1..n {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 ==\
    \ 0 {\n          count += 1\n        }\n      }\n    }\n  }\n  return count",
  "  let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let res\
    \ = 0\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j +\
    \ 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          res += 1\n     \
    \   }\n      }\n    }\n  }\n  return res", "  let a = [0] * n;\n  for i in 0..n\
    \ {\n    a[i] = i * i - i + 1;\n  }\n  let max = 0;\n  for i in 0..n - 2 {\n \
    \   for j in i + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j]\
    \ + a[k] % 3 == 0 {\n          max = max + 1;\n        }\n      }\n    }\n  }\n\
    \  return max;", "  let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i +\
    \ 1\n  }\n  let max = 0\n  for i in 0..n {\n    for j in i + 1..n {\n      for\
    \ k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          max = max\
    \ + 1\n        }\n      }\n    }\n  }\n  return max", "  let a = [0] * n\n  for\
    \ i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let count = 0\n  for i in 0..n\
    \ - 1 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n - 1 {\n        if\
    \ a[i] + a[j] + a[k] % 3 == 0 {\n          count += 1\n        }\n      }\n  \
    \  }\n  }\n  return count", "  let a = [0] * n;\n  for i in 0..n {\n    a[i] =\
    \ i * i - i + 1;\n  }\n  let result = 0;\n  for i in 0..n - 2 {\n    for j in\
    \ i + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3\
    \ == 0 {\n          result += 1;\n        }\n      }\n    }\n  }\n  return result;",
  "  let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let result\
    \ = 0\n  for i in 0..n - 1 {\n    for j in i + 1..n - 1 {\n      for k in j +\
    \ 1..n - 1 {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          result += 1\n\
    \        }\n      }\n    }\n  }\n  return result", "  let a = [0] * n\n  let count\
    \ = 0\n  for i in 1..n {\n    for j in i + 1..n {\n      for k in j + 1..n {\n\
    \        if i < j and j < k and i * i - i + 1 == j * j - j + 1 and i * i - i +\
    \ 1 == k * k - k + 1 {\n          a[i] = a[i] + 1\n          a[j] = a[j] + 1\n\
    \          a[k] = a[k] + 1\n          count = count + 1\n        }\n      }\n\
    \    }\n  }\n  return count", "  let a = [0] * n\n  for i in 0..n {\n    a[i]\
    \ = i * i - i + 1\n  }\n  let res = 0\n  for i in 0..n - 2 {\n    for j in i +\
    \ 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 ==\
    \ 0 {\n          res += 1\n        }\n      }\n    }\n  }\n  return res", "  let\
    \ a = vec(n);\n  let max = 0;\n  for i in 0..n {\n    for j in 0..i {\n      for\
    \ k in 0..j {\n        if i < j and j < k and a[i] + a[j] + a[k] % 3 == 0 {\n\
    \          max = max + 1;\n        }\n      }\n    }\n  }\n  return max;", " \
    \ let a = [0] * n\n  let count = 0\n  for i in 0..n {\n    for j in i + 1..n {\n\
    \      for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n       \
    \   count += 1\n        }\n      }\n    }\n  }\n  return count", "  let a = [0]\
    \ * n\n  let max = 0\n  for i in 1..n {\n    for j in i + 1..n {\n      for k\
    \ in j + 1..n {\n        if i < j and j < k and a[i] + a[j] + a[k] % 3 == 0 {\n\
    \          max = max + 1\n        }\n      }\n    }\n  }\n  return max", "  let\
    \ a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let max_triples\
    \ = 0\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j +\
    \ 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          max_triples += 1\n\
    \        }\n      }\n    }\n  }\n  return max_triples", "  let a = vec(n);\n \
    \ let res = 0;\n  for i in 0..n {\n    for j in i + 1..n {\n      for k in j +\
    \ 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          res += 1;\n    \
    \    }\n      }\n    }\n  }\n  return res;", "  let a = [0] * n\n  for i in 0..n\
    \ {\n    a[i] = i * i - i + 1\n  }\n  let res = 0\n  for i in 0..n - 2 {\n   \
    \ for j in i + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j] +\
    \ a[k] % 3 == 0 {\n          res += 1\n        }\n      }\n    }\n  }\n  return\
    \ res", "  let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n\
    \  let count = 0\n  for i in 0..n - 1 {\n    for j in i + 1..n - 1 {\n      for\
    \ k in j + 1..n - 1 {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          count\
    \ += 1\n        }\n      }\n    }\n  }\n  return count", "  let a = [0] * n\n\
    \  let max = 0\n  for i in 0..n {\n    for j in i + 1..n {\n      for k in j +\
    \ 1..n {\n        if i < j and j < k and a[i] + a[j] + a[k] % 3 == 0 {\n     \
    \     max = max + 1\n        }\n      }\n    }\n  }\n  return max", "  let a =\
    \ [0] * n;\n  let count = 0;\n  for i in 0..n {\n    for j in i + 1..n {\n   \
    \   for k in j + 1..n {\n        if (a[i] + a[j] + a[k]) % 3 == 0 {\n        \
    \  count += 1;\n        }\n      }\n    }\n  }\n  return count;", "  let a = vec(n);\n\
    \  for i in 0..n {\n    a[i] = i * i - i + 1;\n  }\n  let res = 0;\n  for i in\
    \ 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n {\n       \
    \ if a[i] + a[j] + a[k] % 3 == 0 {\n          res += 1;\n        }\n      }\n\
    \    }\n  }\n  return res;", "  let a = vec!(n);\n  let max = 0;\n  for i in 0..n\
    \ {\n    for j in 0..i {\n      for k in 0..j {\n        if i + j + k == 3 * (i\
    \ * i - i + 1) {\n          max = max + 1;\n        }\n      }\n    }\n  }\n \
    \ return max;", "  let a = vec(n);\n  let res = 0;\n  for i in 0..n {\n    for\
    \ j in 0..i {\n      for k in 0..j {\n        if i < j and j < k and a[i] + a[j]\
    \ + a[k] % 3 == 0 {\n          res += 1;\n        }\n      }\n    }\n  }\n  return\
    \ res;", "  let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n\
    \  let count = 0\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for\
    \ k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          count +=\
    \ 1\n        }\n      }\n    }\n  }\n  return count", "  let a = [0] * n\n  let\
    \ max = 0\n  for i in 0..n {\n    for j in i + 1..n {\n      for k in j + 1..n\
    \ {\n        if i < j and j < k and a[i] + a[j] + a[k] % 3 == 0 {\n          max\
    \ = max + 1\n        }\n      }\n    }\n  }\n  return max", "  let a = [0] * n;\n\
    \  for i in 0..n {\n    a[i] = i * i - i + 1;\n  }\n  let result = 0;\n  for i\
    \ in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n {\n    \
    \    if a[i] + a[j] + a[k] % 3 == 0 {\n          result += 1;\n        }\n   \
    \   }\n    }\n  }\n  return result;", "  let a = [0] * n\n  let count = 0\n  for\
    \ i in 1..n {\n    for j in i + 1..n {\n      for k in j + 1..n {\n        if\
    \ a[i] + a[j] + a[k] % 3 == 0 {\n          count += 1\n        }\n      }\n  \
    \  }\n  }\n  return count", "  let a = [0] * n\n  for i in 0..n {\n    a[i] =\
    \ i * i - i + 1\n  }\n  let res = 0\n  for i in 0..n - 2 {\n    for j in i + 1..n\
    \ - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n\
    \          res += 1\n        }\n      }\n    }\n  }\n  return res", "  let a =\
    \ [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let res = 0\n \
    \ for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n {\n\
    \        if a[i] + a[j] + a[k] % 3 == 0 {\n          res += 1\n        }\n   \
    \   }\n    }\n  }\n  return res", "  let a = [0] * n\n  for i in 0..n {\n    a[i]\
    \ = i * i - i + 1\n  }\n  let max = 0\n  for i in 0..n - 2 {\n    for j in i +\
    \ 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 ==\
    \ 0 {\n          max = max + 1\n        }\n      }\n    }\n  }\n  return max",
  "  let a = [0] * n;\n  for i in 0..n {\n    a[i] = i * i - i + 1;\n  }\n  let max\
    \ = 0;\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j +\
    \ 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          max = max + 1;\n\
    \        }\n      }\n    }\n  }\n  return max;", "  let a = [0] * n;\n  let max\
    \ = 0;\n  for i in 0..n {\n    for j in i + 1..n {\n      for k in j + 1..n {\n\
    \        if (a[i] + a[j] + a[k]) % 3 == 0 {\n          max = max + 1;\n      \
    \  }\n      }\n    }\n  }\n  return max;", "  let a = [0] * n;\n  for i in 0..n\
    \ {\n    a[i] = i * i - i + 1;\n  }\n  let res = 0;\n  for i in 0..n - 2 {\n \
    \   for j in i + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j]\
    \ + a[k] % 3 == 0 {\n          res += 1;\n        }\n      }\n    }\n  }\n  return\
    \ res;", "  let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n\
    \  let max = 0\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for\
    \ k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          max = max\
    \ + 1\n        }\n      }\n    }\n  }\n  return max", "  let a = [0] * n\n  for\
    \ i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let count = 0\n  for i in 0..n\
    \ - 2 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i]\
    \ + a[j] + a[k] % 3 == 0 {\n          count += 1\n        }\n      }\n    }\n\
    \  }\n  return count", "  let a = [0] * n\n  let max = 0\n  for i in 1..n {\n\
    \    for j in i + 1..n {\n      for k in j + 1..n {\n        if i < j and j <\
    \ k and (a[i] + a[j] + a[k]) % 3 == 0 {\n          max = max + 1\n        }\n\
    \      }\n    }\n  }\n  return max", "  let a = [0] * n;\n  for i in 0..n {\n\
    \    a[i] = i * i - i + 1;\n  }\n  let count = 0;\n  for i in 0..n - 2 {\n   \
    \ for j in i + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j] +\
    \ a[k] % 3 == 0 {\n          count += 1;\n        }\n      }\n    }\n  }\n  return\
    \ count;", "  let a = vec(n);\n  let max_triples = 0;\n  for i in 0..n {\n   \
    \ for j in 0..i {\n      for k in 0..j {\n        if i < j and j < k and a[i]\
    \ + a[j] + a[k] % 3 == 0 {\n          max_triples += 1;\n        }\n      }\n\
    \    }\n  }\n  return max_triples;", "  let a = vec(n);\n  let max = 0;\n  for\
    \ i in 0..n {\n    for j in i + 1..n {\n      for k in j + 1..n {\n        if\
    \ a[i] + a[j] + a[k] % 3 == 0 {\n          max = max + 1;\n        }\n      }\n\
    \    }\n  }\n  return max;", "  let a = [0] * n;\n  for i in 0..n {\n    a[i]\
    \ = i * i - i + 1;\n  }\n  let res = 0;\n  for i in 0..n - 2 {\n    for j in i\
    \ + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 ==\
    \ 0 {\n          res += 1;\n        }\n      }\n    }\n  }\n  return res;", " \
    \ let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let count\
    \ = 0\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j +\
    \ 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          count += 1\n   \
    \     }\n      }\n    }\n  }\n  return count", "  let a = [0] * n\n  for i in\
    \ 0..n {\n    a[i] = i * i - i + 1\n  }\n  let count = 0\n  for i in 0..n - 2\
    \ {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] +\
    \ a[j] + a[k] % 3 == 0 {\n          count += 1\n        }\n      }\n    }\n  }\n\
    \  return count", "  let a = [0] * n;\n  let max = 0;\n  for i in 0..n {\n   \
    \ for j in i + 1..n {\n      for k in j + 1..n {\n        if (a[i] + a[j] + a[k])\
    \ % 3 == 0 {\n          max = max + 1;\n        }\n      }\n    }\n  }\n  return\
    \ max;", "  let a = [0] * n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n\
    \  let res = 0\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for\
    \ k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          res +=\
    \ 1\n        }\n      }\n    }\n  }\n  return res", "  let a = make(n, 0);\n \
    \ for i in 0..n {\n    a[i] = i * i - i + 1;\n  }\n  let max = 0;\n  for i in\
    \ 0..n {\n    for j in 0..i {\n      for k in 0..i {\n        if i < j < k and\
    \ a[i] + a[j] + a[k] % 3 == 0 {\n          max = max + 1;\n        }\n      }\n\
    \    }\n  }\n  return max;", "  let a = [0] * n\n  for i in 0..n {\n    a[i] =\
    \ i * i - i + 1\n  }\n  let result = 0\n  for i in 0..n {\n    for j in 0..i {\n\
    \      for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n       \
    \   result += 1\n        }\n      }\n    }\n  }\n  return result", "  let a =\
    \ vec![isize];\n  for i in 0..n {\n    a[i] = i * i - i + 1;\n  }\n  let res =\
    \ 0;\n  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n\
    \ {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n          res += 1;\n        }\n\
    \      }\n    }\n  }\n  return res;", "  let a = vec(n);\n  for i in 0..n {\n\
    \    a[i] = i * i - i + 1;\n  }\n  let result = 0;\n  for i in 0..n - 2 {\n  \
    \  for j in i + 1..n - 1 {\n      for k in j + 1..n {\n        if a[i] + a[j]\
    \ + a[k] % 3 == 0 {\n          result += 1;\n        }\n      }\n    }\n  }\n\
    \  return result;", "  let a = make(n, 0);\n  for i in 0..n {\n    a[i] = i *\
    \ i - i + 1;\n  }\n  let res = 0;\n  for i in 0..n {\n    for j in 0..i {\n  \
    \    for k in j + 1..n {\n        if a[i] + a[j] + a[k] % 3 == 0 {\n         \
    \ res += 1;\n        }\n      }\n    }\n  }\n  return res;", "  let a = [0] *\
    \ n\n  for i in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let max_triples = 0\n\
    \  for i in 0..n - 2 {\n    for j in i + 1..n - 1 {\n      for k in j + 1..n {\n\
    \        if a[i] + a[j] + a[k] % 3 == 0 {\n          max_triples += 1\n      \
    \  }\n      }\n    }\n  }\n  return max_triples", "  let a = [0] * n\n  for i\
    \ in 0..n {\n    a[i] = i * i - i + 1\n  }\n  let max_triples = 0\n  for i in\
    \ 0..n {\n    for j in 0..i {\n      for k in 0..j {\n        if i < j and j <\
    \ k and a[i] + a[j] + a[k] % 3 == 0 {\n          max_triples += 1\n        }\n\
    \      }\n    }\n  }\n  return max_triples", "  let a = [0] * n\n  let count =\
    \ 0\n  for i in 0..n {\n    for j in i + 1..n {\n      for k in j + 1..n {\n \
    \       if i < j and j < k and a[i] + a[j] + a[k] % 3 == 0 {\n          count\
    \ += 1\n        }\n      }\n    }\n  }\n  return count"]
stop_tokens:
- "\n}"

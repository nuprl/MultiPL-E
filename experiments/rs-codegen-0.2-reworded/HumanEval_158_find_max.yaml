name: HumanEval_158_find_max
language: rs
prompt: "/// Write a function that accepts a vector of strings.\n/// The vector contains\
  \ different words. Return the word with maximum number\n/// of unique characters.\
  \ If multiple strings have maximum number of unique\n/// characters, return the\
  \ one which comes first in lexicographical order.\n/// >>> find_max(vec![String::from(\"\
  name\"), String::from(\"of\"), String::from(\"string\")])\n/// String::from(\"string\"\
  )\n/// >>> find_max(vec![String::from(\"name\"), String::from(\"enam\"), String::from(\"\
  game\")])\n/// String::from(\"enam\")\n/// >>> find_max(vec![String::from(\"aaaaaaa\"\
  ), String::from(\"bb\"), String::from(\"cc\")])\n/// String::from(\"aaaaaaa\")\n\
  fn find_max(words: Vec<String>) -> String {\n"
tests: "}\n\nfn main() {\n    let candidate = find_max;\n    assert_eq!(candidate(vec![String::from(\"\
  name\"), String::from(\"of\"), String::from(\"string\")]), String::from(\"string\"\
  ));\n    assert_eq!(candidate(vec![String::from(\"name\"), String::from(\"enam\"\
  ), String::from(\"game\")]), String::from(\"enam\"));\n    assert_eq!(candidate(vec![String::from(\"\
  aaaaaaa\"), String::from(\"bb\"), String::from(\"cc\")]), String::from(\"aaaaaaa\"\
  ));\n    assert_eq!(candidate(vec![String::from(\"abc\"), String::from(\"cba\")]),\
  \ String::from(\"abc\"));\n    assert_eq!(candidate(vec![String::from(\"play\"),\
  \ String::from(\"this\"), String::from(\"game\"), String::from(\"of\"), String::from(\"\
  footbott\")]), String::from(\"footbott\"));\n    assert_eq!(candidate(vec![String::from(\"\
  we\"), String::from(\"are\"), String::from(\"gonna\"), String::from(\"rock\")]),\
  \ String::from(\"gonna\"));\n    assert_eq!(candidate(vec![String::from(\"we\"),\
  \ String::from(\"are\"), String::from(\"a\"), String::from(\"mad\"), String::from(\"\
  nation\")]), String::from(\"nation\"));\n    assert_eq!(candidate(vec![String::from(\"\
  this\"), String::from(\"is\"), String::from(\"a\"), String::from(\"prrk\")]), String::from(\"\
  this\"));\n    assert_eq!(candidate(vec![String::from(\"b\")]), String::from(\"\
  b\"));\n    assert_eq!(candidate(vec![String::from(\"play\"), String::from(\"play\"\
  ), String::from(\"play\")]), String::from(\"play\"));\n}\n"
completions: ["  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n  \
    \  let count = w.count(c => c.is_upper())\n    if count > max_count {\n      max_count\
    \ = count\n      max_word = w\n    }\n  }\n  return max_word", "  let max_count\
    \ = 0\n  let max_word = \"\"\n  for w in words {\n    let count = count_unique_chars(w)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ w in words {\n    let count = count_unique_chars(w)\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for word in words {\n    let count\
    \ = word.count(/[a-z]/)\n    if count > max_count {\n      max_count = count\n\
    \      max_word = word\n    }\n  }\n  return max_word", "  let max_count = 0\n\
    \  let max_word = \"\"\n  for w in words {\n    let count = count_unique_chars(w)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "    let max_count = 0;\n    let max_word = String::from(\"\
    \");\n    for w in words {\n        let count = w.count_unique();\n        if\
    \ count > max_count {\n            max_count = count;\n            max_word =\
    \ w;\n        }\n    }\n    return max_word;", "  let max_count = 0\n  let max_word\
    \ = \"\"\n  for w in words {\n    let count = 0\n    for i in w {\n      count\
    \ += 1\n      if i == \"a\" || i == \"e\" || i == \"i\" || i == \"o\" || i ==\
    \ \"u\" {\n        count += 1\n      }\n    }\n    if count > max_count {\n  \
    \    max_count = count\n      max_word = w\n    }\n  }\n  return max_word", " \
    \ let max_count = 0\n  let max_word = \"\"\n  for word in words {\n    let count\
    \ = count_unique_chars(word)\n    if count > max_count {\n      max_count = count\n\
    \      max_word = word\n    }\n  }\n  return max_word", "  let max_count = 0\n\
    \  let max_word = \"\"\n  for w in words {\n    let count = count_unique_chars(w)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ w in words {\n    let count = w.count(/[a-z]/)\n    if count > max_count {\n\
    \      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count =\
    \ count_unique_chars(w)\n    if count > max_count {\n      max_count = count\n\
    \      max_word = w\n    }\n  }\n  return max_word", "  let max_count = 0\n  let\
    \ max_word = \"\"\n  for word in words {\n    let count = count_unique_chars(word)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = word\n\
    \    }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n\
    \  for w in words {\n    let count = count_unique_chars(w)\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count =\
    \ count_unique_chars(w)\n    if count > max_count {\n      max_count = count\n\
    \      max_word = w\n    }\n  }\n  return max_word", "  let max_count = 0\n  let\
    \ max_word = \"\"\n  for word in words {\n    let count = count_unique_chars(word)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = word\n\
    \    }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n\
    \  for w in words {\n    let count = count_unique_chars(w)\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n\n  for w in words {\n    let count\
    \ = 0\n    for i in w {\n      if i.is_upper() {\n        count += 1\n      }\n\
    \    }\n    if count > max_count {\n      max_count = count\n      max_word =\
    \ w\n    }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\
    \"\n  for w in words {\n    let count = count_unique_chars(w)\n    if count >\
    \ max_count {\n      max_count = count\n      max_word = w\n    }\n  }\n  return\
    \ max_word", "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n\
    \    let count = w.count(c => c.is_upper())\n    if count > max_count {\n    \
    \  max_count = count\n      max_word = w\n    }\n  }\n  return max_word", "  let\
    \ max_count = 0\n  let max_word = \"\"\n  for word in words {\n    let count =\
    \ word.count(/[a-z]/);\n    if count > max_count {\n      max_count = count\n\
    \      max_word = word\n    }\n  }\n  return max_word", "  let max_count = 0\n\
    \  let max_word = \"\"\n  for w in words {\n    let count = w.count(/[a-z]/);\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ w in words {\n    let count = w.count(/[a-z]/);\n    if count > max_count {\n\
    \      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count =\
    \ w.count(/[a-z]/);\n    if count > max_count {\n      max_count = count\n   \
    \   max_word = w\n    }\n  }\n  return max_word", "  let max_count = 0\n  let\
    \ max_word = \"\"\n  for w in words {\n    let count = w.count_unique()\n    if\
    \ count > max_count {\n      max_count = count\n      max_word = w\n    }\n  }\n\
    \  return max_word", "  let max_count = 0\n  let max_count_index = 0\n  let max_count_word\
    \ = \"\"\n  for i in 0..words.len() {\n    let count = words[i].count_unique_chars()\n\
    \    if count > max_count {\n      max_count = count\n      max_count_index =\
    \ i\n      max_count_word = words[i]\n    }\n  }\n  return max_count_word", " \
    \ let max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count\
    \ = 0\n    for i in 0..len(w) {\n      let c = w[i]\n      if c == ' ' {\n   \
    \     continue\n      }\n      count += 1\n    }\n    if count > max_count {\n\
    \      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count =\
    \ count_unique_chars(w)\n    if count > max_count {\n      max_count = count\n\
    \      max_word = w\n    }\n  }\n  return max_word", "  let max_count = 0\n  let\
    \ max_word = \"\"\n  for w in words {\n    let count = count_unique_chars(w)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0;\n  let max_word = String::from(\"\
    \");\n  for word in words {\n    let count = word.count(/[a-z]/);\n    if count\
    \ > max_count {\n      max_count = count;\n      max_word = word;\n    }\n  }\n\
    \  return max_word;", "  let max_count = 0\n  let max_word = \"\"\n  for w in\
    \ words {\n    let count = count_unique_chars(w)\n    if count > max_count {\n\
    \      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count =\
    \ w.count(c => c.is_upper())\n    if count > max_count {\n      max_count = count\n\
    \      max_word = w\n    }\n  }\n  return max_word", "  let max_count = 0\n  let\
    \ max_word = \"\"\n  for word in words {\n    let count = count_unique_chars(word)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = word\n\
    \    }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n\
    \  for w in words {\n    let count = count_unique_chars(w)\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count =\
    \ count_unique_chars(w)\n    if count > max_count {\n      max_count = count\n\
    \      max_word = w\n    }\n  }\n  return max_word", "  let max_count = 0\n  let\
    \ max_word = \"\"\n  for w in words {\n    let count = count_unique_chars(w)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ w in words {\n    let count = count_unique_chars(w)\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = String::from(\"\")\n  for w in words {\n\
    \    let count = w.count(/[a-z]/)\n    if count > max_count {\n      max_count\
    \ = count\n      max_word = w\n    }\n  }\n  return max_word", "  let max_count\
    \ = 0\n  let max_word = \"\"\n  for w in words {\n    let count = w.count(c =>\
    \ c.is_upper())\n    if count > max_count {\n      max_count = count\n      max_word\
    \ = w\n    }\n  }\n  return max_word", "  let max_count = 0\n  let max_word =\
    \ \"\"\n  for word in words {\n    let count = count_unique_chars(word)\n    if\
    \ count > max_count {\n      max_count = count\n      max_word = word\n    }\n\
    \  }\n  return max_word", "  let max_count = 0\n  let max_count_index = 0\n  let\
    \ max_count_word = \"\"\n  for i in words {\n    let count = count_unique_chars(i)\n\
    \    if count > max_count {\n      max_count = count\n      max_count_index =\
    \ i\n      max_count_word = i\n    }\n  }\n  return max_count_word", "  let max_count\
    \ = 0\n  let max_word = \"\"\n  for w in words {\n    let count = count_unique_chars(w)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ w in words {\n    let count = w.count(/[a-z]/);\n    if count > max_count {\n\
    \      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for word in words {\n    let count\
    \ = word.count(/[a-z]/);\n    if count > max_count {\n      max_count = count\n\
    \      max_word = word\n    }\n  }\n  return max_word", "  let max_count = 0\n\
    \  let max_word = \"\"\n  for w in words {\n    let count = count_unique_chars(w)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ word in words {\n    let count = count_unique_chars(word)\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = word\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for word in words {\n    let count\
    \ = word.count(/[a-z]/);\n    if count > max_count {\n      max_count = count\n\
    \      max_word = word\n    }\n  }\n  return max_word", "  let max_count = 0\n\
    \  let max_word = \"\"\n  for w in words {\n    let count = w.count(/[a-z]/);\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ w in words {\n    let count = count_unique_chars(w)\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for word in words {\n    let count\
    \ = word.count(/[a-z]/);\n    if count > max_count {\n      max_count = count\n\
    \      max_word = word\n    }\n  }\n  return max_word", "  let max_count = 0\n\
    \  let max_word = \"\"\n  for w in words {\n    let count = count_unique_chars(w)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ w in words {\n    let count = w.count(/[a-z]/);\n    if count > max_count {\n\
    \      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count =\
    \ w.count(/[a-z]/);\n    if count > max_count {\n      max_count = count\n   \
    \   max_word = w\n    }\n  }\n  return max_word", "  let max_count = 0\n  let\
    \ max_word = \"\"\n  for w in words {\n    let count = count_unique_chars(w)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ w in words {\n    let count = count_unique_chars(w)\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n\n  for w in words {\n    let count\
    \ = w.count(/[a-z]/);\n    if count > max_count {\n      max_count = count\n \
    \     max_word = w\n    }\n  }\n\n  return max_word", "  let max_count = 0\n \
    \ let max_word = \"\"\n  for w in words {\n    let count = count_unique_chars(w)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ w in words {\n    let count = count_unique_chars(w)\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for word in words {\n    let count\
    \ = word.count(/[a-z]/)\n    if count > max_count {\n      max_count = count\n\
    \      max_word = word\n    }\n  }\n  return max_word", "  let max_count = 0\n\
    \  let max_count_index = 0\n  let max_count_word = \"\"\n  for i in 0..words.len()\
    \ {\n    let count = words[i].count_unique_chars()\n    if count > max_count {\n\
    \      max_count = count\n      max_count_index = i\n      max_count_word = words[i]\n\
    \    }\n  }\n  return max_count_word", "  let max_count = 0\n  let max_word =\
    \ \"\"\n  for w in words {\n    let count = w.count(/[a-z]/);\n    if count >\
    \ max_count {\n      max_count = count\n      max_word = w\n    }\n  }\n  return\
    \ max_word", "  let max_count = 0\n  let max_word = String::from(\"\")\n  for\
    \ w in words {\n    let count = w.count_unique()\n    if count > max_count {\n\
    \      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count =\
    \ w.count(/[a-z]/)\n    if count > max_count {\n      max_count = count\n    \
    \  max_word = w\n    }\n  }\n  return max_word", "  let max_count = 0\n  let max_word\
    \ = \"\"\n  for w in words {\n    let count = count_unique_chars(w)\n    if count\
    \ > max_count {\n      max_count = count\n      max_word = w\n    }\n  }\n  return\
    \ max_word", "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n\
    \    let count = w.count_unique_chars()\n    if count > max_count {\n      max_count\
    \ = count\n      max_word = w\n    }\n  }\n  return max_word", "  let max_count\
    \ = 0\n  let max_word = \"\"\n  for w in words {\n    let count = count_unique_chars(w)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ w in words {\n    let count = count_unique_chars(w)\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count =\
    \ w.count_unique()\n    if count > max_count {\n      max_count = count\n    \
    \  max_word = w\n    }\n  }\n  return max_word", "  let max_count = 0\n  let max_word\
    \ = \"\"\n  for word in words {\n    let count = count_unique_chars(word)\n  \
    \  if count > max_count {\n      max_count = count\n      max_word = word\n  \
    \  }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = String::from(\"\
    \")\n  for w in words {\n    let count = w.count_unique()\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count =\
    \ count_unique_chars(w)\n    if count > max_count {\n      max_count = count\n\
    \      max_word = w\n    }\n  }\n  return max_word", "  let max_count = 0\n  let\
    \ max_word = \"\"\n  for w in words {\n    let count = count_unique_chars(w)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ w in words {\n    let count = w.count(/[a-z]/);\n    if count > max_count {\n\
    \      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_count_index = 0\n  for i in 0..words.len() {\n \
    \   let count = words[i].count()\n    if count > max_count {\n      max_count\
    \ = count\n      max_count_index = i\n    }\n  }\n  return words[max_count_index]",
  "  let max_count = 0\n  let max_word = \"\"\n  for word in words {\n    let count\
    \ = count_unique_chars(word)\n    if count > max_count {\n      max_count = count\n\
    \      max_word = word\n    }\n  }\n  return max_word", "  let max_count = 0\n\
    \  let max_word = \"\"\n  for w in words {\n    let count = count_unique_chars(w)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ w in words {\n    let count = count_unique_chars(w)\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count =\
    \ count_unique_chars(w)\n    if count > max_count {\n      max_count = count\n\
    \      max_word = w\n    }\n  }\n  return max_word", "  let max_count = 0\n  let\
    \ max_word = \"\"\n  for w in words {\n    let count = count_unique_chars(w)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = String::from(\"\
    \")\n  for word in words {\n    let count = count_unique_chars(word)\n    if count\
    \ > max_count {\n      max_count = count\n      max_word = word\n    }\n  }\n\
    \  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for w in words\
    \ {\n    let count = w.count_unique_chars()\n    if count > max_count {\n    \
    \  max_count = count\n      max_word = w\n    }\n  }\n  return max_word", "  let\
    \ max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count = w.count(/[a-z]/);\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ w in words {\n    let count = w.count(/[a-z]/)\n    if count > max_count {\n\
    \      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = String::from(\"\")\n  for w in words {\n\
    \    let count = w.count_of_unique_chars()\n    if count > max_count {\n     \
    \ max_count = count\n      max_word = w\n    }\n  }\n  return max_word", "  let\
    \ max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count = count_unique_chars(w)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ w in words {\n    let count = w.count(/[a-z]/);\n    if count > max_count {\n\
    \      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for word in words {\n    let count\
    \ = count_unique_chars(word)\n    if count > max_count {\n      max_count = count\n\
    \      max_word = word\n    }\n  }\n  return max_word", "  let max_count = 0\n\
    \  let max_word = \"\"\n  for w in words {\n    let count = w.count_unique_chars()\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = String::from(\"\
    \")\n  for w in words {\n    let count = count_unique_chars(w)\n    if count >\
    \ max_count {\n      max_count = count\n      max_word = w\n    }\n  }\n  return\
    \ max_word", "  let max_count = 0\n  let max_word = \"\"\n\n  for w in words {\n\
    \    let count = count_unique_chars(w)\n    if count > max_count {\n      max_count\
    \ = count\n      max_word = w\n    }\n  }\n\n  return max_word", "  let max_count\
    \ = 0\n  let max_word = String::from(\"\")\n  for word in words {\n    let count\
    \ = count_unique_chars(word)\n    if count > max_count {\n      max_count = count\n\
    \      max_word = word\n    }\n  }\n  return max_word", "  let max_count = 0\n\
    \  let max_word = \"\"\n  for w in words {\n    let count = count_unique_chars(w)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ w in words {\n    let count = count_unique_chars(w)\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count =\
    \ count_unique_chars(w)\n    if count > max_count {\n      max_count = count\n\
    \      max_word = w\n    }\n  }\n  return max_word", "  let max_count = 0\n  let\
    \ max_word = \"\"\n  for w in words {\n    let count = count_unique_chars(w)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ w in words {\n    let count = count_unique_chars(w)\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count =\
    \ count_unique_chars(w)\n    if count > max_count {\n      max_count = count\n\
    \      max_word = w\n    }\n  }\n  return max_word", "  let max_count = 0\n  let\
    \ max_word = \"\"\n  for w in words {\n    let count = w.count(/[a-z]/)\n    if\
    \ count > max_count {\n      max_count = count\n      max_word = w\n    }\n  }\n\
    \  return max_word", "  let max_count = 0\n  let max_count_index = 0\n  let max_count_word\
    \ = \"\"\n  for i in 0..words.len() {\n    let count = words[i].count_unique()\n\
    \    if count > max_count {\n      max_count = count\n      max_count_index =\
    \ i\n      max_count_word = words[i]\n    }\n  }\n  return max_count_word", " \
    \ let max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count\
    \ = w.count(/[a-z]/)\n    if count > max_count {\n      max_count = count\n  \
    \    max_word = w\n    }\n  }\n  return max_word", "  let max_count = 0\n  let\
    \ max_word = \"\"\n  for w in words {\n    let count = w.count_unique()\n    if\
    \ count > max_count {\n      max_count = count\n      max_word = w\n    }\n  }\n\
    \  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for w in words\
    \ {\n    let count = w.count(/[a-z]/);\n    if count > max_count {\n      max_count\
    \ = count\n      max_word = w\n    }\n  }\n  return max_word", "  let max_count\
    \ = 0\n  let max_count_index = 0\n  let max_count_word = \"\"\n  for i in 0..words.len()\
    \ {\n    let count = words[i].count_unique_chars()\n    if count > max_count {\n\
    \      max_count = count\n      max_count_index = i\n      max_count_word = words[i]\n\
    \    }\n  }\n  return max_count_word", "  let max_count = 0\n  let max_word =\
    \ String::from(\"\")\n  for w in words {\n    let count = w.count(/[a-z]/);\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ w in words {\n    let count = w.count(/[a-z]/)\n    if count > max_count {\n\
    \      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count =\
    \ count_unique_chars(w)\n    if count > max_count {\n      max_count = count\n\
    \      max_word = w\n    }\n  }\n  return max_word", "  let max_count = 0\n  let\
    \ max_word = \"\"\n  for w in words {\n    let count = count_unique_chars(w)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ w in words {\n    let count = count_unique_chars(w)\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count =\
    \ count_unique_chars(w)\n    if count > max_count {\n      max_count = count\n\
    \      max_word = w\n    }\n  }\n  return max_word", "  let max_count = 0\n  let\
    \ max_word = \"\"\n  for w in words {\n    let count = w.count_unique_chars()\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ w in words {\n    let count = count_unique_chars(w)\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for word in words {\n    let count\
    \ = count_unique_chars(word)\n    if count > max_count {\n      max_count = count\n\
    \      max_word = word\n    }\n  }\n  return max_word", "  let max_count = 0\n\
    \  let max_word = \"\"\n  for w in words {\n    let count = w.count_unique()\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ w in words {\n    let count = count_unique_chars(w)\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_count_index = 0\n  let max_count_word = \"\"\n\n\
    \  for i in words {\n    let count = count_unique_chars(i)\n    if count > max_count\
    \ {\n      max_count = count\n      max_count_index = i\n      max_count_word\
    \ = i\n    }\n  }\n\n  return max_count_word", "  let max_count = 0;\n  let max_word\
    \ = String::from(\"\");\n  for word in words {\n    let count = count_unique_chars(word);\n\
    \    if count > max_count {\n      max_count = count;\n      max_word = word;\n\
    \    }\n  }\n  return max_word;", "  let max_count = 0\n  let max_word = \"\"\n\
    \  for w in words {\n    let count = w.count(/[a-z]/)\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = String::from(\"\")\n  for w in words {\n\
    \    let count = w.count(/[a-z]/)\n    if count > max_count {\n      max_count\
    \ = count\n      max_word = w\n    }\n  }\n  return max_word", "  let max_count\
    \ = 0\n  let max_word = \"\"\n  for w in words {\n    let count = count_unique_chars(w)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ w in words {\n    let count = count_unique_chars(w)\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count =\
    \ w.count(/[a-z]/);\n    if count > max_count {\n      max_count = count\n   \
    \   max_word = w\n    }\n  }\n  return max_word", "  let max_count = 0\n  let\
    \ max_word = \"\"\n  for w in words {\n    let count = count_unique_chars(w)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ word in words {\n    let count = word.count(/[a-z]/)\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = word\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count =\
    \ w.count(/[a-z]/);\n    if count > max_count {\n      max_count = count\n   \
    \   max_word = w\n    }\n  }\n  return max_word", "  let max_count = 0;\n  let\
    \ max_word = String::from(\"\");\n  for (let word of words) {\n    let count =\
    \ word.count(/[a-z]/);\n    if (count > max_count) {\n      max_count = count;\n\
    \      max_word = word;\n    }\n  }\n  return max_word;", "  let max_count = 0\n\
    \  let max_word = \"\"\n  for w in words {\n    let count = count_unique_chars(w)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = String::from(\"\
    \")\n  for w in words {\n    let count = w.count(/[a-z]/);\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for word in words {\n    let count\
    \ = word.count(/[a-z]/)\n    if count > max_count {\n      max_count = count\n\
    \      max_word = word\n    }\n  }\n  return max_word", "  let max_count = 0\n\
    \  let max_word = \"\"\n  for w in words {\n    let count = w.count(/[a-z]/)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ w in words {\n    let count = count_unique_chars(w)\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count =\
    \ count_unique_chars(w)\n    if count > max_count {\n      max_count = count\n\
    \      max_word = w\n    }\n  }\n  return max_word", "  let max_count = 0\n  let\
    \ max_word = String::from(\"\")\n  for w in words {\n    let count = w.count(/[a-z]/);\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ w in words {\n    let count = w.count(/[a-z]/);\n    if count > max_count {\n\
    \      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count =\
    \ w.count(/[a-z]/);\n    if count > max_count {\n      max_count = count\n   \
    \   max_word = w\n    }\n  }\n  return max_word", "  let max_count = 0\n  let\
    \ max_word = \"\"\n  for w in words {\n    let count = count_unique_chars(w)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ w in words {\n    let count = 0\n    for i in w.chars() {\n      if i.is_upper()\
    \ {\n        count += 1\n      }\n    }\n    if count > max_count {\n      max_count\
    \ = count\n      max_word = w\n    }\n  }\n  return max_word", "  let max_count\
    \ = 0\n  let max_word = \"\"\n  for word in words {\n    let count = count_unique_chars(word)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = word\n\
    \    }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n\
    \  for w in words {\n    let count = w.count(/[a-z]/)\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for word in words {\n    let count\
    \ = word.count(/[a-z]/)\n    if count > max_count {\n      max_count = count\n\
    \      max_word = word\n    }\n  }\n  return max_word", "  let max_count = 0\n\
    \  let max_word = \"\"\n  for w in words {\n    let count = 0\n    for i in 0..len(w)\
    \ {\n      if w[i] == w[i+1] {\n        count += 1\n      }\n    }\n    if count\
    \ > max_count {\n      max_count = count\n      max_word = w\n    }\n  }\n  return\
    \ max_word", "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n\
    \    let count = w.count(/[a-z]/)\n    if count > max_count {\n      max_count\
    \ = count\n      max_word = w\n    }\n  }\n  return max_word", "  let max_count\
    \ = 0\n  let max_word = \"\"\n  for word in words {\n    let count = word.count(/[a-z]/);\n\
    \    if count > max_count {\n      max_count = count\n      max_word = word\n\
    \    }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = String::from(\"\
    \")\n  for word in words {\n    let count = count_unique_chars(word)\n    if count\
    \ > max_count {\n      max_count = count\n      max_word = word\n    }\n  }\n\
    \  return max_word", "  let max_count = 0\n  let max_word = String::from(\"\"\
    )\n  for word in words {\n    let count = count_unique_chars(word)\n    if count\
    \ > max_count {\n      max_count = count\n      max_word = word\n    }\n  }\n\
    \  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for w in words\
    \ {\n    let count = w.count_unique_chars()\n    if count > max_count {\n    \
    \  max_count = count\n      max_word = w\n    }\n  }\n  return max_word", "  let\
    \ max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count = w.count(/[a-z]/);\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ w in words {\n    let count = w.count(/[a-z]/);\n    if count > max_count {\n\
    \      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count =\
    \ count_unique_chars(w)\n    if count > max_count {\n      max_count = count\n\
    \      max_word = w\n    }\n  }\n  return max_word", "  let max_count = 0\n  let\
    \ max_word = \"\"\n  for w in words {\n    let count = 0\n    for c in w {\n \
    \     if c == ' ' {\n        continue\n      }\n      count += 1\n    }\n    if\
    \ count > max_count {\n      max_count = count\n      max_word = w\n    }\n  }\n\
    \  return max_word", "  let max_count = 0\n  let max_word = String::from(\"\"\
    )\n  for word in words {\n    let count = count_unique_chars(word)\n    if count\
    \ > max_count {\n      max_count = count\n      max_word = word\n    }\n  }\n\
    \  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for w in words\
    \ {\n    let count = w.count_unique_chars()\n    if count > max_count {\n    \
    \  max_count = count\n      max_word = w\n    }\n  }\n  return max_word", "  let\
    \ max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count = count_unique_chars(w)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ w in words {\n    let count = count_unique_chars(w)\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count =\
    \ w.count(/[a-z]/)\n    if count > max_count {\n      max_count = count\n    \
    \  max_word = w\n    }\n  }\n  return max_word", "  let max_count = 0\n  let max_word\
    \ = \"\"\n  for word in words {\n    let count = word.count(/[a-z]/);\n    if\
    \ count > max_count {\n      max_count = count\n      max_word = word\n    }\n\
    \  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for w\
    \ in words {\n    let count = count_unique_chars(w)\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count =\
    \ count_unique_chars(w)\n    if count > max_count {\n      max_count = count\n\
    \      max_word = w\n    }\n  }\n  return max_word", "  let max_count = 0\n  let\
    \ max_word = String::from(\"\")\n  for word in words {\n    let count = word.count(/[a-z]/);\n\
    \    if count > max_count {\n      max_count = count\n      max_word = word\n\
    \    }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n\
    \  for w in words {\n    let count = w.count(/[a-z]/);\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0;\n  let max_word = String::from(\"\");\n  for word in words\
    \ {\n    let count = count_unique_chars(word);\n    if count > max_count {\n \
    \     max_count = count;\n      max_word = word;\n    }\n  }\n  return max_word;",
  "  let max_count = 0\n  let max_word = \"\"\n  for word in words {\n    let count\
    \ = word.count(/[a-z]/);\n    if count > max_count {\n      max_count = count\n\
    \      max_word = word\n    }\n  }\n  return max_word", "  let max_count = 0\n\
    \  let max_count_index = 0\n  let max_count_word = \"\"\n  for i in 0..words.len()\
    \ {\n    let count = 0\n    for j in 0..words[i].len() {\n      if words[i][j]\
    \ == words[i][j].to_lower() {\n        count += 1\n      }\n    }\n    if count\
    \ > max_count {\n      max_count = count\n      max_count_index = i\n      max_count_word\
    \ = words[i]\n    }\n  }\n  return max_count_word", "  let max_count = 0\n  let\
    \ max_word = \"\"\n  for w in words {\n    let count = w.count(/[a-z]/)\n    if\
    \ count > max_count {\n      max_count = count\n      max_word = w\n    }\n  }\n\
    \  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for w in words\
    \ {\n    let count = count_unique_chars(w)\n    if count > max_count {\n     \
    \ max_count = count\n      max_word = w\n    }\n  }\n  return max_word", "  let\
    \ max_count = 0;\n  let max_word = String::from(\"\");\n  for word in words {\n\
    \    let count = count_unique_chars(word);\n    if count > max_count {\n     \
    \ max_count = count;\n      max_word = word;\n    }\n  }\n  return max_word;",
  "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count =\
    \ w.count(/[a-z]/);\n    if count > max_count {\n      max_count = count\n   \
    \   max_word = w\n    }\n  }\n  return max_word", "  let max_count = 0\n  let\
    \ max_word = \"\"\n  for w in words {\n    let count = count_unique_chars(w)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0;\n  let max_word = String::from(\"\
    \");\n  for word in words {\n    let count = count_unique_chars(word);\n    if\
    \ count > max_count {\n      max_count = count;\n      max_word = word;\n    }\n\
    \  }\n  return max_word;", "  let max_count = 0\n  let max_word = \"\"\n\n  for\
    \ w in words {\n    let count = w.count(/[a-z]/);\n    if count > max_count {\n\
    \      max_count = count\n      max_word = w\n    }\n  }\n\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count =\
    \ w.count_unique()\n    if count > max_count {\n      max_count = count\n    \
    \  max_word = w\n    }\n  }\n  return max_word", "  let max_count = 0\n  let max_word\
    \ = \"\"\n  for w in words {\n    let count = count_unique_chars(w)\n    if count\
    \ > max_count {\n      max_count = count\n      max_word = w\n    }\n  }\n  return\
    \ max_word", "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n\
    \    let count = count_unique_chars(w)\n    if count > max_count {\n      max_count\
    \ = count\n      max_word = w\n    }\n  }\n  return max_word", "  let max_count\
    \ = 0\n  let max_word = \"\"\n  for word in words {\n    let count = word.count(/[a-z]/);\n\
    \    if count > max_count {\n      max_count = count\n      max_word = word\n\
    \    }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n\
    \  for word in words {\n    let count = count_unique_chars(word)\n    if count\
    \ > max_count {\n      max_count = count\n      max_word = word\n    }\n  }\n\
    \  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for w in words\
    \ {\n    let count = w.count_unique_chars()\n    if count > max_count {\n    \
    \  max_count = count\n      max_word = w\n    }\n  }\n  return max_word", "  let\
    \ max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count = count_unique_chars(w)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ w in words {\n    let count = w.count(/[a-z]/);\n    if count > max_count {\n\
    \      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count =\
    \ count_unique_chars(w)\n    if count > max_count {\n      max_count = count\n\
    \      max_word = w\n    }\n  }\n  return max_word", "  let max_count = 0\n  let\
    \ max_word = \"\"\n  for word in words {\n    let count = word.count(/[a-z]/);\n\
    \    if count > max_count {\n      max_count = count\n      max_word = word\n\
    \    }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n\
    \  for w in words {\n    let count = w.count(/[a-z]/)\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0;\n  let max_count_index = 0;\n  let max_count_word = String::from(\"\
    \");\n  for (let i = 0; i < words.len(); i++) {\n    let word = words[i];\n  \
    \  let count = word.count(/[a-z]/);\n    if (count > max_count) {\n      max_count\
    \ = count;\n      max_count_index = i;\n      max_count_word = word;\n    }\n\
    \  }\n  return max_count_word;", "  let max_count = 0\n  let max_word = \"\"\n\
    \  for w in words {\n    let count = count_unique_chars(w)\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count =\
    \ count_unique_chars(w)\n    if count > max_count {\n      max_count = count\n\
    \      max_word = w\n    }\n  }\n  return max_word", "  let max_count = 0\n  let\
    \ max_word = \"\"\n  for w in words {\n    let count = count_unique_chars(w)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ w in words {\n    let count = count_unique_chars(w)\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = String::from(\"\")\n  for w in words {\n\
    \    let count = w.count(/[a-z]/);\n    if count > max_count {\n      max_count\
    \ = count\n      max_word = w\n    }\n  }\n  return max_word", "  let max_count\
    \ = 0\n  let max_word = \"\"\n  for w in words {\n    let count = count_unique_chars(w)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ w in words {\n    let count = w.count(/[a-z]/);\n    if count > max_count {\n\
    \      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count =\
    \ w.count(/[a-z]/);\n    if count > max_count {\n      max_count = count\n   \
    \   max_word = w\n    }\n  }\n  return max_word", "  let max_count = 0\n  let\
    \ max_word = \"\"\n  for w in words {\n    let count = w.count(/[a-z]/);\n   \
    \ if count > max_count {\n      max_count = count\n      max_word = w\n    }\n\
    \  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for w\
    \ in words {\n    let count = count_unique_chars(w)\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n\n  for w in words {\n    let count\
    \ = count_unique_chars(w)\n    if count > max_count {\n      max_count = count\n\
    \      max_word = w\n    }\n  }\n\n  return max_word", "  let max_count = 0\n\
    \  let max_word = String::from(\"\")\n  for w in words {\n    let count = w.count(/[a-z]/)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = \"\"\n  for\
    \ w in words {\n    let count = count_unique_chars(w)\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n\n  for w in words {\n    let count\
    \ = count_unique_chars(w)\n    if count > max_count {\n      max_count = count\n\
    \      max_word = w\n    }\n  }\n\n  return max_word", "  let max_count = 0\n\
    \  let max_word = \"\"\n  for w in words {\n    let count = count_unique_chars(w)\n\
    \    if count > max_count {\n      max_count = count\n      max_word = w\n   \
    \ }\n  }\n  return max_word", "  let max_count = 0\n  let max_word = String::from(\"\
    \")\n  for w in words {\n    let count = w.count(/[a-z]/);\n    if count > max_count\
    \ {\n      max_count = count\n      max_word = w\n    }\n  }\n  return max_word",
  "  let max_count = 0\n  let max_word = \"\"\n  for w in words {\n    let count =\
    \ w.count_unique_chars()\n    if count > max_count {\n      max_count = count\n\
    \      max_word = w\n    }\n  }\n  return max_word", "  let max_count = 0\n  let\
    \ max_word = \"\"\n  for w in words {\n    let count = w.count(/[a-z]/);\n   \
    \ if count > max_count {\n      max_count = count\n      max_word = w\n    }\n\
    \  }\n  return max_word", "  let max_count = 0;\n  let max_word = String::from(\"\
    \");\n  for w in words {\n    let count = w.count_unique();\n    if count > max_count\
    \ {\n      max_count = count;\n      max_word = w;\n    }\n  }\n  return max_word;",
  "  let max_count = 0\n  let max_word = \"\"\n\n  for word in words {\n    let count\
    \ = word.count(/[a-z]/);\n    if count > max_count {\n      max_count = count\n\
    \      max_word = word\n    }\n  }\n\n  return max_word"]
stop_tokens:
- "\n}"

name: HumanEval_127_intersection
language: rs
prompt: "/// You are given two intervals,\n/// where each interval is a pair of integers.\
  \ For example, interval = (start, end) = (1, 2).\n/// The given intervals are closed\
  \ which means that the interval (start, end)\n/// includes both start and end.\n\
  /// For each given interval, it is assumed that its start is less or equal its end.\n\
  /// Your task is to determine whether the length of intersection of these two \n\
  /// intervals is a prime number.\n/// Example, the intersection of the intervals\
  \ (1, 3), (2, 4) is (2, 3)\n/// which its length is 1, which not a prime number.\n\
  /// If the length of the intersection is a prime number, return \"YES\",\n/// otherwise,\
  \ return \"NO\".\n/// If the two intervals don't intersect, return \"NO\".\n///\
  \ [input/output] samples:\n/// >>> intersection((1, 2), (2, 3))\n/// String::from(\"\
  NO\")\n/// >>> intersection((-1, 1), (0, 4))\n/// String::from(\"NO\")\n/// >>>\
  \ intersection((-3, -1), (-5, 5))\n/// String::from(\"YES\")\nfn intersection(interval1:\
  \ (isize, isize), interval2: (isize, isize)) -> String {\n"
tests: "}\n\nfn main() {\n    let candidate = intersection;\n    assert_eq!(candidate((1,\
  \ 2), (2, 3)), String::from(\"NO\"));\n    assert_eq!(candidate((-1, 1), (0, 4)),\
  \ String::from(\"NO\"));\n    assert_eq!(candidate((-3, -1), (-5, 5)), String::from(\"\
  YES\"));\n    assert_eq!(candidate((-2, 2), (-4, 0)), String::from(\"YES\"));\n\
  \    assert_eq!(candidate((-11, 2), (-1, -1)), String::from(\"NO\"));\n    assert_eq!(candidate((1,\
  \ 2), (3, 5)), String::from(\"NO\"));\n    assert_eq!(candidate((1, 2), (1, 2)),\
  \ String::from(\"NO\"));\n    assert_eq!(candidate((-2, -2), (-3, -2)), String::from(\"\
  NO\"));\n}\n"
completions: ["    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let\
    \ start2 = interval2[0];\n    let end2 = interval2[1];\n    if start1 > end2 ||\
    \ start2 > end1 {\n        return \"NO\";\n    }\n    let len1 = end1 - start1\
    \ + 1;\n    let len2 = end2 - start2 + 1;\n    let len = len1 * len2;\n    if\
    \ len % 2 == 0 {\n        return \"NO\";\n    }\n    return \"YES\";", "  if interval1.start\
    \ > interval2.end {\n    return \"NO\"\n  }\n  if interval1.end < interval2.start\
    \ {\n    return \"NO\"\n  }\n  if interval1.start == interval2.start && interval1.end\
    \ == interval2.end {\n    return \"YES\"\n  }\n  if interval1.start == interval2.start\
    \ {\n    return \"NO\"\n  }\n  if interval1.end == interval2.end {\n    return\
    \ \"NO\"\n  }\n  let min = interval1.start\n  let max = interval1.end\n  if interval1.start\
    \ < interval2.start {\n    min = interval2.start\n  }\n  if interval1.end > interval2.end\
    \ {\n    max = interval2.end\n  }\n  let length = max - min + 1\n  if length %\
    \ 2 == 0 {\n    return \"NO\"\n  }\n  return \"YES\"", "  if interval1.start >\
    \ interval2.end || interval2.start > interval1.end {\n    return \"NO\"\n  }\n\
    \  if interval1.start == interval2.start && interval1.end == interval2.end {\n\
    \    return \"YES\"\n  }\n  if interval1.start < interval2.start {\n    return\
    \ \"NO\"\n  }\n  if interval1.end < interval2.end {\n    return \"NO\"\n  }\n\
    \  let min = interval1.start\n  let max = interval1.end\n  if interval1.start\
    \ > interval2.start {\n    min = interval2.start\n  }\n  if interval1.end < interval2.end\
    \ {\n    max = interval2.end\n  }\n  let length = max - min + 1\n  if length %\
    \ 2 == 0 {\n    return \"NO\"\n  }\n  return \"YES\"", "    let start1 = interval1[0];\n\
    \    let end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 =\
    \ interval2[1];\n    if start1 > end1 || start2 > end2 {\n        return \"NO\"\
    ;\n    }\n    if start1 > start2 || end1 < end2 {\n        return \"NO\";\n  \
    \  }\n    let length = end1 - start1 + 1;\n    if length == 0 {\n        return\
    \ \"NO\";\n    }\n    if length % 2 == 0 {\n        return \"NO\";\n    }\n  \
    \  return \"YES\";", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n\
    \    let start2 = interval2[0];\n    let end2 = interval2[1];\n    if start1 >\
    \ end1 || start2 > end2 {\n        return \"NO\";\n    }\n    if start1 > start2\
    \ || end1 < end2 {\n        return \"NO\";\n    }\n    let length = end1 - start1\
    \ + 1;\n    if length % 2 == 0 {\n        return \"NO\";\n    }\n    return \"\
    YES\";", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let\
    \ start2 = interval2[0];\n    let end2 = interval2[1];\n    if start1 > end2 ||\
    \ start2 > end1 {\n        return \"NO\";\n    }\n    let length = end1 - start1;\n\
    \    if (length % 2 == 0) {\n        return \"NO\";\n    }\n    let length2 =\
    \ end2 - start2;\n    if (length2 % 2 == 0) {\n        return \"NO\";\n    }\n\
    \    let result = start2 + length2 - end1;\n    if (result % 2 == 0) {\n     \
    \   return \"NO\";\n    }\n    return \"YES\";", "  let start1 = interval1[0];\n\
    \  let end1 = interval1[1];\n  let start2 = interval2[0];\n  let end2 = interval2[1];\n\
    \  if start1 > end2 || start2 > end1 {\n    return \"NO\";\n  }\n  let length\
    \ = end1 - start1;\n  if length == 0 {\n    return \"NO\";\n  }\n  if length ==\
    \ 1 {\n    return \"YES\";\n  }\n  if is_prime(length) {\n    return \"YES\";\n\
    \  }\n  return \"NO\";", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n\
    \    let start2 = interval2[0];\n    let end2 = interval2[1];\n    let min = start1\
    \ < start2 ? start1 : start2;\n    let max = end1 > end2 ? end1 : end2;\n    if\
    \ (min > max) {\n        return \"NO\";\n    }\n    let length = max - min + 1;\n\
    \    if (length % 2 == 0) {\n        return \"NO\";\n    }\n    return \"YES\"\
    ;", "  let start1 = interval1[0];\n  let end1 = interval1[1];\n  let start2 =\
    \ interval2[0];\n  let end2 = interval2[1];\n  if (start1 > end2 || start2 > end1)\
    \ {\n    return \"NO\";\n  }\n  if (start1 <= start2 && end1 >= end2) {\n    return\
    \ \"YES\";\n  }\n  let length = end1 - start1 + 1;\n  if (length % 2 == 0) {\n\
    \    return \"NO\";\n  }\n  return \"YES\";", "    let min1 = interval1[0];\n\
    \    let max1 = interval1[1];\n    let min2 = interval2[0];\n    let max2 = interval2[1];\n\
    \    if (min1 > max2 || min2 > max1) {\n        return \"NO\";\n    }\n    if\
    \ (min1 <= min2 && max1 >= max2) {\n        return \"YES\";\n    }\n    let length\
    \ = max1 - min1;\n    let length2 = max2 - min2;\n    let result = is_prime(length\
    \ * length2);\n    if (result) {\n        return \"YES\";\n    }\n    return \"\
    NO\";", "  if interval1.start > interval2.end || interval2.start > interval1.end\
    \ {\n    return String::from(\"NO\")\n  }\n  if interval1.start == interval2.start\
    \ && interval1.end == interval2.end {\n    return String::from(\"YES\")\n  }\n\
    \  let min = min(interval1.start, interval2.start)\n  let max = max(interval1.end,\
    \ interval2.end)\n  let length = max - min + 1\n  if length % 2 == 0 {\n    return\
    \ String::from(\"NO\")\n  }\n  return String::from(\"YES\")", "    let min1 =\
    \ interval1[0];\n    let max1 = interval1[1];\n    let min2 = interval2[0];\n\
    \    let max2 = interval2[1];\n    if (min1 > max2 || min2 > max1) {\n       \
    \ return \"NO\";\n    }\n    let len1 = max1 - min1 + 1;\n    let len2 = max2\
    \ - min2 + 1;\n    let len = len1 * len2;\n    if (len % 2 == 0) {\n        return\
    \ \"NO\";\n    }\n    return \"YES\";", "  if interval1.start > interval2.end\
    \ || interval2.start > interval1.end {\n    return \"NO\"\n  }\n  if interval1.start\
    \ == interval2.start && interval1.end == interval2.end {\n    return \"YES\"\n\
    \  }\n  if interval1.start < interval2.start {\n    return \"NO\"\n  }\n  if interval1.end\
    \ < interval2.end {\n    return \"NO\"\n  }\n  if interval1.start == interval2.start\
    \ {\n    return \"YES\"\n  }\n  if interval1.end == interval2.end {\n    return\
    \ \"YES\"\n  }\n  if interval1.start < interval2.start {\n    return \"NO\"\n\
    \  }\n  if interval1.end > interval2.end {\n    return \"NO\"\n  }\n  return \"\
    YES\"", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let\
    \ start2 = interval2[0];\n    let end2 = interval2[1];\n    let length = end1\
    \ - start1 + 1;\n    if (end2 - start2 + 1 != length) {\n        return \"NO\"\
    ;\n    }\n    let is_prime = false;\n    let i = start1;\n    while (!is_prime\
    \ && i <= end1) {\n        let j = start2;\n        while (!is_prime && j <= end2)\
    \ {\n            if (i == j) {\n                is_prime = true;\n           \
    \ }\n            j += 1;\n        }\n        i += 1;\n    }\n    if (is_prime)\
    \ {\n        return \"YES\";\n    }\n    return \"NO\";", "    let start1 = interval1[0];\n\
    \    let end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 =\
    \ interval2[1];\n    let length = end1 - start1 + 1;\n    if (start1 > end2 ||\
    \ start2 > end1) {\n        return \"NO\";\n    }\n    if (start1 > start2) {\n\
    \        let temp = start1;\n        start1 = start2;\n        start2 = temp;\n\
    \    }\n    if (end1 < end2) {\n        let temp = end1;\n        end1 = end2;\n\
    \        end2 = temp;\n    }\n    let length2 = end2 - start2 + 1;\n    if (length\
    \ % length2 != 0) {\n        return \"NO\";\n    }\n    let length1 = end1 - start1\
    \ + 1;\n    if (length % length1 != 0) {\n        return \"NO\";\n    }\n    return\
    \ \"YES\";", "    if interval1.start > interval2.end {\n        return \"NO\"\n\
    \    }\n    if interval2.start > interval1.end {\n        return \"NO\"\n    }\n\
    \    if interval1.start == interval2.start && interval1.end == interval2.end {\n\
    \        return \"YES\"\n    }\n    if interval1.start == interval2.start {\n\
    \        return \"NO\"\n    }\n    if interval1.end == interval2.end {\n     \
    \   return \"NO\"\n    }\n    if interval1.start < interval2.start {\n       \
    \ return \"NO\"\n    }\n    if interval1.end < interval2.end {\n        return\
    \ \"NO\"\n    }\n    let length = interval1.end - interval1.start + 1\n    let\
    \ divisor = 2\n    while divisor <= length {\n        if length % divisor != 0\
    \ {\n            divisor += 1\n            continue\n        }\n        if interval1.start\
    \ <= interval2.start && interval1.end >= interval2.end {\n            return \"\
    YES\"\n        }\n        if interval1.start >= interval2.start && interval1.end\
    \ <= interval2.end {\n            return \"YES\"\n        }\n        if interval1.start\
    \ < interval2.start && interval1.end > interval2.end {\n            return \"\
    NO\"\n        }\n        if interval1.start > interval2.start && interval1.end\
    \ < interval2.end {\n            return \"NO\"\n        }\n        if interval1.start\
    \ > interval2.start {\n            interval1.start -= 1\n        }\n        if\
    \ interval1.end < interval2.end {\n            interval1.end += 1\n        }\n\
    \        if interval1.start < interval2.start {\n            interval2.start -=\
    \ 1\n        }\n        if interval1.end > interval2.end {\n            interval2.end\
    \ += 1\n        }\n        return \"YES\"\n    }\n    return \"NO\"", "    let\
    \ start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2 = interval2[0];\n\
    \    let end2 = interval2[1];\n    if start1 > end1 || start2 > end2 {\n     \
    \   return \"NO\";\n    }\n    let length = end1 - start1 + 1;\n    if length\
    \ == 0 {\n        return \"NO\";\n    }\n    if length == 1 {\n        return\
    \ \"YES\";\n    }\n    let is_prime = is_prime(length);\n    if is_prime {\n \
    \       return \"YES\";\n    }\n    return \"NO\";", "  if interval1.start > interval2.end\
    \ || interval2.start > interval1.end {\n    return \"NO\"\n  }\n  if interval1.start\
    \ == interval2.start && interval1.end == interval2.end {\n    return \"YES\"\n\
    \  }\n  let length = interval1.end - interval1.start + 1\n  if length % 2 == 0\
    \ {\n    return \"NO\"\n  }\n  return \"YES\"", "    let start1 = interval1[0];\n\
    \    let end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 =\
    \ interval2[1];\n    if start1 > end2 || start2 > end1 {\n        return \"NO\"\
    ;\n    }\n    let length = end1 - start1;\n    if (length % 2 == 0) {\n      \
    \  return \"NO\";\n    }\n    let length2 = end2 - start2;\n    if (length2 %\
    \ 2 == 0) {\n        return \"NO\";\n    }\n    let length3 = end1 - start2;\n\
    \    if (length3 % 2 == 0) {\n        return \"NO\";\n    }\n    return \"YES\"\
    ;", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2\
    \ = interval2[0];\n    let end2 = interval2[1];\n    let length = end1 - start1;\n\
    \    let length2 = end2 - start2;\n    if (length < 0 || length2 < 0) {\n    \
    \    return \"NO\";\n    }\n    if (length == 0 || length2 == 0) {\n        return\
    \ \"NO\";\n    }\n    if (length == 1 || length2 == 1) {\n        return \"YES\"\
    ;\n    }\n    if (length % 2 == 0 || length2 % 2 == 0) {\n        return \"NO\"\
    ;\n    }\n    let result = 0;\n    let i = 0;\n    let j = 0;\n    while (i <\
    \ length && j < length2) {\n        let start = start1 + i;\n        let end =\
    \ start1 + i + 1;\n        let start2 = start2 + j;\n        let end2 = start2\
    \ + j + 1;\n        if (start > end) {\n            i += 1;\n            continue;\n\
    \        }\n        if (start2 > end2) {\n            j += 1;\n            continue;\n\
    \        }\n        if (start < start2 || end > end2) {\n            i += 1;\n\
    \            j += 1;\n            continue;\n        }\n        result += 1;\n\
    \        i += 1;\n        j += 1;\n    }\n    if (result % 2 == 0) {\n       \
    \ return \"YES\";\n    }\n    return \"NO\";", "    let start1 = interval1[0];\n\
    \    let end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 =\
    \ interval2[1];\n    let length = end1 - start1 + 1;\n    if (end2 - start2 +\
    \ 1 != length) {\n        return \"NO\";\n    }\n    let result = 0;\n    for\
    \ (let i = start1; i <= end1; i++) {\n        for (let j = start2; j <= end2;\
    \ j++) {\n            if (i == j) {\n                result += 1;\n          \
    \  }\n        }\n    }\n    if (result % 2 == 0) {\n        return \"NO\";\n \
    \   }\n    return \"YES\";", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n\
    \    let start2 = interval2[0];\n    let end2 = interval2[1];\n    if start1 >\
    \ end2 || start2 > end1 {\n        return \"NO\";\n    }\n    if start1 > start2\
    \ || start2 > end1 {\n        return \"NO\";\n    }\n    if end1 < start2 || end2\
    \ < start1 {\n        return \"NO\";\n    }\n    let length = end1 - start1 +\
    \ 1;\n    if length % 2 == 0 {\n        return \"NO\";\n    }\n    return \"YES\"\
    ;", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2\
    \ = interval2[0];\n    let end2 = interval2[1];\n    if (start1 > end2 || start2\
    \ > end1) {\n        return \"NO\";\n    }\n    let length = end1 - start1 + 1;\n\
    \    if (length % 2 == 0) {\n        return \"NO\";\n    }\n    return \"YES\"\
    ;", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2\
    \ = interval2[0];\n    let end2 = interval2[1];\n    if (start1 > end2 || start2\
    \ > end1) {\n        return \"NO\";\n    }\n    let length = end1 - start1;\n\
    \    if (length == 0) {\n        return \"NO\";\n    }\n    if (length == 1) {\n\
    \        return \"YES\";\n    }\n    let divisor = 2;\n    while (divisor <= length)\
    \ {\n        if (length % divisor == 0) {\n            return \"NO\";\n      \
    \  }\n        divisor += 1;\n    }\n    return \"YES\";", "  if interval1.start\
    \ > interval2.end || interval2.start > interval1.end {\n    return \"NO\"\n  }\n\
    \  if interval1.start == interval2.start && interval1.end == interval2.end {\n\
    \    return \"YES\"\n  }\n  if interval1.start <= interval2.start && interval1.end\
    \ >= interval2.end {\n    return \"YES\"\n  }\n  return \"NO\"", "  if interval1.start\
    \ > interval2.end {\n    return \"NO\"\n  }\n  if interval1.end < interval2.start\
    \ {\n    return \"NO\"\n  }\n  if interval1.start == interval2.start && interval1.end\
    \ == interval2.end {\n    return \"YES\"\n  }\n  let length = interval1.end -\
    \ interval1.start + 1\n  if length % 2 == 0 {\n    return \"NO\"\n  }\n  return\
    \ \"YES\"", "  if interval1.start > interval2.end || interval2.start > interval1.end\
    \ {\n    return \"NO\"\n  }\n  if interval1.start == interval2.start && interval1.end\
    \ == interval2.end {\n    return \"YES\"\n  }\n  if interval1.start == interval2.start\
    \ {\n    return \"NO\"\n  }\n  if interval1.end == interval2.end {\n    return\
    \ \"NO\"\n  }\n  let min = interval1.start\n  let max = interval1.end\n  if interval1.start\
    \ > interval2.start {\n    min = interval2.start\n  }\n  if interval1.end < interval2.end\
    \ {\n    max = interval2.end\n  }\n  let length = max - min + 1\n  if length %\
    \ 2 == 0 {\n    return \"NO\"\n  }\n  return \"YES\"", "  if interval1.start >\
    \ interval2.end {\n    return \"NO\"\n  }\n  if interval2.start > interval1.end\
    \ {\n    return \"NO\"\n  }\n  if interval1.start == interval2.start {\n    return\
    \ \"YES\"\n  }\n  if interval1.end == interval2.end {\n    return \"YES\"\n  }\n\
    \  if interval1.start < interval2.start {\n    return \"NO\"\n  }\n  if interval1.end\
    \ < interval2.end {\n    return \"NO\"\n  }\n  return \"YES\"", "    let start1\
    \ = interval1[0];\n    let end1 = interval1[1];\n    let start2 = interval2[0];\n\
    \    let end2 = interval2[1];\n    if start1 > end1 || start2 > end2 {\n     \
    \   return \"NO\";\n    }\n    if start1 > start2 || end1 < end2 {\n        return\
    \ \"NO\";\n    }\n    let length = end1 - start1 + 1;\n    if length % 2 == 0\
    \ {\n        return \"NO\";\n    }\n    return \"YES\";", "    if interval1.start\
    \ > interval2.end {\n        return String::from(\"NO\")\n    }\n    if interval1.end\
    \ < interval2.start {\n        return String::from(\"NO\")\n    }\n    if interval1.start\
    \ == interval2.start and interval1.end == interval2.end {\n        return String::from(\"\
    YES\")\n    }\n    let result = 0\n    for i in interval1.start..interval1.end\
    \ {\n        for j in interval2.start..interval2.end {\n            if i == j\
    \ {\n                result += 1\n            }\n        }\n    }\n    if is_prime(result)\
    \ {\n        return String::from(\"YES\")\n    }\n    return String::from(\"NO\"\
    )", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2\
    \ = interval2[0];\n    let end2 = interval2[1];\n    if start1 > end1 || start2\
    \ > end2 {\n        return \"NO\";\n    }\n    if start1 > start2 || end1 < end2\
    \ {\n        return \"NO\";\n    }\n    let length = end1 - start1 + 1;\n    if\
    \ length % 2 == 0 {\n        return \"NO\";\n    }\n    return \"YES\";", "  if\
    \ interval1.start > interval2.end || interval2.start > interval1.end {\n    return\
    \ String::from(\"NO\")\n  }\n  if interval1.start == interval2.start && interval1.end\
    \ == interval2.end {\n    return String::from(\"YES\")\n  }\n  let length = interval1.end\
    \ - interval1.start + 1\n  if length % 2 == 0 {\n    return String::from(\"NO\"\
    )\n  }\n  return String::from(\"YES\")", "    let start1 = interval1[0];\n   \
    \ let end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 = interval2[1];\n\
    \    if (start1 > end2 || start2 > end1) {\n        return \"NO\";\n    }\n  \
    \  let length = end1 - start1;\n    if (length % 2 == 0) {\n        return \"\
    NO\";\n    }\n    let length2 = end2 - start2;\n    if (length2 % 2 == 0) {\n\
    \        return \"NO\";\n    }\n    let result = length * length2;\n    if (result.is_prime())\
    \ {\n        return \"YES\";\n    }\n    return \"NO\";", "    let start1 = interval1[0];\n\
    \    let end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 =\
    \ interval2[1];\n    if start1 > end2 || start2 > end1 {\n        return \"NO\"\
    ;\n    }\n    let length = end1 - start1;\n    if length == 0 {\n        return\
    \ \"NO\";\n    }\n    if length == 1 {\n        return \"YES\";\n    }\n    let\
    \ is_prime = false;\n    let i = start1;\n    while (!is_prime && i <= end1) {\n\
    \        is_prime = is_prime_number(i);\n        i += 1;\n    }\n    if (is_prime)\
    \ {\n        return \"YES\";\n    }\n    return \"NO\";", "    let start1 = interval1[0];\n\
    \    let end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 =\
    \ interval2[1];\n    if start1 > end2 || start2 > end1 {\n        return \"NO\"\
    ;\n    }\n    let length = end1 - start1 + 1;\n    if length == 1 {\n        return\
    \ \"YES\";\n    }\n    if length % 2 == 0 {\n        return \"NO\";\n    }\n \
    \   return \"YES\";", "  if interval1.start > interval2.end || interval2.start\
    \ > interval1.end {\n    return \"NO\"\n  }\n  if interval1.start == interval2.start\
    \ && interval1.end == interval2.end {\n    return \"YES\"\n  }\n  if interval1.start\
    \ == interval2.start {\n    return \"NO\"\n  }\n  if interval1.end == interval2.end\
    \ {\n    return \"NO\"\n  }\n  let length = interval1.end - interval1.start +\
    \ 1\n  if length % 2 == 0 {\n    return \"NO\"\n  }\n  return \"YES\"", "    let\
    \ start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2 = interval2[0];\n\
    \    let end2 = interval2[1];\n    if (start1 > end1 || start2 > end2) {\n   \
    \     return \"NO\";\n    }\n    let length = end1 - start1 + 1;\n    if (length\
    \ == 0) {\n        return \"NO\";\n    }\n    let length2 = end2 - start2 + 1;\n\
    \    if (length2 == 0) {\n        return \"NO\";\n    }\n    if (length % length2\
    \ != 0) {\n        return \"NO\";\n    }\n    let length3 = length / length2;\n\
    \    if (length3 % 2 != 0) {\n        return \"NO\";\n    }\n    return \"YES\"\
    ;", "    if interval1.start > interval2.end {\n        return String::from(\"\
    NO\")\n    }\n    if interval2.start > interval1.end {\n        return String::from(\"\
    NO\")\n    }\n    if interval1.start == interval2.start && interval1.end == interval2.end\
    \ {\n        return String::from(\"YES\")\n    }\n    let length = interval1.end\
    \ - interval1.start + 1\n    if length % 2 == 0 {\n        return String::from(\"\
    NO\")\n    }\n    return String::from(\"YES\")", "    let start1 = interval1[0];\n\
    \    let end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 =\
    \ interval2[1];\n    if start1 > end1 || start2 > end2 {\n        return \"NO\"\
    ;\n    }\n    if start1 > start2 || end1 < end2 {\n        return \"NO\";\n  \
    \  }\n    let length = end1 - start1 + 1;\n    if length % 2 == 0 {\n        return\
    \ \"NO\";\n    }\n    return \"YES\";", "  if interval1.start > interval2.end\
    \ || interval2.start > interval1.end {\n    return \"NO\"\n  }\n  if interval1.start\
    \ == interval2.start && interval1.end == interval2.end {\n    return \"YES\"\n\
    \  }\n  let length = interval1.end - interval1.start + 1\n  if length % 2 == 0\
    \ {\n    return \"NO\"\n  }\n  return \"YES\"", "    let start1 = interval1[0];\n\
    \    let end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 =\
    \ interval2[1];\n    if start1 > end1 || start2 > end2 {\n        return \"NO\"\
    ;\n    }\n    let min = start1 < start2 ? start1 : start2;\n    let max = end1\
    \ > end2 ? end1 : end2;\n    if min > max {\n        return \"NO\";\n    }\n \
    \   let length = max - min + 1;\n    if length % 2 == 0 {\n        return \"NO\"\
    ;\n    }\n    return \"YES\";", "    let start1 = interval1[0];\n    let end1\
    \ = interval1[1];\n    let start2 = interval2[0];\n    let end2 = interval2[1];\n\
    \    if start1 > end1 || start2 > end2 {\n        return \"NO\";\n    }\n    if\
    \ start1 <= start2 && end1 >= end2 {\n        return \"YES\";\n    }\n    let\
    \ length = end1 - start1;\n    if length % 2 == 0 {\n        return \"NO\";\n\
    \    }\n    let length2 = end2 - start2;\n    if length2 % 2 == 0 {\n        return\
    \ \"NO\";\n    }\n    return \"YES\";", "    let start1 = interval1[0];\n    let\
    \ end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 = interval2[1];\n\
    \    if start1 > end2 || start2 > end1 {\n        return \"NO\";\n    }\n    let\
    \ length = end1 - start1 + 1;\n    if length % 2 == 0 {\n        return \"NO\"\
    ;\n    }\n    return \"YES\";", "  if interval1.start > interval2.end || interval2.start\
    \ > interval1.end {\n    return String::from(\"NO\")\n  }\n  if interval1.start\
    \ == interval2.start && interval1.end == interval2.end {\n    return String::from(\"\
    YES\")\n  }\n  let min = interval1.start\n  let max = interval1.end\n  if interval1.start\
    \ > interval2.start {\n    min = interval2.start\n  }\n  if interval1.end < interval2.end\
    \ {\n    max = interval2.end\n  }\n  let length = max - min + 1\n  if length %\
    \ 2 == 0 {\n    return String::from(\"NO\")\n  }\n  return String::from(\"YES\"\
    )", "  if interval1.start > interval2.end {\n    return String::from(\"NO\")\n\
    \  }\n  if interval2.start > interval1.end {\n    return String::from(\"NO\")\n\
    \  }\n  if interval1.start == interval2.start && interval1.end == interval2.end\
    \ {\n    return String::from(\"YES\")\n  }\n  let min = interval1.start\n  let\
    \ max = interval1.end\n  if interval2.start < min {\n    min = interval2.start\n\
    \  }\n  if interval2.end > max {\n    max = interval2.end\n  }\n  let length =\
    \ max - min + 1\n  if length % 2 == 0 {\n    return String::from(\"NO\")\n  }\n\
    \  return String::from(\"YES\")", "    let start1 = interval1[0];\n    let end1\
    \ = interval1[1];\n    let start2 = interval2[0];\n    let end2 = interval2[1];\n\
    \    if start1 > end1 || start2 > end2 {\n        return \"NO\";\n    }\n    if\
    \ start1 > start2 || end1 < end2 {\n        return \"NO\";\n    }\n    let length\
    \ = end1 - start1 + 1;\n    if length % 2 == 0 {\n        return \"NO\";\n   \
    \ }\n    return \"YES\";", "    if interval1.start > interval2.end || interval2.start\
    \ > interval1.end {\n        return \"NO\"\n    }\n    if interval1.start == interval2.start\
    \ && interval1.end == interval2.end {\n        return \"YES\"\n    }\n    let\
    \ min = interval1.start\n    let max = interval1.end\n    if interval1.start <\
    \ interval2.start {\n        min = interval2.start\n    }\n    if interval1.end\
    \ > interval2.end {\n        max = interval2.end\n    }\n    let length = max\
    \ - min + 1\n    if length % 2 == 0 {\n        return \"NO\"\n    }\n    return\
    \ \"YES\"", "    if interval1.start > interval2.end || interval2.start > interval1.end\
    \ {\n        return \"NO\"\n    }\n    if interval1.start == interval2.start &&\
    \ interval1.end == interval2.end {\n        return \"YES\"\n    }\n    let min\
    \ = interval1.start\n    let max = interval1.end\n    if interval1.start > interval2.start\
    \ {\n        min = interval2.start\n    }\n    if interval1.end < interval2.end\
    \ {\n        max = interval2.end\n    }\n    let length = max - min + 1\n    if\
    \ length % 2 == 0 {\n        return \"NO\"\n    }\n    return \"YES\"", "    let\
    \ start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2 = interval2[0];\n\
    \    let end2 = interval2[1];\n    if start1 > end2 || start2 > end1 {\n     \
    \   return \"NO\";\n    }\n    let length = end1 - start1 + 1;\n    if length\
    \ % 2 == 0 {\n        return \"NO\";\n    }\n    return \"YES\";", "    let start1\
    \ = interval1[0];\n    let end1 = interval1[1];\n    let start2 = interval2[0];\n\
    \    let end2 = interval2[1];\n    if start1 > end2 || start2 > end1 {\n     \
    \   return \"NO\";\n    }\n    let length = end1 - start1;\n    if (length % 2\
    \ == 0) {\n        return \"NO\";\n    }\n    let length2 = end2 - start2;\n \
    \   if (length2 % 2 == 0) {\n        return \"NO\";\n    }\n    let length3 =\
    \ (end1 - start1) + (end2 - start2);\n    if (length3 % 2 == 0) {\n        return\
    \ \"NO\";\n    }\n    return \"YES\";", "    let start1 = interval1[0];\n    let\
    \ end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 = interval2[1];\n\
    \    let min = start1 < start2 ? start1 : start2;\n    let max = end1 > end2 ?\
    \ end1 : end2;\n    if (min > max) {\n        return \"NO\";\n    }\n    let length\
    \ = max - min + 1;\n    if (length % 2 == 0) {\n        return \"NO\";\n    }\n\
    \    return \"YES\";", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n\
    \    let start2 = interval2[0];\n    let end2 = interval2[1];\n    if start1 >\
    \ end2 || start2 > end1 {\n        return \"NO\";\n    }\n    let length = end1\
    \ - start1;\n    if length == 0 {\n        return \"NO\";\n    }\n    let length2\
    \ = end2 - start2;\n    if length2 == 0 {\n        return \"NO\";\n    }\n   \
    \ let length_intersection = length * length2;\n    if length_intersection % 2\
    \ == 0 {\n        return \"NO\";\n    }\n    return \"YES\";", "    let start1\
    \ = interval1[0];\n    let end1 = interval1[1];\n    let start2 = interval2[0];\n\
    \    let end2 = interval2[1];\n    if (start1 > end1 || start2 > end2) {\n   \
    \     return \"NO\";\n    }\n    if (start1 < start2 || end1 < end2) {\n     \
    \   return \"NO\";\n    }\n    let length = end1 - start1;\n    if (length % 2\
    \ == 0) {\n        return \"NO\";\n    }\n    return \"YES\";", "    let start1\
    \ = interval1[0];\n    let end1 = interval1[1];\n    let start2 = interval2[0];\n\
    \    let end2 = interval2[1];\n    if start1 > end1 || start2 > end2 {\n     \
    \   return \"NO\";\n    }\n    if start1 > start2 || end1 < end2 {\n        return\
    \ \"NO\";\n    }\n    let length = end1 - start1 + 1;\n    if length % 2 == 0\
    \ {\n        return \"NO\";\n    }\n    return \"YES\";", "    let start1 = interval1[0];\n\
    \    let end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 =\
    \ interval2[1];\n    let length = end1 - start1 + 1;\n    if (start1 > end2 ||\
    \ start2 > end1) {\n        return \"NO\";\n    }\n    if (start1 > start2) {\n\
    \        let temp = start1;\n        start1 = start2;\n        start2 = temp;\n\
    \    }\n    if (end1 < end2) {\n        let temp = end1;\n        end1 = end2;\n\
    \        end2 = temp;\n    }\n    let length2 = end2 - start2 + 1;\n    if (length\
    \ % length2 != 0) {\n        return \"NO\";\n    }\n    let length1 = end1 - start1\
    \ + 1;\n    if (length % length1 != 0) {\n        return \"NO\";\n    }\n    return\
    \ \"YES\";", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n \
    \   let start2 = interval2[0];\n    let end2 = interval2[1];\n    if start1 >\
    \ end2 || start2 > end1 {\n        return \"NO\";\n    }\n    if start1 <= start2\
    \ && end1 >= end2 {\n        return \"YES\";\n    }\n    let length = end1 - start1\
    \ + 1;\n    if length % 2 == 0 {\n        return \"NO\";\n    }\n    return \"\
    YES\";", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let\
    \ start2 = interval2[0];\n    let end2 = interval2[1];\n    let length = end1\
    \ - start1 + 1;\n    if (start1 > end2 || start2 > end1) {\n        return String::from(\"\
    NO\");\n    }\n    if (start1 > start2) {\n        let temp = start1;\n      \
    \  start1 = start2;\n        start2 = temp;\n    }\n    if (end1 > end2) {\n \
    \       let temp = end1;\n        end1 = end2;\n        end2 = temp;\n    }\n\
    \    if (start2 > end1) {\n        return String::from(\"NO\");\n    }\n    let\
    \ length2 = end2 - start2 + 1;\n    if (length % length2 != 0) {\n        return\
    \ String::from(\"NO\");\n    }\n    let length1 = end1 - start1 + 1;\n    let\
    \ result = String::from(\"YES\");\n    let i = 0;\n    while (i < length1) {\n\
    \        let j = 0;\n        while (j < length2) {\n            if (start1 + i\
    \ == start2 + j) {\n                result = String::from(\"YES\");\n        \
    \        break;\n            }\n            j += 1;\n        }\n        i += 1;\n\
    \    }\n    return result;", "  let start1 = interval1[0];\n  let end1 = interval1[1];\n\
    \  let start2 = interval2[0];\n  let end2 = interval2[1];\n  if start1 > end2\
    \ || start2 > end1 {\n    return \"NO\";\n  }\n  if start1 <= start2 && end1 >=\
    \ end2 {\n    return \"YES\";\n  }\n  if start1 <= start2 && end1 > end2 {\n \
    \   return \"NO\";\n  }\n  if start2 <= start1 && end2 > end1 {\n    return \"\
    NO\";\n  }\n  if start2 <= start1 && end2 < end1 {\n    return \"YES\";\n  }\n\
    \  if start1 >= start2 && end1 <= end2 {\n    return \"YES\";\n  }\n  if start1\
    \ > start2 && end1 < end2 {\n    return \"NO\";\n  }\n  if start1 < start2 &&\
    \ end1 > end2 {\n    return \"NO\";\n  }\n  return \"YES\";", "  if interval1.start\
    \ > interval2.end || interval2.start > interval1.end {\n    return \"NO\"\n  }\n\
    \  if interval1.start == interval2.start && interval1.end == interval2.end {\n\
    \    return \"YES\"\n  }\n  if interval1.start < interval2.start {\n    return\
    \ \"NO\"\n  }\n  if interval1.end < interval2.end {\n    return \"NO\"\n  }\n\
    \  let start = interval1.start\n  let end = interval1.end\n  let length = interval2.end\
    \ - interval2.start\n  let i = start\n  while i <= end {\n    let j = interval2.start\n\
    \    while j <= interval2.end {\n      if i == j {\n        i += length\n    \
    \    j += length\n        continue\n      }\n      if i > j {\n        return\
    \ \"NO\"\n      }\n      if i < j {\n        return \"NO\"\n      }\n      j +=\
    \ length\n    }\n    i += length\n  }\n  return \"YES\"", "    let start1 = interval1[0];\n\
    \    let end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 =\
    \ interval2[1];\n    if start1 > end1 || start2 > end2 {\n        return \"NO\"\
    ;\n    }\n    if start1 > end2 || start2 > end1 {\n        return \"NO\";\n  \
    \  }\n    if start1 > start2 || start2 > start1 {\n        return \"NO\";\n  \
    \  }\n    if end1 < start2 || end2 < start1 {\n        return \"NO\";\n    }\n\
    \    if end1 < end2 || end2 < end1 {\n        return \"NO\";\n    }\n    let length\
    \ = end1 - start1 + 1;\n    if length % 2 == 0 {\n        return \"NO\";\n   \
    \ }\n    return \"YES\";", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n\
    \    let start2 = interval2[0];\n    let end2 = interval2[1];\n    let length\
    \ = end1 - start1 + 1;\n    let length2 = end2 - start2 + 1;\n    if (length ==\
    \ 0 || length2 == 0) {\n        return \"NO\";\n    }\n    let result = false;\n\
    \    let i = start1;\n    let j = start2;\n    while (i <= end1 && j <= end2)\
    \ {\n        if (i == j) {\n            i += 1;\n            j += 1;\n       \
    \     continue;\n        }\n        if (i > j) {\n            j += 1;\n      \
    \      continue;\n        }\n        if (j > i) {\n            i += 1;\n     \
    \       continue;\n        }\n        result = true;\n        break;\n    }\n\
    \    if (result) {\n        return \"YES\";\n    } else {\n        return \"NO\"\
    ;\n    }", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n   \
    \ let start2 = interval2[0];\n    let end2 = interval2[1];\n    if start1 > end2\
    \ || start2 > end1 {\n        return \"NO\";\n    }\n    if start1 <= start2 &&\
    \ end1 >= end2 {\n        return \"YES\";\n    }\n    if start1 <= start2 && end1\
    \ > end2 {\n        return \"NO\";\n    }\n    if start1 > start2 && end1 < end2\
    \ {\n        return \"NO\";\n    }\n    let length = end1 - start1;\n    let length2\
    \ = end2 - start2;\n    let divisor = gcd(length, length2);\n    if divisor ==\
    \ 1 {\n        return \"YES\";\n    }\n    return \"NO\";", "  let start1 = interval1[0];\n\
    \  let end1 = interval1[1];\n  let start2 = interval2[0];\n  let end2 = interval2[1];\n\
    \  if start1 > end1 || start2 > end2 {\n    return \"NO\";\n  }\n  if start1 >\
    \ start2 || end1 < end2 {\n    return \"NO\";\n  }\n  let length = end1 - start1\
    \ + 1;\n  if length % 2 == 0 {\n    return \"NO\";\n  }\n  return \"YES\";", " \
    \   let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2 =\
    \ interval2[0];\n    let end2 = interval2[1];\n    if (start1 > end2) {\n    \
    \    return String::from(\"NO\");\n    }\n    if (start2 > end1) {\n        return\
    \ String::from(\"NO\");\n    }\n    let length = end1 - start1;\n    if (length\
    \ % 2 == 0) {\n        return String::from(\"NO\");\n    }\n    let length2 =\
    \ end2 - start2;\n    if (length2 % 2 == 0) {\n        return String::from(\"\
    NO\");\n    }\n    let result = (start1 + start2) / 2;\n    if (result < 0) {\n\
    \        return String::from(\"NO\");\n    }\n    if (result > length) {\n   \
    \     return String::from(\"NO\");\n    }\n    return String::from(\"YES\");",
  "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2 =\
    \ interval2[0];\n    let end2 = interval2[1];\n    if start1 > end1 || start2\
    \ > end2 {\n        return \"NO\";\n    }\n    if start1 > start2 || end1 < end2\
    \ {\n        return \"NO\";\n    }\n    let length = end1 - start1 + 1;\n    if\
    \ length == 1 {\n        return \"YES\";\n    }\n    if length % 2 == 0 {\n  \
    \      return \"NO\";\n    }\n    return \"YES\";", "    let start1 = interval1[0];\n\
    \    let end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 =\
    \ interval2[1];\n    if (start1 > end2 || start2 > end1) {\n        return String::from(\"\
    NO\");\n    }\n    let length = end1 - start1;\n    if (length % 2 == 0) {\n \
    \       return String::from(\"NO\");\n    }\n    let length2 = end2 - start2;\n\
    \    if (length2 % 2 == 0) {\n        return String::from(\"NO\");\n    }\n  \
    \  let length3 = end1 - start2;\n    if (length3 % 2 == 0) {\n        return String::from(\"\
    NO\");\n    }\n    let length4 = end2 - start1;\n    if (length4 % 2 == 0) {\n\
    \        return String::from(\"NO\");\n    }\n    return String::from(\"YES\"\
    );", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2\
    \ = interval2[0];\n    let end2 = interval2[1];\n    let min = start1 < start2\
    \ ? start1 : start2;\n    let max = end1 > end2 ? end1 : end2;\n    if (min >\
    \ max) {\n        return \"NO\";\n    }\n    let length = max - min + 1;\n   \
    \ if (length % 2 == 0) {\n        return \"NO\";\n    }\n    return \"YES\";",
  "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2 =\
    \ interval2[0];\n    let end2 = interval2[1];\n    if (start1 > end2 || start2\
    \ > end1) {\n        return \"NO\";\n    }\n    let length = end1 - start1 + 1;\n\
    \    if (length % 2 == 0) {\n        return \"NO\";\n    }\n    return \"YES\"\
    ;", "  if interval1.start > interval2.end {\n    return String::from(\"NO\")\n\
    \  }\n  if interval1.end < interval2.start {\n    return String::from(\"NO\")\n\
    \  }\n  if interval1.start == interval2.start && interval1.end == interval2.end\
    \ {\n    return String::from(\"YES\")\n  }\n  let length = interval1.end - interval1.start\
    \ + 1\n  if length % 2 == 0 {\n    return String::from(\"NO\")\n  }\n  return\
    \ String::from(\"YES\")", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n\
    \    let start2 = interval2[0];\n    let end2 = interval2[1];\n    if start1 >\
    \ end1 || start2 > end2 {\n        return \"NO\";\n    }\n    if start1 > start2\
    \ || end1 < end2 {\n        return \"NO\";\n    }\n    let length = end1 - start1\
    \ + 1;\n    if length == 1 {\n        return \"YES\";\n    }\n    if length %\
    \ 2 == 0 {\n        return \"NO\";\n    }\n    return \"YES\";", "    let start1\
    \ = interval1[0];\n    let end1 = interval1[1];\n    let start2 = interval2[0];\n\
    \    let end2 = interval2[1];\n    if (start1 > end1 || start2 > end2) {\n   \
    \     return \"NO\";\n    }\n    if (start1 < start2 || end1 < end2) {\n     \
    \   return \"NO\";\n    }\n    let length = end1 - start1;\n    if (length % 2\
    \ == 0) {\n        return \"NO\";\n    }\n    return \"YES\";", "    let start1\
    \ = interval1[0];\n    let end1 = interval1[1];\n    let start2 = interval2[0];\n\
    \    let end2 = interval2[1];\n    if start1 > end1 || start2 > end2 {\n     \
    \   return \"NO\";\n    }\n    if start1 > start2 || end1 < end2 {\n        return\
    \ \"NO\";\n    }\n    let length = end1 - start1 + 1;\n    if length == 1 {\n\
    \        return \"YES\";\n    }\n    if length % 2 == 0 {\n        return \"NO\"\
    ;\n    }\n    return \"YES\";", "    let start1 = interval1[0];\n    let end1\
    \ = interval1[1];\n    let start2 = interval2[0];\n    let end2 = interval2[1];\n\
    \    if (start1 > end2 || start2 > end1) {\n        return \"NO\";\n    }\n  \
    \  let length = end1 - start1;\n    if (length % 2 == 0) {\n        return \"\
    NO\";\n    }\n    let length2 = end2 - start2;\n    if (length2 % 2 == 0) {\n\
    \        return \"NO\";\n    }\n    let result = length * length2;\n    if (result.is_prime())\
    \ {\n        return \"YES\";\n    }\n    return \"NO\";", "    let start1 = interval1[0];\n\
    \    let end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 =\
    \ interval2[1];\n    if start1 > end1 || start2 > end2 {\n        return \"NO\"\
    ;\n    }\n    if start1 <= start2 && end1 >= end2 {\n        return \"YES\";\n\
    \    }\n    if start1 <= start2 && end1 > end2 {\n        return \"NO\";\n   \
    \ }\n    if start2 <= start1 && end2 > end1 {\n        return \"NO\";\n    }\n\
    \    if start2 <= start1 && end2 < end1 {\n        return \"YES\";\n    }\n  \
    \  return \"NO\";", "  if interval1.start > interval2.end {\n    return \"NO\"\
    \n  }\n  if interval2.start > interval1.end {\n    return \"NO\"\n  }\n  if interval1.start\
    \ == interval2.start {\n    return \"YES\"\n  }\n  if interval1.end == interval2.end\
    \ {\n    return \"YES\"\n  }\n  if interval1.start < interval2.start {\n    return\
    \ \"NO\"\n  }\n  if interval1.end < interval2.end {\n    return \"NO\"\n  }\n\
    \  if interval1.start > interval2.start {\n    return \"NO\"\n  }\n  if interval1.end\
    \ > interval2.end {\n    return \"NO\"\n  }\n  if interval1.start < interval2.start\
    \ {\n    return \"NO\"\n  }\n  if interval1.end < interval2.end {\n    return\
    \ \"NO\"\n  }\n  if interval1.start > interval2.start {\n    return \"NO\"\n \
    \ }\n  if interval1.end > interval2.end {\n    return \"NO\"\n  }\n  if interval1.start\
    \ < interval2.start {\n    return \"NO\"\n  }\n  if interval1.end < interval2.end\
    \ {\n    return \"NO\"\n  }\n  if interval1.start > interval2.start {\n    return\
    \ \"NO\"\n  }\n  if interval1.end > interval2.end {\n    return \"NO\"\n  }\n\
    \  if interval1.start < interval2.start {\n    return \"NO\"\n  }\n  if interval1.end\
    \ < interval2.end {\n    return \"NO\"\n  }\n  if interval1.start > interval2.start\
    \ {\n    return \"NO\"\n  }\n  if interval1.end > interval2.end {\n    return\
    \ \"NO\"\n  }\n  if interval1.start < interval2.start {\n    return \"NO\"\n \
    \ }\n  if interval1.end < interval2.end {\n    return \"NO\"\n  }\n  if interval1.start\
    \ > interval2.start {\n    return \"NO\"\n  }\n  if interval1.end", "    let [start1,\
    \ end1] = interval1;\n    let [start2, end2] = interval2;\n    if start1 > end2\
    \ || start2 > end1 {\n        return \"NO\";\n    }\n    let length = end1 - start1;\n\
    \    if length == 0 {\n        return \"NO\";\n    }\n    let length2 = end2 -\
    \ start2;\n    if length2 == 0 {\n        return \"NO\";\n    }\n    if length\
    \ % length2 != 0 {\n        return \"NO\";\n    }\n    let result = length / length2;\n\
    \    if is_prime(result) {\n        return \"YES\";\n    }\n    return \"NO\";",
  "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2 =\
    \ interval2[0];\n    let end2 = interval2[1];\n    if start1 > end1 || start2\
    \ > end2 {\n        return \"NO\";\n    }\n    if start1 > start2 || end1 < end2\
    \ {\n        return \"NO\";\n    }\n    let length = end1 - start1 + 1;\n    if\
    \ length == 1 {\n        return \"YES\";\n    }\n    if length % 2 == 0 {\n  \
    \      return \"NO\";\n    }\n    return \"YES\";", "    let start1 = interval1[0];\n\
    \    let end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 =\
    \ interval2[1];\n    if start1 > end2 || start2 > end1 {\n        return \"NO\"\
    ;\n    }\n    let length = end1 - start1 + 1;\n    if length == 1 {\n        return\
    \ \"YES\";\n    }\n    if length % 2 == 0 {\n        return \"NO\";\n    }\n \
    \   return \"YES\";", "    if interval1.start > interval2.end || interval2.start\
    \ > interval1.end {\n        return \"NO\"\n    }\n    if interval1.start == interval2.start\
    \ && interval1.end == interval2.end {\n        return \"YES\"\n    }\n    let\
    \ min = interval1.start\n    let max = interval1.end\n    if interval1.start >\
    \ interval2.start {\n        min = interval2.start\n    }\n    if interval1.end\
    \ < interval2.end {\n        max = interval2.end\n    }\n    let length = max\
    \ - min + 1\n    if length % 2 == 0 {\n        return \"NO\"\n    }\n    return\
    \ \"YES\"", "    if interval1.start > interval2.end || interval2.start > interval1.end\
    \ {\n        return \"NO\"\n    }\n    if interval1.start == interval2.start &&\
    \ interval1.end == interval2.end {\n        return \"YES\"\n    }\n    if interval1.start\
    \ == interval2.start {\n        return \"NO\"\n    }\n    if interval1.end ==\
    \ interval2.end {\n        return \"NO\"\n    }\n    let min = interval1.start\n\
    \    let max = interval1.end\n    if interval1.start < interval2.start {\n   \
    \     min = interval2.start\n    }\n    if interval1.end > interval2.end {\n \
    \       max = interval2.end\n    }\n    let length = max - min + 1\n    if length\
    \ % 2 == 0 {\n        return \"NO\"\n    }\n    return \"YES\"", "  if interval1.start\
    \ > interval2.end || interval2.start > interval1.end {\n    return \"NO\"\n  }\n\
    \  if interval1.start == interval2.start && interval1.end == interval2.end {\n\
    \    return \"YES\"\n  }\n  if interval1.start == interval2.start {\n    return\
    \ \"YES\"\n  }\n  if interval1.end == interval2.end {\n    return \"YES\"\n  }\n\
    \  return \"NO\"", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n\
    \    let start2 = interval2[0];\n    let end2 = interval2[1];\n    if start1 >\
    \ end2 || start2 > end1 {\n        return \"NO\";\n    }\n    if start1 <= start2\
    \ && end1 >= end2 {\n        return \"YES\";\n    }\n    let length = end1 - start1;\n\
    \    if length % 2 == 0 {\n        return \"NO\";\n    }\n    return \"YES\";",
  "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2 =\
    \ interval2[0];\n    let end2 = interval2[1];\n    if (start1 > end2 || start2\
    \ > end1) {\n        return \"NO\";\n    }\n    let length = end1 - start1 + 1;\n\
    \    if (length % 2 == 0) {\n        return \"NO\";\n    }\n    return \"YES\"\
    ;", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2\
    \ = interval2[0];\n    let end2 = interval2[1];\n    if start1 > end1 || start2\
    \ > end2 {\n        return \"NO\";\n    }\n    if start1 > start2 || end1 < end2\
    \ {\n        return \"NO\";\n    }\n    let length = end1 - start1 + 1;\n    if\
    \ length == 1 {\n        return \"YES\";\n    }\n    if length % 2 == 0 {\n  \
    \      return \"NO\";\n    }\n    return \"YES\";", "    let start1 = interval1[0];\n\
    \    let end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 =\
    \ interval2[1];\n    let length = end1 - start1;\n    let length2 = end2 - start2;\n\
    \    if (length < 0 || length2 < 0) {\n        return \"NO\";\n    }\n    if (start1\
    \ > end2 || start2 > end1) {\n        return \"NO\";\n    }\n    if (start1 >\
    \ start2) {\n        let temp = start1;\n        start1 = start2;\n        start2\
    \ = temp;\n    }\n    if (end1 > end2) {\n        let temp = end1;\n        end1\
    \ = end2;\n        end2 = temp;\n    }\n    let length_intersection = end1 - start1;\n\
    \    if (length_intersection % 2 == 0) {\n        return \"NO\";\n    }\n    if\
    \ (length_intersection == 1) {\n        return \"YES\";\n    }\n    let length_intersection2\
    \ = end2 - start2;\n    if (length_intersection2 % 2 == 0) {\n        return \"\
    NO\";\n    }\n    if (length_intersection2 == 1) {\n        return \"YES\";\n\
    \    }\n    let length_intersection_prime = length_intersection / 2;\n    let\
    \ length_intersection2_prime = length_intersection2 / 2;\n    let length_intersection_prime2\
    \ = length_intersection_prime * length_intersection_prime;\n    let length_intersection2_prime2\
    \ = length_intersection2_prime * length_intersection2_prime;\n    if (length_intersection_prime2\
    \ == length_intersection2_prime2) {\n        return \"YES\";\n    }\n    return\
    \ \"NO\";", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n  \
    \  let start2 = interval2[0];\n    let end2 = interval2[1];\n    let length =\
    \ end1 - start1;\n    let length2 = end2 - start2;\n    if (length < 0 || length2\
    \ < 0) {\n        return \"NO\";\n    }\n    if (length == 0 || length2 == 0)\
    \ {\n        return \"NO\";\n    }\n    if (length == 1 && length2 == 1) {\n \
    \       return \"YES\";\n    }\n    if (length == 2 && length2 == 2) {\n     \
    \   return \"YES\";\n    }\n    if (length == 2 && length2 > 2) {\n        return\
    \ \"NO\";\n    }\n    if (length > 2 && length2 == 2) {\n        return \"NO\"\
    ;\n    }\n    if (length > 2 && length2 > 2) {\n        return \"NO\";\n    }\n\
    \    if (length > 2 && length2 > 2) {\n        return \"NO\";\n    }\n    if (length\
    \ > 2 && length2 > 2) {\n        return \"NO\";\n    }\n    if (length > 2 &&\
    \ length2 > 2) {\n        return \"NO\";\n    }\n    if (length > 2 && length2\
    \ > 2) {\n        return \"NO\";\n    }\n    if (length > 2 && length2 > 2) {\n\
    \        return \"NO\";\n    }\n    if (length > 2 && length2 > 2) {\n       \
    \ return \"NO\";\n    }\n    if (length > 2 && length2 > 2) {\n        return\
    \ \"NO\";\n    }\n    if (length > 2 && length2 > 2) {\n        return \"NO\"\
    ;\n    }\n    if (length > 2 && length2 > 2) {\n        return \"NO\";\n    }\n\
    \    if (length > 2 && length2 > 2) {\n        return \"NO\";\n    }\n    if (length\
    \ > 2 && length2 > 2) {\n        return \"NO\";\n    }\n    if (length > 2 &&\
    \ length2 > 2) {\n        return \"NO\";\n    }\n    if (length > 2 && length",
  "  if interval1.start > interval2.end || interval2.start > interval1.end {\n   \
    \ return String::from(\"NO\")\n  }\n  if interval1.start == interval2.start &&\
    \ interval1.end == interval2.end {\n    return String::from(\"YES\")\n  }\n  let\
    \ result = 0\n  for i in interval1.start..interval1.end {\n    if i >= interval2.start\
    \ && i <= interval2.end {\n      result += 1\n    }\n  }\n  if is_prime(result)\
    \ {\n    return String::from(\"YES\")\n  }\n  return String::from(\"NO\")", " \
    \ if interval1.start > interval2.end || interval2.start > interval1.end {\n  \
    \  return \"NO\"\n  }\n  if interval1.start == interval2.start && interval1.end\
    \ == interval2.end {\n    return \"YES\"\n  }\n  if interval1.start == interval2.start\
    \ || interval1.end == interval2.end {\n    return \"NO\"\n  }\n  let min = interval1.start\n\
    \  let max = interval1.end\n  if interval1.start < interval2.start {\n    min\
    \ = interval2.start\n  }\n  if interval1.end > interval2.end {\n    max = interval2.end\n\
    \  }\n  let length = max - min + 1\n  if length % 2 == 0 {\n    return \"NO\"\n\
    \  }\n  return \"YES\"", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n\
    \    let start2 = interval2[0];\n    let end2 = interval2[1];\n    let length\
    \ = end1 - start1 + 1;\n    if (start1 > end2 || start2 > end1) {\n        return\
    \ \"NO\";\n    }\n    if (start1 >= start2 && end1 <= end2) {\n        return\
    \ \"YES\";\n    }\n    if (start2 >= start1 && end2 <= end1) {\n        return\
    \ \"YES\";\n    }\n    let length2 = end2 - start2 + 1;\n    let length1 = end1\
    \ - start1 + 1;\n    if (length1 % 2 == 0 && length2 % 2 == 0) {\n        return\
    \ \"NO\";\n    }\n    if (length1 % 2 == 0) {\n        return \"YES\";\n    }\n\
    \    if (length2 % 2 == 0) {\n        return \"YES\";\n    }\n    return \"NO\"\
    ;", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2\
    \ = interval2[0];\n    let end2 = interval2[1];\n    if start1 > end1 || start2\
    \ > end2 {\n        return \"NO\";\n    }\n    if start1 > end2 || start2 > end1\
    \ {\n        return \"NO\";\n    }\n    if start1 > start2 || start2 > start1\
    \ {\n        return \"NO\";\n    }\n    if end1 < start2 || end2 < start1 {\n\
    \        return \"NO\";\n    }\n    let length = end1 - start1;\n    if length\
    \ == 1 {\n        return \"YES\";\n    }\n    if length % 2 == 0 {\n        return\
    \ \"NO\";\n    }\n    return \"YES\";", "    let start1 = interval1[0];\n    let\
    \ end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 = interval2[1];\n\
    \    let length = end1 - start1 + 1;\n    if (start1 > end2 || start2 > end1)\
    \ {\n        return String::from(\"NO\");\n    }\n    if (start1 > start2) {\n\
    \        let temp = start1;\n        start1 = start2;\n        start2 = temp;\n\
    \    }\n    if (end1 < end2) {\n        let temp = end1;\n        end1 = end2;\n\
    \        end2 = temp;\n    }\n    let length2 = end2 - start2 + 1;\n    if (length\
    \ % length2 != 0) {\n        return String::from(\"NO\");\n    }\n    let length1\
    \ = end1 - start1 + 1;\n    if (length % length1 != 0) {\n        return String::from(\"\
    NO\");\n    }\n    return String::from(\"YES\");", "  let start1 = interval1[0];\n\
    \  let end1 = interval1[1];\n  let start2 = interval2[0];\n  let end2 = interval2[1];\n\
    \  let length = end1 - start1 + 1;\n  if (start1 > end2 || start2 > end1) {\n\
    \    return \"NO\";\n  }\n  if (start1 <= start2 && end1 >= end2) {\n    return\
    \ \"YES\";\n  }\n  if (start1 <= start2 && end1 < end2) {\n    return \"NO\";\n\
    \  }\n  if (start2 <= start1 && end2 > end1) {\n    return \"NO\";\n  }\n  if\
    \ (start2 <= start1 && end2 < end1) {\n    return \"YES\";\n  }\n  let length2\
    \ = end2 - start2 + 1;\n  if (length % length2 != 0) {\n    return \"NO\";\n \
    \ }\n  return \"YES\";", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n\
    \    let start2 = interval2[0];\n    let end2 = interval2[1];\n    if start1 >\
    \ end2 || start2 > end1 {\n        return \"NO\";\n    }\n    let length = end1\
    \ - start1;\n    if length == 0 {\n        return \"NO\";\n    }\n    if length\
    \ == 1 {\n        return \"YES\";\n    }\n    let length2 = end2 - start2;\n \
    \   if length2 == 0 {\n        return \"NO\";\n    }\n    if length2 == 1 {\n\
    \        return \"YES\";\n    }\n    let prime = false;\n    let i = start1;\n\
    \    while i <= end1 {\n        let j = start2;\n        while j <= end2 {\n \
    \           if (i == j) {\n                prime = true;\n                break;\n\
    \            }\n            j += 1;\n        }\n        if (prime) {\n       \
    \     break;\n        }\n        i += 1;\n    }\n    if (prime) {\n        return\
    \ \"YES\";\n    }\n    return \"NO\";", "    let start1 = interval1[0];\n    let\
    \ end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 = interval2[1];\n\
    \    if start1 > end1 || start2 > end2 {\n        return \"NO\";\n    }\n    if\
    \ start1 > start2 || end1 < end2 {\n        return \"NO\";\n    }\n    let length\
    \ = end1 - start1 + 1;\n    if length % 2 == 0 {\n        return \"NO\";\n   \
    \ }\n    return \"YES\";", "    let [start1, end1] = interval1;\n    let [start2,\
    \ end2] = interval2;\n    let length = end1 - start1 + 1;\n    if (end2 - start2\
    \ + 1 < length) {\n        return \"NO\";\n    }\n    let is_prime = false;\n\
    \    let i = start1;\n    let j = start2;\n    while (!is_prime && i <= end1 &&\
    \ j <= end2) {\n        is_prime = is_prime_number(i + j);\n        i += 1;\n\
    \        j += 1;\n    }\n    if (is_prime) {\n        return \"YES\";\n    }\n\
    \    return \"NO\";", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n\
    \    let start2 = interval2[0];\n    let end2 = interval2[1];\n    if start1 >\
    \ end1 || start2 > end2 {\n        return \"NO\";\n    }\n    if start1 <= start2\
    \ && end1 >= end2 {\n        return \"YES\";\n    }\n    if start1 <= start2 &&\
    \ end1 > end2 {\n        return \"NO\";\n    }\n    if start2 <= start1 && end2\
    \ > end1 {\n        return \"NO\";\n    }\n    if start2 <= start1 && end2 < end1\
    \ {\n        return \"YES\";\n    }\n    return \"NO\";", "    let start1 = interval1[0];\n\
    \    let end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 =\
    \ interval2[1];\n    if (start1 > end2) {\n        return \"NO\";\n    }\n   \
    \ if (start2 > end1) {\n        return \"NO\";\n    }\n    if (start1 > end2)\
    \ {\n        return \"NO\";\n    }\n    if (start2 > end1) {\n        return \"\
    NO\";\n    }\n    let length = end1 - start1;\n    if (length % 2 == 0) {\n  \
    \      return \"NO\";\n    }\n    return \"YES\";", "    if interval1.start >\
    \ interval2.end || interval2.start > interval1.end {\n        return \"NO\"\n\
    \    }\n    if interval1.start == interval2.start && interval1.end == interval2.end\
    \ {\n        return \"YES\"\n    }\n    let min = interval1.start\n    let max\
    \ = interval1.end\n    if interval1.start > interval2.start {\n        min = interval2.start\n\
    \    }\n    if interval1.end < interval2.end {\n        max = interval2.end\n\
    \    }\n    let length = max - min + 1\n    if length % 2 == 0 {\n        return\
    \ \"NO\"\n    }\n    return \"YES\"", "    if interval1.start > interval2.end\
    \ {\n        return \"NO\"\n    }\n    if interval2.start > interval1.end {\n\
    \        return \"NO\"\n    }\n    if interval1.start == interval2.start {\n \
    \       return \"YES\"\n    }\n    if interval1.end == interval2.end {\n     \
    \   return \"YES\"\n    }\n    let min = interval1.start\n    let max = interval1.end\n\
    \    if interval1.start > interval2.start {\n        min = interval2.start\n \
    \   }\n    if interval1.end < interval2.end {\n        max = interval2.end\n \
    \   }\n    let length = max - min + 1\n    if length % 2 == 0 {\n        return\
    \ \"NO\"\n    }\n    return \"YES\"", "  if interval1.start > interval2.end ||\
    \ interval2.start > interval1.end {\n    return String::from(\"NO\")\n  }\n  if\
    \ interval1.start == interval2.start && interval1.end == interval2.end {\n   \
    \ return String::from(\"YES\")\n  }\n  if interval1.start == interval2.start {\n\
    \    return String::from(\"YES\")\n  }\n  if interval1.end == interval2.end {\n\
    \    return String::from(\"YES\")\n  }\n  return String::from(\"NO\")", "    let\
    \ start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2 = interval2[0];\n\
    \    let end2 = interval2[1];\n    let min = start1 < start2 ? start1 : start2;\n\
    \    let max = end1 > end2 ? end1 : end2;\n    if (min > max) {\n        return\
    \ \"NO\";\n    }\n    let length = max - min + 1;\n    let is_prime = is_prime(length);\n\
    \    if (is_prime) {\n        return \"YES\";\n    }\n    return \"NO\";", " \
    \   let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2 =\
    \ interval2[0];\n    let end2 = interval2[1];\n    let length = end1 - start1\
    \ + 1;\n    if (end2 - start2 + 1 < length) {\n        return \"NO\";\n    }\n\
    \    let i = start1;\n    let j = start2;\n    let result = 0;\n    while (i <=\
    \ end1 && j <= end2) {\n        if (i == j) {\n            result += 1;\n    \
    \        i += 1;\n            j += 1;\n        } else if (i > j) {\n         \
    \   j += 1;\n        } else {\n            i += 1;\n        }\n    }\n    if (result\
    \ % 2 == 0) {\n        return \"NO\";\n    }\n    return \"YES\";", "  if interval1.start\
    \ > interval2.end || interval2.start > interval1.end {\n    return \"NO\"\n  }\n\
    \  if interval1.start == interval2.start && interval1.end == interval2.end {\n\
    \    return \"YES\"\n  }\n  if interval1.start == interval2.start {\n    return\
    \ \"YES\"\n  }\n  if interval1.end == interval2.end {\n    return \"YES\"\n  }\n\
    \  return \"NO\"", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n\
    \    let start2 = interval2[0];\n    let end2 = interval2[1];\n    if (start1\
    \ > end2 || start2 > end1) {\n        return \"NO\";\n    }\n    let length =\
    \ end1 - start1;\n    if (length % 2 == 0) {\n        return \"NO\";\n    }\n\
    \    return \"YES\";", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n\
    \    let start2 = interval2[0];\n    let end2 = interval2[1];\n    if start1 >\
    \ end2 || start2 > end1 {\n        return \"NO\";\n    }\n    if start1 <= start2\
    \ && end1 >= end2 {\n        return \"YES\";\n    }\n    let length = end1 - start1;\n\
    \    if length % 2 == 0 {\n        return \"NO\";\n    }\n    return \"YES\";",
  "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2 =\
    \ interval2[0];\n    let end2 = interval2[1];\n    if start1 > end1 || start2\
    \ > end2 {\n        return \"NO\";\n    }\n    if start1 > start2 || end1 < end2\
    \ {\n        return \"NO\";\n    }\n    let length = end1 - start1 + 1;\n    if\
    \ length % 2 == 0 {\n        return \"NO\";\n    }\n    return \"YES\";", "  \
    \  let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2 =\
    \ interval2[0];\n    let end2 = interval2[1];\n    if start1 > end1 || start2\
    \ > end2 {\n        return \"NO\";\n    }\n    if start1 > start2 || end1 < end2\
    \ {\n        return \"NO\";\n    }\n    let length = end1 - start1;\n    if length\
    \ == 1 {\n        return \"YES\";\n    }\n    if length % 2 == 0 {\n        return\
    \ \"NO\";\n    }\n    return \"YES\";", "    let start1 = interval1[0];\n    let\
    \ end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 = interval2[1];\n\
    \    if start1 > end1 || start2 > end2 {\n        return \"NO\";\n    }\n    let\
    \ min = start1 < start2 ? start1 : start2;\n    let max = end1 > end2 ? end1 :\
    \ end2;\n    let length = max - min + 1;\n    if length % 2 == 0 {\n        return\
    \ \"NO\";\n    }\n    return \"YES\";", "    let start1 = interval1[0];\n    let\
    \ end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 = interval2[1];\n\
    \    if start1 > end2 || start2 > end1 {\n        return \"NO\";\n    }\n    let\
    \ length = end1 - start1 + 1;\n    if length == 1 {\n        return \"YES\";\n\
    \    }\n    if length % 2 == 0 {\n        return \"NO\";\n    }\n    return \"\
    YES\";", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let\
    \ start2 = interval2[0];\n    let end2 = interval2[1];\n    if start1 > end2 ||\
    \ start2 > end1 {\n        return \"NO\";\n    }\n    let length = end1 - start1\
    \ + 1;\n    if length == 0 {\n        return \"NO\";\n    }\n    let is_prime\
    \ = false;\n    let i = start1;\n    while (!is_prime && i <= end1) {\n      \
    \  let j = start2;\n        while (!is_prime && j <= end2) {\n            if (i\
    \ == j) {\n                is_prime = true;\n            }\n            j += 1;\n\
    \        }\n        i += 1;\n    }\n    if (is_prime) {\n        return \"YES\"\
    ;\n    }\n    return \"NO\";", "    let start1 = interval1[0];\n    let end1 =\
    \ interval1[1];\n    let start2 = interval2[0];\n    let end2 = interval2[1];\n\
    \    let min = start1 < start2 ? start1 : start2;\n    let max = end1 > end2 ?\
    \ end1 : end2;\n    if min > max {\n        return \"NO\";\n    }\n    let length\
    \ = max - min + 1;\n    if (length % 2 == 0) {\n        return \"NO\";\n    }\n\
    \    return \"YES\";", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n\
    \    let start2 = interval2[0];\n    let end2 = interval2[1];\n    if (start1\
    \ > end1 || start2 > end2) {\n        return \"NO\";\n    }\n    if (start1 >\
    \ end2 || start2 > end1) {\n        return \"NO\";\n    }\n    if (start1 > start2\
    \ || start2 > start1) {\n        return \"NO\";\n    }\n    if (end1 < start2\
    \ || end2 < start1) {\n        return \"NO\";\n    }\n    if (end1 < end2 || end2\
    \ < end1) {\n        return \"NO\";\n    }\n    if (end1 - start1 == end2 - start2)\
    \ {\n        return \"YES\";\n    }\n    if (end1 - start1 == end2 - start1) {\n\
    \        return \"YES\";\n    }\n    return \"NO\";", "    let start1 = interval1[0];\n\
    \    let end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 =\
    \ interval2[1];\n    if (start1 > end1 || start2 > end2) {\n        return \"\
    NO\";\n    }\n    if (start1 > end2 || start2 > end1) {\n        return \"NO\"\
    ;\n    }\n    let length = end1 - start1;\n    if (length == 0) {\n        return\
    \ \"NO\";\n    }\n    let length2 = end2 - start2;\n    if (length2 == 0) {\n\
    \        return \"NO\";\n    }\n    if (length % length2 != 0) {\n        return\
    \ \"NO\";\n    }\n    return \"YES\";", "  if interval1.start > interval2.end\
    \ {\n    return \"NO\"\n  }\n  if interval2.start > interval1.end {\n    return\
    \ \"NO\"\n  }\n  if interval1.start == interval2.start && interval1.end == interval2.end\
    \ {\n    return \"YES\"\n  }\n  if interval1.start == interval2.start {\n    return\
    \ \"NO\"\n  }\n  if interval1.end == interval2.end {\n    return \"NO\"\n  }\n\
    \  let length = interval1.end - interval1.start + 1\n  if length % 2 == 0 {\n\
    \    return \"NO\"\n  }\n  return \"YES\"", "  if interval1.start > interval2.end\
    \ {\n    return \"NO\"\n  }\n  if interval2.start > interval1.end {\n    return\
    \ \"NO\"\n  }\n  if interval1.start == interval2.start && interval1.end == interval2.end\
    \ {\n    return \"YES\"\n  }\n  let length = interval1.end - interval1.start +\
    \ 1\n  if length % 2 == 0 {\n    return \"NO\"\n  }\n  return \"YES\"", "    let\
    \ start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2 = interval2[0];\n\
    \    let end2 = interval2[1];\n    if start1 > end2 || start2 > end1 {\n     \
    \   return \"NO\";\n    }\n    let length = end1 - start1 + 1;\n    if length\
    \ == 0 {\n        return \"NO\";\n    }\n    let is_prime = is_prime(length);\n\
    \    if is_prime {\n        return \"YES\";\n    }\n    return \"NO\";", "   \
    \ let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2 = interval2[0];\n\
    \    let end2 = interval2[1];\n    if start1 > end2 || start2 > end1 {\n     \
    \   return \"NO\";\n    }\n    let len1 = end1 - start1 + 1;\n    let len2 = end2\
    \ - start2 + 1;\n    if len1 % 2 == 0 || len2 % 2 == 0 {\n        return \"NO\"\
    ;\n    }\n    let len = len1 * len2 / 2;\n    let is_prime = is_prime(len);\n\
    \    if is_prime {\n        return \"YES\";\n    }\n    return \"NO\";", "   \
    \ let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2 = interval2[0];\n\
    \    let end2 = interval2[1];\n    let length = end1 - start1;\n    if (start1\
    \ > end2 || start2 > end1) {\n        return \"NO\";\n    }\n    if (start1 <\
    \ end2 && start2 < end1) {\n        let length = end1 - start1;\n        if (length\
    \ % 2 == 0) {\n            return \"NO\";\n        }\n        return \"YES\";\n\
    \    }\n    return \"NO\";", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n\
    \    let start2 = interval2[0];\n    let end2 = interval2[1];\n    if (start1\
    \ > end1 || start2 > end2) {\n        return \"NO\";\n    }\n    let length =\
    \ end1 - start1 + 1;\n    if (length % 2 == 0) {\n        return \"NO\";\n   \
    \ }\n    let length2 = end2 - start2 + 1;\n    if (length2 % 2 == 0) {\n     \
    \   return \"NO\";\n    }\n    let result = length * length2;\n    if (result.is_prime())\
    \ {\n        return \"YES\";\n    }\n    return \"NO\";", "    let start1 = interval1[0];\n\
    \    let end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 =\
    \ interval2[1];\n    if start1 > end2 || start2 > end1 {\n        return \"NO\"\
    ;\n    }\n    let len1 = end1 - start1 + 1;\n    let len2 = end2 - start2 + 1;\n\
    \    let len = len1 * len2;\n    if len % 2 == 0 {\n        return \"NO\";\n \
    \   }\n    return \"YES\";", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n\
    \    let start2 = interval2[0];\n    let end2 = interval2[1];\n    if start1 >\
    \ end2 || start2 > end1 {\n        return \"NO\";\n    }\n    let length = end1\
    \ - start1;\n    if length == 0 {\n        return \"NO\";\n    }\n    let length2\
    \ = end2 - start2;\n    if length2 == 0 {\n        return \"NO\";\n    }\n   \
    \ let length3 = end1 - start2;\n    if length3 == 0 {\n        return \"NO\";\n\
    \    }\n    let length4 = end2 - start1;\n    if length4 == 0 {\n        return\
    \ \"NO\";\n    }\n    let length5 = end1 - start2;\n    if length5 == 0 {\n  \
    \      return \"NO\";\n    }\n    let length6 = end2 - start1;\n    if length6\
    \ == 0 {\n        return \"NO\";\n    }\n    let length7 = end1 - start2;\n  \
    \  if length7 == 0 {\n        return \"NO\";\n    }\n    let length8 = end2 -\
    \ start1;\n    if length8 == 0 {\n        return \"NO\";\n    }\n    let length9\
    \ = end1 - start2;\n    if length9 == 0 {\n        return \"NO\";\n    }\n   \
    \ let length10 = end2 - start1;\n    if length10 == 0 {\n        return \"NO\"\
    ;\n    }\n    let length11 = end1 - start2;\n    if length11 == 0 {\n        return\
    \ \"NO\";\n    }\n    let length12 = end2 - start1;\n    if length12 == 0 {\n\
    \        return \"NO\";\n    }\n    let length13 = end1 - start2;\n    if length13\
    \ == 0 {\n        return \"NO\";\n    }\n    let length14 = end2 - start1;\n \
    \   if length14 == 0 {\n        return \"NO\";\n    }\n    let length15 = end1\
    \ - start2;\n    if length15 == 0 {\n        return \"NO\";\n    }\n    let length16\
    \ = end2 - start1;", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n\
    \    let start2 = interval2[0];\n    let end2 = interval2[1];\n    if start1 >\
    \ end2 || start2 > end1 {\n        return \"NO\";\n    }\n    let length = end1\
    \ - start1 + 1;\n    if length == 0 {\n        return \"NO\";\n    }\n    if length\
    \ == 1 {\n        return \"YES\";\n    }\n    if is_prime(length) {\n        return\
    \ \"YES\";\n    }\n    return \"NO\";", "    let start1 = interval1[0];\n    let\
    \ end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 = interval2[1];\n\
    \    let min = start1 < start2 ? start1 : start2;\n    let max = end1 > end2 ?\
    \ end1 : end2;\n    if (min > max) {\n        return \"NO\";\n    }\n    let length\
    \ = max - min + 1;\n    if (length % 2 == 0) {\n        return \"NO\";\n    }\n\
    \    return \"YES\";", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n\
    \    let start2 = interval2[0];\n    let end2 = interval2[1];\n    if start1 >\
    \ end2 || start2 > end1 {\n        return \"NO\";\n    }\n    let len1 = end1\
    \ - start1 + 1;\n    let len2 = end2 - start2 + 1;\n    let len = len1 * len2;\n\
    \    if len % 2 == 0 {\n        return \"NO\";\n    }\n    return \"YES\";", " \
    \   let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2 =\
    \ interval2[0];\n    let end2 = interval2[1];\n    if start1 > end2 || start2\
    \ > end1 {\n        return \"NO\";\n    }\n    if start1 <= start2 && end1 >=\
    \ end2 {\n        return \"YES\";\n    }\n    let length = end1 - start1 + 1;\n\
    \    if length % 2 == 0 {\n        return \"NO\";\n    }\n    return \"YES\";",
  "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2 =\
    \ interval2[0];\n    let end2 = interval2[1];\n    if (start1 > end1 || start2\
    \ > end2) {\n        return \"NO\";\n    }\n    if (start1 > start2 || start2\
    \ > end1) {\n        return \"NO\";\n    }\n    if (end1 < start2 || end2 < start1)\
    \ {\n        return \"NO\";\n    }\n    let length = end1 - start1 + 1;\n    if\
    \ (length % 2 == 0) {\n        return \"NO\";\n    }\n    return \"YES\";", " \
    \ let start1 = interval1[0];\n  let end1 = interval1[1];\n  let start2 = interval2[0];\n\
    \  let end2 = interval2[1];\n  if start1 > end1 || start2 > end2 {\n    return\
    \ \"NO\";\n  }\n  if start1 > start2 || end1 < end2 {\n    return \"NO\";\n  }\n\
    \  let length = end1 - start1 + 1;\n  if length % 2 == 0 {\n    return \"NO\"\
    ;\n  }\n  return \"YES\";", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n\
    \    let start2 = interval2[0];\n    let end2 = interval2[1];\n    if start1 >\
    \ end1 || start2 > end2 {\n        return \"NO\";\n    }\n    if start1 > end2\
    \ || start2 > end1 {\n        return \"NO\";\n    }\n    if start1 > start2 ||\
    \ start2 > start1 {\n        return \"NO\";\n    }\n    if end1 > end2 || end2\
    \ > end1 {\n        return \"NO\";\n    }\n    if end1 < start2 || end2 < start1\
    \ {\n        return \"NO\";\n    }\n    let length = end1 - start1 + 1;\n    if\
    \ length % 2 == 0 {\n        return \"NO\";\n    }\n    return \"YES\";", "  \
    \  let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2 =\
    \ interval2[0];\n    let end2 = interval2[1];\n    if start1 > end1 || start2\
    \ > end2 {\n        return \"NO\";\n    }\n    if start1 <= start2 && end1 >=\
    \ end2 {\n        return \"YES\";\n    }\n    if start1 <= start2 && end1 > end2\
    \ {\n        return \"NO\";\n    }\n    if start1 > start2 && end1 < end2 {\n\
    \        return \"NO\";\n    }\n    if start1 > start2 && end1 > end2 {\n    \
    \    return \"NO\";\n    }\n    let length = end1 - start1;\n    if length % 2\
    \ == 0 {\n        return \"NO\";\n    }\n    return \"YES\";", "    let start1\
    \ = interval1[0];\n    let end1 = interval1[1];\n    let start2 = interval2[0];\n\
    \    let end2 = interval2[1];\n    let length = end1 - start1 + 1;\n    if (start2\
    \ < end1 && start2 < end2) {\n        let length2 = end2 - start2 + 1;\n     \
    \   if (length % length2 == 0) {\n            return String::from(\"YES\");\n\
    \        }\n    }\n    return String::from(\"NO\");", "    let start1 = interval1[0];\n\
    \    let end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 =\
    \ interval2[1];\n    if start1 > end2 || start2 > end1 {\n        return \"NO\"\
    ;\n    }\n    let length = end1 - start1;\n    if length == 0 {\n        return\
    \ \"NO\";\n    }\n    let length2 = end2 - start2;\n    if length2 == 0 {\n  \
    \      return \"NO\";\n    }\n    if length % length2 != 0 {\n        return \"\
    NO\";\n    }\n    return \"YES\";", "    let start1 = interval1[0];\n    let end1\
    \ = interval1[1];\n    let start2 = interval2[0];\n    let end2 = interval2[1];\n\
    \    if start1 > end1 || start2 > end2 {\n        return \"NO\";\n    }\n    if\
    \ start1 > start2 || end1 < end2 {\n        return \"NO\";\n    }\n    let length\
    \ = end1 - start1 + 1;\n    if length % 2 == 0 {\n        return \"NO\";\n   \
    \ }\n    return \"YES\";", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n\
    \    let start2 = interval2[0];\n    let end2 = interval2[1];\n    let length\
    \ = end1 - start1 + 1;\n    if (start1 > end2 || start2 > end1) {\n        return\
    \ \"NO\";\n    }\n    if (start1 > start2) {\n        let temp = start1;\n   \
    \     start1 = start2;\n        start2 = temp;\n    }\n    if (end1 > end2) {\n\
    \        let temp = end1;\n        end1 = end2;\n        end2 = temp;\n    }\n\
    \    let length2 = end2 - start2 + 1;\n    if (length % length2 != 0) {\n    \
    \    return \"NO\";\n    }\n    let length1 = end1 - start1 + 1;\n    if (length\
    \ % length1 != 0) {\n        return \"NO\";\n    }\n    return \"YES\";", "  \
    \  let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2 =\
    \ interval2[0];\n    let end2 = interval2[1];\n    if (start1 > end1 || start2\
    \ > end2) {\n        return \"NO\";\n    }\n    let length = end1 - start1 + 1;\n\
    \    if (length % 2 == 0) {\n        return \"NO\";\n    }\n    let result = length\
    \ / 2;\n    let isPrime = is_prime(result);\n    if (isPrime) {\n        return\
    \ \"YES\";\n    }\n    return \"NO\";", "    let start1 = interval1[0];\n    let\
    \ end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 = interval2[1];\n\
    \    if start1 > end2 || start2 > end1 {\n        return \"NO\";\n    }\n    let\
    \ length = end1 - start1 + 1;\n    if length == 0 {\n        return \"NO\";\n\
    \    }\n    if length == 1 {\n        return \"YES\";\n    }\n    if is_prime(length)\
    \ {\n        return \"YES\";\n    }\n    return \"NO\";", "    if interval1.start\
    \ > interval2.end || interval2.start > interval1.end {\n        return \"NO\"\n\
    \    }\n    if interval1.start == interval2.start && interval1.end == interval2.end\
    \ {\n        return \"YES\"\n    }\n    let min = interval1.start\n    let max\
    \ = interval1.end\n    if interval1.start > interval2.start {\n        min = interval2.start\n\
    \    }\n    if interval1.end < interval2.end {\n        max = interval2.end\n\
    \    }\n    let length = max - min + 1\n    if length % 2 == 0 {\n        return\
    \ \"NO\"\n    }\n    return \"YES\"", "    let start1 = interval1[0];\n    let\
    \ end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 = interval2[1];\n\
    \    if (start1 > end2 || start2 > end1) {\n        return \"NO\";\n    }\n  \
    \  let len1 = end1 - start1 + 1;\n    let len2 = end2 - start2 + 1;\n    let len\
    \ = len1 * len2;\n    if (len % 2 == 0) {\n        return \"NO\";\n    }\n   \
    \ return \"YES\";", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n\
    \    let start2 = interval2[0];\n    let end2 = interval2[1];\n    if start1 >\
    \ end2 || start2 > end1 {\n        return \"NO\";\n    }\n    let length = end1\
    \ - start1 + 1;\n    if length == 0 {\n        return \"NO\";\n    }\n    let\
    \ is_prime = is_prime(length);\n    if is_prime {\n        return \"YES\";\n \
    \   }\n    return \"NO\";", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n\
    \    let start2 = interval2[0];\n    let end2 = interval2[1];\n    if (start1\
    \ > end2) {\n        return String::from(\"NO\");\n    }\n    if (start2 > end1)\
    \ {\n        return String::from(\"NO\");\n    }\n    let length = end1 - start1;\n\
    \    if (length == 0) {\n        return String::from(\"NO\");\n    }\n    if (length\
    \ == 1) {\n        return String::from(\"YES\");\n    }\n    let prime = is_prime(length);\n\
    \    if (prime) {\n        return String::from(\"YES\");\n    }\n    return String::from(\"\
    NO\");", "  let start1 = interval1[0];\n  let end1 = interval1[1];\n  let start2\
    \ = interval2[0];\n  let end2 = interval2[1];\n  if (start1 > end2 || start2 >\
    \ end1) {\n    return \"NO\";\n  }\n  if (start1 <= start2 && end1 >= end2) {\n\
    \    return \"YES\";\n  }\n  let length = end1 - start1;\n  if (length % 2 ==\
    \ 0) {\n    return \"NO\";\n  }\n  return \"YES\";", "    let start1 = interval1[0];\n\
    \    let end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 =\
    \ interval2[1];\n    if start1 > end2 || start2 > end1 {\n        return \"NO\"\
    ;\n    }\n    let length = end1 - start1;\n    if length == 1 {\n        return\
    \ \"YES\";\n    }\n    if length % 2 == 0 {\n        return \"NO\";\n    }\n \
    \   return \"YES\";", "    if interval1.start > interval2.end || interval2.start\
    \ > interval1.end {\n        return String::from(\"NO\")\n    }\n    if interval1.start\
    \ == interval2.start && interval1.end == interval2.end {\n        return String::from(\"\
    YES\")\n    }\n    let length = interval1.end - interval1.start + 1\n    if length\
    \ % 2 == 0 {\n        return String::from(\"NO\")\n    }\n    return String::from(\"\
    YES\")", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let\
    \ start2 = interval2[0];\n    let end2 = interval2[1];\n    let length = end1\
    \ - start1 + 1;\n    if (start1 > end2 || start2 > end1) {\n        return \"\
    NO\";\n    }\n    if (start1 > start2) {\n        let temp = start1;\n       \
    \ start1 = start2;\n        start2 = temp;\n    }\n    if (end1 < end2) {\n  \
    \      let temp = end1;\n        end1 = end2;\n        end2 = temp;\n    }\n \
    \   let length2 = end2 - start2 + 1;\n    if (length % length2 != 0) {\n     \
    \   return \"NO\";\n    }\n    let length1 = end1 - start1 + 1;\n    if (length\
    \ % length1 != 0) {\n        return \"NO\";\n    }\n    return \"YES\";", "  \
    \  let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2 =\
    \ interval2[0];\n    let end2 = interval2[1];\n    if start1 > end2 || start2\
    \ > end1 {\n        return \"NO\";\n    }\n    let length = end1 - start1;\n \
    \   if length == 1 {\n        return \"YES\";\n    }\n    if length % 2 == 0 {\n\
    \        return \"NO\";\n    }\n    return \"YES\";", "  if interval1.start >\
    \ interval2.end || interval2.start > interval1.end {\n    return \"NO\"\n  }\n\
    \  if interval1.start == interval2.start && interval1.end == interval2.end {\n\
    \    return \"YES\"\n  }\n  let min = interval1.start\n  let max = interval1.end\n\
    \  if interval1.start > interval2.start {\n    min = interval2.start\n  }\n  if\
    \ interval1.end < interval2.end {\n    max = interval2.end\n  }\n  let length\
    \ = max - min + 1\n  if length % 2 == 0 {\n    return \"NO\"\n  }\n  return \"\
    YES\"", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let\
    \ start2 = interval2[0];\n    let end2 = interval2[1];\n    if (start1 > end1\
    \ || start2 > end2) {\n        return String::from(\"NO\");\n    }\n    if (start1\
    \ > end2 || start2 > end1) {\n        return String::from(\"NO\");\n    }\n  \
    \  let length = end1 - start1;\n    if (length % 2 == 0) {\n        return String::from(\"\
    NO\");\n    }\n    let length2 = end2 - start2;\n    if (length2 % 2 == 0) {\n\
    \        return String::from(\"NO\");\n    }\n    let length_intersection = length\
    \ + length2 - 2;\n    if (length_intersection % 2 == 0) {\n        return String::from(\"\
    NO\");\n    }\n    return String::from(\"YES\");", "    let start1 = interval1[0];\n\
    \    let end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 =\
    \ interval2[1];\n    if start1 > end1 || start2 > end2 {\n        return \"NO\"\
    ;\n    }\n    if start1 > start2 || end1 < end2 {\n        return \"NO\";\n  \
    \  }\n    let length = end1 - start1 + 1;\n    if length == 1 {\n        return\
    \ \"YES\";\n    }\n    if length % 2 == 0 {\n        return \"NO\";\n    }\n \
    \   return \"YES\";", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n\
    \    let start2 = interval2[0];\n    let end2 = interval2[1];\n    if start1 >\
    \ end1 || start2 > end2 {\n        return \"NO\";\n    }\n    if start1 > start2\
    \ || end1 < end2 {\n        return \"NO\";\n    }\n    let length = end1 - start1\
    \ + 1;\n    if length % 2 == 0 {\n        return \"NO\";\n    }\n    return \"\
    YES\";", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let\
    \ start2 = interval2[0];\n    let end2 = interval2[1];\n    if start1 > end1 ||\
    \ start2 > end2 {\n        return \"NO\";\n    }\n    if start1 > start2 || end1\
    \ < end2 {\n        return \"NO\";\n    }\n    let length = end1 - start1;\n \
    \   if length % 2 == 0 {\n        return \"NO\";\n    }\n    return \"YES\";",
  "    if interval1.start > interval2.end || interval2.start > interval1.end {\n \
    \       return \"NO\"\n    }\n    if interval1.start == interval2.start && interval1.end\
    \ == interval2.end {\n        return \"YES\"\n    }\n    let result = 0\n    for\
    \ i in interval1.start..interval1.end {\n        for j in interval2.start..interval2.end\
    \ {\n            if i <= j {\n                result += 1\n            }\n   \
    \     }\n    }\n    if is_prime(result) {\n        return \"YES\"\n    }\n   \
    \ return \"NO\"", "    if interval1.start > interval2.end {\n        return String::from(\"\
    NO\")\n    }\n    if interval1.end < interval2.start {\n        return String::from(\"\
    NO\")\n    }\n    if interval1.start == interval2.start {\n        return String::from(\"\
    YES\")\n    }\n    if interval1.end == interval2.end {\n        return String::from(\"\
    YES\")\n    }\n    let min = interval1.start\n    let max = interval1.end\n  \
    \  if interval1.start < interval2.start {\n        min = interval2.start\n   \
    \ }\n    if interval1.end > interval2.end {\n        max = interval2.end\n   \
    \ }\n    let length = max - min + 1\n    if length % 2 == 0 {\n        return\
    \ String::from(\"NO\")\n    }\n    return String::from(\"YES\")", "    let start1\
    \ = interval1[0];\n    let end1 = interval1[1];\n    let start2 = interval2[0];\n\
    \    let end2 = interval2[1];\n    let length = end1 - start1 + 1;\n    if (start1\
    \ > end2 || start2 > end1) {\n        return \"NO\";\n    }\n    if (start1 <=\
    \ start2 && end1 >= end2) {\n        return \"YES\";\n    }\n    let length2 =\
    \ end2 - start2 + 1;\n    let length3 = end1 - start1 + 1;\n    let length4 =\
    \ end2 - start1 + 1;\n    let length5 = end1 - start2 + 1;\n    let length6 =\
    \ end2 - start2 + 1;\n    let length7 = end1 - start1 + 1;\n    let length8 =\
    \ end2 - start1 + 1;\n    let length9 = end1 - start2 + 1;\n    let length10 =\
    \ end2 - start2 + 1;\n    let length11 = end1 - start1 + 1;\n    let length12\
    \ = end2 - start1 + 1;\n    let length13 = end1 - start2 + 1;\n    let length14\
    \ = end2 - start2 + 1;\n    let length15 = end1 - start1 + 1;\n    let length16\
    \ = end2 - start1 + 1;\n    let length17 = end1 - start2 + 1;\n    let length18\
    \ = end2 - start2 + 1;\n    let length19 = end1 - start1 + 1;\n    let length20\
    \ = end2 - start1 + 1;\n    let length21 = end1 - start2 + 1;\n    let length22\
    \ = end2 - start2 + 1;\n    let length23 = end1 - start1 + 1;\n    let length24\
    \ = end2 - start1 + 1;\n    let length25 = end1 - start2 + 1;\n    let length26\
    \ = end2 - start2 + 1;\n    let length27 = end1 - start1 + 1;\n    let length28\
    \ = end2 - start1 + 1;\n    let length29 = end1 - start2 + 1;\n    let length30\
    \ = end2 - start2 +", "  let start1 = interval1[0];\n  let end1 = interval1[1];\n\
    \  let start2 = interval2[0];\n  let end2 = interval2[1];\n  if start1 > end1\
    \ || start2 > end2 {\n    return \"NO\"\n  }\n  if start1 > start2 || end1 < end2\
    \ {\n    return \"NO\"\n  }\n  let length = end1 - start1 + 1;\n  if length ==\
    \ 1 {\n    return \"YES\"\n  }\n  if length % 2 == 0 {\n    return \"NO\"\n  }\n\
    \  return \"YES\"", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n\
    \    let start2 = interval2[0];\n    let end2 = interval2[1];\n    if start1 >\
    \ end1 || start2 > end2 {\n        return \"NO\";\n    }\n    if start1 > end2\
    \ || start2 > end1 {\n        return \"NO\";\n    }\n    if start1 > start2 {\n\
    \        let temp = start1;\n        start1 = start2;\n        start2 = temp;\n\
    \    }\n    if end1 > end2 {\n        let temp = end1;\n        end1 = end2;\n\
    \        end2 = temp;\n    }\n    let length = end1 - start1 + 1;\n    if length\
    \ % 2 == 0 {\n        return \"NO\";\n    }\n    let result = 0;\n    for i in\
    \ 0..length {\n        if (start1 + i <= end2 && start2 + i <= end1) {\n     \
    \       result += 1;\n        }\n    }\n    if result == length {\n        return\
    \ \"YES\";\n    }\n    return \"NO\";", "    let start1 = interval1[0];\n    let\
    \ end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 = interval2[1];\n\
    \    if start1 > end2 || start2 > end1 {\n        return \"NO\";\n    }\n    let\
    \ length = end1 - start1 + 1;\n    if length % 2 == 0 {\n        return \"NO\"\
    ;\n    }\n    return \"YES\";", "  if interval1.start > interval2.end || interval2.start\
    \ > interval1.end {\n    return \"NO\"\n  }\n  if interval1.start == interval2.start\
    \ && interval1.end == interval2.end {\n    return \"YES\"\n  }\n  if interval1.start\
    \ == interval2.start || interval1.end == interval2.end {\n    return \"NO\"\n\
    \  }\n  let min = interval1.start\n  let max = interval1.end\n  if interval1.start\
    \ < interval2.start {\n    min = interval2.start\n  }\n  if interval1.end > interval2.end\
    \ {\n    max = interval2.end\n  }\n  let length = max - min + 1\n  if length %\
    \ 2 == 0 {\n    return \"NO\"\n  }\n  return \"YES\"", "  let start1 = interval1[0];\n\
    \  let end1 = interval1[1];\n  let start2 = interval2[0];\n  let end2 = interval2[1];\n\
    \  if start1 > end1 || start2 > end2 {\n    return \"NO\";\n  }\n  if start1 >\
    \ start2 || end1 < end2 {\n    return \"NO\";\n  }\n  let length = end1 - start1\
    \ + 1;\n  if length == 1 {\n    return \"YES\";\n  }\n  if length % 2 == 0 {\n\
    \    return \"NO\";\n  }\n  return \"YES\";", "    let start1 = interval1[0];\n\
    \    let end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 =\
    \ interval2[1];\n    if (start1 > end2 || start2 > end1) {\n        return \"\
    NO\";\n    }\n    let length = end1 - start1;\n    if (length == 0) {\n      \
    \  return \"NO\";\n    }\n    let length2 = end2 - start2;\n    if (length2 ==\
    \ 0) {\n        return \"NO\";\n    }\n    if (length % length2 != 0) {\n    \
    \    return \"NO\";\n    }\n    return \"YES\";", "    let start1 = interval1[0];\n\
    \    let end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 =\
    \ interval2[1];\n    if (start1 > end2) {\n        return String::from(\"NO\"\
    );\n    }\n    if (start2 > end1) {\n        return String::from(\"NO\");\n  \
    \  }\n    let length = end1 - start1 + 1;\n    if (length % 2 == 0) {\n      \
    \  return String::from(\"NO\");\n    }\n    return String::from(\"YES\");", " \
    \ let start1 = interval1[0];\n  let end1 = interval1[1];\n  let start2 = interval2[0];\n\
    \  let end2 = interval2[1];\n  if start1 > end2 || start2 > end1 {\n    return\
    \ \"NO\";\n  }\n  let length = end1 - start1;\n  if length == 0 {\n    return\
    \ \"NO\";\n  }\n  let length2 = end2 - start2;\n  if length2 == 0 {\n    return\
    \ \"NO\";\n  }\n  if length % length2 != 0 {\n    return \"NO\";\n  }\n  return\
    \ \"YES\";", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n \
    \   let start2 = interval2[0];\n    let end2 = interval2[1];\n    let min = start1\
    \ < start2 ? start1 : start2;\n    let max = end1 > end2 ? end1 : end2;\n    if\
    \ (min > max) {\n        return \"NO\";\n    }\n    let length = max - min + 1;\n\
    \    if (length % 2 == 0) {\n        return \"NO\";\n    }\n    return \"YES\"\
    ;", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2\
    \ = interval2[0];\n    let end2 = interval2[1];\n    let len1 = end1 - start1\
    \ + 1;\n    let len2 = end2 - start2 + 1;\n    if (len1 < len2) {\n        return\
    \ \"NO\";\n    }\n    if (len1 > len2) {\n        return \"NO\";\n    }\n    let\
    \ len = len1;\n    let i = start1;\n    let j = start2;\n    let is_prime = true;\n\
    \    while (i <= end1 && j <= end2) {\n        if (i == j) {\n            i +=\
    \ 1;\n            j += 1;\n            continue;\n        }\n        if (i > j)\
    \ {\n            i += 1;\n            continue;\n        }\n        if (j > i)\
    \ {\n            j += 1;\n            continue;\n        }\n        if (i == j\
    \ + 1) {\n            i += 1;\n            j += 1;\n            continue;\n  \
    \      }\n        if (i == j - 1) {\n            i += 1;\n            j += 1;\n\
    \            continue;\n        }\n        if (i == j) {\n            i += 1;\n\
    \            j += 1;\n            continue;\n        }\n        is_prime = false;\n\
    \        break;\n    }\n    if (is_prime) {\n        return \"YES\";\n    }\n\
    \    return \"NO\";", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n\
    \    let start2 = interval2[0];\n    let end2 = interval2[1];\n    if start1 >\
    \ end2 || start2 > end1 {\n        return \"NO\";\n    }\n    let len1 = end1\
    \ - start1 + 1;\n    let len2 = end2 - start2 + 1;\n    if len1 % 2 == 0 || len2\
    \ % 2 == 0 {\n        return \"NO\";\n    }\n    let len = len1 * len2 / 2;\n\
    \    if len % 2 == 0 {\n        return \"NO\";\n    }\n    return \"YES\";", " \
    \   let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2 =\
    \ interval2[0];\n    let end2 = interval2[1];\n    if (start1 > end2 || start2\
    \ > end1) {\n        return \"NO\";\n    }\n    let len1 = end1 - start1 + 1;\n\
    \    let len2 = end2 - start2 + 1;\n    let len = len1 * len2;\n    if (len %\
    \ 2 == 0) {\n        return \"NO\";\n    }\n    return \"YES\";", "    let start1\
    \ = interval1[0];\n    let end1 = interval1[1];\n    let start2 = interval2[0];\n\
    \    let end2 = interval2[1];\n    if start1 > end2 || start2 > end1 {\n     \
    \   return \"NO\";\n    }\n    let length = end1 - start1 + 1;\n    if length\
    \ == 0 {\n        return \"NO\";\n    }\n    if length % 2 == 0 {\n        return\
    \ \"NO\";\n    }\n    return \"YES\";", "    let start1 = interval1[0];\n    let\
    \ end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 = interval2[1];\n\
    \    if start1 > end1 || start2 > end2 {\n        return \"NO\";\n    }\n    if\
    \ start1 <= start2 && end1 >= end2 {\n        return \"YES\";\n    }\n    if start1\
    \ <= start2 && end1 > end2 {\n        return \"NO\";\n    }\n    if start2 <=\
    \ start1 && end2 > end1 {\n        return \"NO\";\n    }\n    if start2 <= start1\
    \ && end2 < end1 {\n        return \"YES\";\n    }\n    return \"NO\";", "   \
    \ let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2 = interval2[0];\n\
    \    let end2 = interval2[1];\n    let length = end1 - start1 + 1;\n    let length2\
    \ = end2 - start2 + 1;\n    if length == 0 || length2 == 0 {\n        return \"\
    NO\";\n    }\n    let max = length > length2 ? length : length2;\n    let min\
    \ = length < length2 ? length : length2;\n    let i = 0;\n    let j = 0;\n   \
    \ let result = \"\";\n    while (i < min) {\n        if (start1 + i < end1 &&\
    \ start2 + j < end2) {\n            if (start1 + i == start2 + j) {\n        \
    \        result += \"1\";\n                i += 1;\n                j += 1;\n\
    \            } else {\n                result += \"0\";\n                i +=\
    \ 1;\n            }\n        } else if (start1 + i < end1) {\n            result\
    \ += \"0\";\n            i += 1;\n        } else if (start2 + j < end2) {\n  \
    \          result += \"0\";\n            j += 1;\n        } else {\n         \
    \   break;\n        }\n    }\n    return result;", "    let start1 = interval1[0];\n\
    \    let end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 =\
    \ interval2[1];\n    if (start1 > end1 || start2 > end2) {\n        return \"\
    NO\";\n    }\n    if (start1 > end2 || start2 > end1) {\n        return \"NO\"\
    ;\n    }\n    let length = end1 - start1 + 1;\n    if (length == 1) {\n      \
    \  return \"YES\";\n    }\n    if (length % 2 == 0) {\n        return \"NO\";\n\
    \    }\n    return \"YES\";", "    let start1 = interval1[0];\n    let end1 =\
    \ interval1[1];\n    let start2 = interval2[0];\n    let end2 = interval2[1];\n\
    \    if start1 > end1 || start2 > end2 {\n        return \"NO\";\n    }\n    if\
    \ start1 > start2 || end1 < end2 {\n        return \"NO\";\n    }\n    let length\
    \ = end1 - start1 + 1;\n    if length == 1 {\n        return \"YES\";\n    }\n\
    \    if length % 2 == 0 {\n        return \"NO\";\n    }\n    return \"YES\";",
  "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2 =\
    \ interval2[0];\n    let end2 = interval2[1];\n    if (start1 > end2 || start2\
    \ > end1) {\n        return \"NO\";\n    }\n    let length = end1 - start1 + 1;\n\
    \    if (length % 2 == 0) {\n        return \"NO\";\n    }\n    return \"YES\"\
    ;", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2\
    \ = interval2[0];\n    let end2 = interval2[1];\n    if start1 > end2 || start2\
    \ > end1 {\n        return \"NO\";\n    }\n    let length = end1 - start1;\n \
    \   if length == 0 {\n        return \"NO\";\n    }\n    if length == 1 {\n  \
    \      return \"YES\";\n    }\n    let divisor = 2;\n    while divisor <= length\
    \ {\n        if length % divisor != 0 {\n            divisor += 1;\n         \
    \   continue;\n        }\n        let start = start1 + (divisor - 1);\n      \
    \  let end = start + divisor - 1;\n        if start > end2 || end < start2 {\n\
    \            divisor += 1;\n            continue;\n        }\n        if start2\
    \ >= start && end2 <= end {\n            return \"YES\";\n        }\n        divisor\
    \ += 1;\n    }\n    return \"NO\";", "    let start1 = interval1[0];\n    let\
    \ end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 = interval2[1];\n\
    \    if (start1 > end2 || start2 > end1) {\n        return \"NO\";\n    }\n  \
    \  let length = end1 - start1;\n    if (length % 2 == 0) {\n        return \"\
    NO\";\n    }\n    let length2 = end2 - start2;\n    if (length2 % 2 == 0) {\n\
    \        return \"NO\";\n    }\n    let length3 = end1 - start2;\n    if (length3\
    \ % 2 == 0) {\n        return \"NO\";\n    }\n    let length4 = end2 - start1;\n\
    \    if (length4 % 2 == 0) {\n        return \"NO\";\n    }\n    return \"YES\"\
    ;", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2\
    \ = interval2[0];\n    let end2 = interval2[1];\n    if start1 > end1 || start2\
    \ > end2 {\n        return \"NO\";\n    }\n    if start1 < start2 || end1 < end2\
    \ {\n        return \"NO\";\n    }\n    let length = end1 - start1 + 1;\n    if\
    \ length == 1 {\n        return \"YES\";\n    }\n    if length % 2 == 0 {\n  \
    \      return \"NO\";\n    }\n    return \"YES\";", "    if interval1.start >\
    \ interval2.end {\n        return \"NO\"\n    }\n    if interval1.end < interval2.start\
    \ {\n        return \"NO\"\n    }\n    if interval1.start == interval2.start and\
    \ interval1.end == interval2.end {\n        return \"YES\"\n    }\n    if interval1.start\
    \ == interval2.start {\n        return \"NO\"\n    }\n    if interval1.end ==\
    \ interval2.end {\n        return \"NO\"\n    }\n    let min = interval1.start\n\
    \    let max = interval1.end\n    if interval1.start < interval2.start {\n   \
    \     min = interval2.start\n    }\n    if interval1.end > interval2.end {\n \
    \       max = interval2.end\n    }\n    let length = max - min + 1\n    if length\
    \ % 2 == 0 {\n        return \"NO\"\n    }\n    return \"YES\"", "  if interval1.start\
    \ > interval2.end {\n    return \"NO\"\n  }\n  if interval2.start > interval1.end\
    \ {\n    return \"NO\"\n  }\n  if interval1.start == interval2.start {\n    if\
    \ interval1.end == interval2.end {\n      return \"YES\"\n    }\n    return \"\
    NO\"\n  }\n  if interval1.start < interval2.start {\n    return \"NO\"\n  }\n\
    \  if interval1.end < interval2.end {\n    return \"NO\"\n  }\n  return \"YES\"",
  "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2 =\
    \ interval2[0];\n    let end2 = interval2[1];\n    let length = end1 - start1\
    \ + 1;\n    if (end2 - start2 + 1 < length) {\n        return \"NO\";\n    }\n\
    \    let result = 0;\n    for (let i = start1; i <= end1; i += 1) {\n        for\
    \ (let j = start2; j <= end2; j += 1) {\n            if (i == j) {\n         \
    \       result += 1;\n            }\n        }\n    }\n    if (result % 2 == 0)\
    \ {\n        return \"NO\";\n    }\n    return \"YES\";", "    if interval1.start\
    \ > interval2.end || interval2.start > interval1.end {\n        return \"NO\"\n\
    \    }\n    if interval1.start == interval2.start && interval1.end == interval2.end\
    \ {\n        return \"YES\"\n    }\n    let min = interval1.start\n    let max\
    \ = interval1.end\n    if interval1.start < interval2.start {\n        min = interval2.start\n\
    \    }\n    if interval1.end > interval2.end {\n        max = interval2.end\n\
    \    }\n    let length = max - min + 1\n    if length % 2 == 0 {\n        return\
    \ \"NO\"\n    }\n    return \"YES\"", "    let start1 = interval1[0];\n    let\
    \ end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 = interval2[1];\n\
    \    let length = end1 - start1;\n    let length2 = end2 - start2;\n    if (length\
    \ < 0 || length2 < 0) {\n        return \"NO\";\n    }\n    if (length == 0 ||\
    \ length2 == 0) {\n        return \"NO\";\n    }\n    if (length == 1 || length2\
    \ == 1) {\n        return \"YES\";\n    }\n    let length_intersection = 0;\n\
    \    let start_intersection = 0;\n    let end_intersection = 0;\n    let i = 0;\n\
    \    let j = 0;\n    while (i < length && j < length2) {\n        if (start1 +\
    \ i < start2 + j) {\n            i += 1;\n        } else if (start1 + i > start2\
    \ + j) {\n            j += 1;\n        } else {\n            length_intersection\
    \ += 1;\n            start_intersection = start1 + i;\n            end_intersection\
    \ = start1 + i;\n            i += 1;\n            j += 1;\n        }\n    }\n\
    \    if (length_intersection % 2 == 0) {\n        return \"NO\";\n    }\n    if\
    \ (length_intersection == 1) {\n        return \"YES\";\n    }\n    let length_intersection_prime\
    \ = length_intersection / 2;\n    let start_intersection_prime = start_intersection\
    \ - length_intersection_prime;\n    let end_intersection_prime = end_intersection\
    \ + length_intersection_prime;\n    let result = \"YES\";\n    if (start_intersection_prime\
    \ < 0) {\n        start_intersection_prime = 0;\n    }\n    if (end_intersection_prime\
    \ > length) {\n        end_intersection_prime = length;\n    }\n    if (start_intersection_prime\
    \ > end_intersection_prime) {\n        return \"NO\";\n    }\n    if (start_intersection_prime\
    \ == end_intersection_prime) {\n        return", "    let start1 = interval1[0];\n\
    \    let end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 =\
    \ interval2[1];\n    if start1 > end1 || start2 > end2 {\n        return \"NO\"\
    ;\n    }\n    if start1 > start2 || end1 < end2 {\n        return \"NO\";\n  \
    \  }\n    let length = end1 - start1 + 1;\n    if length == 1 {\n        return\
    \ \"YES\";\n    }\n    if length % 2 == 0 {\n        return \"NO\";\n    }\n \
    \   return \"YES\";", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n\
    \    let start2 = interval2[0];\n    let end2 = interval2[1];\n    let min = start1\
    \ < start2 ? start1 : start2;\n    let max = end1 > end2 ? end1 : end2;\n    if\
    \ (min > max) {\n        return \"NO\";\n    }\n    let length = max - min + 1;\n\
    \    if (length % 2 == 0) {\n        return \"NO\";\n    }\n    return \"YES\"\
    ;", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2\
    \ = interval2[0];\n    let end2 = interval2[1];\n    if start1 > end1 || start2\
    \ > end2 {\n        return \"NO\";\n    }\n    if start1 > start2 || end1 < end2\
    \ {\n        return \"NO\";\n    }\n    let length = end1 - start1;\n    if length\
    \ == 0 {\n        return \"NO\";\n    }\n    if length == 1 {\n        return\
    \ \"YES\";\n    }\n    if length % 2 == 0 {\n        return \"NO\";\n    }\n \
    \   return \"YES\";", "  if interval1.start > interval2.end || interval2.start\
    \ > interval1.end {\n    return String::from(\"NO\")\n  }\n  if interval1.start\
    \ == interval2.start && interval1.end == interval2.end {\n    return String::from(\"\
    YES\")\n  }\n  if interval1.start > interval2.start {\n    return String::from(\"\
    NO\")\n  }\n  if interval1.end < interval2.end {\n    return String::from(\"NO\"\
    )\n  }\n  if interval1.start == interval2.start {\n    return String::from(\"\
    YES\")\n  }\n  if interval1.end == interval2.end {\n    return String::from(\"\
    YES\")\n  }\n  let min = interval1.start\n  let max = interval1.end\n  if interval1.start\
    \ < interval2.start {\n    min = interval2.start\n  }\n  if interval1.end > interval2.end\
    \ {\n    max = interval2.end\n  }\n  let length = max - min + 1\n  if length %\
    \ 2 == 0 {\n    return String::from(\"NO\")\n  }\n  return String::from(\"YES\"\
    )", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2\
    \ = interval2[0];\n    let end2 = interval2[1];\n    if start1 > end1 || start2\
    \ > end2 {\n        return \"NO\";\n    }\n    if start1 <= start2 && end1 >=\
    \ end2 {\n        return \"YES\";\n    }\n    if start1 <= start2 && end1 > end2\
    \ {\n        return \"NO\";\n    }\n    if start2 <= start1 && end2 > end1 {\n\
    \        return \"NO\";\n    }\n    if start2 <= start1 && end2 < end1 {\n   \
    \     return \"YES\";\n    }\n    if start2 > start1 && end2 < end1 {\n      \
    \  return \"NO\";\n    }\n    if start2 > start1 && end2 > end1 {\n        return\
    \ \"YES\";\n    }\n    return \"NO\";", "    let start1 = interval1[0];\n    let\
    \ end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 = interval2[1];\n\
    \    if start1 > end1 || start2 > end2 {\n        return \"NO\";\n    }\n    if\
    \ start1 > start2 || end1 < end2 {\n        return \"NO\";\n    }\n    let length\
    \ = end1 - start1 + 1;\n    if length % 2 == 0 {\n        return \"NO\";\n   \
    \ }\n    return \"YES\";", "  if interval1.start > interval2.end {\n    return\
    \ \"NO\"\n  }\n  if interval2.start > interval1.end {\n    return \"NO\"\n  }\n\
    \  if interval1.start == interval2.start {\n    return \"YES\"\n  }\n  if interval1.end\
    \ == interval2.end {\n    return \"YES\"\n  }\n  return \"NO\"", "    if interval1.start\
    \ > interval2.end {\n        return String::from(\"NO\");\n    }\n    if interval2.start\
    \ > interval1.end {\n        return String::from(\"NO\");\n    }\n    if interval1.start\
    \ == interval2.start && interval1.end == interval2.end {\n        return String::from(\"\
    YES\");\n    }\n    let length = interval1.end - interval1.start + 1;\n    if\
    \ length % 2 == 0 {\n        return String::from(\"NO\");\n    }\n    return String::from(\"\
    YES\");", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let\
    \ start2 = interval2[0];\n    let end2 = interval2[1];\n    let length = end1\
    \ - start1;\n    if (start1 > end2 || start2 > end1) {\n        return \"NO\"\
    ;\n    }\n    if (start1 > start2) {\n        let temp = start1;\n        start1\
    \ = start2;\n        start2 = temp;\n    }\n    if (end1 < end2) {\n        let\
    \ temp = end1;\n        end1 = end2;\n        end2 = temp;\n    }\n    let length2\
    \ = end2 - start2;\n    if (length2 % 2 == 0) {\n        return \"NO\";\n    }\n\
    \    let length1 = end1 - start1;\n    if (length1 % 2 == 0) {\n        return\
    \ \"NO\";\n    }\n    let length3 = length1 + length2;\n    let length4 = length3\
    \ / 2;\n    let length5 = length3 - length4;\n    let length6 = length4 / 2;\n\
    \    let length7 = length4 - length6;\n    let length8 = length6 / 2;\n    let\
    \ length9 = length6 - length8;\n    let length10 = length8 / 2;\n    let length11\
    \ = length8 - length10;\n    let length12 = length10 / 2;\n    let length13 =\
    \ length10 - length12;\n    let length14 = length12 / 2;\n    let length15 = length12\
    \ - length14;\n    let length16 = length14 / 2;\n    let length17 = length14 -\
    \ length16;\n    let length18 = length16 / 2;\n    let length19 = length16 - length18;\n\
    \    let length20 = length18 / 2;\n    let length21 = length18 - length20;\n \
    \   let length22 = length20 / 2;\n    let length23 = length20 - length22;\n  \
    \  let length24 = length22 / 2;\n    let length25 = length22 - length24;\n   \
    \ let length26 = length24 / 2;\n    let length27 = length24 - length26;\n    let\
    \ length", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n   \
    \ let start2 = interval2[0];\n    let end2 = interval2[1];\n    let length = end1\
    \ - start1;\n    let length2 = end2 - start2;\n    if (length < 0 || length2 <\
    \ 0) {\n        return \"NO\";\n    }\n    if (length == 0 || length2 == 0) {\n\
    \        return \"NO\";\n    }\n    if (length == 1 || length2 == 1) {\n     \
    \   return \"YES\";\n    }\n    let length_intersection = 0;\n    let i = start1;\n\
    \    let j = start2;\n    while (i <= end1 && j <= end2) {\n        if (i == j)\
    \ {\n            i += 1;\n            j += 1;\n            length_intersection\
    \ += 1;\n        } else if (i < j) {\n            i += 1;\n        } else {\n\
    \            j += 1;\n        }\n    }\n    if (length_intersection % 2 == 0)\
    \ {\n        return \"YES\";\n    }\n    return \"NO\";", "  if interval1.start\
    \ > interval2.end || interval2.start > interval1.end {\n    return \"NO\"\n  }\n\
    \  if interval1.start == interval2.start && interval1.end == interval2.end {\n\
    \    return \"YES\"\n  }\n  let min = interval1.start\n  let max = interval1.end\n\
    \  if interval1.start > interval2.start {\n    min = interval2.start\n  }\n  if\
    \ interval1.end < interval2.end {\n    max = interval2.end\n  }\n  let length\
    \ = max - min + 1\n  if length % 2 == 0 {\n    return \"NO\"\n  }\n  return \"\
    YES\"", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let\
    \ start2 = interval2[0];\n    let end2 = interval2[1];\n    if start1 > end1 ||\
    \ start2 > end2 {\n        return \"NO\";\n    }\n    if start1 < end2 && start2\
    \ < end1 {\n        return \"YES\";\n    }\n    if start1 < end2 && end2 < end1\
    \ {\n        return \"YES\";\n    }\n    if start2 < end1 && end1 < end2 {\n \
    \       return \"YES\";\n    }\n    return \"NO\";", "    let start1 = interval1[0];\n\
    \    let end1 = interval1[1];\n    let start2 = interval2[0];\n    let end2 =\
    \ interval2[1];\n    let length = end1 - start1 + 1;\n    if (start1 > end2 ||\
    \ start2 > end1) {\n        return \"NO\";\n    }\n    if (start1 <= start2 &&\
    \ end1 >= end2) {\n        return \"YES\";\n    }\n    if (start1 <= start2 &&\
    \ end1 < end2) {\n        return \"NO\";\n    }\n    if (start1 > start2 && end1\
    \ > end2) {\n        return \"NO\";\n    }\n    let length2 = end2 - start2 +\
    \ 1;\n    if (length % length2 != 0) {\n        return \"NO\";\n    }\n    let\
    \ length1 = end1 - start1 + 1;\n    if (length % length1 != 0) {\n        return\
    \ \"NO\";\n    }\n    return \"YES\";", "    if interval1.start > interval2.end\
    \ || interval2.start > interval1.end {\n        return \"NO\"\n    }\n    if interval1.start\
    \ == interval2.start && interval1.end == interval2.end {\n        return \"YES\"\
    \n    }\n    let min = interval1.start\n    let max = interval1.end\n    if interval1.start\
    \ > interval2.start {\n        min = interval2.start\n    }\n    if interval1.end\
    \ < interval2.end {\n        max = interval2.end\n    }\n    let length = max\
    \ - min + 1\n    if length % 2 == 0 {\n        return \"NO\"\n    }\n    return\
    \ \"YES\"", "  if interval1.start > interval2.end {\n    return \"NO\"\n  }\n\
    \  if interval2.start > interval1.end {\n    return \"NO\"\n  }\n  if interval1.start\
    \ == interval2.start && interval1.end == interval2.end {\n    return \"YES\"\n\
    \  }\n  if interval1.start == interval2.start {\n    return \"NO\"\n  }\n  if\
    \ interval1.end == interval2.end {\n    return \"NO\"\n  }\n  if interval1.start\
    \ < interval2.start {\n    return \"NO\"\n  }\n  if interval1.end < interval2.end\
    \ {\n    return \"NO\"\n  }\n  if interval1.start > interval2.start {\n    return\
    \ \"NO\"\n  }\n  if interval1.end > interval2.end {\n    return \"NO\"\n  }\n\
    \  if interval1.start == interval2.start {\n    return \"NO\"\n  }\n  if interval1.end\
    \ == interval2.end {\n    return \"NO\"\n  }\n  if interval1.start < interval2.start\
    \ {\n    return \"NO\"\n  }\n  if interval1.end < interval2.end {\n    return\
    \ \"NO\"\n  }\n  if interval1.start > interval2.start {\n    return \"NO\"\n \
    \ }\n  if interval1.end > interval2.end {\n    return \"NO\"\n  }\n  if interval1.start\
    \ == interval2.start {\n    return \"NO\"\n  }\n  if interval1.end == interval2.end\
    \ {\n    return \"NO\"\n  }\n  if interval1.start < interval2.start {\n    return\
    \ \"NO\"\n  }\n  if interval1.end < interval2.end {\n    return \"NO\"\n  }\n\
    \  if interval1.start > interval2.start {\n    return \"NO\"\n  }\n  if interval1.end\
    \ > interval2.end {\n    return \"NO\"\n  }\n  if interval1.start == interval2.start\
    \ {\n    return \"NO\"\n  }\n  if interval1.end == interval2.end {\n    return\
    \ \"NO\"", "    if interval1.start > interval2.end || interval2.start > interval1.end\
    \ {\n        return \"NO\"\n    }\n    if interval1.start == interval2.start &&\
    \ interval1.end == interval2.end {\n        return \"YES\"\n    }\n    let min\
    \ = interval1.start\n    let max = interval1.end\n    if interval1.start > interval2.start\
    \ {\n        min = interval2.start\n    }\n    if interval1.end < interval2.end\
    \ {\n        max = interval2.end\n    }\n    let length = max - min + 1\n    if\
    \ length % 2 == 0 {\n        return \"NO\"\n    }\n    return \"YES\"", "    if\
    \ interval1.start > interval2.end || interval2.start > interval1.end {\n     \
    \   return \"NO\"\n    }\n    if interval1.start == interval2.start && interval1.end\
    \ == interval2.end {\n        return \"YES\"\n    }\n    if interval1.start ==\
    \ interval2.start || interval1.end == interval2.end {\n        return \"NO\"\n\
    \    }\n    if interval1.start <= interval2.start && interval1.end >= interval2.end\
    \ {\n        return \"YES\"\n    }\n    if interval1.start <= interval2.start\
    \ && interval1.end < interval2.end {\n        return \"NO\"\n    }\n    if interval1.start\
    \ > interval2.start && interval1.end < interval2.end {\n        return \"NO\"\n\
    \    }\n    if interval1.start > interval2.start && interval1.end > interval2.end\
    \ {\n        return \"YES\"\n    }\n    if interval1.start < interval2.start &&\
    \ interval1.end > interval2.end {\n        return \"NO\"\n    }\n    return \"\
    YES\"", "    if interval1.start > interval2.end {\n        return String::from(\"\
    NO\")\n    }\n    if interval2.start > interval1.end {\n        return String::from(\"\
    NO\")\n    }\n    if interval1.start == interval2.start && interval1.end == interval2.end\
    \ {\n        return String::from(\"YES\")\n    }\n    let min = interval1.start\n\
    \    let max = interval1.end\n    if interval1.start < interval2.start {\n   \
    \     min = interval2.start\n    }\n    if interval1.end > interval2.end {\n \
    \       max = interval2.end\n    }\n    let length = max - min + 1\n    if length\
    \ % 2 == 0 {\n        return String::from(\"NO\")\n    }\n    return String::from(\"\
    YES\")", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let\
    \ start2 = interval2[0];\n    let end2 = interval2[1];\n    if start1 > end2 ||\
    \ start2 > end1 {\n        return \"NO\";\n    }\n    if start1 <= start2 && end1\
    \ >= end2 {\n        return \"YES\";\n    }\n    let length = end1 - start1 +\
    \ 1;\n    if length % 2 == 0 {\n        return \"NO\";\n    }\n    return \"YES\"\
    ;", "    let start1 = interval1[0];\n    let end1 = interval1[1];\n    let start2\
    \ = interval2[0];\n    let end2 = interval2[1];\n    if start1 > end2 || start2\
    \ > end1 {\n        return \"NO\";\n    }\n    let len1 = end1 - start1 + 1;\n\
    \    let len2 = end2 - start2 + 1;\n    let len = len1 * len2;\n    if len % 2\
    \ == 0 {\n        return \"NO\";\n    }\n    return \"YES\";", "    let start1\
    \ = interval1[0];\n    let end1 = interval1[1];\n    let start2 = interval2[0];\n\
    \    let end2 = interval2[1];\n    if (start1 > end1 || start2 > end2) {\n   \
    \     return \"NO\";\n    }\n    if (start1 < start2 || end1 < end2) {\n     \
    \   return \"NO\";\n    }\n    let length = end1 - start1;\n    if (length % 2\
    \ == 0) {\n        return \"NO\";\n    }\n    return \"YES\";", "    let start1\
    \ = interval1[0];\n    let end1 = interval1[1];\n    let start2 = interval2[0];\n\
    \    let end2 = interval2[1];\n    if start1 > end2 || start2 > end1 {\n     \
    \   return \"NO\";\n    }\n    let length = end1 - start1 + 1;\n    if length\
    \ == 1 {\n        return \"YES\";\n    }\n    if length % 2 == 0 {\n        return\
    \ \"NO\";\n    }\n    return \"YES\";"]
stop_tokens:
- "\n}"

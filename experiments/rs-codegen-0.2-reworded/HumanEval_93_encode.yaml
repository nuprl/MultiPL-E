name: HumanEval_93_encode
language: rs
prompt: "/// Write a function that takes a message, and encodes in such a \n/// way\
  \ that it swaps case of all letters, replaces all vowels in \n/// the message with\
  \ the letter that appears 2 places ahead of that \n/// vowel in the english alphabet.\
  \ \n/// Assume only letters. \n/// Examples:\n/// >>> encode(String::from(\"test\"\
  ))\n/// String::from(\"TGST\")\n/// >>> encode(String::from(\"This is a message\"\
  ))\n/// String::from(\"tHKS KS C MGSSCGG\")\nfn encode(message: String) -> String\
  \ {\n"
tests: "}\n\nfn main() {\n    let candidate = encode;\n    assert_eq!(candidate(String::from(\"\
  TEST\")), String::from(\"tgst\"));\n    assert_eq!(candidate(String::from(\"Mudasir\"\
  )), String::from(\"mWDCSKR\"));\n    assert_eq!(candidate(String::from(\"YES\")),\
  \ String::from(\"ygs\"));\n    assert_eq!(candidate(String::from(\"This is a message\"\
  )), String::from(\"tHKS KS C MGSSCGG\"));\n    assert_eq!(candidate(String::from(\"\
  I DoNt KnOw WhAt tO WrItE\")), String::from(\"k dQnT kNqW wHcT Tq wRkTg\"));\n}\n"
completions: []
stop_tokens:
- "\n}"

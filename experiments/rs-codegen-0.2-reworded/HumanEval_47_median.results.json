{
  "name": "HumanEval_47_median",
  "language": "rs",
  "prompt": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n",
  "tests": "}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  let n = l.len();\n  if (n == 0) {\n    return 0.0;\n  } else if (n % 2 == 0) {\n    return (l[n / 2] + l[n / 2 - 1]) / 2.0;\n  } else {\n    return l[n / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpm6cpdanj.rs:10:6\n   |\n10 |   if (n == 0) {\n   |      ^      ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n10 -   if (n == 0) {\n10 +   if n == 0 {\n   | \n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpm6cpdanj.rs:12:13\n   |\n12 |   } else if (n % 2 == 0) {\n   |             ^          ^\n   |\nhelp: remove these parentheses\n   |\n12 -   } else if (n % 2 == 0) {\n12 +   } else if n % 2 == 0 {\n   | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpm6cpdanj.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpm6cpdanj.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| -x);\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpm6cpdanj.rs:13:38\n   |\n13 |     return (l[n / 2] + l[n / 2 - 1]) / 2.0;\n   |                                      ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpm6cpdanj.rs:15:12\n   |\n6  | fn median(l: Vec<isiz",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|v| v.to_f64());\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[(l.len() / 2) - 1] + l[l.len() / 2]) / 2.0;\n  } else {\n    return l[(l.len() - 1) / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp3ld4i1og.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp3ld4i1og.rs:7:9\n    |\n7   |     l = l.map(|v| v.to_f64());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp3ld4i1og.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|v| v.to_f64());\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp3ld4i1og.rs:10:52\n   |\n10 |     return (l[(l.len() / 2) - 1] + l[l.len() / 2]) / 2.0;\n   |                                                    ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp3ld4i1og.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[(l.len() - 1) / 2];\n   |            ^^^^^^^^^^^^^^^^^^^^ expected `f64`, found `i",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| x.abs());\n  l = l.sort();\n  if (l.len() % 2) {\n    return l[l.len() / 2];\n  } else {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp1hatj6ck.rs:9:6\n  |\n9 |   if (l.len() % 2) {\n  |      ^           ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2) {\n9 +   if l.len() % 2 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp1hatj6ck.rs:7:9\n    |\n7   |     l = l.map(|x| x.abs());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp1hatj6ck.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| x.abs());\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp1hatj6ck.rs:9:6\n  |\n9 |   if (l.len() % 2) {\n  |      ^^^^^^^^^^^^^ expected `bool`, found `usize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1hatj6ck.rs:10:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n10 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp1hatj6ck.rs:12:50\n   |\n12 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median() called on empty vector\")\n  }\n  if len(l) == 1 {\n    return l[0]\n  }\n  l.sort()\n  if len(l) % 2 == 0 {\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n  }\n  return l[len(l) / 2]\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmp7ffmj6pa.rs:13:11\n   |\n13 |   l.sort()\n   |           ^ help: add `;` here\n14 |   if len(l) % 2 == 0 {\n   |   -- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmp7ffmj6pa.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmp7ffmj6pa.rs:8:5\n  |\n8 |     panic(\"median() called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median() called on empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp7ffmj6pa.rs:10:6\n   |\n10 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp7ffmj6pa.rs:14:6\n   |\n14 |   if len(l) % 2 == 0 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp7ffmj6pa.rs:15:15\n   |\n15 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp7ffmj6pa.rs:15:31\n   |\n15 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |                               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp7ffmj6pa.rs:17:12\n   |\n17 |   return l[len(l) / 2]\n   |            ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp7ffmj6pa.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 9 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0425.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median: empty vector\")\n  }\n  if len(l) == 1 {\n    return l[0]\n  }\n  l.sort()\n  if len(l) % 2 == 0 {\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n  }\n  return l[len(l) / 2]\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmpm6hj5_qi.rs:13:11\n   |\n13 |   l.sort()\n   |           ^ help: add `;` here\n14 |   if len(l) % 2 == 0 {\n   |   -- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpm6hj5_qi.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpm6hj5_qi.rs:8:5\n  |\n8 |     panic(\"median: empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median: empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpm6hj5_qi.rs:10:6\n   |\n10 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpm6hj5_qi.rs:14:6\n   |\n14 |   if len(l) % 2 == 0 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpm6hj5_qi.rs:15:15\n   |\n15 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpm6hj5_qi.rs:15:31\n   |\n15 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |                               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpm6hj5_qi.rs:17:12\n   |\n17 |   return l[len(l) / 2]\n   |            ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpm6hj5_qi.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 9 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0425.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  if (l.len() % 2 == 1) {\n    return l.get(l.len() / 2);\n  } else {\n    return (l.get(l.len() / 2) + l.get(l.len() / 2 - 1)) / 2.0;\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp_yxig6l2.rs:9:6\n  |\n9 |   if (l.len() % 2 == 1) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 1) {\n9 +   if l.len() % 2 == 1 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp_yxig6l2.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp_yxig6l2.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| -x);\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp_yxig6l2.rs:10:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n10 |     return l.get(l.len() / 2);\n   |            ^^^^^^^^^^^^^^^^^^ expected `f64`, found enum `Option`\n   |\n   = note: expected type `f64`\n              found enum `Option<&isize>`\n\nerror[E0369]: cannot add `Option<&isize>` to `Option<&isize>`\n  --> /tmp/tmp_yxig6l2.rs:12:32\n   |\n12 |     return (l.get(l.len() / 2) + l.get(l.len() / 2 - 1)) / 2.0;\n   |             ------------------ ^ ---------------------- Option<&isize>\n   |             |\n   |             Option<&isize>\n\nerror: aborting due to 4 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0308, E0369, E0599.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  let n = l.len();\n  if (n == 0) {\n    return 0.0;\n  }\n  if (n % 2 == 1) {\n    return l[n / 2];\n  }\n  return (l[n / 2] + l[n / 2 - 1]) / 2.0;\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n  --> /tmp/tmp7yw7ry90.rs:10:6\n   |\n10 |   if (n == 0) {\n   |      ^      ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n10 -   if (n == 0) {\n10 +   if n == 0 {\n   | \n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmp7yw7ry90.rs:13:6\n   |\n13 |   if (n % 2 == 1) {\n   |      ^          ^\n   |\nhelp: remove these parentheses\n   |\n13 -   if (n % 2 == 1) {\n13 +   if n % 2 == 1 {\n   | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp7yw7ry90.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp7yw7ry90.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| -x);\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp7yw7ry90.rs:14:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n14 |     return l[n / 2];\n   |            ^^^^^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp7yw7ry90.rs:16:36\n   |\n16 |   return (l[n / 2] + l[n / 2 - 1]) / 2.0;\n   |                                    ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Di",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.sort();\n  if (l.len == 0) {\n    return 0.0;\n  }\n  if (l.len == 1) {\n    return l[0];\n  }\n  return (l[l.len / 2] + l[l.len / 2 - 1]) / 2.0;\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmppox4a2s2.rs:8:6\n  |\n8 |   if (l.len == 0) {\n  |      ^          ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n8 -   if (l.len == 0) {\n8 +   if l.len == 0 {\n  | \n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmppox4a2s2.rs:11:6\n   |\n11 |   if (l.len == 1) {\n   |      ^          ^\n   |\nhelp: remove these parentheses\n   |\n11 -   if (l.len == 1) {\n11 +   if l.len == 1 {\n   | \n\nerror[E0308]: mismatched types\n --> /tmp/tmppox4a2s2.rs:7:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmppox4a2s2.rs:8:9\n  |\n8 |   if (l.len == 0) {\n  |         ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n8 |   if (l.len() == 0) {\n  |            ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmppox4a2s2.rs:11:9\n   |\n11 |   if (l.len == 1) {\n   |         ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n11 |   if (l.len() == 1) {\n   |            ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmppox4a2s2.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[0];\n   |            ^^^^ expected `f64`, found `isize`\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmppox4a2s2.rs:14:15\n   |\n14 |   return (l[l.len / 2] + l[l.len / 2 - 1]) / 2.0;\n   |               ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n14 |   return (l[l.len() / 2] + l[l.len / 2 - 1]) / 2.0;\n   |                  ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmppox4a2s2.rs:14:30\n   |\n14 |   return (l[l.len / 2] ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  l = l.take(l.length / 2);\n  return l.head();\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp8m32g93j.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp8m32g93j.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| -x);\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp8m32g93j.rs:9:9\n    |\n9   |     l = l.take(l.length / 2);\n    |           ^^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0609]: no field `length` on type `Vec<isize>`\n --> /tmp/tmp8m32g93j.rs:9:16\n  |\n9 |   l = l.take(l.length / 2);\n  |                ^^^^^^ unknown field\n\nerror[E0599]: no method named `head` found for struct `Vec<isize>` in the current scope\n  --> /tmp/tmp8m32g93j.rs:10:12\n   |\n10 |   return l.head();\n   |            ^^^^ method not found in `Vec<isize>`\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0308, E0599, E0609.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort();\n  if l.len() % 2 == 0 {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0277]: cannot divide `isize` by `{float}`\n --> /tmp/tmpxgceopys.rs:9:50\n  |\n9 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  |                                                  ^ no implementation for `isize / {float}`\n  |\n  = help: the trait `Div<{float}>` is not implemented for `isize`\n  = help: the following other types implement trait `Div<Rhs>`:\n            <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128 as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n            <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpxgceopys.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if l.len == 0 {\n    panic(\"median() called on empty vector\")\n  }\n  if l.len == 1 {\n    return l.data[0]\n  }\n  if l.len == 2 {\n    return (l.data[0] + l.data[1]) / 2.0\n  }\n  if l.len == 3 {\n    return (l.data[0] + l.data[1] + l.data[2]) / 3.0\n  }\n  if l.len == 4 {\n    return (l.data[0] + l.data[1] + l.data[2] + l.data[3]) / 4.0\n  }\n  if l.len == 5 {\n    return (l.data[0] + l.data[1] + l.data[2] + l.data[3] + l.data[4]) / 5.0\n  }\n  if l.len == 6 {\n    return (l.data[0] + l.data[1] + l.data[2] + l.data[3] + l.data[4] + l.data[5]) / 6.0\n  }\n  if l.len == 7 {\n    return (l.data[0] + l.data[1] + l.data[2] + l.data[3] + l.data[4] + l.data[5] + l.data[6]) / 7.0\n  }\n  if l.len == 8 {\n    return (l.data[0] + l.data[1] + l.data[2] + l.data[3] + l.data[4] + l.data[5] + l.data[6] + l.data[7]) / 8.0\n  }\n  if l.len == 9 {\n    return (l.data[0] + l.data[1] + l.data[2] + l.data[3] + l.data[4] + l.data[5] + l.data[6] + l.data[7] + l.data[8]) / 9.0\n  }\n  if l.len == 10\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `{`, found `}`\n  --> /tmp/tmpxjffybxl.rs:38:1\n   |\n37 |   if l.len == 10\n   |   -- this `if` expression has a condition, but no block\n38 | }\n   | ^ expected `{`\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpxjffybxl.rs:8:5\n  |\n8 |     panic(\"median() called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median() called on empty vector\")\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpxjffybxl.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpxjffybxl.rs:10:8\n   |\n10 |   if l.len == 1 {\n   |        ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n10 |   if l.len() == 1 {\n   |           ++\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmpxjffybxl.rs:11:14\n   |\n11 |     return l.data[0]\n   |              ^^^^ unknown field\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpxjffybxl.rs:13:8\n   |\n13 |   if l.len == 2 {\n   |        ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n13 |   if l.len() == 2 {\n   |           ++\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmpxjffybxl.rs:14:15\n   |\n14 |     return (l.data[0] + l.data[1]) / 2.0\n   |               ^^^^ unknown field\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmpxjffybxl.rs:14:27\n   |\n14 |     return (l.data[0] + l.data[1]) / 2.0\n   |                           ^^^^ unknown field\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpxjffybxl.rs:16:8\n   |\n16 |   if l.len == 3 {\n   |        ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n16 |   if l.len() == 3 {\n   |           ++\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmpxjffybxl.rs:",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median() called on empty vector\")\n  }\n  if len(l) == 1 {\n    return l[0]\n  }\n  l = l.sort()\n  if len(l) % 2 == 0 {\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n  }\n  return l[len(l) / 2]\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmpzr11ux8t.rs:13:15\n   |\n13 |   l = l.sort()\n   |               ^ help: add `;` here\n14 |   if len(l) % 2 == 0 {\n   |   -- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpzr11ux8t.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpzr11ux8t.rs:8:5\n  |\n8 |     panic(\"median() called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median() called on empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpzr11ux8t.rs:10:6\n   |\n10 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpzr11ux8t.rs:14:6\n   |\n14 |   if len(l) % 2 == 0 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpzr11ux8t.rs:15:15\n   |\n15 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpzr11ux8t.rs:15:31\n   |\n15 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |                               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpzr11ux8t.rs:17:12\n   |\n17 |   return l[len(l) / 2]\n   |            ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpzr11ux8t.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpzr11ux8t.rs:13:7\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |              ---------- expected due to this parameter type\n...\n13 |   l = l.sort()\n   |       ^^^^^^^^ expected struct `Vec`, found `()`\n   |\n   = note: expected struct `Vec<",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n    l = l.map(|x| x.abs());\n    l = l.sort();\n    if (l.len() % 2) {\n        return l.get(l.len() / 2);\n    } else {\n        return (l.get(l.len() / 2) + l.get(l.len() / 2 - 1)) / 2.0;\n    }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmpefgloprh.rs:9:8\n  |\n9 |     if (l.len() % 2) {\n  |        ^           ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -     if (l.len() % 2) {\n9 +     if l.len() % 2 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpefgloprh.rs:7:11\n    |\n7   |       l = l.map(|x| x.abs());\n    |             ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpefgloprh.rs:8:9\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |     l = l.map(|x| x.abs());\n8 |     l = l.sort();\n  |         ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpefgloprh.rs:9:8\n  |\n9 |     if (l.len() % 2) {\n  |        ^^^^^^^^^^^^^ expected `bool`, found `usize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpefgloprh.rs:10:16\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n10 |         return l.get(l.len() / 2);\n   |                ^^^^^^^^^^^^^^^^^^ expected `f64`, found enum `Option`\n   |\n   = note: expected type `f64`\n              found enum `Option<&isize>`\n\nerror[E0369]: cannot add `Option<&isize>` to `Option<&isize>`\n  --> /tmp/tmpefgloprh.rs:12:36\n   |\n12 |         return (l.get(l.len() / 2) + l.get(l.len() / 2 - 1)) / 2.0;\n   |                 ------------------ ^ ---------------------- Option<&isize>\n   |                 |\n   |                 Option<&isize>\n\nerror: aborting due to 5 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0308, E0369, E0599.\nFor more information abo",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n    if len(l) == 0 {\n        return 0.0\n    }\n    if len(l) == 1 {\n        return l[0]\n    }\n    l.sort()\n    if len(l) % 2 == 0 {\n        return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n    }\n    return l[len(l) / 2]\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmptm87blxe.rs:13:13\n   |\n13 |     l.sort()\n   |             ^ help: add `;` here\n14 |     if len(l) % 2 == 0 {\n   |     -- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmptm87blxe.rs:7:8\n  |\n7 |     if len(l) == 0 {\n  |        ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmptm87blxe.rs:10:8\n   |\n10 |     if len(l) == 1 {\n   |        ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmptm87blxe.rs:14:8\n   |\n14 |     if len(l) % 2 == 0 {\n   |        ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmptm87blxe.rs:15:19\n   |\n15 |         return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |                   ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmptm87blxe.rs:15:35\n   |\n15 |         return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |                                   ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmptm87blxe.rs:17:14\n   |\n17 |     return l[len(l) / 2]\n   |              ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmptm87blxe.rs:11:16\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |         return l[0]\n   |                ^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 8 previous errors\n\nSome errors have detailed explanations: E0308, E0425.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median called on empty vector\")\n  }\n  if len(l) == 1 {\n    return l[0]\n  }\n  l.sort()\n  return l[len(l) / 2]\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `return`\n  --> /tmp/tmpza75kbb0.rs:13:11\n   |\n13 |   l.sort()\n   |           ^ help: add `;` here\n14 |   return l[len(l) / 2]\n   |   ------ unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpza75kbb0.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpza75kbb0.rs:8:5\n  |\n8 |     panic(\"median called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median called on empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpza75kbb0.rs:10:6\n   |\n10 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpza75kbb0.rs:14:12\n   |\n14 |   return l[len(l) / 2]\n   |            ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpza75kbb0.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0425.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort_by(|x: f64, y: f64| {\n    if x < y {\n      return -1\n    } else if x > y {\n      return 1\n    } else {\n      return 0\n    }\n  })\n  if len(l) % 2 == 0 {\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n  } else {\n    return l[len(l) / 2]\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmpxptwtpv3.rs:15:5\n   |\n15 |   })\n   |     ^ help: add `;` here\n16 |   if len(l) % 2 == 0 {\n   |   -- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpxptwtpv3.rs:16:6\n   |\n16 |   if len(l) % 2 == 0 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpxptwtpv3.rs:17:15\n   |\n17 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpxptwtpv3.rs:17:31\n   |\n17 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |                               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpxptwtpv3.rs:19:14\n   |\n19 |     return l[len(l) / 2]\n   |              ^^^ not found in this scope\n\nerror[E0631]: type mismatch in closure arguments\n   --> /tmp/tmpxptwtpv3.rs:7:5\n    |\n7   |   l.sort_by(|x: f64, y: f64| {\n    |     ^^^^^^^ ---------------- found signature of `fn(f64, f64) -> _`\n    |     |\n    |     expected signature of `for<'r, 's> fn(&'r isize, &'s isize) -> _`\n    |\nnote: required by a bound in `slice::<impl [T]>::sort_by`\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0425, E0631.\nFor more information about an error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| x.abs());\n  l.sort();\n  return l[l.len()/2];\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpry5teiqd.rs:7:9\n    |\n7   |     l = l.map(|x| x.abs());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpry5teiqd.rs:9:10\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |                             --- expected `f64` because of return type\n...\n9 |   return l[l.len()/2];\n  |          ^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0308, E0599.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    return 0.0\n  }\n\n  l = l.sort()\n  if len(l) % 2 == 0 {\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n  } else {\n    return l[len(l) / 2]\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmpovbe996t.rs:11:15\n   |\n11 |   l = l.sort()\n   |               ^ help: add `;` here\n12 |   if len(l) % 2 == 0 {\n   |   -- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpovbe996t.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpovbe996t.rs:12:6\n   |\n12 |   if len(l) % 2 == 0 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpovbe996t.rs:13:15\n   |\n13 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpovbe996t.rs:13:31\n   |\n13 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |                               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpovbe996t.rs:15:14\n   |\n15 |     return l[len(l) / 2]\n   |              ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpovbe996t.rs:11:7\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |              ---------- expected due to this parameter type\n...\n11 |   l = l.sort()\n   |       ^^^^^^^^ expected struct `Vec`, found `()`\n   |\n   = note: expected struct `Vec<isize>`\n           found unit type `()`\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0308, E0425.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| x.abs());\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp2pj75b59.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp2pj75b59.rs:7:9\n    |\n7   |     l = l.map(|x| x.abs());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp2pj75b59.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| x.abs());\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp2pj75b59.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp2pj75b59.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  if (l.len() % 2 == 1) {\n    return l.get(l.len() / 2);\n  } else {\n    return (l.get(l.len() / 2) + l.get(l.len() / 2 - 1)) / 2.0;\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp_yxig6l2.rs:9:6\n  |\n9 |   if (l.len() % 2 == 1) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 1) {\n9 +   if l.len() % 2 == 1 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp_yxig6l2.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp_yxig6l2.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| -x);\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp_yxig6l2.rs:10:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n10 |     return l.get(l.len() / 2);\n   |            ^^^^^^^^^^^^^^^^^^ expected `f64`, found enum `Option`\n   |\n   = note: expected type `f64`\n              found enum `Option<&isize>`\n\nerror[E0369]: cannot add `Option<&isize>` to `Option<&isize>`\n  --> /tmp/tmp_yxig6l2.rs:12:32\n   |\n12 |     return (l.get(l.len() / 2) + l.get(l.len() / 2 - 1)) / 2.0;\n   |             ------------------ ^ ---------------------- Option<&isize>\n   |             |\n   |             Option<&isize>\n\nerror: aborting due to 4 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0308, E0369, E0599.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| x.abs());\n  l = l.sort();\n  return l[l.len()/2];\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp5nb591ok.rs:7:9\n    |\n7   |     l = l.map(|x| x.abs());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp5nb591ok.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| x.abs());\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp5nb591ok.rs:9:10\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |                             --- expected `f64` because of return type\n...\n9 |   return l[l.len()/2];\n  |          ^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0599.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| x.abs());\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp2pj75b59.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp2pj75b59.rs:7:9\n    |\n7   |     l = l.map(|x| x.abs());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp2pj75b59.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| x.abs());\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp2pj75b59.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp2pj75b59.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort_by(|x: f64, y: f64| -> x < y);\n  if l.len() % 2 == 0 {\n    return (l.get(l.len() / 2) + l.get(l.len() / 2 - 1)) / 2.0;\n  } else {\n    return l.get(l.len() / 2);\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected one of `!`, `(`, `+`, `,`, `::`, `:`, `<`, `=`, or `>`, found `)`\n --> /tmp/tmp5jl_nthx.rs:7:38\n  |\n7 |   l.sort_by(|x: f64, y: f64| -> x < y);\n  |                                      ^ expected one of 9 possible tokens\n  |\nhelp: you might have meant to end the type parameters here\n  |\n7 |   l.sort_by(|x: f64, y: f64| -> x < y>);\n  |                                      +\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmpdbltankp.rs:8:6\n  |\n8 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n8 -   if (l.len() % 2 == 0) {\n8 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0308]: mismatched types\n --> /tmp/tmpdbltankp.rs:7:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n --> /tmp/tmpdbltankp.rs:9:50\n  |\n9 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  |                                                  ^ no implementation for `isize / {float}`\n  |\n  = help: the trait `Div<{float}>` is not implemented for `isize`\n  = help: the following other types implement trait `Div<Rhs>`:\n            <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128 as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n            <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpdbltankp.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median called on empty vector\")\n  }\n  if len(l) == 1 {\n    return l[0]\n  }\n  l.sort()\n  return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `return`\n  --> /tmp/tmp5ygl4lep.rs:13:11\n   |\n13 |   l.sort()\n   |           ^ help: add `;` here\n14 |   return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |   ------ unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmp5ygl4lep.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmp5ygl4lep.rs:8:5\n  |\n8 |     panic(\"median called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median called on empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp5ygl4lep.rs:10:6\n   |\n10 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp5ygl4lep.rs:14:13\n   |\n14 |   return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |             ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp5ygl4lep.rs:14:29\n   |\n14 |   return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |                             ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp5ygl4lep.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0425.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median called on empty vector\")\n  }\n  if len(l) == 1 {\n    return l[0]\n  }\n  l = l.sort()\n  return l[len(l)/2]\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `return`\n  --> /tmp/tmp515x88l3.rs:13:15\n   |\n13 |   l = l.sort()\n   |               ^ help: add `;` here\n14 |   return l[len(l)/2]\n   |   ------ unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmp515x88l3.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmp515x88l3.rs:8:5\n  |\n8 |     panic(\"median called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median called on empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp515x88l3.rs:10:6\n   |\n10 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp515x88l3.rs:14:12\n   |\n14 |   return l[len(l)/2]\n   |            ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp515x88l3.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp515x88l3.rs:13:7\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |              ---------- expected due to this parameter type\n...\n13 |   l = l.sort()\n   |       ^^^^^^^^ expected struct `Vec`, found `()`\n   |\n   = note: expected struct `Vec<isize>`\n           found unit type `()`\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0425.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if l.len == 0 {\n    panic(\"median() called on empty vector\")\n  }\n\n  l.sort()\n  if l.len % 2 == 0 {\n    return (l[l.len / 2] + l[l.len / 2 - 1]) / 2.0\n  } else {\n    return l[l.len / 2]\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmpw49prsbo.rs:11:11\n   |\n11 |   l.sort()\n   |           ^ help: add `;` here\n12 |   if l.len % 2 == 0 {\n   |   -- unexpected token\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpw49prsbo.rs:8:5\n  |\n8 |     panic(\"median() called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median() called on empty vector\")\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpw49prsbo.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpw49prsbo.rs:12:8\n   |\n12 |   if l.len % 2 == 0 {\n   |        ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n12 |   if l.len() % 2 == 0 {\n   |           ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpw49prsbo.rs:13:17\n   |\n13 |     return (l[l.len / 2] + l[l.len / 2 - 1]) / 2.0\n   |                 ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n13 |     return (l[l.len() / 2] + l[l.len / 2 - 1]) / 2.0\n   |                    ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpw49prsbo.rs:13:32\n   |\n13 |     return (l[l.len / 2] + l[l.len / 2 - 1]) / 2.0\n   |                                ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n13 |     return (l[l.len / 2] + l[l.len() / 2 - 1]) / 2.0\n   |                                   ++\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpw49prsbo.rs:13:46\n   |\n13 |     return (l[l.len / 2] + l[l.len / 2 - 1]) / 2.0\n   |                                              ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n    l = l.map(|x| x.abs());\n    l = l.sort();\n    if (l.len() % 2 == 0) {\n        return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n    } else {\n        return l[l.len() / 2];\n    }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmpczdwhv5z.rs:9:8\n  |\n9 |     if (l.len() % 2 == 0) {\n  |        ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -     if (l.len() % 2 == 0) {\n9 +     if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpczdwhv5z.rs:7:11\n    |\n7   |       l = l.map(|x| x.abs());\n    |             ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpczdwhv5z.rs:8:9\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |     l = l.map(|x| x.abs());\n8 |     l = l.sort();\n  |         ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpczdwhv5z.rs:10:54\n   |\n10 |         return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                      ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpczdwhv5z.rs:12:16\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |         return l[l.len() / 2];\n   |                ^^^^^^^^^^^^^^ expected `f",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| x.abs());\n  l = l.sort();\n  let n = l.len();\n  if (n == 0) {\n    return 0.0;\n  } else if (n % 2 == 1) {\n    return l[n / 2];\n  } else {\n    return (l[n / 2] + l[n / 2 - 1]) / 2.0;\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpplfzop78.rs:10:6\n   |\n10 |   if (n == 0) {\n   |      ^      ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n10 -   if (n == 0) {\n10 +   if n == 0 {\n   | \n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpplfzop78.rs:12:13\n   |\n12 |   } else if (n % 2 == 1) {\n   |             ^          ^\n   |\nhelp: remove these parentheses\n   |\n12 -   } else if (n % 2 == 1) {\n12 +   } else if n % 2 == 1 {\n   | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpplfzop78.rs:7:9\n    |\n7   |     l = l.map(|x| x.abs());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpplfzop78.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| x.abs());\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpplfzop78.rs:13:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n13 |     return l[n / 2];\n   |            ^^^^^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpplfzop78.rs:15:38\n   |\n15 |     return (l[n / 2] + l[n / 2 - 1]) / 2.0;\n   |                                      ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp7kr89tld.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp7kr89tld.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp7kr89tld.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| -x);\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp7kr89tld.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp7kr89tld.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 4 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.sort();\n  if l.len() == 0 {\n    return 0.0;\n  }\n  if l.len() == 1 {\n    return l[0];\n  }\n  if l.len() == 2 {\n    return (l[0] + l[1]) / 2.0;\n  }\n  return l[l.len() / 2];\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmps97k7wo0.rs:7:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmps97k7wo0.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[0];\n   |            ^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmps97k7wo0.rs:15:26\n   |\n15 |     return (l[0] + l[1]) / 2.0;\n   |                          ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[(l.len() / 2) - 1] + l[l.len() / 2]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmphj36f5q4.rs:8:6\n  |\n8 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n8 -   if (l.len() % 2 == 0) {\n8 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0277]: cannot divide `isize` by `{float}`\n --> /tmp/tmphj36f5q4.rs:9:52\n  |\n9 |     return (l[(l.len() / 2) - 1] + l[l.len() / 2]) / 2.0;\n  |                                                    ^ no implementation for `isize / {float}`\n  |\n  = help: the trait `Div<{float}>` is not implemented for `isize`\n  = help: the following other types implement trait `Div<Rhs>`:\n            <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128 as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n            <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmphj36f5q4.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 2 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort();\n  if l.len() == 0 {\n    return 0.0;\n  }\n  if l.len() == 1 {\n    return l[0];\n  }\n  if l.len() == 2 {\n    return (l[0] + l[1]) / 2.0;\n  }\n  return l[l.len() / 2];\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n  --> /tmp/tmpvro4fkoa.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[0];\n   |            ^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpvro4fkoa.rs:15:26\n   |\n15 |     return (l[0] + l[1]) / 2.0;\n   |                          ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median: vector is empty\")\n  }\n  if len(l) == 1 {\n    return l[0]\n  }\n  if len(l) == 2 {\n    return (l[0] + l[1]) / 2.0\n  }\n  if len(l) == 3 {\n    return (l[0] + l[1] + l[2]) / 3.0\n  }\n  if len(l) == 4 {\n    return (l[0] + l[1] + l[2] + l[3]) / 4.0\n  }\n  if len(l) == 5 {\n    return (l[0] + l[1] + l[2] + l[3] + l[4]) / 5.0\n  }\n  if len(l) == 6 {\n    return (l[0] + l[1] + l[2] + l[3] + l[4] + l[5]) / 6.0\n  }\n  if len(l) == 7 {\n    return (l[0] + l[1] + l[2] + l[3] + l[4] + l[5] + l[6]) / 7.0\n  }\n  if len(l) == 8 {\n    return (l[0] + l[1] + l[2] + l[3] + l[4] + l[5] + l[6] + l[7]) / 8.0\n  }\n  if len(l) == 9 {\n    return (l[0] + l[1] + l[2] + l[3] + l[4] + l[5] + l[6] + l[7] + l[8]) / 9.0\n  }\n  if len(l) == 10 {\n    return (l[0] + l[1] + l[2] + l[3] + l[4] + l[5] + l[6] + l[7] + l[8] + l[9]) / 10.0\n  }\n  if len(l) == 11 {\n    return (l[0] +\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: this file contains an unclosed delimiter\n  --> /tmp/tmp_nrbdqih.rs:51:3\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                                 - unclosed delimiter\n...\n40 |   if len(l) == 11 {\n   |                   - this delimiter might not be properly closed...\n41 |     return (l[0] +\n42 | }\n   | - ...as it matches this but it has different indentation\n...\n51 | }\n   |   ^\n\nerror: expected expression, found `)`\n  --> /tmp/tmp_nrbdqih.rs:42:1\n   |\n42 | }\n   | ^ expected expression\n\nerror: mismatched closing delimiter: `}`\n  --> /tmp/tmp_nrbdqih.rs:41:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                                 - closing delimiter possibly meant for this\n...\n41 |     return (l[0] +\n   |            ^ unclosed delimiter\n42 | }\n   | ^ mismatched closing delimiter\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmp_nrbdqih.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmp_nrbdqih.rs:8:5\n  |\n8 |     panic(\"median: vector is empty\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median: vector is empty\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp_nrbdqih.rs:10:6\n   |\n10 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp_nrbdqih.rs:13:6\n   |\n13 |   if len(l) == 2 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp_nrbdqih.rs:16:6\n   |\n16 |   if len(l) == 3 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp_nrbdqih.rs:19:6\n   |\n19 |   if len(l) == 4 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp_nrbdqih.rs:22:6\n   |\n22 |   if len(l) == 5 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp7kr89tld.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp7kr89tld.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp7kr89tld.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| -x);\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp7kr89tld.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp7kr89tld.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 4 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if l.len == 0 {\n    panic(\"median called on empty vector\")\n  }\n  if l.len == 1 {\n    return l.data[0]\n  }\n  if l.len == 2 {\n    return (l.data[0] + l.data[1]) / 2.0\n  }\n  med := l.data[0]\n  for i := 1; i < l.len; i++ {\n    if l.data[i] < med {\n      med = l.data[i]\n    }\n  }\n  for i := 0; i < l.len; i++ {\n    if l.data[i] == med {\n      return med\n    }\n  }\n  panic(\"median called on non-sorted vector\")\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected type, found `=`\n  --> /tmp/tmpezswqxsu.rs:16:8\n   |\n16 |   med := l.data[0]\n   |       -^ expected type\n   |       |\n   |       tried to parse a type due to this\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpezswqxsu.rs:8:5\n  |\n8 |     panic(\"median called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median called on empty vector\")\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpezswqxsu.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpezswqxsu.rs:10:8\n   |\n10 |   if l.len == 1 {\n   |        ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n10 |   if l.len() == 1 {\n   |           ++\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmpezswqxsu.rs:11:14\n   |\n11 |     return l.data[0]\n   |              ^^^^ unknown field\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpezswqxsu.rs:13:8\n   |\n13 |   if l.len == 2 {\n   |        ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n13 |   if l.len() == 2 {\n   |           ++\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmpezswqxsu.rs:14:15\n   |\n14 |     return (l.data[0] + l.data[1]) / 2.0\n   |               ^^^^ unknown field\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmpezswqxsu.rs:14:27\n   |\n14 |     return (l.data[0] + l.data[1]) / 2.0\n   |                           ^^^^ unknown field\n\nerror: aborting due to 8 previous errors\n\nSome errors have detailed explanations: E0423, E0609, E0616.\nFor more information about an error, try `rustc --explain E0423`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median called on empty vector\")\n  }\n  if len(l) == 1 {\n    return l[0]\n  }\n  l.sort()\n  if len(l) % 2 == 0 {\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n  }\n  return l[len(l) / 2]\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmpo3tfme6k.rs:13:11\n   |\n13 |   l.sort()\n   |           ^ help: add `;` here\n14 |   if len(l) % 2 == 0 {\n   |   -- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpo3tfme6k.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpo3tfme6k.rs:8:5\n  |\n8 |     panic(\"median called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median called on empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpo3tfme6k.rs:10:6\n   |\n10 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpo3tfme6k.rs:14:6\n   |\n14 |   if len(l) % 2 == 0 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpo3tfme6k.rs:15:15\n   |\n15 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpo3tfme6k.rs:15:31\n   |\n15 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |                               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpo3tfme6k.rs:17:12\n   |\n17 |   return l[len(l) / 2]\n   |            ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpo3tfme6k.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 9 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0425.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|v| v.to_f64());\n  l.sort();\n  return l[l.len()/2];\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpo_nouw6e.rs:7:9\n    |\n7   |     l = l.map(|v| v.to_f64());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpo_nouw6e.rs:9:10\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |                             --- expected `f64` because of return type\n...\n9 |   return l[l.len()/2];\n  |          ^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0308, E0599.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp7kr89tld.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp7kr89tld.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp7kr89tld.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| -x);\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp7kr89tld.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp7kr89tld.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 4 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| x as f64);\n  l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmpixeil39d.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpixeil39d.rs:7:9\n    |\n7   |     l = l.map(|x| x as f64);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpixeil39d.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpixeil39d.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0277, E0308, E0599.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| x.abs());\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp2pj75b59.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp2pj75b59.rs:7:9\n    |\n7   |     l = l.map(|x| x.abs());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp2pj75b59.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| x.abs());\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp2pj75b59.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp2pj75b59.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort();\n  if l.len() == 0 {\n    return 0.0;\n  }\n  if l.len() == 1 {\n    return l[0];\n  }\n  if l.len() == 2 {\n    return (l[0] + l[1]) / 2.0;\n  }\n  return l[l.len() / 2];\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n  --> /tmp/tmpvro4fkoa.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[0];\n   |            ^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpvro4fkoa.rs:15:26\n   |\n15 |     return (l[0] + l[1]) / 2.0;\n   |                          ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  let n = l.len();\n  if (n == 0) {\n    return 0.0;\n  } else if (n % 2 == 1) {\n    return l[n/2];\n  } else {\n    let a = l[n/2 - 1];\n    let b = l[n/2];\n    return (a + b) / 2.0;\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpp63li6e4.rs:10:6\n   |\n10 |   if (n == 0) {\n   |      ^      ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n10 -   if (n == 0) {\n10 +   if n == 0 {\n   | \n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpp63li6e4.rs:12:13\n   |\n12 |   } else if (n % 2 == 1) {\n   |             ^          ^\n   |\nhelp: remove these parentheses\n   |\n12 -   } else if (n % 2 == 1) {\n12 +   } else if n % 2 == 1 {\n   | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpp63li6e4.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpp63li6e4.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| -x);\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpp63li6e4.rs:13:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n13 |     return l[n/2];\n   |            ^^^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpp63li6e4.rs:17:20\n   |\n17 |     return (a + b) / 2.0;\n   |                    ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median called on empty vector\")\n  }\n  if len(l) == 1 {\n    return l[0]\n  }\n  l = l.sort()\n  if len(l) % 2 == 0 {\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n  }\n  return l[len(l) / 2]\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmp7h41sz9f.rs:13:15\n   |\n13 |   l = l.sort()\n   |               ^ help: add `;` here\n14 |   if len(l) % 2 == 0 {\n   |   -- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmp7h41sz9f.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmp7h41sz9f.rs:8:5\n  |\n8 |     panic(\"median called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median called on empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp7h41sz9f.rs:10:6\n   |\n10 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp7h41sz9f.rs:14:6\n   |\n14 |   if len(l) % 2 == 0 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp7h41sz9f.rs:15:15\n   |\n15 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp7h41sz9f.rs:15:31\n   |\n15 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |                               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp7h41sz9f.rs:17:12\n   |\n17 |   return l[len(l) / 2]\n   |            ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp7h41sz9f.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp7h41sz9f.rs:13:7\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |              ---------- expected due to this parameter type\n...\n13 |   l = l.sort()\n   |       ^^^^^^^^ expected struct `Vec`, found `()`\n   |\n   = note: expected struct `Vec<isiz",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n    let n = l.len();\n    if n == 0 {\n        panic(\"median called on empty vector\");\n    }\n    let m = n / 2;\n    let l1 = l.slice(0, m);\n    let l2 = l.slice(m, n);\n    let m1 = median(l1);\n    let m2 = median(l2);\n    return (m1 + m2) / 2.0;\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmp53s1n9ca.rs:9:9\n  |\n9 |         panic(\"median called on empty vector\");\n  |         ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n9 |         panic!(\"median called on empty vector\");\n  |              +\n\nerror[E0599]: no method named `slice` found for struct `Vec<isize>` in the current scope\n  --> /tmp/tmp53s1n9ca.rs:12:16\n   |\n12 |     let l1 = l.slice(0, m);\n   |                ^^^^^\n   |\n   = help: items from traits can only be used if the trait is in scope\nhelp: the following trait is implemented but not in scope; perhaps add a `use` for it:\n   |\n1  | use std::collections::vec_deque::ring_slices::RingSlices;\n   |\nhelp: there is an associated function with a similar name\n   |\n12 |     let l1 = l.as_slice(0, m);\n   |                ~~~~~~~~\n\nerror[E0599]: no method named `slice` found for struct `Vec<isize>` in the current scope\n  --> /tmp/tmp53s1n9ca.rs:13:16\n   |\n13 |     let l2 = l.slice(m, n);\n   |                ^^^^^\n   |\n   = help: items from traits can only be used if the trait is in scope\nhelp: the following trait is implemented but not in scope; perhaps add a `use` for it:\n   |\n1  | use std::collections::vec_deque::ring_slices::RingSlices;\n   |\nhelp: there is an associated function with a similar name\n   |\n13 |     let l2 = l.as_slice(m, n);\n   |                ~~~~~~~~\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0423, E0599.\nFor more information about an error, try `rustc --explain E0423`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort();\n  if l.len() == 0 {\n    return 0.0;\n  }\n  if l.len() == 1 {\n    return l[0];\n  }\n  if l.len() == 2 {\n    return (l[0] + l[1]) / 2.0;\n  }\n  return l[l.len() / 2];\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n  --> /tmp/tmpvro4fkoa.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[0];\n   |            ^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpvro4fkoa.rs:15:26\n   |\n15 |     return (l[0] + l[1]) / 2.0;\n   |                          ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n    let l2 = l.map(|x| x as f64);\n    let l3 = l2.sort();\n    let l4 = l3.take(l3.length / 2);\n    return l4.get(l4.length - 1);\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp_g_pllq6.rs:7:16\n    |\n7   |       let l2 = l.map(|x| x as f64);\n    |                  ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0599`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if l.len == 0 {\n    panic(\"median called on empty vector\")\n  }\n  if l.len == 1 {\n    return l.data[0]\n  }\n  if l.len == 2 {\n    return (l.data[0] + l.data[1]) / 2.0\n  }\n  if l.len == 3 {\n    return (l.data[0] + l.data[1] + l.data[2]) / 3.0\n  }\n  if l.len == 4 {\n    return (l.data[0] + l.data[1] + l.data[2] + l.data[3]) / 4.0\n  }\n  if l.len == 5 {\n    return (l.data[0] + l.data[1] + l.data[2] + l.data[3] + l.data[4]) / 5.0\n  }\n  panic(\"median called on vector with more than 5 elements\")\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpw9db07g6.rs:8:5\n  |\n8 |     panic(\"median called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median called on empty vector\")\n  |          +\n\nerror[E0423]: expected function, found macro `panic`\n  --> /tmp/tmpw9db07g6.rs:25:3\n   |\n25 |   panic(\"median called on vector with more than 5 elements\")\n   |   ^^^^^ not a function\n   |\nhelp: use `!` to invoke the macro\n   |\n25 |   panic!(\"median called on vector with more than 5 elements\")\n   |        +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpw9db07g6.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpw9db07g6.rs:10:8\n   |\n10 |   if l.len == 1 {\n   |        ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n10 |   if l.len() == 1 {\n   |           ++\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmpw9db07g6.rs:11:14\n   |\n11 |     return l.data[0]\n   |              ^^^^ unknown field\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpw9db07g6.rs:13:8\n   |\n13 |   if l.len == 2 {\n   |        ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n13 |   if l.len() == 2 {\n   |           ++\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmpw9db07g6.rs:14:15\n   |\n14 |     return (l.data[0] + l.data[1]) / 2.0\n   |               ^^^^ unknown field\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmpw9db07g6.rs:14:27\n   |\n14 |     return (l.data[0] + l.data[1]) / 2.0\n   |                           ^^^^ unknown field\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpw9db07g6.rs:16:8\n   |\n16 |   if l.len == 3 {\n   |        ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  let n = l.len();\n  if (n == 0) {\n    return 0.0;\n  } else if (n % 2 == 1) {\n    return l[n / 2];\n  } else {\n    return (l[n / 2] + l[n / 2 - 1]) / 2.0;\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n  --> /tmp/tmptjsy6ims.rs:10:6\n   |\n10 |   if (n == 0) {\n   |      ^      ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n10 -   if (n == 0) {\n10 +   if n == 0 {\n   | \n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmptjsy6ims.rs:12:13\n   |\n12 |   } else if (n % 2 == 1) {\n   |             ^          ^\n   |\nhelp: remove these parentheses\n   |\n12 -   } else if (n % 2 == 1) {\n12 +   } else if n % 2 == 1 {\n   | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmptjsy6ims.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmptjsy6ims.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| -x);\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmptjsy6ims.rs:13:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n13 |     return l[n / 2];\n   |            ^^^^^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmptjsy6ims.rs:15:38\n   |\n15 |     return (l[n / 2] + l[n / 2 - 1]) / 2.0;\n   |                                      ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n    let l_len = l.len();\n    if l_len == 0 {\n        panic!(\"median called on empty vector\");\n    }\n    if l_len == 1 {\n        return l[0];\n    }\n    let l_sorted = sort(l);\n    let l_half = l_sorted.len() / 2;\n    if l_half == 0 {\n        return l_sorted[0];\n    }\n    let l_middle = l_sorted[l_half];\n    if l_half == l_len - 1 {\n        return l_sorted[l_half];\n    }\n    return (l_sorted[l_half] + l_sorted[l_half + 1]) / 2.0;\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `sort` in this scope\n  --> /tmp/tmpxnbn82u4.rs:14:20\n   |\n14 |     let l_sorted = sort(l);\n   |                    ^^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpxnbn82u4.rs:12:16\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |         return l[0];\n   |                ^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0308, E0425.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp7kr89tld.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp7kr89tld.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp7kr89tld.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| -x);\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp7kr89tld.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp7kr89tld.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 4 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| x.abs());\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp2pj75b59.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp2pj75b59.rs:7:9\n    |\n7   |     l = l.map(|x| x.abs());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp2pj75b59.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| x.abs());\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp2pj75b59.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp2pj75b59.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| x.abs());\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp2pj75b59.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp2pj75b59.rs:7:9\n    |\n7   |     l = l.map(|x| x.abs());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp2pj75b59.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| x.abs());\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp2pj75b59.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp2pj75b59.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n    l = l.map(|x| x.abs());\n    l = l.sort();\n    let n = l.len();\n    if (n == 0) {\n        return 0.0;\n    } else if (n % 2 == 1) {\n        return l[n/2];\n    } else {\n        let a = l[n/2 - 1];\n        let b = l[n/2];\n        return (a + b) / 2.0;\n    }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpqsf6aoeb.rs:10:8\n   |\n10 |     if (n == 0) {\n   |        ^      ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n10 -     if (n == 0) {\n10 +     if n == 0 {\n   | \n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpqsf6aoeb.rs:12:15\n   |\n12 |     } else if (n % 2 == 1) {\n   |               ^          ^\n   |\nhelp: remove these parentheses\n   |\n12 -     } else if (n % 2 == 1) {\n12 +     } else if n % 2 == 1 {\n   | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpqsf6aoeb.rs:7:11\n    |\n7   |       l = l.map(|x| x.abs());\n    |             ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpqsf6aoeb.rs:8:9\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |     l = l.map(|x| x.abs());\n8 |     l = l.sort();\n  |         ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpqsf6aoeb.rs:13:16\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n13 |         return l[n/2];\n   |                ^^^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpqsf6aoeb.rs:17:24\n   |\n17 |         return (a + b) / 2.0;\n   |                        ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort_by(|x: f64, y: f64| {\n    if x < y {\n      return -1\n    } else if x > y {\n      return 1\n    } else {\n      return 0\n    }\n  })\n  if len(l) % 2 == 0 {\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n  } else {\n    return l[len(l) / 2]\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmpxptwtpv3.rs:15:5\n   |\n15 |   })\n   |     ^ help: add `;` here\n16 |   if len(l) % 2 == 0 {\n   |   -- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpxptwtpv3.rs:16:6\n   |\n16 |   if len(l) % 2 == 0 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpxptwtpv3.rs:17:15\n   |\n17 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpxptwtpv3.rs:17:31\n   |\n17 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |                               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpxptwtpv3.rs:19:14\n   |\n19 |     return l[len(l) / 2]\n   |              ^^^ not found in this scope\n\nerror[E0631]: type mismatch in closure arguments\n   --> /tmp/tmpxptwtpv3.rs:7:5\n    |\n7   |   l.sort_by(|x: f64, y: f64| {\n    |     ^^^^^^^ ---------------- found signature of `fn(f64, f64) -> _`\n    |     |\n    |     expected signature of `for<'r, 's> fn(&'r isize, &'s isize) -> _`\n    |\nnote: required by a bound in `slice::<impl [T]>::sort_by`\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0425, E0631.\nFor more information about an error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|v| v.to_f64());\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmpy0_agty0.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpy0_agty0.rs:7:9\n    |\n7   |     l = l.map(|v| v.to_f64());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpy0_agty0.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|v| v.to_f64());\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpy0_agty0.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpy0_agty0.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: ab",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n    let l2 = l.map(|x| x.as_f64());\n    let l3 = l2.sort();\n    let l4 = l3.take(l3.length / 2);\n    return l4.head();\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpykcihlep.rs:7:16\n    |\n7   |       let l2 = l.map(|x| x.as_f64());\n    |                  ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0599`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort()\n  if l.len() % 2 == 0 {\n    return (l.get(l.len() / 2 - 1) + l.get(l.len() / 2)) / 2.0\n  } else {\n    return l.get(l.len() / 2)\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n --> /tmp/tmpyenggbxy.rs:7:11\n  |\n7 |   l.sort()\n  |           ^ help: add `;` here\n8 |   if l.len() % 2 == 0 {\n  |   -- unexpected token\n\nerror[E0369]: cannot add `Option<&isize>` to `Option<&isize>`\n --> /tmp/tmpyenggbxy.rs:9:36\n  |\n9 |     return (l.get(l.len() / 2 - 1) + l.get(l.len() / 2)) / 2.0\n  |             ---------------------- ^ ------------------ Option<&isize>\n  |             |\n  |             Option<&isize>\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0369`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median called on empty vector\")\n  }\n  if len(l) == 1 {\n    return l[0]\n  }\n  l.sort()\n  return l[len(l) / 2]\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `return`\n  --> /tmp/tmpza75kbb0.rs:13:11\n   |\n13 |   l.sort()\n   |           ^ help: add `;` here\n14 |   return l[len(l) / 2]\n   |   ------ unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpza75kbb0.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpza75kbb0.rs:8:5\n  |\n8 |     panic(\"median called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median called on empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpza75kbb0.rs:10:6\n   |\n10 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpza75kbb0.rs:14:12\n   |\n14 |   return l[len(l) / 2]\n   |            ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpza75kbb0.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0425.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp7kr89tld.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp7kr89tld.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp7kr89tld.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| -x);\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp7kr89tld.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp7kr89tld.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 4 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median called on empty vector\")\n  }\n  if len(l) == 1 {\n    return l[0]\n  }\n  if len(l) == 2 {\n    return (l[0] + l[1]) / 2.0\n  }\n  if len(l) == 3 {\n    return (l[0] + l[1] + l[2]) / 3.0\n  }\n  if len(l) == 4 {\n    return (l[0] + l[1] + l[2] + l[3]) / 4.0\n  }\n  if len(l) == 5 {\n    return (l[0] + l[1] + l[2] + l[3] + l[4]) / 5.0\n  }\n  if len(l) == 6 {\n    return (l[0] + l[1] + l[2] + l[3] + l[4] + l[5]) / 6.0\n  }\n  if len(l) == 7 {\n    return (l[0] + l[1] + l[2] + l[3] + l[4] + l[5] + l[6]) / 7.0\n  }\n  if len(l) == 8 {\n    return (l[0] + l[1] + l[2] + l[3] + l[4] + l[5] + l[6] + l[7]) / 8.0\n  }\n  if len(l) == 9 {\n    return (l[0] + l[1] + l[2] + l[3] + l[4] + l[5] + l[6] + l[7] + l[8]) / 9.0\n  }\n  if len(l) == 10 {\n    return (l[0] + l[1] + l[2] + l[3] + l[4] + l[5] + l[6] + l[7] + l[8] + l[9]) / 10.0\n  }\n  if len(l) == 11 {\n    return (l[0] +\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: this file contains an unclosed delimiter\n  --> /tmp/tmpvx_t0edo.rs:51:3\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                                 - unclosed delimiter\n...\n40 |   if len(l) == 11 {\n   |                   - this delimiter might not be properly closed...\n41 |     return (l[0] +\n42 | }\n   | - ...as it matches this but it has different indentation\n...\n51 | }\n   |   ^\n\nerror: expected expression, found `)`\n  --> /tmp/tmpvx_t0edo.rs:42:1\n   |\n42 | }\n   | ^ expected expression\n\nerror: mismatched closing delimiter: `}`\n  --> /tmp/tmpvx_t0edo.rs:41:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                                 - closing delimiter possibly meant for this\n...\n41 |     return (l[0] +\n   |            ^ unclosed delimiter\n42 | }\n   | ^ mismatched closing delimiter\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpvx_t0edo.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpvx_t0edo.rs:8:5\n  |\n8 |     panic(\"median called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median called on empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpvx_t0edo.rs:10:6\n   |\n10 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpvx_t0edo.rs:13:6\n   |\n13 |   if len(l) == 2 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpvx_t0edo.rs:16:6\n   |\n16 |   if len(l) == 3 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpvx_t0edo.rs:19:6\n   |\n19 |   if len(l) == 4 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpvx_t0edo.rs:22:6\n   |\n22 |   if len(l) == 5 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median called on empty vector\")\n  }\n  if len(l) == 1 {\n    return l[0]\n  }\n  if len(l) == 2 {\n    return (l[0] + l[1]) / 2.0\n  }\n  sorted := sort(l)\n  mid := len(sorted) / 2\n  if len(sorted) % 2 == 0 {\n    return (sorted[mid] + sorted[mid-1]) / 2.0\n  }\n  return sorted[mid]\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected type, found `=`\n  --> /tmp/tmpcukcf0gb.rs:16:11\n   |\n16 |   sorted := sort(l)\n   |          -^ expected type\n   |          |\n   |          tried to parse a type due to this\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpcukcf0gb.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpcukcf0gb.rs:8:5\n  |\n8 |     panic(\"median called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median called on empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpcukcf0gb.rs:10:6\n   |\n10 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpcukcf0gb.rs:13:6\n   |\n13 |   if len(l) == 2 {\n   |      ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpcukcf0gb.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpcukcf0gb.rs:14:26\n   |\n14 |     return (l[0] + l[1]) / 2.0\n   |                          ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0277, E0308, E0423, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[(l.len() / 2) - 1] + l[l.len() / 2]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmpesn3utai.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpesn3utai.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpesn3utai.rs:10:52\n   |\n10 |     return (l[(l.len() / 2) - 1] + l[l.len() / 2]) / 2.0;\n   |                                                    ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpesn3utai.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0277, E0308, E0599.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort();\n  if l.len() % 2 == 0 {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0277]: cannot divide `isize` by `{float}`\n --> /tmp/tmpxgceopys.rs:9:50\n  |\n9 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  |                                                  ^ no implementation for `isize / {float}`\n  |\n  = help: the trait `Div<{float}>` is not implemented for `isize`\n  = help: the following other types implement trait `Div<Rhs>`:\n            <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128 as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n            <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpxgceopys.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median called on empty vector\")\n  }\n  if len(l) == 1 {\n    return l[0]\n  }\n  l = l.sort()\n  if len(l) % 2 == 0 {\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n  }\n  return l[len(l) / 2]\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmp7h41sz9f.rs:13:15\n   |\n13 |   l = l.sort()\n   |               ^ help: add `;` here\n14 |   if len(l) % 2 == 0 {\n   |   -- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmp7h41sz9f.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmp7h41sz9f.rs:8:5\n  |\n8 |     panic(\"median called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median called on empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp7h41sz9f.rs:10:6\n   |\n10 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp7h41sz9f.rs:14:6\n   |\n14 |   if len(l) % 2 == 0 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp7h41sz9f.rs:15:15\n   |\n15 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp7h41sz9f.rs:15:31\n   |\n15 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |                               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp7h41sz9f.rs:17:12\n   |\n17 |   return l[len(l) / 2]\n   |            ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp7h41sz9f.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp7h41sz9f.rs:13:7\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |              ---------- expected due to this parameter type\n...\n13 |   l = l.sort()\n   |       ^^^^^^^^ expected struct `Vec`, found `()`\n   |\n   = note: expected struct `Vec<isiz",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n    l = l.map(|x| x.abs());\n    l.sort();\n    if (l.len() % 2 == 1) {\n        return l.get(l.len() / 2);\n    } else {\n        return (l.get(l.len() / 2) + l.get(l.len() / 2 - 1)) / 2.0;\n    }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmplupb3_xs.rs:9:8\n  |\n9 |     if (l.len() % 2 == 1) {\n  |        ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -     if (l.len() % 2 == 1) {\n9 +     if l.len() % 2 == 1 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmplupb3_xs.rs:7:11\n    |\n7   |       l = l.map(|x| x.abs());\n    |             ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmplupb3_xs.rs:10:16\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n10 |         return l.get(l.len() / 2);\n   |                ^^^^^^^^^^^^^^^^^^ expected `f64`, found enum `Option`\n   |\n   = note: expected type `f64`\n              found enum `Option<&isize>`\n\nerror[E0369]: cannot add `Option<&isize>` to `Option<&isize>`\n  --> /tmp/tmplupb3_xs.rs:12:36\n   |\n12 |         return (l.get(l.len() / 2) + l.get(l.len() / 2 - 1)) / 2.0;\n   |                 ------------------ ^ ---------------------- Option<&isize>\n   |                 |\n   |                 Option<&isize>\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0308, E0369, E0599.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n    let n = l.len();\n    if n == 0 {\n        return 0.0;\n    }\n    let m = n / 2;\n    let lo = 0;\n    let hi = n - 1;\n    while (lo < hi) {\n        let mid = (lo + hi) / 2;\n        if (l[mid] < l[hi]) {\n            lo = mid + 1;\n        } else {\n            hi = mid;\n        }\n    }\n    return (l[lo] + l[hi]) / 2.0;\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `while` condition\n  --> /tmp/tmp__nhmg4h.rs:14:11\n   |\n14 |     while (lo < hi) {\n   |           ^       ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n14 -     while (lo < hi) {\n14 +     while lo < hi {\n   | \n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmp__nhmg4h.rs:16:12\n   |\n16 |         if (l[mid] < l[hi]) {\n   |            ^              ^\n   |\nhelp: remove these parentheses\n   |\n16 -         if (l[mid] < l[hi]) {\n16 +         if l[mid] < l[hi] {\n   | \n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp__nhmg4h.rs:22:28\n   |\n22 |     return (l[lo] + l[hi]) / 2.0;\n   |                            ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to previous error; 2 warnings emitted\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort();\n  if l.len() == 0 {\n    return 0.0;\n  }\n  if l.len() == 1 {\n    return l[0];\n  }\n  if l.len() == 2 {\n    return (l[0] + l[1]) / 2.0;\n  }\n  return l[l.len() / 2];\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n  --> /tmp/tmpvro4fkoa.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[0];\n   |            ^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpvro4fkoa.rs:15:26\n   |\n15 |     return (l[0] + l[1]) / 2.0;\n   |                          ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  if (l.len() % 2 == 1) {\n    return l.get(l.len() / 2);\n  } else {\n    return (l.get(l.len() / 2) + l.get(l.len() / 2 - 1)) / 2.0;\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp_yxig6l2.rs:9:6\n  |\n9 |   if (l.len() % 2 == 1) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 1) {\n9 +   if l.len() % 2 == 1 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp_yxig6l2.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp_yxig6l2.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| -x);\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp_yxig6l2.rs:10:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n10 |     return l.get(l.len() / 2);\n   |            ^^^^^^^^^^^^^^^^^^ expected `f64`, found enum `Option`\n   |\n   = note: expected type `f64`\n              found enum `Option<&isize>`\n\nerror[E0369]: cannot add `Option<&isize>` to `Option<&isize>`\n  --> /tmp/tmp_yxig6l2.rs:12:32\n   |\n12 |     return (l.get(l.len() / 2) + l.get(l.len() / 2 - 1)) / 2.0;\n   |             ------------------ ^ ---------------------- Option<&isize>\n   |             |\n   |             Option<&isize>\n\nerror: aborting due to 4 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0308, E0369, E0599.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|v| v.to_f64());\n  l = l.sort();\n  return l[l.len()/2];\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpia68d2d3.rs:7:9\n    |\n7   |     l = l.map(|v| v.to_f64());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpia68d2d3.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|v| v.to_f64());\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpia68d2d3.rs:9:10\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |                             --- expected `f64` because of return type\n...\n9 |   return l[l.len()/2];\n  |          ^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0599.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  if (l.len() % 2 == 1) {\n    return l.get(l.len() / 2);\n  } else {\n    return (l.get(l.len() / 2) + l.get(l.len() / 2 - 1)) / 2.0;\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp_yxig6l2.rs:9:6\n  |\n9 |   if (l.len() % 2 == 1) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 1) {\n9 +   if l.len() % 2 == 1 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp_yxig6l2.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp_yxig6l2.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| -x);\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp_yxig6l2.rs:10:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n10 |     return l.get(l.len() / 2);\n   |            ^^^^^^^^^^^^^^^^^^ expected `f64`, found enum `Option`\n   |\n   = note: expected type `f64`\n              found enum `Option<&isize>`\n\nerror[E0369]: cannot add `Option<&isize>` to `Option<&isize>`\n  --> /tmp/tmp_yxig6l2.rs:12:32\n   |\n12 |     return (l.get(l.len() / 2) + l.get(l.len() / 2 - 1)) / 2.0;\n   |             ------------------ ^ ---------------------- Option<&isize>\n   |             |\n   |             Option<&isize>\n\nerror: aborting due to 4 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0308, E0369, E0599.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    return 0.0\n  }\n\n  l = l.map(|x| -x)\n  l = l.sort()\n  l = l.map(|x| x + x)\n  l = l.take(len(l) / 2)\n  return l[0]\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found `l`\n  --> /tmp/tmpcswq6hjf.rs:11:20\n   |\n11 |   l = l.map(|x| -x)\n   |                    ^ help: add `;` here\n12 |   l = l.sort()\n   |   - unexpected token\n\nerror: expected `;`, found `l`\n  --> /tmp/tmpcswq6hjf.rs:12:15\n   |\n12 |   l = l.sort()\n   |               ^ help: add `;` here\n13 |   l = l.map(|x| x + x)\n   |   - unexpected token\n\nerror: expected `;`, found `l`\n  --> /tmp/tmpcswq6hjf.rs:13:23\n   |\n13 |   l = l.map(|x| x + x)\n   |                       ^ help: add `;` here\n14 |   l = l.take(len(l) / 2)\n   |   - unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmpcswq6hjf.rs:14:25\n   |\n14 |   l = l.take(len(l) / 2)\n   |                         ^ help: add `;` here\n15 |   return l[0]\n   |   ------ unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpcswq6hjf.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpcswq6hjf.rs:14:14\n   |\n14 |   l = l.take(len(l) / 2)\n   |              ^^^ not found in this scope\n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpcswq6hjf.rs:11:9\n    |\n11  |     l = l.map(|x| -x)\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpcswq6hjf.rs:12:7\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |              ---------- expected due to this parameter type\n...\n12 |   l = l.sort()\n   |       ^^^^^^^^ expected struct `Vec`, found `()`\n   |\n   = note: expected struct `Vec<isize>`\n           found unit type `()`\n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpcswq6hjf.rs:13:9\n    |\n13  |     l = l.map(|x| x + x)\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    return 0.0\n  }\n  if len(l) == 1 {\n    return l[0]\n  }\n  if len(l) == 2 {\n    return (l[0] + l[1]) / 2.0\n  }\n  return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `len` in this scope\n --> /tmp/tmp78fzjx47.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp78fzjx47.rs:10:6\n   |\n10 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp78fzjx47.rs:13:6\n   |\n13 |   if len(l) == 2 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp78fzjx47.rs:16:13\n   |\n16 |   return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |             ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp78fzjx47.rs:16:29\n   |\n16 |   return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |                             ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp78fzjx47.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp78fzjx47.rs:14:26\n   |\n14 |     return (l[0] + l[1]) / 2.0\n   |                          ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0277, E0308, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp7kr89tld.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp7kr89tld.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp7kr89tld.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| -x);\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp7kr89tld.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp7kr89tld.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 4 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median called on empty vector\")\n  }\n  if len(l) == 1 {\n    return l[0]\n  }\n  l.sort()\n  return l[len(l)/2]\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `return`\n  --> /tmp/tmpa9pe4n0p.rs:13:11\n   |\n13 |   l.sort()\n   |           ^ help: add `;` here\n14 |   return l[len(l)/2]\n   |   ------ unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpa9pe4n0p.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpa9pe4n0p.rs:8:5\n  |\n8 |     panic(\"median called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median called on empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpa9pe4n0p.rs:10:6\n   |\n10 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpa9pe4n0p.rs:14:12\n   |\n14 |   return l[len(l)/2]\n   |            ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpa9pe4n0p.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0425.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort_by(|x: f64, y: f64| {\n    if x < y {\n      return -1\n    } else if x > y {\n      return 1\n    } else {\n      return 0\n    }\n  })\n  if len(l) % 2 == 1 {\n    return l[len(l) / 2]\n  } else {\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmppapm7wkt.rs:15:5\n   |\n15 |   })\n   |     ^ help: add `;` here\n16 |   if len(l) % 2 == 1 {\n   |   -- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmppapm7wkt.rs:16:6\n   |\n16 |   if len(l) % 2 == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmppapm7wkt.rs:17:14\n   |\n17 |     return l[len(l) / 2]\n   |              ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmppapm7wkt.rs:19:15\n   |\n19 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2\n   |               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmppapm7wkt.rs:19:31\n   |\n19 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2\n   |                               ^^^ not found in this scope\n\nerror[E0631]: type mismatch in closure arguments\n   --> /tmp/tmppapm7wkt.rs:7:5\n    |\n7   |   l.sort_by(|x: f64, y: f64| {\n    |     ^^^^^^^ ---------------- found signature of `fn(f64, f64) -> _`\n    |     |\n    |     expected signature of `for<'r, 's> fn(&'r isize, &'s isize) -> _`\n    |\nnote: required by a bound in `slice::<impl [T]>::sort_by`\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0425, E0631.\nFor more information about an error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort_by(|x: f64, y: f64| {\n    if x < y {\n      return -1\n    } else if x > y {\n      return 1\n    } else {\n      return 0\n    }\n  });\n\n  if l.len() % 2 == 0 {\n    return (l.get(l.len() / 2 - 1) + l.get(l.len() / 2)) / 2.0\n  } else {\n    return l.get(l.len() / 2)\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0631]: type mismatch in closure arguments\n   --> /tmp/tmpszjhp7jh.rs:7:5\n    |\n7   |   l.sort_by(|x: f64, y: f64| {\n    |     ^^^^^^^ ---------------- found signature of `fn(f64, f64) -> _`\n    |     |\n    |     expected signature of `for<'r, 's> fn(&'r isize, &'s isize) -> _`\n    |\nnote: required by a bound in `slice::<impl [T]>::sort_by`\n\nerror[E0369]: cannot add `Option<&isize>` to `Option<&isize>`\n  --> /tmp/tmpszjhp7jh.rs:18:36\n   |\n18 |     return (l.get(l.len() / 2 - 1) + l.get(l.len() / 2)) / 2.0\n   |             ---------------------- ^ ------------------ Option<&isize>\n   |             |\n   |             Option<&isize>\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0369, E0631.\nFor more information about an error, try `rustc --explain E0369`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n    let l2 = l.map(|x| x.as_f64());\n    let l3 = l2.sort();\n    let l4 = l3.take(l3.length() / 2);\n    return l4.head();\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpdfgub8e5.rs:7:16\n    |\n7   |       let l2 = l.map(|x| x.as_f64());\n    |                  ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0599`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  l = l.take(l.length() / 2);\n  return l.head();\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpwnaiul8h.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpwnaiul8h.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| -x);\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpwnaiul8h.rs:9:9\n    |\n9   |     l = l.take(l.length() / 2);\n    |           ^^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0599]: no method named `length` found for struct `Vec<isize>` in the current scope\n --> /tmp/tmpwnaiul8h.rs:9:16\n  |\n9 |   l = l.take(l.length() / 2);\n  |                ^^^^^^ help: there is an associated function with a similar name: `len`\n\nerror[E0599]: no method named `head` found for struct `Vec<isize>` in the current scope\n  --> /tmp/tmpwnaiul8h.rs:10:12\n   |\n10 |   return l.head();\n   |            ^^^^ method not found in `Vec<isize>`\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0308, E0599.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|v| v.to_f64());\n  l.sort();\n  if (l.len() % 2 == 1) {\n    return l.get(l.len() / 2).to_f64();\n  } else {\n    return (l.get(l.len() / 2 - 1) + l.get(l.len() / 2)) / 2.0;\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmpumc3xf0s.rs:9:6\n  |\n9 |   if (l.len() % 2 == 1) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 1) {\n9 +   if l.len() % 2 == 1 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpumc3xf0s.rs:7:9\n    |\n7   |     l = l.map(|v| v.to_f64());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0599]: no method named `to_f64` found for enum `Option` in the current scope\n  --> /tmp/tmpumc3xf0s.rs:10:31\n   |\n10 |     return l.get(l.len() / 2).to_f64();\n   |                               ^^^^^^ method not found in `Option<&isize>`\n\nerror[E0369]: cannot add `Option<&isize>` to `Option<&isize>`\n  --> /tmp/tmpumc3xf0s.rs:12:36\n   |\n12 |     return (l.get(l.len() / 2 - 1) + l.get(l.len() / 2)) / 2.0;\n   |             ---------------------- ^ ------------------ Option<&isize>\n   |             |\n   |             Option<&isize>\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0369, E0599.\nFor more information about an error, try `rustc --explain E0369`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|v| v.to_f64());\n  l = l.sort();\n  if (l.len() % 2 == 1) {\n    return l[l.len() / 2];\n  } else {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp3mxkdzip.rs:9:6\n  |\n9 |   if (l.len() % 2 == 1) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 1) {\n9 +   if l.len() % 2 == 1 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp3mxkdzip.rs:7:9\n    |\n7   |     l = l.map(|v| v.to_f64());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp3mxkdzip.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|v| v.to_f64());\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp3mxkdzip.rs:10:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n10 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp3mxkdzip.rs:12:50\n   |\n12 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: ab",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|v| v.to_f64());\n  l.sort();\n  return l[l.len()/2];\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpo_nouw6e.rs:7:9\n    |\n7   |     l = l.map(|v| v.to_f64());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpo_nouw6e.rs:9:10\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |                             --- expected `f64` because of return type\n...\n9 |   return l[l.len()/2];\n  |          ^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0308, E0599.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort_by(|x: f64, y: f64| -> x < y);\n  if l.len() % 2 == 0 {\n    return (l.get(l.len() / 2) + l.get(l.len() / 2 - 1)) / 2.0;\n  } else {\n    return l.get(l.len() / 2);\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected one of `!`, `(`, `+`, `,`, `::`, `:`, `<`, `=`, or `>`, found `)`\n --> /tmp/tmp5jl_nthx.rs:7:38\n  |\n7 |   l.sort_by(|x: f64, y: f64| -> x < y);\n  |                                      ^ expected one of 9 possible tokens\n  |\nhelp: you might have meant to end the type parameters here\n  |\n7 |   l.sort_by(|x: f64, y: f64| -> x < y>);\n  |                                      +\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if l.len == 0 {\n    panic(\"median called on empty vector\")\n  }\n\n  l.sort_by(|x, y| x - y)\n  if l.len % 2 == 0 {\n    return (l.at(l.len / 2) + l.at(l.len / 2 - 1)) / 2.0\n  } else {\n    return l.at(l.len / 2)\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmp0oo5_ro7.rs:11:26\n   |\n11 |   l.sort_by(|x, y| x - y)\n   |                          ^ help: add `;` here\n12 |   if l.len % 2 == 0 {\n   |   -- unexpected token\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmp0oo5_ro7.rs:8:5\n  |\n8 |     panic(\"median called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median called on empty vector\")\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp0oo5_ro7.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp0oo5_ro7.rs:11:20\n   |\n11 |   l.sort_by(|x, y| x - y)\n   |                    ^^^^^ expected enum `std::cmp::Ordering`, found `isize`\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmp0oo5_ro7.rs:12:8\n   |\n12 |   if l.len % 2 == 0 {\n   |        ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n12 |   if l.len() % 2 == 0 {\n   |           ++\n\nerror[E0599]: no method named `at` found for struct `Vec<isize>` in the current scope\n  --> /tmp/tmp0oo5_ro7.rs:13:15\n   |\n13 |     return (l.at(l.len / 2) + l.at(l.len / 2 - 1)) / 2.0\n   |               ^^ help: there is an associated function with a similar name: `last`\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmp0oo5_ro7.rs:13:20\n   |\n13 |     return (l.at(l.len / 2) + l.at(l.len / 2 - 1)) / 2.0\n   |                    ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n13 |     return (l.at(l.len() / 2) + l.at(l.len / 2 - 1)) / 2.0\n   |                       ++\n\nerror[E0599]: no method named `at` found for struct `Vec<isize>` in the current scope\n  --> /tmp/tmp0oo5_ro7.rs:13:33\n   |\n13 |     return (l.at(l.len / 2) + l.at(l.len / 2 - 1)) / 2.0\n   |                                 ^^ help: there is an as",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n    l.sort();\n    if l.len() == 0 {\n        return 0.0;\n    }\n    if l.len() == 1 {\n        return l[0];\n    }\n    if l.len() == 2 {\n        return (l[0] + l[1]) / 2.0;\n    }\n    return l[l.len() / 2];\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n  --> /tmp/tmptfhg69fm.rs:12:16\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |         return l[0];\n   |                ^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmptfhg69fm.rs:15:30\n   |\n15 |         return (l[0] + l[1]) / 2.0;\n   |                              ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort_by(|x: f64, y: f64| {\n    if x < y { return -1 }\n    if x > y { return 1 }\n    return 0\n  })\n  if l.len() % 2 == 0 {\n    return (l.get(l.len() / 2) + l.get(l.len() / 2 - 1)) / 2.0\n  } else {\n    return l.get(l.len() / 2)\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmpmmfygqxe.rs:11:5\n   |\n11 |   })\n   |     ^ help: add `;` here\n12 |   if l.len() % 2 == 0 {\n   |   -- unexpected token\n\nerror[E0631]: type mismatch in closure arguments\n   --> /tmp/tmpmmfygqxe.rs:7:5\n    |\n7   |   l.sort_by(|x: f64, y: f64| {\n    |     ^^^^^^^ ---------------- found signature of `fn(f64, f64) -> _`\n    |     |\n    |     expected signature of `for<'r, 's> fn(&'r isize, &'s isize) -> _`\n    |\nnote: required by a bound in `slice::<impl [T]>::sort_by`\n\nerror[E0369]: cannot add `Option<&isize>` to `Option<&isize>`\n  --> /tmp/tmpmmfygqxe.rs:13:32\n   |\n13 |     return (l.get(l.len() / 2) + l.get(l.len() / 2 - 1)) / 2.0\n   |             ------------------ ^ ---------------------- Option<&isize>\n   |             |\n   |             Option<&isize>\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0369, E0631.\nFor more information about an error, try `rustc --explain E0369`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median called on empty vector\")\n  }\n  if len(l) == 1 {\n    return l[0]\n  }\n  l.sort()\n  return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `return`\n  --> /tmp/tmp5ygl4lep.rs:13:11\n   |\n13 |   l.sort()\n   |           ^ help: add `;` here\n14 |   return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |   ------ unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmp5ygl4lep.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmp5ygl4lep.rs:8:5\n  |\n8 |     panic(\"median called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median called on empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp5ygl4lep.rs:10:6\n   |\n10 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp5ygl4lep.rs:14:13\n   |\n14 |   return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |             ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp5ygl4lep.rs:14:29\n   |\n14 |   return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |                             ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp5ygl4lep.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0425.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median: empty vector\")\n  }\n\n  l = l.map(|x| -x)\n  l = l.sort()\n\n  if len(l) % 2 == 1 {\n    return l[len(l) / 2]\n  } else {\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found `l`\n  --> /tmp/tmp2zh846w2.rs:11:20\n   |\n11 |   l = l.map(|x| -x)\n   |                    ^ help: add `;` here\n12 |   l = l.sort()\n   |   - unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmp2zh846w2.rs:12:15\n   |\n12 |   l = l.sort()\n   |               ^ help: add `;` here\n13 | \n14 |   if len(l) % 2 == 1 {\n   |   -- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmp2zh846w2.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmp2zh846w2.rs:8:5\n  |\n8 |     panic(\"median: empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median: empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp2zh846w2.rs:14:6\n   |\n14 |   if len(l) % 2 == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp2zh846w2.rs:15:14\n   |\n15 |     return l[len(l) / 2]\n   |              ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp2zh846w2.rs:17:15\n   |\n17 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp2zh846w2.rs:17:31\n   |\n17 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |                               ^^^ not found in this scope\n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp2zh846w2.rs:11:9\n    |\n11  |     l = l.map(|x| -x)\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp2zh846w2.rs:12:7\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| x.abs());\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp2pj75b59.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp2pj75b59.rs:7:9\n    |\n7   |     l = l.map(|x| x.abs());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp2pj75b59.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| x.abs());\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp2pj75b59.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp2pj75b59.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmpdbltankp.rs:8:6\n  |\n8 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n8 -   if (l.len() % 2 == 0) {\n8 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0308]: mismatched types\n --> /tmp/tmpdbltankp.rs:7:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n --> /tmp/tmpdbltankp.rs:9:50\n  |\n9 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  |                                                  ^ no implementation for `isize / {float}`\n  |\n  = help: the trait `Div<{float}>` is not implemented for `isize`\n  = help: the following other types implement trait `Div<Rhs>`:\n            <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128 as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n            <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpdbltankp.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n    let mut m = 0.0;\n    let mut cnt = 0;\n    for v in l {\n        if v > m {\n            m = v;\n        } else if v < m {\n            m = v;\n        }\n        cnt += 1;\n    }\n    if cnt % 2 == 0 {\n        return (m + l[(cnt / 2) - 1]) / 2.0;\n    } else {\n        return m;\n    }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n  --> /tmp/tmpn0d_9jvj.rs:10:16\n   |\n10 |         if v > m {\n   |                ^ expected `isize`, found floating-point number\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpn0d_9jvj.rs:11:17\n   |\n7  |     let mut m = 0.0;\n   |                 --- expected due to this value\n...\n11 |             m = v;\n   |                 ^ expected floating-point number, found `isize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpn0d_9jvj.rs:12:23\n   |\n12 |         } else if v < m {\n   |                       ^ expected `isize`, found floating-point number\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpn0d_9jvj.rs:13:17\n   |\n7  |     let mut m = 0.0;\n   |                 --- expected due to this value\n...\n13 |             m = v;\n   |                 ^ expected floating-point number, found `isize`\n\nerror[E0277]: cannot add `isize` to `{float}`\n  --> /tmp/tmpn0d_9jvj.rs:18:19\n   |\n18 |         return (m + l[(cnt / 2) - 1]) / 2.0;\n   |                   ^ no implementation for `{float} + isize`\n   |\n   = help: the trait `Add<isize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Add<Rhs>`:\n             <&'a f32 as Add<f32>>\n             <&'a f64 as Add<f64>>\n             <&'a i128 as Add<i128>>\n             <&'a i16 as Add<i16>>\n             <&'a i32 as Add<i32>>\n             <&'a i64 as Add<i64>>\n             <&'a i8 as Add<i8>>\n             <&'a isize as Add<isize>>\n           and 48 others\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort();\n  if (l.len() % 2) {\n    return l.get(l.len() / 2);\n  } else {\n    return (l.get(l.len() / 2) + l.get(l.len() / 2 - 1)) / 2.0;\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmpm5c5wisy.rs:8:6\n  |\n8 |   if (l.len() % 2) {\n  |      ^           ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n8 -   if (l.len() % 2) {\n8 +   if l.len() % 2 {\n  | \n\nerror[E0308]: mismatched types\n --> /tmp/tmpm5c5wisy.rs:8:6\n  |\n8 |   if (l.len() % 2) {\n  |      ^^^^^^^^^^^^^ expected `bool`, found `usize`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpm5c5wisy.rs:9:12\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |                             --- expected `f64` because of return type\n...\n9 |     return l.get(l.len() / 2);\n  |            ^^^^^^^^^^^^^^^^^^ expected `f64`, found enum `Option`\n  |\n  = note: expected type `f64`\n             found enum `Option<&isize>`\n\nerror[E0369]: cannot add `Option<&isize>` to `Option<&isize>`\n  --> /tmp/tmpm5c5wisy.rs:11:32\n   |\n11 |     return (l.get(l.len() / 2) + l.get(l.len() / 2 - 1)) / 2.0;\n   |             ------------------ ^ ---------------------- Option<&isize>\n   |             |\n   |             Option<&isize>\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0308, E0369.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| x.abs());\n  l = l.sort();\n  let n = l.len();\n  if (n == 0) {\n    return 0.0;\n  }\n  if (n % 2 == 1) {\n    return l[n/2];\n  }\n  return (l[n/2] + l[n/2 - 1]) / 2.0;\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpv_5y2b71.rs:10:6\n   |\n10 |   if (n == 0) {\n   |      ^      ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n10 -   if (n == 0) {\n10 +   if n == 0 {\n   | \n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpv_5y2b71.rs:13:6\n   |\n13 |   if (n % 2 == 1) {\n   |      ^          ^\n   |\nhelp: remove these parentheses\n   |\n13 -   if (n % 2 == 1) {\n13 +   if n % 2 == 1 {\n   | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpv_5y2b71.rs:7:9\n    |\n7   |     l = l.map(|x| x.abs());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpv_5y2b71.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| x.abs());\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpv_5y2b71.rs:14:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n14 |     return l[n/2];\n   |            ^^^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpv_5y2b71.rs:16:32\n   |\n16 |   return (l[n/2] + l[n/2 - 1]) / 2.0;\n   |                                ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median: vector is empty\")\n  }\n\n  // Find the middle element.\n  let middle = len(l) / 2\n\n  // If the length is odd, return the middle element.\n  if len(l) % 2 == 1 {\n    return l[middle]\n  }\n\n  // If the length is even, return the average of the two middle elements.\n  return (l[middle] + l[middle - 1]) / 2.0\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmp4r5p_e34.rs:12:26\n   |\n12 |   let middle = len(l) / 2\n   |                          ^ help: add `;` here\n...\n15 |   if len(l) % 2 == 1 {\n   |   -- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmp4r5p_e34.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmp4r5p_e34.rs:8:5\n  |\n8 |     panic(\"median: vector is empty\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median: vector is empty\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp4r5p_e34.rs:12:16\n   |\n12 |   let middle = len(l) / 2\n   |                ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp4r5p_e34.rs:15:6\n   |\n15 |   if len(l) % 2 == 1 {\n   |      ^^^ not found in this scope\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0423, E0425.\nFor more information about an error, try `rustc --explain E0423`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp7kr89tld.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp7kr89tld.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp7kr89tld.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| -x);\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp7kr89tld.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp7kr89tld.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 4 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort()\n  if l.len() == 0 {\n    return 0.0\n  } else if l.len() == 1 {\n    return l[0]\n  } else if l.len() % 2 == 0 {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0\n  } else {\n    return l[l.len() / 2]\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n --> /tmp/tmp9dl8tuee.rs:7:11\n  |\n7 |   l.sort()\n  |           ^ help: add `;` here\n8 |   if l.len() == 0 {\n  |   -- unexpected token\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp9dl8tuee.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp9dl8tuee.rs:13:50\n   |\n13 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp7kr89tld.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp7kr89tld.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp7kr89tld.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| -x);\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp7kr89tld.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp7kr89tld.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 4 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median called on empty vector\")\n  }\n  if len(l) == 1 {\n    return l[0]\n  }\n  l.sort()\n  return l[len(l) / 2]\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `return`\n  --> /tmp/tmpza75kbb0.rs:13:11\n   |\n13 |   l.sort()\n   |           ^ help: add `;` here\n14 |   return l[len(l) / 2]\n   |   ------ unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpza75kbb0.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpza75kbb0.rs:8:5\n  |\n8 |     panic(\"median called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median called on empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpza75kbb0.rs:10:6\n   |\n10 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpza75kbb0.rs:14:12\n   |\n14 |   return l[len(l) / 2]\n   |            ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpza75kbb0.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0425.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|v| v.to_f64());\n  l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp50q_qfxt.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp50q_qfxt.rs:7:9\n    |\n7   |     l = l.map(|v| v.to_f64());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp50q_qfxt.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp50q_qfxt.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0277, E0308, E0599.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort();\n  if l.len() == 0 {\n    return 0.0;\n  } else if l.len() == 1 {\n    return l[0];\n  } else if l.len() == 2 {\n    return (l[0] + l[1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n  --> /tmp/tmpd6delcl0.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0];\n   |            ^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpd6delcl0.rs:13:26\n   |\n13 |     return (l[0] + l[1]) / 2.0;\n   |                          ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort();\n  if l.len() % 2 == 0 {\n    return (l[(l.len() / 2) - 1] + l[(l.len() / 2)]) / 2.0;\n  } else {\n    return l[(l.len() / 2)];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0277]: cannot divide `isize` by `{float}`\n --> /tmp/tmpqycqcu95.rs:9:54\n  |\n9 |     return (l[(l.len() / 2) - 1] + l[(l.len() / 2)]) / 2.0;\n  |                                                      ^ no implementation for `isize / {float}`\n  |\n  = help: the trait `Div<{float}>` is not implemented for `isize`\n  = help: the following other types implement trait `Div<Rhs>`:\n            <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128 as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n            <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpqycqcu95.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[(l.len() / 2)];\n   |            ^^^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median: empty vector\")\n  }\n\n  if len(l) == 1 {\n    return l[0]\n  }\n\n  l.sort()\n  return l[len(l) / 2]\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `return`\n  --> /tmp/tmpevovd37i.rs:15:11\n   |\n15 |   l.sort()\n   |           ^ help: add `;` here\n16 |   return l[len(l) / 2]\n   |   ------ unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpevovd37i.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpevovd37i.rs:8:5\n  |\n8 |     panic(\"median: empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median: empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpevovd37i.rs:11:6\n   |\n11 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpevovd37i.rs:16:12\n   |\n16 |   return l[len(l) / 2]\n   |            ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpevovd37i.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0425.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n    l.sort();\n    if (l.len() % 2 == 0) {\n        return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n    } else {\n        return l[l.len() / 2];\n    }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp232uftv0.rs:8:8\n  |\n8 |     if (l.len() % 2 == 0) {\n  |        ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n8 -     if (l.len() % 2 == 0) {\n8 +     if l.len() % 2 == 0 {\n  | \n\nerror[E0277]: cannot divide `isize` by `{float}`\n --> /tmp/tmp232uftv0.rs:9:54\n  |\n9 |         return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  |                                                      ^ no implementation for `isize / {float}`\n  |\n  = help: the trait `Div<{float}>` is not implemented for `isize`\n  = help: the following other types implement trait `Div<Rhs>`:\n            <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128 as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n            <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp232uftv0.rs:11:16\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |         return l[l.len() / 2];\n   |                ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 2 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp7kr89tld.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp7kr89tld.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp7kr89tld.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| -x);\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp7kr89tld.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp7kr89tld.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 4 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n    let l2 = l.map(|x| x.abs());\n    let l3 = l2.sort();\n    let l4 = l3.take(l3.length / 2);\n    return l4.head();\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpe71hutsa.rs:7:16\n    |\n7   |       let l2 = l.map(|x| x.abs());\n    |                  ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0599`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  if (l.len() % 2 == 1) {\n    return l.get(l.len() / 2);\n  } else {\n    return (l.get(l.len() / 2) + l.get(l.len() / 2 - 1)) / 2.0;\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp_yxig6l2.rs:9:6\n  |\n9 |   if (l.len() % 2 == 1) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 1) {\n9 +   if l.len() % 2 == 1 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp_yxig6l2.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp_yxig6l2.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| -x);\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp_yxig6l2.rs:10:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n10 |     return l.get(l.len() / 2);\n   |            ^^^^^^^^^^^^^^^^^^ expected `f64`, found enum `Option`\n   |\n   = note: expected type `f64`\n              found enum `Option<&isize>`\n\nerror[E0369]: cannot add `Option<&isize>` to `Option<&isize>`\n  --> /tmp/tmp_yxig6l2.rs:12:32\n   |\n12 |     return (l.get(l.len() / 2) + l.get(l.len() / 2 - 1)) / 2.0;\n   |             ------------------ ^ ---------------------- Option<&isize>\n   |             |\n   |             Option<&isize>\n\nerror: aborting due to 4 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0308, E0369, E0599.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if l.len == 0 {\n    panic(\"median called on empty vector\")\n  }\n  if l.len == 1 {\n    return l.data[0]\n  }\n  l.sort()\n  if l.len % 2 == 0 {\n    return (l.data[l.len / 2] + l.data[l.len / 2 - 1]) / 2.0\n  }\n  return l.data[l.len / 2]\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmpana34p66.rs:13:11\n   |\n13 |   l.sort()\n   |           ^ help: add `;` here\n14 |   if l.len % 2 == 0 {\n   |   -- unexpected token\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpana34p66.rs:8:5\n  |\n8 |     panic(\"median called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median called on empty vector\")\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpana34p66.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpana34p66.rs:10:8\n   |\n10 |   if l.len == 1 {\n   |        ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n10 |   if l.len() == 1 {\n   |           ++\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmpana34p66.rs:11:14\n   |\n11 |     return l.data[0]\n   |              ^^^^ unknown field\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpana34p66.rs:14:8\n   |\n14 |   if l.len % 2 == 0 {\n   |        ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n14 |   if l.len() % 2 == 0 {\n   |           ++\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmpana34p66.rs:15:15\n   |\n15 |     return (l.data[l.len / 2] + l.data[l.len / 2 - 1]) / 2.0\n   |               ^^^^ unknown field\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpana34p66.rs:15:22\n   |\n15 |     return (l.data[l.len / 2] + l.data[l.len / 2 - 1]) / 2.0\n   |                      ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n15 |     return (l.data[l.len() / 2] + l.data[l.len / 2 - 1]) / 2.0\n   |                         ++\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmpana34p66.rs:15:35\n   |\n15 |     return (l.data[l.len",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n    l = l.map(|x| x as f64);\n    l.sort();\n    return l[(l.len() - 1) / 2];\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp7ufl4kd_.rs:7:11\n    |\n7   |       l = l.map(|x| x as f64);\n    |             ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp7ufl4kd_.rs:9:12\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |                             --- expected `f64` because of return type\n...\n9 |     return l[(l.len() - 1) / 2];\n  |            ^^^^^^^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0308, E0599.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort();\n  if l.len() == 0 {\n    return 0.0;\n  } else if l.len() == 1 {\n    return l[0];\n  } else if l.len() == 2 {\n    return (l[0] + l[1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n  --> /tmp/tmpd6delcl0.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0];\n   |            ^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpd6delcl0.rs:13:26\n   |\n13 |     return (l[0] + l[1]) / 2.0;\n   |                          ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  l = l.take(l.length() / 2);\n  return l.head();\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpwnaiul8h.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpwnaiul8h.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| -x);\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpwnaiul8h.rs:9:9\n    |\n9   |     l = l.take(l.length() / 2);\n    |           ^^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0599]: no method named `length` found for struct `Vec<isize>` in the current scope\n --> /tmp/tmpwnaiul8h.rs:9:16\n  |\n9 |   l = l.take(l.length() / 2);\n  |                ^^^^^^ help: there is an associated function with a similar name: `len`\n\nerror[E0599]: no method named `head` found for struct `Vec<isize>` in the current scope\n  --> /tmp/tmpwnaiul8h.rs:10:12\n   |\n10 |   return l.head();\n   |            ^^^^ method not found in `Vec<isize>`\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0308, E0599.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort();\n  if l.len() % 2 == 0 {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0277]: cannot divide `isize` by `{float}`\n --> /tmp/tmpxgceopys.rs:9:50\n  |\n9 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  |                                                  ^ no implementation for `isize / {float}`\n  |\n  = help: the trait `Div<{float}>` is not implemented for `isize`\n  = help: the following other types implement trait `Div<Rhs>`:\n            <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128 as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n            <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpxgceopys.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| x.abs());\n  l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmpjsui3chr.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpjsui3chr.rs:7:9\n    |\n7   |     l = l.map(|x| x.abs());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpjsui3chr.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpjsui3chr.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0277, E0308, E0599.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort()\n  if l.len() == 0 {\n    return 0.0\n  }\n  if l.len() == 1 {\n    return l[0]\n  }\n  if l.len() == 2 {\n    return (l[0] + l[1]) / 2.0\n  }\n  return l[l.len() / 2]\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n --> /tmp/tmpgin19o1e.rs:7:11\n  |\n7 |   l.sort()\n  |           ^ help: add `;` here\n8 |   if l.len() == 0 {\n  |   -- unexpected token\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpgin19o1e.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpgin19o1e.rs:15:26\n   |\n15 |     return (l[0] + l[1]) / 2.0\n   |                          ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median called on empty vector\")\n  }\n  if len(l) == 1 {\n    return l[0]\n  }\n  l.sort()\n  return l[len(l) / 2]\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `return`\n  --> /tmp/tmpza75kbb0.rs:13:11\n   |\n13 |   l.sort()\n   |           ^ help: add `;` here\n14 |   return l[len(l) / 2]\n   |   ------ unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpza75kbb0.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpza75kbb0.rs:8:5\n  |\n8 |     panic(\"median called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median called on empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpza75kbb0.rs:10:6\n   |\n10 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpza75kbb0.rs:14:12\n   |\n14 |   return l[len(l) / 2]\n   |            ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpza75kbb0.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0425.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| x.abs());\n  l = l.sort();\n  return l[l.length/2];\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpaxk0eule.rs:7:9\n    |\n7   |     l = l.map(|x| x.abs());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpaxk0eule.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| x.abs());\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0609]: no field `length` on type `Vec<isize>`\n --> /tmp/tmpaxk0eule.rs:9:14\n  |\n9 |   return l[l.length/2];\n  |              ^^^^^^ unknown field\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0599, E0609.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort_by(|x: f64, y: f64| -> x < y);\n  if l.len() % 2 == 1 {\n    return l.get(l.len() / 2);\n  } else {\n    return (l.get(l.len() / 2) + l.get(l.len() / 2 - 1)) / 2.0;\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected one of `!`, `(`, `+`, `,`, `::`, `:`, `<`, `=`, or `>`, found `)`\n --> /tmp/tmpkocwgwdw.rs:7:38\n  |\n7 |   l.sort_by(|x: f64, y: f64| -> x < y);\n  |                                      ^ expected one of 9 possible tokens\n  |\nhelp: you might have meant to end the type parameters here\n  |\n7 |   l.sort_by(|x: f64, y: f64| -> x < y>);\n  |                                      +\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  let n = l.length();\n  if (n == 0) {\n    return 0.0;\n  } else if (n % 2 == 1) {\n    return l[n / 2];\n  } else {\n    let a = l[n / 2 - 1];\n    let b = l[n / 2];\n    return (a + b) / 2.0;\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpmpw8qk99.rs:10:6\n   |\n10 |   if (n == 0) {\n   |      ^      ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n10 -   if (n == 0) {\n10 +   if n == 0 {\n   | \n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpmpw8qk99.rs:12:13\n   |\n12 |   } else if (n % 2 == 1) {\n   |             ^          ^\n   |\nhelp: remove these parentheses\n   |\n12 -   } else if (n % 2 == 1) {\n12 +   } else if n % 2 == 1 {\n   | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpmpw8qk99.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpmpw8qk99.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| -x);\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0599]: no method named `length` found for struct `Vec<isize>` in the current scope\n --> /tmp/tmpmpw8qk99.rs:9:13\n  |\n9 |   let n = l.length();\n  |             ^^^^^^ help: there is an associated function with a similar name: `len`\n\nerror: aborting due to 3 previous errors; 2 warnings emitted\n\nSome errors have detailed explanations: E0308, E0599.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| x.abs());\n  l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmpjsui3chr.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpjsui3chr.rs:7:9\n    |\n7   |     l = l.map(|x| x.abs());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpjsui3chr.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpjsui3chr.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0277, E0308, E0599.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort();\n  if l.len() == 0 {\n    return 0.0;\n  }\n  if l.len() == 1 {\n    return l[0];\n  }\n  if l.len() == 2 {\n    return (l[0] + l[1]) / 2.0;\n  }\n  return l[l.len() / 2];\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n  --> /tmp/tmpvro4fkoa.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[0];\n   |            ^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpvro4fkoa.rs:15:26\n   |\n15 |     return (l[0] + l[1]) / 2.0;\n   |                          ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median called on empty vector\")\n  }\n  if len(l) == 1 {\n    return l[0]\n  }\n  l.sort()\n  if len(l) % 2 == 0 {\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n  }\n  return l[len(l) / 2]\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmpo3tfme6k.rs:13:11\n   |\n13 |   l.sort()\n   |           ^ help: add `;` here\n14 |   if len(l) % 2 == 0 {\n   |   -- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpo3tfme6k.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpo3tfme6k.rs:8:5\n  |\n8 |     panic(\"median called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median called on empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpo3tfme6k.rs:10:6\n   |\n10 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpo3tfme6k.rs:14:6\n   |\n14 |   if len(l) % 2 == 0 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpo3tfme6k.rs:15:15\n   |\n15 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpo3tfme6k.rs:15:31\n   |\n15 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |                               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpo3tfme6k.rs:17:12\n   |\n17 |   return l[len(l) / 2]\n   |            ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpo3tfme6k.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 9 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0425.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| x.abs());\n  l.sort();\n  return l[l.len()/2];\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpry5teiqd.rs:7:9\n    |\n7   |     l = l.map(|x| x.abs());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpry5teiqd.rs:9:10\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |                             --- expected `f64` because of return type\n...\n9 |   return l[l.len()/2];\n  |          ^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0308, E0599.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort();\n  if (l.len() % 2) {\n    return l[l.len() / 2];\n  } else {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp6vwc2ejk.rs:8:6\n  |\n8 |   if (l.len() % 2) {\n  |      ^           ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n8 -   if (l.len() % 2) {\n8 +   if l.len() % 2 {\n  | \n\nerror[E0308]: mismatched types\n --> /tmp/tmp6vwc2ejk.rs:8:6\n  |\n8 |   if (l.len() % 2) {\n  |      ^^^^^^^^^^^^^ expected `bool`, found `usize`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp6vwc2ejk.rs:9:12\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |                             --- expected `f64` because of return type\n...\n9 |     return l[l.len() / 2];\n  |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp6vwc2ejk.rs:11:50\n   |\n11 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.sort();\n  if (l.len() == 0) {\n    return 0.0;\n  } else if (l.len() == 1) {\n    return l[0];\n  } else if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmptra_1s3j.rs:8:6\n  |\n8 |   if (l.len() == 0) {\n  |      ^            ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n8 -   if (l.len() == 0) {\n8 +   if l.len() == 0 {\n  | \n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmptra_1s3j.rs:10:13\n   |\n10 |   } else if (l.len() == 1) {\n   |             ^            ^\n   |\nhelp: remove these parentheses\n   |\n10 -   } else if (l.len() == 1) {\n10 +   } else if l.len() == 1 {\n   | \n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmptra_1s3j.rs:12:13\n   |\n12 |   } else if (l.len() % 2 == 0) {\n   |             ^                ^\n   |\nhelp: remove these parentheses\n   |\n12 -   } else if (l.len() % 2 == 0) {\n12 +   } else if l.len() % 2 == 0 {\n   | \n\nerror[E0308]: mismatched types\n --> /tmp/tmptra_1s3j.rs:7:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmptra_1s3j.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0];\n   |            ^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmptra_1s3j.rs:13:50\n   |\n13 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n       ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort_by(|x: f64, y: f64| -> x < y);\n  if l.len() % 2 == 0 {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected one of `!`, `(`, `+`, `,`, `::`, `:`, `<`, `=`, or `>`, found `)`\n --> /tmp/tmpbobitm1_.rs:7:38\n  |\n7 |   l.sort_by(|x: f64, y: f64| -> x < y);\n  |                                      ^ expected one of 9 possible tokens\n  |\nhelp: you might have meant to end the type parameters here\n  |\n7 |   l.sort_by(|x: f64, y: f64| -> x < y>);\n  |                                      +\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|v| v.to_f64());\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmpy0_agty0.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpy0_agty0.rs:7:9\n    |\n7   |     l = l.map(|v| v.to_f64());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpy0_agty0.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|v| v.to_f64());\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpy0_agty0.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpy0_agty0.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: ab",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort();\n  if l.len() == 0 {\n    return 0.0;\n  }\n  if l.len() == 1 {\n    return l[0];\n  }\n  if l.len() == 2 {\n    return (l[0] + l[1]) / 2.0;\n  }\n  return l[l.len() / 2];\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n  --> /tmp/tmpvro4fkoa.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[0];\n   |            ^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpvro4fkoa.rs:15:26\n   |\n15 |     return (l[0] + l[1]) / 2.0;\n   |                          ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median: vector is empty\")\n  }\n  if len(l) == 1 {\n    return l[0]\n  }\n  l = l.map(|v| v.to_f64())\n  l.sort()\n  return l[len(l) / 2]\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found `l`\n  --> /tmp/tmp8er66jxn.rs:13:28\n   |\n13 |   l = l.map(|v| v.to_f64())\n   |                            ^ help: add `;` here\n14 |   l.sort()\n   |   - unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmp8er66jxn.rs:14:11\n   |\n14 |   l.sort()\n   |           ^ help: add `;` here\n15 |   return l[len(l) / 2]\n   |   ------ unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmp8er66jxn.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmp8er66jxn.rs:8:5\n  |\n8 |     panic(\"median: vector is empty\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median: vector is empty\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp8er66jxn.rs:10:6\n   |\n10 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp8er66jxn.rs:15:12\n   |\n15 |   return l[len(l) / 2]\n   |            ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp8er66jxn.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp8er66jxn.rs:13:9\n    |\n13  |     l = l.map(|v| v.to_f64())\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror: aborting due to 8 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0425, E0599.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median(): vector is empty\")\n  }\n\n  l.sort()\n  return l[len(l) / 2]\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `return`\n  --> /tmp/tmpu3wwm7an.rs:11:11\n   |\n11 |   l.sort()\n   |           ^ help: add `;` here\n12 |   return l[len(l) / 2]\n   |   ------ unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpu3wwm7an.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpu3wwm7an.rs:8:5\n  |\n8 |     panic(\"median(): vector is empty\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median(): vector is empty\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpu3wwm7an.rs:12:12\n   |\n12 |   return l[len(l) / 2]\n   |            ^^^ not found in this scope\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0423, E0425.\nFor more information about an error, try `rustc --explain E0423`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if l.len == 0 {\n    panic(\"median() called on empty vector\")\n  }\n\n  if l.len == 1 {\n    return l.data[0]\n  }\n\n  l.sort()\n\n  // Find middle element.\n  let middle = l.len / 2\n  if l.len % 2 == 0 {\n    return (l.data[middle - 1] + l.data[middle]) / 2.0\n  } else {\n    return l.data[middle]\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpy96lktws.rs:15:11\n   |\n15 |   l.sort()\n   |           ^ help: add `;` here\n...\n18 |   let middle = l.len / 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpy96lktws.rs:18:25\n   |\n18 |   let middle = l.len / 2\n   |                         ^ help: add `;` here\n19 |   if l.len % 2 == 0 {\n   |   -- unexpected token\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpy96lktws.rs:8:5\n  |\n8 |     panic(\"median() called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median() called on empty vector\")\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpy96lktws.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpy96lktws.rs:11:8\n   |\n11 |   if l.len == 1 {\n   |        ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n11 |   if l.len() == 1 {\n   |           ++\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmpy96lktws.rs:12:14\n   |\n12 |     return l.data[0]\n   |              ^^^^ unknown field\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpy96lktws.rs:18:18\n   |\n18 |   let middle = l.len / 2\n   |                  ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n18 |   let middle = l.len() / 2\n   |                     ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpy96lktws.rs:19:8\n   |\n19 |   if l.len % 2 == 0 {\n   |        ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n19 |   if l.len() % 2 == 0 {\n   |           ++\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmpy96lktws.rs:20:15\n   |\n20 |     return (l.data[middle - 1] + l.data[middle]) / 2.0\n   |             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median() called on empty vector\")\n  }\n  if len(l) == 1 {\n    return l[0]\n  }\n  l.sort()\n  if len(l) % 2 == 0 {\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n  }\n  return l[len(l) / 2]\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmp7ffmj6pa.rs:13:11\n   |\n13 |   l.sort()\n   |           ^ help: add `;` here\n14 |   if len(l) % 2 == 0 {\n   |   -- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmp7ffmj6pa.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmp7ffmj6pa.rs:8:5\n  |\n8 |     panic(\"median() called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median() called on empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp7ffmj6pa.rs:10:6\n   |\n10 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp7ffmj6pa.rs:14:6\n   |\n14 |   if len(l) % 2 == 0 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp7ffmj6pa.rs:15:15\n   |\n15 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp7ffmj6pa.rs:15:31\n   |\n15 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |                               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp7ffmj6pa.rs:17:12\n   |\n17 |   return l[len(l) / 2]\n   |            ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp7ffmj6pa.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 9 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0425.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort_by(|x: f64, y: f64| {\n    if x < y {\n      return -1\n    } else if x > y {\n      return 1\n    } else {\n      return 0\n    }\n  })\n  if len(l) % 2 == 0 {\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n  } else {\n    return l[len(l) / 2]\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmpxptwtpv3.rs:15:5\n   |\n15 |   })\n   |     ^ help: add `;` here\n16 |   if len(l) % 2 == 0 {\n   |   -- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpxptwtpv3.rs:16:6\n   |\n16 |   if len(l) % 2 == 0 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpxptwtpv3.rs:17:15\n   |\n17 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpxptwtpv3.rs:17:31\n   |\n17 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |                               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpxptwtpv3.rs:19:14\n   |\n19 |     return l[len(l) / 2]\n   |              ^^^ not found in this scope\n\nerror[E0631]: type mismatch in closure arguments\n   --> /tmp/tmpxptwtpv3.rs:7:5\n    |\n7   |   l.sort_by(|x: f64, y: f64| {\n    |     ^^^^^^^ ---------------- found signature of `fn(f64, f64) -> _`\n    |     |\n    |     expected signature of `for<'r, 's> fn(&'r isize, &'s isize) -> _`\n    |\nnote: required by a bound in `slice::<impl [T]>::sort_by`\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0425, E0631.\nFor more information about an error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp7kr89tld.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp7kr89tld.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp7kr89tld.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| -x);\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp7kr89tld.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp7kr89tld.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 4 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median called on empty vector\")\n  }\n  if len(l) == 1 {\n    return l[0]\n  }\n  l = l.sort()\n  if len(l) % 2 == 0 {\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n  }\n  return l[len(l) / 2]\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmp7h41sz9f.rs:13:15\n   |\n13 |   l = l.sort()\n   |               ^ help: add `;` here\n14 |   if len(l) % 2 == 0 {\n   |   -- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmp7h41sz9f.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmp7h41sz9f.rs:8:5\n  |\n8 |     panic(\"median called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median called on empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp7h41sz9f.rs:10:6\n   |\n10 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp7h41sz9f.rs:14:6\n   |\n14 |   if len(l) % 2 == 0 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp7h41sz9f.rs:15:15\n   |\n15 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp7h41sz9f.rs:15:31\n   |\n15 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |                               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp7h41sz9f.rs:17:12\n   |\n17 |   return l[len(l) / 2]\n   |            ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp7h41sz9f.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp7h41sz9f.rs:13:7\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |              ---------- expected due to this parameter type\n...\n13 |   l = l.sort()\n   |       ^^^^^^^^ expected struct `Vec`, found `()`\n   |\n   = note: expected struct `Vec<isiz",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  let l2 = l.map(|x| x.as_f64());\n  let l3 = l2.sort();\n  let l4 = l3.take(l3.length / 2);\n  return l4.head();\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpzcvo3ik8.rs:7:14\n    |\n7   |     let l2 = l.map(|x| x.as_f64());\n    |                ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0599`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp_qg0chnt.rs:8:6\n  |\n8 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n8 -   if (l.len() % 2 == 0) {\n8 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0277]: cannot divide `isize` by `{float}`\n --> /tmp/tmp_qg0chnt.rs:9:50\n  |\n9 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  |                                                  ^ no implementation for `isize / {float}`\n  |\n  = help: the trait `Div<{float}>` is not implemented for `isize`\n  = help: the following other types implement trait `Div<Rhs>`:\n            <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128 as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n            <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp_qg0chnt.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 2 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort_by(|x: f64, y: f64| -> x < y);\n  if l.len() % 2 == 0 {\n    return (l.get(l.len() / 2) + l.get(l.len() / 2 - 1)) / 2.0;\n  } else {\n    return l.get(l.len() / 2);\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected one of `!`, `(`, `+`, `,`, `::`, `:`, `<`, `=`, or `>`, found `)`\n --> /tmp/tmp5jl_nthx.rs:7:38\n  |\n7 |   l.sort_by(|x: f64, y: f64| -> x < y);\n  |                                      ^ expected one of 9 possible tokens\n  |\nhelp: you might have meant to end the type parameters here\n  |\n7 |   l.sort_by(|x: f64, y: f64| -> x < y>);\n  |                                      +\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|v| v.to_f64());\n  l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp50q_qfxt.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp50q_qfxt.rs:7:9\n    |\n7   |     l = l.map(|v| v.to_f64());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp50q_qfxt.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp50q_qfxt.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0277, E0308, E0599.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort_by(|x: f64, y: f64| -> x < y);\n  if l.len() % 2 == 0 {\n    return (l.get(l.len() / 2 - 1) + l.get(l.len() / 2)) / 2.0;\n  } else {\n    return l.get(l.len() / 2);\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected one of `!`, `(`, `+`, `,`, `::`, `:`, `<`, `=`, or `>`, found `)`\n --> /tmp/tmp8s98zv7f.rs:7:38\n  |\n7 |   l.sort_by(|x: f64, y: f64| -> x < y);\n  |                                      ^ expected one of 9 possible tokens\n  |\nhelp: you might have meant to end the type parameters here\n  |\n7 |   l.sort_by(|x: f64, y: f64| -> x < y>);\n  |                                      +\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.sort();\n  if (l.len() == 0) {\n    return 0.0;\n  }\n  if (l.len() == 1) {\n    return l[0];\n  }\n  if (l.len() == 2) {\n    return (l[0] + l[1]) / 2.0;\n  }\n  return l[l.len() / 2];\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmpjwf15daq.rs:8:6\n  |\n8 |   if (l.len() == 0) {\n  |      ^            ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n8 -   if (l.len() == 0) {\n8 +   if l.len() == 0 {\n  | \n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpjwf15daq.rs:11:6\n   |\n11 |   if (l.len() == 1) {\n   |      ^            ^\n   |\nhelp: remove these parentheses\n   |\n11 -   if (l.len() == 1) {\n11 +   if l.len() == 1 {\n   | \n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpjwf15daq.rs:14:6\n   |\n14 |   if (l.len() == 2) {\n   |      ^            ^\n   |\nhelp: remove these parentheses\n   |\n14 -   if (l.len() == 2) {\n14 +   if l.len() == 2 {\n   | \n\nerror[E0308]: mismatched types\n --> /tmp/tmpjwf15daq.rs:7:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpjwf15daq.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[0];\n   |            ^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpjwf15daq.rs:15:26\n   |\n15 |     return (l[0] + l[1]) / 2.0;\n   |                          ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors; 3 warnings emitted\n\nSo",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median: vector is empty\")\n  }\n\n  if len(l) == 1 {\n    return l[0]\n  }\n\n  l.sort()\n\n  // Find middle element.\n  let middle = len(l) / 2\n  if len(l) % 2 == 0 {\n    return (l[middle] + l[middle - 1]) / 2.0\n  } else {\n    return l[middle]\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpb0fy38so.rs:15:11\n   |\n15 |   l.sort()\n   |           ^ help: add `;` here\n...\n18 |   let middle = len(l) / 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpb0fy38so.rs:18:26\n   |\n18 |   let middle = len(l) / 2\n   |                          ^ help: add `;` here\n19 |   if len(l) % 2 == 0 {\n   |   -- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpb0fy38so.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpb0fy38so.rs:8:5\n  |\n8 |     panic(\"median: vector is empty\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median: vector is empty\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpb0fy38so.rs:11:6\n   |\n11 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpb0fy38so.rs:18:16\n   |\n18 |   let middle = len(l) / 2\n   |                ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpb0fy38so.rs:19:6\n   |\n19 |   if len(l) % 2 == 0 {\n   |      ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpb0fy38so.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 8 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0425.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if l.len == 0 {\n    panic(\"median() called on empty vector\")\n  }\n  if l.len == 1 {\n    return l.data[0]\n  }\n  l.sort()\n  if l.len % 2 == 1 {\n    return l.data[l.len / 2]\n  }\n  return (l.data[l.len / 2] + l.data[l.len / 2 - 1]) / 2.0\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmpmcjbzkhk.rs:13:11\n   |\n13 |   l.sort()\n   |           ^ help: add `;` here\n14 |   if l.len % 2 == 1 {\n   |   -- unexpected token\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpmcjbzkhk.rs:8:5\n  |\n8 |     panic(\"median() called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median() called on empty vector\")\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpmcjbzkhk.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpmcjbzkhk.rs:10:8\n   |\n10 |   if l.len == 1 {\n   |        ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n10 |   if l.len() == 1 {\n   |           ++\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmpmcjbzkhk.rs:11:14\n   |\n11 |     return l.data[0]\n   |              ^^^^ unknown field\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpmcjbzkhk.rs:14:8\n   |\n14 |   if l.len % 2 == 1 {\n   |        ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n14 |   if l.len() % 2 == 1 {\n   |           ++\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmpmcjbzkhk.rs:15:14\n   |\n15 |     return l.data[l.len / 2]\n   |              ^^^^ unknown field\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpmcjbzkhk.rs:15:21\n   |\n15 |     return l.data[l.len / 2]\n   |                     ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n15 |     return l.data[l.len() / 2]\n   |                        ++\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmpmcjbzkhk.rs:17:13\n   |\n17 |   return (l.data[l.len / 2] + l.data[l.len / 2 - 1]) / 2.0\n   |             ^^^^ unknown field\n\nerror[E0616]: field `le",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if l.len == 0 {\n    panic(\"median called on empty vector\")\n  }\n\n  l.sort()\n  if l.len % 2 == 1 {\n    return l.get(l.len / 2)\n  } else {\n    return (l.get(l.len / 2) + l.get(l.len / 2 - 1)) / 2.0\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmpda1rgxl9.rs:11:11\n   |\n11 |   l.sort()\n   |           ^ help: add `;` here\n12 |   if l.len % 2 == 1 {\n   |   -- unexpected token\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpda1rgxl9.rs:8:5\n  |\n8 |     panic(\"median called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median called on empty vector\")\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpda1rgxl9.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpda1rgxl9.rs:12:8\n   |\n12 |   if l.len % 2 == 1 {\n   |        ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n12 |   if l.len() % 2 == 1 {\n   |           ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpda1rgxl9.rs:13:20\n   |\n13 |     return l.get(l.len / 2)\n   |                    ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n13 |     return l.get(l.len() / 2)\n   |                       ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpda1rgxl9.rs:13:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n13 |     return l.get(l.len / 2)\n   |            ^^^^^^^^^^^^^^^^ expected `f64`, found enum `Option`\n   |\n   = note: expected type `f64`\n              found enum `Option<&isize>`\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpda1rgxl9.rs:15:21\n   |\n15 |     return (l.get(l.len / 2) + l.get(l.len / 2 - 1)) / 2.0\n   |                     ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n15 |     return (l.get(l.len() / 2) + l.get(l.len / 2 - 1)) / 2.0\n   |                        ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  -",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| x.abs());\n  l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmpjsui3chr.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpjsui3chr.rs:7:9\n    |\n7   |     l = l.map(|x| x.abs());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpjsui3chr.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpjsui3chr.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0277, E0308, E0599.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if l.len == 0 {\n    panic(\"median called on empty vector\")\n  }\n\n  l.sort()\n  if l.len % 2 == 0 {\n    return (l[(l.len / 2) - 1] + l[l.len / 2]) / 2.0\n  } else {\n    return l[l.len / 2]\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmpky500tqm.rs:11:11\n   |\n11 |   l.sort()\n   |           ^ help: add `;` here\n12 |   if l.len % 2 == 0 {\n   |   -- unexpected token\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpky500tqm.rs:8:5\n  |\n8 |     panic(\"median called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median called on empty vector\")\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpky500tqm.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpky500tqm.rs:12:8\n   |\n12 |   if l.len % 2 == 0 {\n   |        ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n12 |   if l.len() % 2 == 0 {\n   |           ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpky500tqm.rs:13:18\n   |\n13 |     return (l[(l.len / 2) - 1] + l[l.len / 2]) / 2.0\n   |                  ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n13 |     return (l[(l.len() / 2) - 1] + l[l.len / 2]) / 2.0\n   |                     ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpky500tqm.rs:13:38\n   |\n13 |     return (l[(l.len / 2) - 1] + l[l.len / 2]) / 2.0\n   |                                      ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n13 |     return (l[(l.len / 2) - 1] + l[l.len() / 2]) / 2.0\n   |                                         ++\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpky500tqm.rs:13:48\n   |\n13 |     return (l[(l.len / 2) - 1] + l[l.len / 2]) / 2.0\n   |                                                ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implemen",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp7kr89tld.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp7kr89tld.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp7kr89tld.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| -x);\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp7kr89tld.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp7kr89tld.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 4 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmpdbltankp.rs:8:6\n  |\n8 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n8 -   if (l.len() % 2 == 0) {\n8 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0308]: mismatched types\n --> /tmp/tmpdbltankp.rs:7:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n --> /tmp/tmpdbltankp.rs:9:50\n  |\n9 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  |                                                  ^ no implementation for `isize / {float}`\n  |\n  = help: the trait `Div<{float}>` is not implemented for `isize`\n  = help: the following other types implement trait `Div<Rhs>`:\n            <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128 as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n            <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpdbltankp.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| x.abs());\n  l = l.sort();\n  let n = l.len();\n  if (n == 0) {\n    return 0.0;\n  } else if (n % 2 == 0) {\n    return (l[n / 2 - 1] + l[n / 2]) / 2.0;\n  } else {\n    return l[n / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n  --> /tmp/tmp1y2l6sgu.rs:10:6\n   |\n10 |   if (n == 0) {\n   |      ^      ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n10 -   if (n == 0) {\n10 +   if n == 0 {\n   | \n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmp1y2l6sgu.rs:12:13\n   |\n12 |   } else if (n % 2 == 0) {\n   |             ^          ^\n   |\nhelp: remove these parentheses\n   |\n12 -   } else if (n % 2 == 0) {\n12 +   } else if n % 2 == 0 {\n   | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp1y2l6sgu.rs:7:9\n    |\n7   |     l = l.map(|x| x.abs());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp1y2l6sgu.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| x.abs());\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp1y2l6sgu.rs:13:38\n   |\n13 |     return (l[n / 2 - 1] + l[n / 2]) / 2.0;\n   |                                      ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1y2l6sgu.rs:15:12\n   |\n6  | fn median(l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort();\n  if l.len() == 0 {\n    return 0.0;\n  } else if l.len() == 1 {\n    return l[0];\n  } else if l.len() % 2 == 0 {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n  --> /tmp/tmpzsil9veb.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0];\n   |            ^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpzsil9veb.rs:13:50\n   |\n13 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n    let l2 = l.map(|x| x.abs());\n    let l3 = l2.sort();\n    let l4 = l3.take(l3.length / 2);\n    return l4.head();\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpe71hutsa.rs:7:16\n    |\n7   |       let l2 = l.map(|x| x.abs());\n    |                  ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0599`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median called on empty vector\")\n  }\n\n  if len(l) == 1 {\n    return l[0]\n  }\n\n  // Find the middle element.\n  let middle = len(l) / 2\n\n  // If the length is odd, return the middle element.\n  if len(l) % 2 == 1 {\n    return l[middle]\n  }\n\n  // If the length is even, return the average of the middle two elements.\n  return (l[middle] + l[middle - 1]) / 2.0\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmpeyth8215.rs:16:26\n   |\n16 |   let middle = len(l) / 2\n   |                          ^ help: add `;` here\n...\n19 |   if len(l) % 2 == 1 {\n   |   -- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpeyth8215.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpeyth8215.rs:8:5\n  |\n8 |     panic(\"median called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median called on empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpeyth8215.rs:11:6\n   |\n11 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpeyth8215.rs:16:16\n   |\n16 |   let middle = len(l) / 2\n   |                ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpeyth8215.rs:19:6\n   |\n19 |   if len(l) % 2 == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpeyth8215.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0425.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  let n = l.len();\n  if (n == 0) {\n    return 0.0;\n  } else if (n % 2 == 0) {\n    return (l[n / 2] + l[n / 2 - 1]) / 2.0;\n  } else {\n    return l[n / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpm6cpdanj.rs:10:6\n   |\n10 |   if (n == 0) {\n   |      ^      ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n10 -   if (n == 0) {\n10 +   if n == 0 {\n   | \n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpm6cpdanj.rs:12:13\n   |\n12 |   } else if (n % 2 == 0) {\n   |             ^          ^\n   |\nhelp: remove these parentheses\n   |\n12 -   } else if (n % 2 == 0) {\n12 +   } else if n % 2 == 0 {\n   | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpm6cpdanj.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpm6cpdanj.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| -x);\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpm6cpdanj.rs:13:38\n   |\n13 |     return (l[n / 2] + l[n / 2 - 1]) / 2.0;\n   |                                      ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpm6cpdanj.rs:15:12\n   |\n6  | fn median(l: Vec<isiz",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[(l.len() / 2) - 1] + l[l.len() / 2]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmpo4xz6_x5.rs:8:6\n  |\n8 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n8 -   if (l.len() % 2 == 0) {\n8 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0308]: mismatched types\n --> /tmp/tmpo4xz6_x5.rs:7:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n --> /tmp/tmpo4xz6_x5.rs:9:52\n  |\n9 |     return (l[(l.len() / 2) - 1] + l[l.len() / 2]) / 2.0;\n  |                                                    ^ no implementation for `isize / {float}`\n  |\n  = help: the trait `Div<{float}>` is not implemented for `isize`\n  = help: the following other types implement trait `Div<Rhs>`:\n            <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128 as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n            <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpo4xz6_x5.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if l.len == 0 {\n    panic(\"median() called on empty vector\")\n  }\n  if l.len == 1 {\n    return l.data[0]\n  }\n  if l.len == 2 {\n    return (l.data[0] + l.data[1]) / 2.0\n  }\n  return (l.data[l.len/2] + l.data[l.len/2 - 1]) / 2.0\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmppxd57wtm.rs:8:5\n  |\n8 |     panic(\"median() called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median() called on empty vector\")\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmppxd57wtm.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmppxd57wtm.rs:10:8\n   |\n10 |   if l.len == 1 {\n   |        ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n10 |   if l.len() == 1 {\n   |           ++\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmppxd57wtm.rs:11:14\n   |\n11 |     return l.data[0]\n   |              ^^^^ unknown field\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmppxd57wtm.rs:13:8\n   |\n13 |   if l.len == 2 {\n   |        ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n13 |   if l.len() == 2 {\n   |           ++\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmppxd57wtm.rs:14:15\n   |\n14 |     return (l.data[0] + l.data[1]) / 2.0\n   |               ^^^^ unknown field\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmppxd57wtm.rs:14:27\n   |\n14 |     return (l.data[0] + l.data[1]) / 2.0\n   |                           ^^^^ unknown field\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmppxd57wtm.rs:16:13\n   |\n16 |   return (l.data[l.len/2] + l.data[l.len/2 - 1]) / 2.0\n   |             ^^^^ unknown field\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmppxd57wtm.rs:16:20\n   |\n16 |   return (l.data[l.len/2] + l.data[l.len/2 - 1]) / 2.0\n   |                    ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n16 |   return (l.data[l.len()/2] + l.data[l.len/2 - 1]) / 2.0\n  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n    l.sort_by(|x: f64, y: f64| -> x < y);\n    if (l.len() % 2 == 0) {\n        return (l.get(l.len() / 2 - 1) + l.get(l.len() / 2)) / 2.0;\n    } else {\n        return l.get(l.len() / 2);\n    }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected one of `!`, `(`, `+`, `,`, `::`, `:`, `<`, `=`, or `>`, found `)`\n --> /tmp/tmp53c9k0wn.rs:7:40\n  |\n7 |     l.sort_by(|x: f64, y: f64| -> x < y);\n  |                                        ^ expected one of 9 possible tokens\n  |\nhelp: you might have meant to end the type parameters here\n  |\n7 |     l.sort_by(|x: f64, y: f64| -> x < y>);\n  |                                        +\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n    let mut m = 0.0;\n    let mut n = 0;\n    for v in l {\n        if v > m {\n            m = v;\n            n = 1;\n        } else if v == m {\n            n += 1;\n        }\n    }\n    if n == 0 {\n        return m;\n    }\n    return (m + n / 2.0) / n;\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293285,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n  --> /tmp/tmpy386n31r.rs:10:16\n   |\n10 |         if v > m {\n   |                ^ expected `isize`, found floating-point number\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpy386n31r.rs:11:17\n   |\n7  |     let mut m = 0.0;\n   |                 --- expected due to this value\n...\n11 |             m = v;\n   |                 ^ expected floating-point number, found `isize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpy386n31r.rs:13:24\n   |\n13 |         } else if v == m {\n   |                        ^ expected `isize`, found floating-point number\n\nerror[E0277]: cannot divide `{integer}` by `{float}`\n  --> /tmp/tmpy386n31r.rs:20:19\n   |\n20 |     return (m + n / 2.0) / n;\n   |                   ^ no implementation for `{integer} / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `{integer}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort_by(|x: f64, y: f64| {\n    if x < y {\n      return -1\n    } else if x > y {\n      return 1\n    } else {\n      return 0\n    }\n  })\n  if l.len() % 2 == 0 {\n    return (l.get(l.len() / 2 - 1) + l.get(l.len() / 2)) / 2.0\n  } else {\n    return l.get(l.len() / 2)\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmp1rlvq5bb.rs:15:5\n   |\n15 |   })\n   |     ^ help: add `;` here\n16 |   if l.len() % 2 == 0 {\n   |   -- unexpected token\n\nerror[E0631]: type mismatch in closure arguments\n   --> /tmp/tmp1rlvq5bb.rs:7:5\n    |\n7   |   l.sort_by(|x: f64, y: f64| {\n    |     ^^^^^^^ ---------------- found signature of `fn(f64, f64) -> _`\n    |     |\n    |     expected signature of `for<'r, 's> fn(&'r isize, &'s isize) -> _`\n    |\nnote: required by a bound in `slice::<impl [T]>::sort_by`\n\nerror[E0369]: cannot add `Option<&isize>` to `Option<&isize>`\n  --> /tmp/tmp1rlvq5bb.rs:17:36\n   |\n17 |     return (l.get(l.len() / 2 - 1) + l.get(l.len() / 2)) / 2.0\n   |             ---------------------- ^ ------------------ Option<&isize>\n   |             |\n   |             Option<&isize>\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0369, E0631.\nFor more information about an error, try `rustc --explain E0369`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  let l2 = l.map(|x| x.abs());\n  let l3 = l2.sort();\n  let l4 = l3.take(l3.length / 2);\n  return l4.head();\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp6_3w98oy.rs:7:14\n    |\n7   |     let l2 = l.map(|x| x.abs());\n    |                ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0599`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort_by(|x: f64, y: f64| {\n    if x < y {\n      return -1\n    } else if x > y {\n      return 1\n    } else {\n      return 0\n    }\n  })\n  if len(l) % 2 == 0 {\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n  } else {\n    return l[len(l) / 2]\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmpxptwtpv3.rs:15:5\n   |\n15 |   })\n   |     ^ help: add `;` here\n16 |   if len(l) % 2 == 0 {\n   |   -- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpxptwtpv3.rs:16:6\n   |\n16 |   if len(l) % 2 == 0 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpxptwtpv3.rs:17:15\n   |\n17 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpxptwtpv3.rs:17:31\n   |\n17 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |                               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpxptwtpv3.rs:19:14\n   |\n19 |     return l[len(l) / 2]\n   |              ^^^ not found in this scope\n\nerror[E0631]: type mismatch in closure arguments\n   --> /tmp/tmpxptwtpv3.rs:7:5\n    |\n7   |   l.sort_by(|x: f64, y: f64| {\n    |     ^^^^^^^ ---------------- found signature of `fn(f64, f64) -> _`\n    |     |\n    |     expected signature of `for<'r, 's> fn(&'r isize, &'s isize) -> _`\n    |\nnote: required by a bound in `slice::<impl [T]>::sort_by`\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0425, E0631.\nFor more information about an error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort_by(|x: f64, y: f64| -> x < y);\n  if l.len() % 2 == 0 {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected one of `!`, `(`, `+`, `,`, `::`, `:`, `<`, `=`, or `>`, found `)`\n --> /tmp/tmpbobitm1_.rs:7:38\n  |\n7 |   l.sort_by(|x: f64, y: f64| -> x < y);\n  |                                      ^ expected one of 9 possible tokens\n  |\nhelp: you might have meant to end the type parameters here\n  |\n7 |   l.sort_by(|x: f64, y: f64| -> x < y>);\n  |                                      +\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|v| v.to_f64());\n  l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp50q_qfxt.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp50q_qfxt.rs:7:9\n    |\n7   |     l = l.map(|v| v.to_f64());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp50q_qfxt.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp50q_qfxt.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0277, E0308, E0599.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmpdbltankp.rs:8:6\n  |\n8 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n8 -   if (l.len() % 2 == 0) {\n8 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0308]: mismatched types\n --> /tmp/tmpdbltankp.rs:7:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n --> /tmp/tmpdbltankp.rs:9:50\n  |\n9 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  |                                                  ^ no implementation for `isize / {float}`\n  |\n  = help: the trait `Div<{float}>` is not implemented for `isize`\n  = help: the following other types implement trait `Div<Rhs>`:\n            <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128 as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n            <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpdbltankp.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| x.abs());\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp2pj75b59.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp2pj75b59.rs:7:9\n    |\n7   |     l = l.map(|x| x.abs());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp2pj75b59.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| x.abs());\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp2pj75b59.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp2pj75b59.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort()\n  if l.len() == 0 {\n    return 0.0\n  } else if l.len() == 1 {\n    return l[0]\n  } else if l.len() % 2 == 0 {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0\n  } else {\n    return l[l.len() / 2]\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n --> /tmp/tmp9dl8tuee.rs:7:11\n  |\n7 |   l.sort()\n  |           ^ help: add `;` here\n8 |   if l.len() == 0 {\n  |   -- unexpected token\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp9dl8tuee.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp9dl8tuee.rs:13:50\n   |\n13 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|v| v.to_f64());\n  l.sort();\n  return l[l.len()/2];\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpo_nouw6e.rs:7:9\n    |\n7   |     l = l.map(|v| v.to_f64());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpo_nouw6e.rs:9:10\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |                             --- expected `f64` because of return type\n...\n9 |   return l[l.len()/2];\n  |          ^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0308, E0599.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp7kr89tld.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp7kr89tld.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp7kr89tld.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| -x);\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp7kr89tld.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp7kr89tld.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 4 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median called on empty vector\")\n  }\n  if len(l) == 1 {\n    return l[0]\n  }\n  l.sort()\n  if len(l) % 2 == 0 {\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n  }\n  return l[len(l) / 2]\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmpo3tfme6k.rs:13:11\n   |\n13 |   l.sort()\n   |           ^ help: add `;` here\n14 |   if len(l) % 2 == 0 {\n   |   -- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpo3tfme6k.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpo3tfme6k.rs:8:5\n  |\n8 |     panic(\"median called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median called on empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpo3tfme6k.rs:10:6\n   |\n10 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpo3tfme6k.rs:14:6\n   |\n14 |   if len(l) % 2 == 0 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpo3tfme6k.rs:15:15\n   |\n15 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpo3tfme6k.rs:15:31\n   |\n15 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |                               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpo3tfme6k.rs:17:12\n   |\n17 |   return l[len(l) / 2]\n   |            ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpo3tfme6k.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 9 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0425.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median called on empty vector\")\n  }\n\n  if len(l) == 1 {\n    return l[0]\n  }\n\n  l.sort()\n\n  if len(l) % 2 == 0 {\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n  } else {\n    return l[len(l) / 2]\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmpk5f9zu41.rs:15:11\n   |\n15 |   l.sort()\n   |           ^ help: add `;` here\n16 | \n17 |   if len(l) % 2 == 0 {\n   |   -- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpk5f9zu41.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpk5f9zu41.rs:8:5\n  |\n8 |     panic(\"median called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median called on empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpk5f9zu41.rs:11:6\n   |\n11 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpk5f9zu41.rs:17:6\n   |\n17 |   if len(l) % 2 == 0 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpk5f9zu41.rs:18:15\n   |\n18 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpk5f9zu41.rs:18:31\n   |\n18 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |                               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpk5f9zu41.rs:20:14\n   |\n20 |     return l[len(l) / 2]\n   |              ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpk5f9zu41.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 9 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0425.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| x.abs());\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp2pj75b59.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp2pj75b59.rs:7:9\n    |\n7   |     l = l.map(|x| x.abs());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp2pj75b59.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| x.abs());\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp2pj75b59.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp2pj75b59.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| x.abs());\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp2pj75b59.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp2pj75b59.rs:7:9\n    |\n7   |     l = l.map(|x| x.abs());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp2pj75b59.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| x.abs());\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp2pj75b59.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp2pj75b59.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort();\n  if (l.len() % 2) {\n    return l.get(l.len() / 2);\n  } else {\n    return (l.get(l.len() / 2) + l.get(l.len() / 2 - 1)) / 2.0;\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmpm5c5wisy.rs:8:6\n  |\n8 |   if (l.len() % 2) {\n  |      ^           ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n8 -   if (l.len() % 2) {\n8 +   if l.len() % 2 {\n  | \n\nerror[E0308]: mismatched types\n --> /tmp/tmpm5c5wisy.rs:8:6\n  |\n8 |   if (l.len() % 2) {\n  |      ^^^^^^^^^^^^^ expected `bool`, found `usize`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpm5c5wisy.rs:9:12\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |                             --- expected `f64` because of return type\n...\n9 |     return l.get(l.len() / 2);\n  |            ^^^^^^^^^^^^^^^^^^ expected `f64`, found enum `Option`\n  |\n  = note: expected type `f64`\n             found enum `Option<&isize>`\n\nerror[E0369]: cannot add `Option<&isize>` to `Option<&isize>`\n  --> /tmp/tmpm5c5wisy.rs:11:32\n   |\n11 |     return (l.get(l.len() / 2) + l.get(l.len() / 2 - 1)) / 2.0;\n   |             ------------------ ^ ---------------------- Option<&isize>\n   |             |\n   |             Option<&isize>\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0308, E0369.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort()\n  if l.len() % 2 == 0 {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0\n  } else {\n    return l[l.len() / 2]\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n --> /tmp/tmpby8kj69u.rs:7:11\n  |\n7 |   l.sort()\n  |           ^ help: add `;` here\n8 |   if l.len() % 2 == 0 {\n  |   -- unexpected token\n\nerror[E0277]: cannot divide `isize` by `{float}`\n --> /tmp/tmpby8kj69u.rs:9:50\n  |\n9 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0\n  |                                                  ^ no implementation for `isize / {float}`\n  |\n  = help: the trait `Div<{float}>` is not implemented for `isize`\n  = help: the following other types implement trait `Div<Rhs>`:\n            <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128 as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n            <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpby8kj69u.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[l.len() / 2]\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median called on empty vector\")\n  }\n  if len(l) == 1 {\n    return l[0]\n  }\n  if len(l) == 2 {\n    return (l[0] + l[1]) / 2.0\n  }\n  if len(l) == 3 {\n    return (l[0] + l[1] + l[2]) / 3.0\n  }\n  if len(l) == 4 {\n    return (l[0] + l[1] + l[2] + l[3]) / 4.0\n  }\n  if len(l) == 5 {\n    return (l[0] + l[1] + l[2] + l[3] + l[4]) / 5.0\n  }\n  if len(l) == 6 {\n    return (l[0] + l[1] + l[2] + l[3] + l[4] + l[5]) / 6.0\n  }\n  if len(l) == 7 {\n    return (l[0] + l[1] + l[2] + l[3] + l[4] + l[5] + l[6]) / 7.0\n  }\n  if len(l) == 8 {\n    return (l[0] + l[1] + l[2] + l[3] + l[4] + l[5] + l[6] + l[7]) / 8.0\n  }\n  if len(l) == 9 {\n    return (l[0] + l[1] + l[2] + l[3] + l[4] + l[5] + l[6] + l[7] + l[8]) / 9.0\n  }\n  if len(l) == 10 {\n    return (l[0] + l[1] + l[2] + l[3] + l[4] + l[5] + l[6] + l[7] + l[8] + l[9]) / 10.0\n  }\n  if len(l) == 11 {\n    return (l[0] +\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: this file contains an unclosed delimiter\n  --> /tmp/tmpvx_t0edo.rs:51:3\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                                 - unclosed delimiter\n...\n40 |   if len(l) == 11 {\n   |                   - this delimiter might not be properly closed...\n41 |     return (l[0] +\n42 | }\n   | - ...as it matches this but it has different indentation\n...\n51 | }\n   |   ^\n\nerror: expected expression, found `)`\n  --> /tmp/tmpvx_t0edo.rs:42:1\n   |\n42 | }\n   | ^ expected expression\n\nerror: mismatched closing delimiter: `}`\n  --> /tmp/tmpvx_t0edo.rs:41:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                                 - closing delimiter possibly meant for this\n...\n41 |     return (l[0] +\n   |            ^ unclosed delimiter\n42 | }\n   | ^ mismatched closing delimiter\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpvx_t0edo.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpvx_t0edo.rs:8:5\n  |\n8 |     panic(\"median called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median called on empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpvx_t0edo.rs:10:6\n   |\n10 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpvx_t0edo.rs:13:6\n   |\n13 |   if len(l) == 2 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpvx_t0edo.rs:16:6\n   |\n16 |   if len(l) == 3 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpvx_t0edo.rs:19:6\n   |\n19 |   if len(l) == 4 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpvx_t0edo.rs:22:6\n   |\n22 |   if len(l) == 5 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  if (l.len() % 2 == 1) {\n    return l.get(l.len() / 2);\n  } else {\n    return (l.get(l.len() / 2) + l.get(l.len() / 2 - 1)) / 2.0;\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp_yxig6l2.rs:9:6\n  |\n9 |   if (l.len() % 2 == 1) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 1) {\n9 +   if l.len() % 2 == 1 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp_yxig6l2.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp_yxig6l2.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| -x);\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp_yxig6l2.rs:10:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n10 |     return l.get(l.len() / 2);\n   |            ^^^^^^^^^^^^^^^^^^ expected `f64`, found enum `Option`\n   |\n   = note: expected type `f64`\n              found enum `Option<&isize>`\n\nerror[E0369]: cannot add `Option<&isize>` to `Option<&isize>`\n  --> /tmp/tmp_yxig6l2.rs:12:32\n   |\n12 |     return (l.get(l.len() / 2) + l.get(l.len() / 2 - 1)) / 2.0;\n   |             ------------------ ^ ---------------------- Option<&isize>\n   |             |\n   |             Option<&isize>\n\nerror: aborting due to 4 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0308, E0369, E0599.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| x.abs());\n  l = l.sort();\n  let n = l.len();\n  if (n == 0) {\n    return 0.0;\n  } else if (n % 2 == 1) {\n    return l[n/2];\n  } else {\n    return (l[n/2] + l[n/2 - 1]) / 2.0;\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n  --> /tmp/tmp2c_stg8w.rs:10:6\n   |\n10 |   if (n == 0) {\n   |      ^      ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n10 -   if (n == 0) {\n10 +   if n == 0 {\n   | \n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmp2c_stg8w.rs:12:13\n   |\n12 |   } else if (n % 2 == 1) {\n   |             ^          ^\n   |\nhelp: remove these parentheses\n   |\n12 -   } else if (n % 2 == 1) {\n12 +   } else if n % 2 == 1 {\n   | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp2c_stg8w.rs:7:9\n    |\n7   |     l = l.map(|x| x.abs());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp2c_stg8w.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| x.abs());\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp2c_stg8w.rs:13:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n13 |     return l[n/2];\n   |            ^^^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp2c_stg8w.rs:15:34\n   |\n15 |     return (l[n/2] + l[n/2 - 1]) / 2.0;\n   |                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i1",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  if (l.len() % 2 == 1) {\n    return l.get(l.len() / 2);\n  } else {\n    return (l.get(l.len() / 2) + l.get(l.len() / 2 - 1)) / 2.0;\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp_yxig6l2.rs:9:6\n  |\n9 |   if (l.len() % 2 == 1) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 1) {\n9 +   if l.len() % 2 == 1 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp_yxig6l2.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp_yxig6l2.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| -x);\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp_yxig6l2.rs:10:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n10 |     return l.get(l.len() / 2);\n   |            ^^^^^^^^^^^^^^^^^^ expected `f64`, found enum `Option`\n   |\n   = note: expected type `f64`\n              found enum `Option<&isize>`\n\nerror[E0369]: cannot add `Option<&isize>` to `Option<&isize>`\n  --> /tmp/tmp_yxig6l2.rs:12:32\n   |\n12 |     return (l.get(l.len() / 2) + l.get(l.len() / 2 - 1)) / 2.0;\n   |             ------------------ ^ ---------------------- Option<&isize>\n   |             |\n   |             Option<&isize>\n\nerror: aborting due to 4 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0308, E0369, E0599.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort();\n  if (l.len() % 2 == 1) {\n    return l.get(l.len() / 2);\n  } else {\n    return (l.get(l.len() / 2) + l.get(l.len() / 2 - 1)) / 2.0;\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmps4qnbdrf.rs:8:6\n  |\n8 |   if (l.len() % 2 == 1) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n8 -   if (l.len() % 2 == 1) {\n8 +   if l.len() % 2 == 1 {\n  | \n\nerror[E0308]: mismatched types\n --> /tmp/tmps4qnbdrf.rs:9:12\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |                             --- expected `f64` because of return type\n...\n9 |     return l.get(l.len() / 2);\n  |            ^^^^^^^^^^^^^^^^^^ expected `f64`, found enum `Option`\n  |\n  = note: expected type `f64`\n             found enum `Option<&isize>`\n\nerror[E0369]: cannot add `Option<&isize>` to `Option<&isize>`\n  --> /tmp/tmps4qnbdrf.rs:11:32\n   |\n11 |     return (l.get(l.len() / 2) + l.get(l.len() / 2 - 1)) / 2.0;\n   |             ------------------ ^ ---------------------- Option<&isize>\n   |             |\n   |             Option<&isize>\n\nerror: aborting due to 2 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0308, E0369.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median called on empty vector\")\n  }\n\n  l.sort()\n\n  if len(l) % 2 == 0 {\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n  } else {\n    return l[len(l) / 2]\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmpoh__mh4r.rs:11:11\n   |\n11 |   l.sort()\n   |           ^ help: add `;` here\n12 | \n13 |   if len(l) % 2 == 0 {\n   |   -- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpoh__mh4r.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpoh__mh4r.rs:8:5\n  |\n8 |     panic(\"median called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median called on empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpoh__mh4r.rs:13:6\n   |\n13 |   if len(l) % 2 == 0 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpoh__mh4r.rs:14:15\n   |\n14 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpoh__mh4r.rs:14:31\n   |\n14 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |                               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpoh__mh4r.rs:16:14\n   |\n16 |     return l[len(l) / 2]\n   |              ^^^ not found in this scope\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0423, E0425.\nFor more information about an error, try `rustc --explain E0423`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort()\n  if l.len() == 0 {\n    return 0.0\n  } else if l.len() == 1 {\n    return l[0]\n  } else if l.len() % 2 == 0 {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0\n  } else {\n    return l[l.len() / 2]\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n --> /tmp/tmp9dl8tuee.rs:7:11\n  |\n7 |   l.sort()\n  |           ^ help: add `;` here\n8 |   if l.len() == 0 {\n  |   -- unexpected token\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp9dl8tuee.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp9dl8tuee.rs:13:50\n   |\n13 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|v| v.to_f64());\n  l.sort();\n  if (l.len() % 2) {\n    return l[l.len() / 2];\n  } else {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293285,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp7iuhmyz8.rs:9:6\n  |\n9 |   if (l.len() % 2) {\n  |      ^           ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2) {\n9 +   if l.len() % 2 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp7iuhmyz8.rs:7:9\n    |\n7   |     l = l.map(|v| v.to_f64());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp7iuhmyz8.rs:9:6\n  |\n9 |   if (l.len() % 2) {\n  |      ^^^^^^^^^^^^^ expected `bool`, found `usize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp7iuhmyz8.rs:10:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n10 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp7iuhmyz8.rs:12:50\n   |\n12 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 4 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0277, E0308, E0599.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median() called on empty vector\")\n  }\n  if len(l) == 1 {\n    return l[0]\n  }\n  if len(l) == 2 {\n    return (l[0] + l[1]) / 2.0\n  }\n  if len(l) == 3 {\n    return (l[0] + l[1] + l[2]) / 3.0\n  }\n  if len(l) == 4 {\n    return (l[0] + l[1] + l[2] + l[3]) / 4.0\n  }\n  if len(l) == 5 {\n    return (l[0] + l[1] + l[2] + l[3] + l[4]) / 5.0\n  }\n  if len(l) == 6 {\n    return (l[0] + l[1] + l[2] + l[3] + l[4] + l[5]) / 6.0\n  }\n  if len(l) == 7 {\n    return (l[0] + l[1] + l[2] + l[3] + l[4] + l[5] + l[6]) / 7.0\n  }\n  if len(l) == 8 {\n    return (l[0] + l[1] + l[2] + l[3] + l[4] + l[5] + l[6] + l[7]) / 8.0\n  }\n  if len(l) == 9 {\n    return (l[0] + l[1] + l[2] + l[3] + l[4] + l[5] + l[6] + l[7] + l[8]) / 9.0\n  }\n  if len(l) == 10 {\n    return (l[0] + l[1] + l[2] + l[3] + l[4] + l[5] + l[6] + l[7] + l[8] + l[9]) / 10.0\n  }\n  if len(l) == 11 {\n    return (l[0]\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293285,
      "stdout": "",
      "stderr": "error: this file contains an unclosed delimiter\n  --> /tmp/tmpyk9kxuvx.rs:51:3\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                                 - unclosed delimiter\n...\n40 |   if len(l) == 11 {\n   |                   - this delimiter might not be properly closed...\n41 |     return (l[0]\n42 | }\n   | - ...as it matches this but it has different indentation\n...\n51 | }\n   |   ^\n\nerror: mismatched closing delimiter: `}`\n  --> /tmp/tmpyk9kxuvx.rs:41:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                                 - closing delimiter possibly meant for this\n...\n41 |     return (l[0]\n   |            ^ unclosed delimiter\n42 | }\n   | ^ mismatched closing delimiter\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpyk9kxuvx.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpyk9kxuvx.rs:8:5\n  |\n8 |     panic(\"median() called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median() called on empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpyk9kxuvx.rs:10:6\n   |\n10 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpyk9kxuvx.rs:13:6\n   |\n13 |   if len(l) == 2 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpyk9kxuvx.rs:16:6\n   |\n16 |   if len(l) == 3 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpyk9kxuvx.rs:19:6\n   |\n19 |   if len(l) == 4 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpyk9kxuvx.rs:22:6\n   |\n22 |   if len(l) == 5 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpyk9kxuvx.rs:25:6\n   |\n25 |   if len(l) == 6 {\n   |      ^^^ not found in this scope\n\nerro",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort_by(|x, y| x - y);\n  if l.len() % 2 == 0 {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293285,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmp08x_kcxf.rs:7:20\n  |\n7 |   l.sort_by(|x, y| x - y);\n  |                    ^^^^^ expected enum `std::cmp::Ordering`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n --> /tmp/tmp08x_kcxf.rs:9:50\n  |\n9 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  |                                                  ^ no implementation for `isize / {float}`\n  |\n  = help: the trait `Div<{float}>` is not implemented for `isize`\n  = help: the following other types implement trait `Div<Rhs>`:\n            <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128 as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n            <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp08x_kcxf.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort_by(|x: f64, y: f64| {\n    if x < y {\n      return -1\n    } else if x > y {\n      return 1\n    } else {\n      return 0\n    }\n  })\n  if len(l) % 2 == 0 {\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n  } else {\n    return l[len(l) / 2]\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmpxptwtpv3.rs:15:5\n   |\n15 |   })\n   |     ^ help: add `;` here\n16 |   if len(l) % 2 == 0 {\n   |   -- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpxptwtpv3.rs:16:6\n   |\n16 |   if len(l) % 2 == 0 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpxptwtpv3.rs:17:15\n   |\n17 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpxptwtpv3.rs:17:31\n   |\n17 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |                               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpxptwtpv3.rs:19:14\n   |\n19 |     return l[len(l) / 2]\n   |              ^^^ not found in this scope\n\nerror[E0631]: type mismatch in closure arguments\n   --> /tmp/tmpxptwtpv3.rs:7:5\n    |\n7   |   l.sort_by(|x: f64, y: f64| {\n    |     ^^^^^^^ ---------------- found signature of `fn(f64, f64) -> _`\n    |     |\n    |     expected signature of `for<'r, 's> fn(&'r isize, &'s isize) -> _`\n    |\nnote: required by a bound in `slice::<impl [T]>::sort_by`\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0425, E0631.\nFor more information about an error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp7kr89tld.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp7kr89tld.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp7kr89tld.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| -x);\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp7kr89tld.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp7kr89tld.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 4 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort_by(|x: f64, y: f64| {\n    if x < y {\n      return -1\n    } else if x > y {\n      return 1\n    } else {\n      return 0\n    }\n  });\n  if len(l) % 2 == 0 {\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n  } else {\n    return l[len(l) / 2]\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp7oai_z1u.rs:16:6\n   |\n16 |   if len(l) % 2 == 0 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp7oai_z1u.rs:17:15\n   |\n17 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp7oai_z1u.rs:17:31\n   |\n17 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |                               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp7oai_z1u.rs:19:14\n   |\n19 |     return l[len(l) / 2]\n   |              ^^^ not found in this scope\n\nerror[E0631]: type mismatch in closure arguments\n   --> /tmp/tmp7oai_z1u.rs:7:5\n    |\n7   |   l.sort_by(|x: f64, y: f64| {\n    |     ^^^^^^^ ---------------- found signature of `fn(f64, f64) -> _`\n    |     |\n    |     expected signature of `for<'r, 's> fn(&'r isize, &'s isize) -> _`\n    |\nnote: required by a bound in `slice::<impl [T]>::sort_by`\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0425, E0631.\nFor more information about an error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|v| v.to_f64());\n  l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[(l.len() / 2) - 1] + l[l.len() / 2]) / 2.0;\n  } else {\n    return l[(l.len() / 2)];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmpoe9gpma1.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpoe9gpma1.rs:7:9\n    |\n7   |     l = l.map(|v| v.to_f64());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpoe9gpma1.rs:10:52\n   |\n10 |     return (l[(l.len() / 2) - 1] + l[l.len() / 2]) / 2.0;\n   |                                                    ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpoe9gpma1.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[(l.len() / 2)];\n   |            ^^^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0277, E0308, E0599.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort_by(|x, y| x - y);\n  let n = l.len();\n  if (n == 0) {\n    return 0.0;\n  } else if (n % 2 == 1) {\n    return l.get(n / 2);\n  } else {\n    return (l.get(n / 2) + l.get(n / 2 - 1)) / 2.0;\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293285,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp_29m2ymf.rs:9:6\n  |\n9 |   if (n == 0) {\n  |      ^      ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (n == 0) {\n9 +   if n == 0 {\n  | \n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmp_29m2ymf.rs:11:13\n   |\n11 |   } else if (n % 2 == 1) {\n   |             ^          ^\n   |\nhelp: remove these parentheses\n   |\n11 -   } else if (n % 2 == 1) {\n11 +   } else if n % 2 == 1 {\n   | \n\nerror[E0308]: mismatched types\n --> /tmp/tmp_29m2ymf.rs:7:20\n  |\n7 |   l.sort_by(|x, y| x - y);\n  |                    ^^^^^ expected enum `std::cmp::Ordering`, found `isize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp_29m2ymf.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l.get(n / 2);\n   |            ^^^^^^^^^^^^ expected `f64`, found enum `Option`\n   |\n   = note: expected type `f64`\n              found enum `Option<&isize>`\n\nerror[E0369]: cannot add `Option<&isize>` to `Option<&isize>`\n  --> /tmp/tmp_29m2ymf.rs:14:26\n   |\n14 |     return (l.get(n / 2) + l.get(n / 2 - 1)) / 2.0;\n   |             ------------ ^ ---------------- Option<&isize>\n   |             |\n   |             Option<&isize>\n\nerror: aborting due to 3 previous errors; 2 warnings emitted\n\nSome errors have detailed explanations: E0308, E0369.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort();\n  if l.len() == 0 {\n    return 0.0;\n  }\n  if l.len() == 1 {\n    return l[0];\n  }\n  if l.len() == 2 {\n    return (l[0] + l[1]) / 2.0;\n  }\n  return l[l.len() / 2];\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n  --> /tmp/tmpvro4fkoa.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[0];\n   |            ^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpvro4fkoa.rs:15:26\n   |\n15 |     return (l[0] + l[1]) / 2.0;\n   |                          ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmpdbltankp.rs:8:6\n  |\n8 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n8 -   if (l.len() % 2 == 0) {\n8 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0308]: mismatched types\n --> /tmp/tmpdbltankp.rs:7:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n --> /tmp/tmpdbltankp.rs:9:50\n  |\n9 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  |                                                  ^ no implementation for `isize / {float}`\n  |\n  = help: the trait `Div<{float}>` is not implemented for `isize`\n  = help: the following other types implement trait `Div<Rhs>`:\n            <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128 as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n            <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpdbltankp.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.sort();\n  if (l.len() == 0) {\n    return 0.0;\n  }\n  if (l.len() == 1) {\n    return l[0];\n  }\n  if (l.len() == 2) {\n    return (l[0] + l[1]) / 2.0;\n  }\n  return l[l.len() / 2];\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmpjwf15daq.rs:8:6\n  |\n8 |   if (l.len() == 0) {\n  |      ^            ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n8 -   if (l.len() == 0) {\n8 +   if l.len() == 0 {\n  | \n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpjwf15daq.rs:11:6\n   |\n11 |   if (l.len() == 1) {\n   |      ^            ^\n   |\nhelp: remove these parentheses\n   |\n11 -   if (l.len() == 1) {\n11 +   if l.len() == 1 {\n   | \n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpjwf15daq.rs:14:6\n   |\n14 |   if (l.len() == 2) {\n   |      ^            ^\n   |\nhelp: remove these parentheses\n   |\n14 -   if (l.len() == 2) {\n14 +   if l.len() == 2 {\n   | \n\nerror[E0308]: mismatched types\n --> /tmp/tmpjwf15daq.rs:7:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpjwf15daq.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[0];\n   |            ^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpjwf15daq.rs:15:26\n   |\n15 |     return (l[0] + l[1]) / 2.0;\n   |                          ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors; 3 warnings emitted\n\nSo",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|v| v.to_f64());\n  l = l.sort();\n  let n = l.len();\n  if (n == 0) {\n    return 0.0;\n  } else if (n % 2 == 1) {\n    return l[n / 2];\n  } else {\n    return (l[n / 2] + l[n / 2 - 1]) / 2.0;\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293285,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpikme2udq.rs:10:6\n   |\n10 |   if (n == 0) {\n   |      ^      ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n10 -   if (n == 0) {\n10 +   if n == 0 {\n   | \n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpikme2udq.rs:12:13\n   |\n12 |   } else if (n % 2 == 1) {\n   |             ^          ^\n   |\nhelp: remove these parentheses\n   |\n12 -   } else if (n % 2 == 1) {\n12 +   } else if n % 2 == 1 {\n   | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpikme2udq.rs:7:9\n    |\n7   |     l = l.map(|v| v.to_f64());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpikme2udq.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|v| v.to_f64());\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpikme2udq.rs:13:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n13 |     return l[n / 2];\n   |            ^^^^^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpikme2udq.rs:15:38\n   |\n15 |     return (l[n / 2] + l[n / 2 - 1]) / 2.0;\n   |                                      ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l.sort();\n  if l.len() == 0 {\n    return 0.0;\n  }\n  if l.len() == 1 {\n    return l[0];\n  }\n  if l.len() == 2 {\n    return (l[0] + l[1]) / 2.0;\n  }\n  return l[l.len() / 2];\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n  --> /tmp/tmpvro4fkoa.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[0];\n   |            ^^^^ expected `f64`, found `isize`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpvro4fkoa.rs:15:26\n   |\n15 |     return (l[0] + l[1]) / 2.0;\n   |                          ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n    let n = l.len();\n    if n == 0 {\n        return 0.0;\n    }\n    let m = n / 2;\n    let l1 = l.slice(0, m);\n    let l2 = l.slice(m, n);\n    let m1 = median(l1);\n    let m2 = median(l2);\n    if (m1 < m2) {\n        return m1;\n    } else {\n        return m2;\n    }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n  --> /tmp/tmppttqa0r5.rs:16:8\n   |\n16 |     if (m1 < m2) {\n   |        ^       ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n16 -     if (m1 < m2) {\n16 +     if m1 < m2 {\n   | \n\nerror[E0599]: no method named `slice` found for struct `Vec<isize>` in the current scope\n  --> /tmp/tmppttqa0r5.rs:12:16\n   |\n12 |     let l1 = l.slice(0, m);\n   |                ^^^^^\n   |\n   = help: items from traits can only be used if the trait is in scope\nhelp: the following trait is implemented but not in scope; perhaps add a `use` for it:\n   |\n1  | use std::collections::vec_deque::ring_slices::RingSlices;\n   |\nhelp: there is an associated function with a similar name\n   |\n12 |     let l1 = l.as_slice(0, m);\n   |                ~~~~~~~~\n\nerror[E0599]: no method named `slice` found for struct `Vec<isize>` in the current scope\n  --> /tmp/tmppttqa0r5.rs:13:16\n   |\n13 |     let l2 = l.slice(m, n);\n   |                ^^^^^\n   |\n   = help: items from traits can only be used if the trait is in scope\nhelp: the following trait is implemented but not in scope; perhaps add a `use` for it:\n   |\n1  | use std::collections::vec_deque::ring_slices::RingSlices;\n   |\nhelp: there is an associated function with a similar name\n   |\n13 |     let l2 = l.as_slice(m, n);\n   |                ~~~~~~~~\n\nerror: aborting due to 2 previous errors; 1 warning emitted\n\nFor more information about this error, try `rustc --explain E0599`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|v| v.to_f64());\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[(l.len() / 2) - 1] + l[l.len() / 2]) / 2.0;\n  } else {\n    return l[(l.len() / 2)];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293285,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmpr1a3lt9m.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpr1a3lt9m.rs:7:9\n    |\n7   |     l = l.map(|v| v.to_f64());\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpr1a3lt9m.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|v| v.to_f64());\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpr1a3lt9m.rs:10:52\n   |\n10 |     return (l[(l.len() / 2) - 1] + l[l.len() / 2]) / 2.0;\n   |                                                    ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpr1a3lt9m.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[(l.len() / 2)];\n   |            ^^^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\ne",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median called on empty vector\")\n  }\n  if len(l) == 1 {\n    return l[0]\n  }\n  l.sort()\n  if len(l) % 2 == 0 {\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n  }\n  return l[len(l) / 2]\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmpo3tfme6k.rs:13:11\n   |\n13 |   l.sort()\n   |           ^ help: add `;` here\n14 |   if len(l) % 2 == 0 {\n   |   -- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpo3tfme6k.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpo3tfme6k.rs:8:5\n  |\n8 |     panic(\"median called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median called on empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpo3tfme6k.rs:10:6\n   |\n10 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpo3tfme6k.rs:14:6\n   |\n14 |   if len(l) % 2 == 0 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpo3tfme6k.rs:15:15\n   |\n15 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpo3tfme6k.rs:15:31\n   |\n15 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |                               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpo3tfme6k.rs:17:12\n   |\n17 |   return l[len(l) / 2]\n   |            ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpo3tfme6k.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 9 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0425.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    return 0.0\n  }\n  if len(l) == 1 {\n    return l[0]\n  }\n  l = l.sort()\n  if len(l) % 2 == 0 {\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n  }\n  return l[len(l) / 2]\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293285,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmp79tlzeyp.rs:13:15\n   |\n13 |   l = l.sort()\n   |               ^ help: add `;` here\n14 |   if len(l) % 2 == 0 {\n   |   -- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmp79tlzeyp.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp79tlzeyp.rs:10:6\n   |\n10 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp79tlzeyp.rs:14:6\n   |\n14 |   if len(l) % 2 == 0 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp79tlzeyp.rs:15:15\n   |\n15 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp79tlzeyp.rs:15:31\n   |\n15 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |                               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp79tlzeyp.rs:17:12\n   |\n17 |   return l[len(l) / 2]\n   |            ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp79tlzeyp.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp79tlzeyp.rs:13:7\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |              ---------- expected due to this parameter type\n...\n13 |   l = l.sort()\n   |       ^^^^^^^^ expected struct `Vec`, found `()`\n   |\n   = note: expected struct `Vec<isize>`\n           found unit type `()`\n\nerror: aborting due to 9 previous errors\n\nSome errors have detailed explanations: E0308, E0425.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  if (l.len() % 2 == 0) {\n    return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n  } else {\n    return l[l.len() / 2];\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmp7kr89tld.rs:9:6\n  |\n9 |   if (l.len() % 2 == 0) {\n  |      ^                ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n9 -   if (l.len() % 2 == 0) {\n9 +   if l.len() % 2 == 0 {\n  | \n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp7kr89tld.rs:7:9\n    |\n7   |     l = l.map(|x| -x);\n    |           ^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]: Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp7kr89tld.rs:8:7\n  |\n6 | fn median(l: Vec<isize>) -> f64 {\n  |              ---------- expected due to this parameter type\n7 |   l = l.map(|x| -x);\n8 |   l = l.sort();\n  |       ^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmp7kr89tld.rs:10:50\n   |\n10 |     return (l[l.len() / 2] + l[l.len() / 2 - 1]) / 2.0;\n   |                                                  ^ no implementation for `isize / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp7kr89tld.rs:12:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n12 |     return l[l.len() / 2];\n   |            ^^^^^^^^^^^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 4 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median called on empty vector\")\n  }\n\n  l.sort()\n  if len(l) % 2 == 0 {\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n  } else {\n    return l[len(l) / 2]\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293285,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmpajlqhf91.rs:11:11\n   |\n11 |   l.sort()\n   |           ^ help: add `;` here\n12 |   if len(l) % 2 == 0 {\n   |   -- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpajlqhf91.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpajlqhf91.rs:8:5\n  |\n8 |     panic(\"median called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median called on empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpajlqhf91.rs:12:6\n   |\n12 |   if len(l) % 2 == 0 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpajlqhf91.rs:13:15\n   |\n13 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpajlqhf91.rs:13:31\n   |\n13 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |                               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpajlqhf91.rs:15:14\n   |\n15 |     return l[len(l) / 2]\n   |              ^^^ not found in this scope\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0423, E0425.\nFor more information about an error, try `rustc --explain E0423`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median called on empty vector\")\n  }\n\n  l.sort()\n  if len(l) % 2 == 1 {\n    return l[(len(l) - 1) / 2]\n  } else {\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n  }\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmp8782vqy3.rs:11:11\n   |\n11 |   l.sort()\n   |           ^ help: add `;` here\n12 |   if len(l) % 2 == 1 {\n   |   -- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmp8782vqy3.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmp8782vqy3.rs:8:5\n  |\n8 |     panic(\"median called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median called on empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp8782vqy3.rs:12:6\n   |\n12 |   if len(l) % 2 == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp8782vqy3.rs:13:15\n   |\n13 |     return l[(len(l) - 1) / 2]\n   |               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp8782vqy3.rs:15:15\n   |\n15 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp8782vqy3.rs:15:31\n   |\n15 |     return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2.0\n   |                               ^^^ not found in this scope\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0423, E0425.\nFor more information about an error, try `rustc --explain E0423`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  if len(l) == 0 {\n    panic(\"median() called on empty vector\")\n  }\n  if len(l) == 1 {\n    return l[0]\n  }\n  l.sort()\n  if len(l) % 2 == 0 {\n    return (l[len(l) / 2 - 1] + l[len(l) / 2]) / 2.0\n  }\n  return l[len(l) / 2]\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293285,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `if`\n  --> /tmp/tmpaz2wyqm0.rs:13:11\n   |\n13 |   l.sort()\n   |           ^ help: add `;` here\n14 |   if len(l) % 2 == 0 {\n   |   -- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpaz2wyqm0.rs:7:6\n  |\n7 |   if len(l) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpaz2wyqm0.rs:8:5\n  |\n8 |     panic(\"median() called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"median() called on empty vector\")\n  |          +\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpaz2wyqm0.rs:10:6\n   |\n10 |   if len(l) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpaz2wyqm0.rs:14:6\n   |\n14 |   if len(l) % 2 == 0 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpaz2wyqm0.rs:15:15\n   |\n15 |     return (l[len(l) / 2 - 1] + l[len(l) / 2]) / 2.0\n   |               ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpaz2wyqm0.rs:15:35\n   |\n15 |     return (l[len(l) / 2 - 1] + l[len(l) / 2]) / 2.0\n   |                                   ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpaz2wyqm0.rs:17:12\n   |\n17 |   return l[len(l) / 2]\n   |            ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpaz2wyqm0.rs:11:12\n   |\n6  | fn median(l: Vec<isize>) -> f64 {\n   |                             --- expected `f64` because of return type\n...\n11 |     return l[0]\n   |            ^^^^ expected `f64`, found `isize`\n\nerror: aborting due to 9 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0425.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return median of elements in the vector l.\n/// >>> median(vec![3, 1, 2, 4, 5])\n/// 3.0\n/// >>> median(vec![-10, 4, 6, 1000, 10, 20])\n/// 15.0\nfn median(l: Vec<isize>) -> f64 {\n  l = l.map(|x| -x);\n  l = l.sort();\n  l = l.take(l.length / 2);\n  return l.reduce((a, b) => a + b) / l.length;\n}\n\nfn main() {\n    let candidate = median;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), 3.0);\n    assert_eq!(candidate(vec![-10, 4, 6, 1000, 10, 20]), 8.0);\n    assert_eq!(candidate(vec![5]), 5.0);\n    assert_eq!(candidate(vec![6, 5]), 5.5);\n    assert_eq!(candidate(vec![8, 1, 3, 9, 9, 2, 7]), 7.0);\n}\n",
      "timestamp": 1664293284,
      "stdout": "",
      "stderr": "error: expected one of `)`, `,`, `.`, `?`, or an operator, found `=>`\n  --> /tmp/tmpgakfib5p.rs:10:26\n   |\n10 |   return l.reduce((a, b) => a + b) / l.length;\n   |                          ^^ expected one of `)`, `,`, `.`, `?`, or an operator\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
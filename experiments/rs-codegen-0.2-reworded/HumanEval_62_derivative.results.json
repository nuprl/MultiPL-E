{
  "name": "HumanEval_62_derivative",
  "language": "rs",
  "prompt": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n",
  "tests": "}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 0 {\n    return Vec::new(0)\n  }\n  let deriv = Vec::new(len(xs) - 1)\n  for i in 0..(len(xs) - 1) {\n    deriv[i] = xs[i + 1] - xs[i]\n  }\n  return deriv\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmprghbmkx5.rs:12:36\n   |\n12 |   let deriv = Vec::new(len(xs) - 1)\n   |                                    ^ help: add `;` here\n13 |   for i in 0..(len(xs) - 1) {\n   |   --- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmprghbmkx5.rs:9:6\n  |\n9 |   if len(xs) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmprghbmkx5.rs:12:24\n   |\n12 |   let deriv = Vec::new(len(xs) - 1)\n   |                        ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmprghbmkx5.rs:13:16\n   |\n13 |   for i in 0..(len(xs) - 1) {\n   |                ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmprghbmkx5.rs:10:12\n    |\n10  |     return Vec::new(0)\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmprghbmkx5.rs:12:15\n    |\n12  |   let deriv = Vec::new(len(xs) - 1)\n    |               ^^^^^^^^ ----------- supplied 1 argument\n    |               |\n    |               expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let d = Vec::new(n);\n  for (let i = 0; i < n; i++) {\n    d[i] = xs[i + 1] - xs[i];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpr10kq8cg.rs:11:8\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpr10kq8cg.rs:11:12\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpr10kq8cg.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpr10kq8cg.rs:11:13\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpr10kq8cg.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpr10kq8cg.rs:10:11\n    |\n10  |   let d = Vec::new(n);\n    |           ^^^^^^^^ - supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  if (n == 0) {\n    return Vec::new(0);\n  }\n  let d = Vec::new(n - 1);\n  for (let i = n - 1; i >= 0; i--) {\n    d[i] = xs[i] * (i + 1);\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpnv48rt1m.rs:14:8\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpnv48rt1m.rs:14:12\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpnv48rt1m.rs:14:14\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpnv48rt1m.rs:14:13\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpnv48rt1m.rs:14:14\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected expression\n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpnv48rt1m.rs:10:6\n   |\n10 |   if (n == 0) {\n   |      ^      ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n10 -   if (n == 0) {\n10 +   if n == 0 {\n   | \n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpnv48rt1m.rs:11:12\n    |\n11  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpnv48rt1m.rs:13:11\n    |\n13  |   let d = Vec::new(n - 1);\n    |           ^^^^^^^^ ----- supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors; 1 warning emitted\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let dxs: Vec<isize> = Vec::new(xs.len - 1);\n  for (i in 0..xs.len - 1) {\n    dxs[i] = xs[i + 1] - xs[i];\n  }\n  return dxs;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n  --> /tmp/tmpksv_0_km.rs:10:10\n   |\n10 |   for (i in 0..xs.len - 1) {\n   |          ^^ expected one of `)`, `,`, `@`, or `|`\n\nerror: unexpected parentheses surrounding `for` loop head\n  --> /tmp/tmpksv_0_km.rs:10:7\n   |\n10 |   for (i in 0..xs.len - 1) {\n   |       ^                  ^\n   |\nhelp: remove parentheses in `for` loop\n   |\n10 -   for (i in 0..xs.len - 1) {\n10 +   for i in 0..xs.len - 1 {\n   | \n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpksv_0_km.rs:9:37\n  |\n9 |   let dxs: Vec<isize> = Vec::new(xs.len - 1);\n  |                                     ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let dxs: Vec<isize> = Vec::new(xs.len() - 1);\n  |                                        ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpksv_0_km.rs:9:25\n    |\n9   |   let dxs: Vec<isize> = Vec::new(xs.len - 1);\n    |                         ^^^^^^^^ ---------- supplied 1 argument\n    |                         |\n    |                         expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpksv_0_km.rs:10:19\n   |\n10 |   for (i in 0..xs.len - 1) {\n   |                   ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n10 |   for (i in 0..xs.len() - 1) {\n   |                      ++\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len;\n  if n == 0 {\n    return Vec::new(0);\n  }\n  let d = Vec::new(n - 1);\n  for (let i = n - 1; i >= 0; i--) {\n    d[i] = xs[i] * (i + 1);\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpmnckfgwx.rs:14:8\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpmnckfgwx.rs:14:12\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpmnckfgwx.rs:14:14\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpmnckfgwx.rs:14:13\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpmnckfgwx.rs:14:14\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected expression\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpmnckfgwx.rs:9:14\n  |\n9 |   let n = xs.len;\n  |              ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let n = xs.len();\n  |                 ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpmnckfgwx.rs:11:12\n    |\n11  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpmnckfgwx.rs:13:11\n    |\n13  |   let d = Vec::new(n - 1);\n    |           ^^^^^^^^ ----- supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 8 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 1 {\n    return Vec::new(0);\n  }\n\n  let result = Vec::new(xs.len - 1);\n  for (let i = 1; i < xs.len; i++) {\n    result[i - 1] = xs[i] * i;\n  }\n  return result;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpipet4xk7.rs:14:8\n   |\n14 |   for (let i = 1; i < xs.len; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpipet4xk7.rs:14:12\n   |\n14 |   for (let i = 1; i < xs.len; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpipet4xk7.rs:14:14\n   |\n14 |   for (let i = 1; i < xs.len; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpipet4xk7.rs:14:13\n   |\n14 |   for (let i = 1; i < xs.len; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpipet4xk7.rs:14:14\n   |\n14 |   for (let i = 1; i < xs.len; i++) {\n   |              ^ expected expression\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpipet4xk7.rs:9:6\n  |\n9 |   if len(xs) == 1 {\n  |      ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpipet4xk7.rs:10:12\n    |\n10  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpipet4xk7.rs:13:28\n   |\n13 |   let result = Vec::new(xs.len - 1);\n   |                            ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n13 |   let result = Vec::new(xs.len() - 1);\n   |                               ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpipet4xk7.rs:13:16\n    |\n13  |   let result = Vec::new(xs.len - 1);\n    |                ^^^^^^^^ ---------- supplied 1 argument\n    |                |\n    |                expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: abo",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  if (n == 0) {\n    return Vec::new(0);\n  }\n  let d = Vec::new(n - 1);\n  for (let i = n - 1; i >= 0; i--) {\n    d[i] = xs[i] * (i + 1);\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpnv48rt1m.rs:14:8\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpnv48rt1m.rs:14:12\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpnv48rt1m.rs:14:14\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpnv48rt1m.rs:14:13\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpnv48rt1m.rs:14:14\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected expression\n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpnv48rt1m.rs:10:6\n   |\n10 |   if (n == 0) {\n   |      ^      ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n10 -   if (n == 0) {\n10 +   if n == 0 {\n   | \n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpnv48rt1m.rs:11:12\n    |\n11  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpnv48rt1m.rs:13:11\n    |\n13  |   let d = Vec::new(n - 1);\n    |           ^^^^^^^^ ----- supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors; 1 warning emitted\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let result = Vec::new(n);\n  for (let i = 0; i < n; i++) {\n    result[i] = xs[i + 1] - xs[i];\n  }\n  return result;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmp0aaq3ngd.rs:11:8\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmp0aaq3ngd.rs:11:12\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmp0aaq3ngd.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmp0aaq3ngd.rs:11:13\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmp0aaq3ngd.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp0aaq3ngd.rs:10:16\n    |\n10  |   let result = Vec::new(n);\n    |                ^^^^^^^^ - supplied 1 argument\n    |                |\n    |                expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let d = Vec::new(n);\n  for (let i = 0; i < n - 1; i++) {\n    d[i] = xs[i + 1] - xs[i];\n  }\n  d[n - 1] = 0;\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmp0o7krbqn.rs:11:8\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmp0o7krbqn.rs:11:12\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmp0o7krbqn.rs:11:14\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmp0o7krbqn.rs:11:13\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmp0o7krbqn.rs:11:14\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp0o7krbqn.rs:10:11\n    |\n10  |   let d = Vec::new(n);\n    |           ^^^^^^^^ - supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 0 {\n    return Vec::new(0);\n  }\n  let dxs = Vec::new(len(xs) - 1);\n  for i in 0..(len(xs) - 1) {\n    dxs[i] = xs[i + 1] - xs[i];\n  }\n  return dxs;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpu4vwro9r.rs:9:6\n  |\n9 |   if len(xs) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpu4vwro9r.rs:12:22\n   |\n12 |   let dxs = Vec::new(len(xs) - 1);\n   |                      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpu4vwro9r.rs:13:16\n   |\n13 |   for i in 0..(len(xs) - 1) {\n   |                ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpu4vwro9r.rs:10:12\n    |\n10  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpu4vwro9r.rs:12:13\n    |\n12  |   let dxs = Vec::new(len(xs) - 1);\n    |             ^^^^^^^^ ----------- supplied 1 argument\n    |             |\n    |             expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len;\n  if n == 0 {\n    return Vec::new(0);\n  }\n  let d = xs[n - 1];\n  for (let i = n - 2; i >= 0; i--) {\n    d = d * xs[i] + xs[i + 1];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpgx_r5b0h.rs:14:8\n   |\n14 |   for (let i = n - 2; i >= 0; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpgx_r5b0h.rs:14:12\n   |\n14 |   for (let i = n - 2; i >= 0; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpgx_r5b0h.rs:14:14\n   |\n14 |   for (let i = n - 2; i >= 0; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpgx_r5b0h.rs:14:13\n   |\n14 |   for (let i = n - 2; i >= 0; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpgx_r5b0h.rs:14:14\n   |\n14 |   for (let i = n - 2; i >= 0; i--) {\n   |              ^ expected expression\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpgx_r5b0h.rs:9:14\n  |\n9 |   let n = xs.len;\n  |              ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let n = xs.len();\n  |                 ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpgx_r5b0h.rs:11:12\n    |\n11  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let dxs: Vec<isize> = Vec::new(xs.len - 1);\n  for (let i = 0; i < dxs.len; i++) {\n    dxs[i] = xs[i + 1] - xs[i];\n  }\n  return dxs;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpm8pf3nhf.rs:10:8\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpm8pf3nhf.rs:10:12\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpm8pf3nhf.rs:10:14\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpm8pf3nhf.rs:10:13\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpm8pf3nhf.rs:10:14\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |              ^ expected expression\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpm8pf3nhf.rs:9:37\n  |\n9 |   let dxs: Vec<isize> = Vec::new(xs.len - 1);\n  |                                     ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let dxs: Vec<isize> = Vec::new(xs.len() - 1);\n  |                                        ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpm8pf3nhf.rs:9:25\n    |\n9   |   let dxs: Vec<isize> = Vec::new(xs.len - 1);\n    |                         ^^^^^^^^ ---------- supplied 1 argument\n    |                         |\n    |                         expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let dxs: Vec<isize> = Vec::new(xs.len - 1);\n  for (let i = 0; i < dxs.len; i++) {\n    dxs[i] = xs[i + 1] - xs[i];\n  }\n  return dxs;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpm8pf3nhf.rs:10:8\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpm8pf3nhf.rs:10:12\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpm8pf3nhf.rs:10:14\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpm8pf3nhf.rs:10:13\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpm8pf3nhf.rs:10:14\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |              ^ expected expression\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpm8pf3nhf.rs:9:37\n  |\n9 |   let dxs: Vec<isize> = Vec::new(xs.len - 1);\n  |                                     ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let dxs: Vec<isize> = Vec::new(xs.len() - 1);\n  |                                        ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpm8pf3nhf.rs:9:25\n    |\n9   |   let dxs: Vec<isize> = Vec::new(xs.len - 1);\n    |                         ^^^^^^^^ ---------- supplied 1 argument\n    |                         |\n    |                         expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 0 {\n    return Vec::new(0)\n  }\n\n  let d = xs[0]\n  for i in 1..xs.len() - 1 {\n    d = d + xs[i] * i\n  }\n  return Vec::new(d)\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmpa5z2ysve.rs:13:16\n   |\n13 |   let d = xs[0]\n   |                ^ help: add `;` here\n14 |   for i in 1..xs.len() - 1 {\n   |   --- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpa5z2ysve.rs:9:6\n  |\n9 |   if len(xs) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpa5z2ysve.rs:10:12\n    |\n10  |     return Vec::new(0)\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpa5z2ysve.rs:15:21\n   |\n15 |     d = d + xs[i] * i\n   |                     ^ expected `isize`, found `usize`\n\nerror[E0277]: cannot multiply `isize` by `usize`\n  --> /tmp/tmpa5z2ysve.rs:15:19\n   |\n15 |     d = d + xs[i] * i\n   |                   ^ no implementation for `isize * usize`\n   |\n   = help: the trait `Mul<usize>` is not implemented for `isize`\n   = help: the following other types implement trait `Mul<Rhs>`:\n             <&'a f32 as Mul<f32>>\n             <&'a f64 as Mul<f64>>\n             <&'a i128 as Mul<i128>>\n             <&'a i16 as Mul<i16>>\n             <&'a i32 as Mul<i32>>\n             <&'a i64 as Mul<i64>>\n             <&'a i8 as Mul<i8>>\n             <&'a isize as Mul<isize>>\n           and 49 others\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpa5z2ysve.rs:17:10\n    |\n17  |   return Vec::new(d)\n    |          ^^^^^^^^ - supplied 1 argument\n    |          |\n    |          expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0061, E0277, E0308, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let d = Vec::new(n);\n  for (let i = n - 1; i >= 0; i--) {\n    d[i] = xs[i + 1] - xs[i];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpzzi03qz_.rs:11:8\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpzzi03qz_.rs:11:12\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpzzi03qz_.rs:11:14\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpzzi03qz_.rs:11:13\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpzzi03qz_.rs:11:14\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpzzi03qz_.rs:10:11\n    |\n10  |   let d = Vec::new(n);\n    |           ^^^^^^^^ - supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let d = 0;\n  for (let i = 1; i < xs.len; i++) {\n    d = d + xs[i] * i;\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmp4akaeqnh.rs:10:8\n   |\n10 |   for (let i = 1; i < xs.len; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmp4akaeqnh.rs:10:12\n   |\n10 |   for (let i = 1; i < xs.len; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmp4akaeqnh.rs:10:14\n   |\n10 |   for (let i = 1; i < xs.len; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmp4akaeqnh.rs:10:13\n   |\n10 |   for (let i = 1; i < xs.len; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmp4akaeqnh.rs:10:14\n   |\n10 |   for (let i = 1; i < xs.len; i++) {\n   |              ^ expected expression\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if xs.len == 0 {\n    return xs\n  }\n  let d = xs.len - 1\n  let result = Vec::new(d)\n  for i in 0..d {\n    result[i] = xs[i + 1]\n  }\n  return result\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp9ys66j6e.rs:12:21\n   |\n12 |   let d = xs.len - 1\n   |                     ^ help: add `;` here\n13 |   let result = Vec::new(d)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmp9ys66j6e.rs:13:27\n   |\n13 |   let result = Vec::new(d)\n   |                           ^ help: add `;` here\n14 |   for i in 0..d {\n   |   --- unexpected token\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp9ys66j6e.rs:9:9\n  |\n9 |   if xs.len == 0 {\n  |         ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   if xs.len() == 0 {\n  |            ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmp9ys66j6e.rs:12:14\n   |\n12 |   let d = xs.len - 1\n   |              ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n12 |   let d = xs.len() - 1\n   |                 ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp9ys66j6e.rs:13:16\n    |\n13  |   let result = Vec::new(d)\n    |                ^^^^^^^^ - supplied 1 argument\n    |                |\n    |                expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let d = Vec::new(n);\n  for (let i = 0; i < n; i++) {\n    d[i] = xs[i + 1] - xs[i];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpr10kq8cg.rs:11:8\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpr10kq8cg.rs:11:12\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpr10kq8cg.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpr10kq8cg.rs:11:13\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpr10kq8cg.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpr10kq8cg.rs:10:11\n    |\n10  |   let d = Vec::new(n);\n    |           ^^^^^^^^ - supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 1 {\n    return Vec::from(0);\n  }\n\n  let deriv = Vec::from(0);\n  for i in 0..xs.len() - 1 {\n    deriv = deriv.add(xs.get(i + 1) * i);\n  }\n\n  return deriv;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpqgdrezcu.rs:9:6\n  |\n9 |   if len(xs) == 1 {\n  |      ^^^ not found in this scope\n\nerror[E0277]: the trait bound `Vec<_, _>: From<{integer}>` is not satisfied\n  --> /tmp/tmpqgdrezcu.rs:10:12\n   |\n10 |     return Vec::from(0);\n   |            ^^^^^^^^^ the trait `From<{integer}>` is not implemented for `Vec<_, _>`\n   |\n   = help: the following other types implement trait `From<T>`:\n             <Vec<T, A> as From<Box<[T], A>>>\n             <Vec<T, A> as From<VecDeque<T, A>>>\n             <Vec<T> as From<&[T]>>\n             <Vec<T> as From<&mut [T]>>\n             <Vec<T> as From<BinaryHeap<T>>>\n             <Vec<T> as From<Cow<'a, [T]>>>\n             <Vec<T> as From<[T; N]>>\n             <Vec<u8> as From<&str>>\n           and 2 others\n\nerror[E0277]: the trait bound `Vec<_, _>: From<{integer}>` is not satisfied\n  --> /tmp/tmpqgdrezcu.rs:13:15\n   |\n13 |   let deriv = Vec::from(0);\n   |               ^^^^^^^^^ the trait `From<{integer}>` is not implemented for `Vec<_, _>`\n   |\n   = help: the following other types implement trait `From<T>`:\n             <Vec<T, A> as From<Box<[T], A>>>\n             <Vec<T, A> as From<VecDeque<T, A>>>\n             <Vec<T> as From<&[T]>>\n             <Vec<T> as From<&mut [T]>>\n             <Vec<T> as From<BinaryHeap<T>>>\n             <Vec<T> as From<Cow<'a, [T]>>>\n             <Vec<T> as From<[T; N]>>\n             <Vec<u8> as From<&str>>\n           and 2 others\n\nerror[E0599]: no method named `add` found for struct `Vec<_, _>` in the current scope\n  --> /tmp/tmpqgdrezcu.rs:15:19\n   |\n15 |     deriv = deriv.add(xs.get(i + 1) * i);\n   |                   ^^^ method not found in `Vec<_, _>`\n\nerror[E0369]: cannot multiply `Option<&isize>` by `usize`\n  --> /tmp/tmpqgdrezcu.rs:15:37\n   |\n15 |     deriv = deriv.add(xs.get(i + 1) * i);\n   |                       ------------- ^ - usize\n   |                       |\n   |                       Option<&isize>\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explana",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if xs.len == 0 {\n    return xs\n  }\n  let ds = Vec::new(xs.len - 1)\n  for i in 0..xs.len - 1 {\n    ds[i] = xs[i + 1]\n  }\n  return ds\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmpgtofp4r9.rs:12:32\n   |\n12 |   let ds = Vec::new(xs.len - 1)\n   |                                ^ help: add `;` here\n13 |   for i in 0..xs.len - 1 {\n   |   --- unexpected token\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpgtofp4r9.rs:9:9\n  |\n9 |   if xs.len == 0 {\n  |         ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   if xs.len() == 0 {\n  |            ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpgtofp4r9.rs:12:24\n   |\n12 |   let ds = Vec::new(xs.len - 1)\n   |                        ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n12 |   let ds = Vec::new(xs.len() - 1)\n   |                           ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpgtofp4r9.rs:12:12\n    |\n12  |   let ds = Vec::new(xs.len - 1)\n    |            ^^^^^^^^ ---------- supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpgtofp4r9.rs:13:18\n   |\n13 |   for i in 0..xs.len - 1 {\n   |                  ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n13 |   for i in 0..xs.len() - 1 {\n   |                     ++\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let ds = Vec::new(xs.len - 1);\n  for (let i = 0; i < ds.len; i++) {\n    ds[i] = xs[i + 1] - xs[i];\n  }\n  return ds;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpkv0iqxsx.rs:10:8\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpkv0iqxsx.rs:10:12\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpkv0iqxsx.rs:10:14\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpkv0iqxsx.rs:10:13\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpkv0iqxsx.rs:10:14\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |              ^ expected expression\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpkv0iqxsx.rs:9:24\n  |\n9 |   let ds = Vec::new(xs.len - 1);\n  |                        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let ds = Vec::new(xs.len() - 1);\n  |                           ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpkv0iqxsx.rs:9:12\n    |\n9   |   let ds = Vec::new(xs.len - 1);\n    |            ^^^^^^^^ ---------- supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let d = Vec::new(n);\n  for (let i = 0; i < n - 1; i++) {\n    d[i] = xs[i + 1] - xs[i];\n  }\n  d[n - 1] = 0;\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmp0o7krbqn.rs:11:8\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmp0o7krbqn.rs:11:12\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmp0o7krbqn.rs:11:14\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmp0o7krbqn.rs:11:13\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmp0o7krbqn.rs:11:14\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp0o7krbqn.rs:10:11\n    |\n10  |   let d = Vec::new(n);\n    |           ^^^^^^^^ - supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let ds = Vec::new(xs.len - 1);\n  for (let i = 0; i < ds.len; i++) {\n    ds[i] = xs[i + 1] - xs[i];\n  }\n  return ds;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpkv0iqxsx.rs:10:8\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpkv0iqxsx.rs:10:12\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpkv0iqxsx.rs:10:14\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpkv0iqxsx.rs:10:13\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpkv0iqxsx.rs:10:14\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |              ^ expected expression\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpkv0iqxsx.rs:9:24\n  |\n9 |   let ds = Vec::new(xs.len - 1);\n  |                        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let ds = Vec::new(xs.len() - 1);\n  |                           ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpkv0iqxsx.rs:9:12\n    |\n9   |   let ds = Vec::new(xs.len - 1);\n    |            ^^^^^^^^ ---------- supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let dxs = Vec::new(xs.len - 1);\n  for (let i = 0; i < dxs.len; i++) {\n    dxs[i] = xs[i + 1] - xs[i];\n  }\n  return dxs;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmp9477d4lt.rs:10:8\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmp9477d4lt.rs:10:12\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmp9477d4lt.rs:10:14\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmp9477d4lt.rs:10:13\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmp9477d4lt.rs:10:14\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |              ^ expected expression\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp9477d4lt.rs:9:25\n  |\n9 |   let dxs = Vec::new(xs.len - 1);\n  |                         ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let dxs = Vec::new(xs.len() - 1);\n  |                            ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp9477d4lt.rs:9:13\n    |\n9   |   let dxs = Vec::new(xs.len - 1);\n    |             ^^^^^^^^ ---------- supplied 1 argument\n    |             |\n    |             expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let ds = Vec::new(xs.len - 1);\n  for (let i = 0; i < ds.len; i++) {\n    ds[i] = xs[i + 1] - xs[i];\n  }\n  return ds;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpkv0iqxsx.rs:10:8\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpkv0iqxsx.rs:10:12\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpkv0iqxsx.rs:10:14\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpkv0iqxsx.rs:10:13\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpkv0iqxsx.rs:10:14\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |              ^ expected expression\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpkv0iqxsx.rs:9:24\n  |\n9 |   let ds = Vec::new(xs.len - 1);\n  |                        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let ds = Vec::new(xs.len() - 1);\n  |                           ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpkv0iqxsx.rs:9:12\n    |\n9   |   let ds = Vec::new(xs.len - 1);\n    |            ^^^^^^^^ ---------- supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  if (n == 0) {\n    return Vec::new(0);\n  }\n  let d = Vec::new(n - 1);\n  for (let i = 1; i < n; i++) {\n    d[i - 1] = xs[i] * i;\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpj0hxops_.rs:14:8\n   |\n14 |   for (let i = 1; i < n; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpj0hxops_.rs:14:12\n   |\n14 |   for (let i = 1; i < n; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpj0hxops_.rs:14:14\n   |\n14 |   for (let i = 1; i < n; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpj0hxops_.rs:14:13\n   |\n14 |   for (let i = 1; i < n; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpj0hxops_.rs:14:14\n   |\n14 |   for (let i = 1; i < n; i++) {\n   |              ^ expected expression\n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpj0hxops_.rs:10:6\n   |\n10 |   if (n == 0) {\n   |      ^      ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n10 -   if (n == 0) {\n10 +   if n == 0 {\n   | \n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpj0hxops_.rs:11:12\n    |\n11  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpj0hxops_.rs:13:11\n    |\n13  |   let d = Vec::new(n - 1);\n    |           ^^^^^^^^ ----- supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors; 1 warning emitted\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let d = 0;\n  for (i in 0..xs.len) {\n    d = d + xs[i] * i;\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n  --> /tmp/tmpk1y5r8fb.rs:10:10\n   |\n10 |   for (i in 0..xs.len) {\n   |          ^^ expected one of `)`, `,`, `@`, or `|`\n\nerror: unexpected parentheses surrounding `for` loop head\n  --> /tmp/tmpk1y5r8fb.rs:10:7\n   |\n10 |   for (i in 0..xs.len) {\n   |       ^              ^\n   |\nhelp: remove parentheses in `for` loop\n   |\n10 -   for (i in 0..xs.len) {\n10 +   for i in 0..xs.len {\n   | \n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpk1y5r8fb.rs:10:19\n   |\n10 |   for (i in 0..xs.len) {\n   |                   ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n10 |   for (i in 0..xs.len()) {\n   |                      ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpk1y5r8fb.rs:11:21\n   |\n11 |     d = d + xs[i] * i;\n   |                     ^ expected `isize`, found `usize`\n\nerror[E0277]: cannot multiply `isize` by `usize`\n  --> /tmp/tmpk1y5r8fb.rs:11:19\n   |\n11 |     d = d + xs[i] * i;\n   |                   ^ no implementation for `isize * usize`\n   |\n   = help: the trait `Mul<usize>` is not implemented for `isize`\n   = help: the following other types implement trait `Mul<Rhs>`:\n             <&'a f32 as Mul<f32>>\n             <&'a f64 as Mul<f64>>\n             <&'a i128 as Mul<i128>>\n             <&'a i16 as Mul<i16>>\n             <&'a i32 as Mul<i32>>\n             <&'a i64 as Mul<i64>>\n             <&'a i8 as Mul<i8>>\n             <&'a isize as Mul<isize>>\n           and 49 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpk1y5r8fb.rs:13:10\n   |\n8  | fn derivative(xs: Vec<isize>) -> Vec<isize> {\n   |                                  ---------- expected `Vec<isize>` because of return type\n...\n13 |   return d;\n   |          ^ expected struct `Vec`, found `isize`\n   |\n   = note: expected struct `Vec<isize>`\n                found type `isize`\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0277, E0308, E0616.\nFor more information about an error, try `rustc --exp",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let d = 0;\n  for (let i = xs.len() - 1; i >= 0; i--) {\n    d = d * xs[i] + xs[i + 1];\n  }\n  return Vec::from(d);\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpnyjhst3u.rs:10:8\n   |\n10 |   for (let i = xs.len() - 1; i >= 0; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpnyjhst3u.rs:10:12\n   |\n10 |   for (let i = xs.len() - 1; i >= 0; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpnyjhst3u.rs:10:14\n   |\n10 |   for (let i = xs.len() - 1; i >= 0; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpnyjhst3u.rs:10:13\n   |\n10 |   for (let i = xs.len() - 1; i >= 0; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpnyjhst3u.rs:10:14\n   |\n10 |   for (let i = xs.len() - 1; i >= 0; i--) {\n   |              ^ expected expression\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if xs.len == 0 {\n    return xs\n  }\n  let d = xs.len - 1\n  let dxs = Vec::new(d)\n  for i in 0..d {\n    dxs[i] = xs[i + 1]\n  }\n  return dxs\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp4kxcwm0x.rs:12:21\n   |\n12 |   let d = xs.len - 1\n   |                     ^ help: add `;` here\n13 |   let dxs = Vec::new(d)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmp4kxcwm0x.rs:13:24\n   |\n13 |   let dxs = Vec::new(d)\n   |                        ^ help: add `;` here\n14 |   for i in 0..d {\n   |   --- unexpected token\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp4kxcwm0x.rs:9:9\n  |\n9 |   if xs.len == 0 {\n  |         ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   if xs.len() == 0 {\n  |            ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmp4kxcwm0x.rs:12:14\n   |\n12 |   let d = xs.len - 1\n   |              ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n12 |   let d = xs.len() - 1\n   |                 ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp4kxcwm0x.rs:13:13\n    |\n13  |   let dxs = Vec::new(d)\n    |             ^^^^^^^^ - supplied 1 argument\n    |             |\n    |             expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len;\n  let d = Vec::new(n);\n  for (let i = n - 1; i >= 0; i--) {\n    d[i] = xs[i + 1] * n - xs[i];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpua3pjt9j.rs:11:8\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpua3pjt9j.rs:11:12\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpua3pjt9j.rs:11:14\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpua3pjt9j.rs:11:13\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpua3pjt9j.rs:11:14\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected expression\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpua3pjt9j.rs:9:14\n  |\n9 |   let n = xs.len;\n  |              ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let n = xs.len();\n  |                 ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpua3pjt9j.rs:10:11\n    |\n10  |   let d = Vec::new(n);\n    |           ^^^^^^^^ - supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 0 {\n    return Vec::new(0)\n  }\n\n  let result = Vec::new(len(xs) - 1)\n  for i in 0..(len(xs) - 1) {\n    result[i] = xs[i + 1]\n  }\n  return result\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmp3zwle92b.rs:13:37\n   |\n13 |   let result = Vec::new(len(xs) - 1)\n   |                                     ^ help: add `;` here\n14 |   for i in 0..(len(xs) - 1) {\n   |   --- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmp3zwle92b.rs:9:6\n  |\n9 |   if len(xs) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp3zwle92b.rs:13:25\n   |\n13 |   let result = Vec::new(len(xs) - 1)\n   |                         ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp3zwle92b.rs:14:16\n   |\n14 |   for i in 0..(len(xs) - 1) {\n   |                ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp3zwle92b.rs:10:12\n    |\n10  |     return Vec::new(0)\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp3zwle92b.rs:13:16\n    |\n13  |   let result = Vec::new(len(xs) - 1)\n    |                ^^^^^^^^ ----------- supplied 1 argument\n    |                |\n    |                expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 0 {\n    return Vec::new(0);\n  }\n  let deriv = Vec::new(len(xs) - 1);\n  for (i in 0..(len(xs) - 1)) {\n    deriv[i] = xs[i + 1] - xs[i];\n  }\n  return deriv;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n  --> /tmp/tmpzmimo2fb.rs:13:10\n   |\n13 |   for (i in 0..(len(xs) - 1)) {\n   |          ^^ expected one of `)`, `,`, `@`, or `|`\n\nerror: unexpected parentheses surrounding `for` loop head\n  --> /tmp/tmpzmimo2fb.rs:13:7\n   |\n13 |   for (i in 0..(len(xs) - 1)) {\n   |       ^                     ^\n   |\nhelp: remove parentheses in `for` loop\n   |\n13 -   for (i in 0..(len(xs) - 1)) {\n13 +   for i in 0..(len(xs) - 1) {\n   | \n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpzmimo2fb.rs:9:6\n  |\n9 |   if len(xs) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpzmimo2fb.rs:12:24\n   |\n12 |   let deriv = Vec::new(len(xs) - 1);\n   |                        ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpzmimo2fb.rs:13:17\n   |\n13 |   for (i in 0..(len(xs) - 1)) {\n   |                 ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpzmimo2fb.rs:10:12\n    |\n10  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpzmimo2fb.rs:12:15\n    |\n12  |   let deriv = Vec::new(len(xs) - 1);\n    |               ^^^^^^^^ ----------- supplied 1 argument\n    |               |\n    |               expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let d = vec![];\n  for (let i = n - 1; i >= 0; i--) {\n    d = vec![d.len() + 1];\n    d[0] = 0;\n    for (let j = i; j >= 0; j--) {\n      d[j + 1] = d[j] + xs[j];\n    }\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmp330n2db3.rs:11:8\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmp330n2db3.rs:11:12\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmp330n2db3.rs:11:14\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmp330n2db3.rs:11:13\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmp330n2db3.rs:11:14\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected expression\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let (n, d) = derivative_coeffs(xs);\n  return Vec::from(n, d);\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `derivative_coeffs` in this scope\n --> /tmp/tmp7vxzd6ic.rs:9:16\n  |\n9 |   let (n, d) = derivative_coeffs(xs);\n  |                ^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0061]: this function takes 1 argument but 2 arguments were supplied\n   --> /tmp/tmp7vxzd6ic.rs:10:10\n    |\n10  |   return Vec::from(n, d);\n    |          ^^^^^^^^^ -  - supplied 2 arguments\n    |          |\n    |          expected 1 argument\n    |\nnote: associated function defined here\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 0 {\n    return Vec::new(0);\n  }\n\n  let dxs = Vec::new(len(xs) - 1);\n  for i in 0..(len(xs) - 1) {\n    dxs[i] = xs[i + 1] - xs[i];\n  }\n\n  return dxs;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `len` in this scope\n --> /tmp/tmp5dt1ys7u.rs:9:6\n  |\n9 |   if len(xs) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp5dt1ys7u.rs:13:22\n   |\n13 |   let dxs = Vec::new(len(xs) - 1);\n   |                      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp5dt1ys7u.rs:14:16\n   |\n14 |   for i in 0..(len(xs) - 1) {\n   |                ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp5dt1ys7u.rs:10:12\n    |\n10  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp5dt1ys7u.rs:13:13\n    |\n13  |   let dxs = Vec::new(len(xs) - 1);\n    |             ^^^^^^^^ ----------- supplied 1 argument\n    |             |\n    |             expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let dxs = Vec::new(xs.len - 1);\n  for (let i = 1; i < xs.len; i++) {\n    dxs[i - 1] = xs[i] * i;\n  }\n  return dxs;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmp96lm5bwg.rs:10:8\n   |\n10 |   for (let i = 1; i < xs.len; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmp96lm5bwg.rs:10:12\n   |\n10 |   for (let i = 1; i < xs.len; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmp96lm5bwg.rs:10:14\n   |\n10 |   for (let i = 1; i < xs.len; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmp96lm5bwg.rs:10:13\n   |\n10 |   for (let i = 1; i < xs.len; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmp96lm5bwg.rs:10:14\n   |\n10 |   for (let i = 1; i < xs.len; i++) {\n   |              ^ expected expression\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp96lm5bwg.rs:9:25\n  |\n9 |   let dxs = Vec::new(xs.len - 1);\n  |                         ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let dxs = Vec::new(xs.len() - 1);\n  |                            ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp96lm5bwg.rs:9:13\n    |\n9   |   let dxs = Vec::new(xs.len - 1);\n    |             ^^^^^^^^ ---------- supplied 1 argument\n    |             |\n    |             expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let dxs: Vec<isize> = Vec::new(xs.len - 1);\n  for (let i = 0; i < dxs.len; i++) {\n    dxs[i] = xs[i + 1] - xs[i];\n  }\n  return dxs;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpm8pf3nhf.rs:10:8\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpm8pf3nhf.rs:10:12\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpm8pf3nhf.rs:10:14\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpm8pf3nhf.rs:10:13\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpm8pf3nhf.rs:10:14\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |              ^ expected expression\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpm8pf3nhf.rs:9:37\n  |\n9 |   let dxs: Vec<isize> = Vec::new(xs.len - 1);\n  |                                     ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let dxs: Vec<isize> = Vec::new(xs.len() - 1);\n  |                                        ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpm8pf3nhf.rs:9:25\n    |\n9   |   let dxs: Vec<isize> = Vec::new(xs.len - 1);\n    |                         ^^^^^^^^ ---------- supplied 1 argument\n    |                         |\n    |                         expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 0 {\n    return Vec::new(0)\n  }\n  let d = xs[0]\n  for i in 1..xs.len() {\n    d = d + xs[i] * i\n  }\n  return d\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmpe5j3yzfq.rs:12:16\n   |\n12 |   let d = xs[0]\n   |                ^ help: add `;` here\n13 |   for i in 1..xs.len() {\n   |   --- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpe5j3yzfq.rs:9:6\n  |\n9 |   if len(xs) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpe5j3yzfq.rs:10:12\n    |\n10  |     return Vec::new(0)\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpe5j3yzfq.rs:14:21\n   |\n14 |     d = d + xs[i] * i\n   |                     ^ expected `isize`, found `usize`\n\nerror[E0277]: cannot multiply `isize` by `usize`\n  --> /tmp/tmpe5j3yzfq.rs:14:19\n   |\n14 |     d = d + xs[i] * i\n   |                   ^ no implementation for `isize * usize`\n   |\n   = help: the trait `Mul<usize>` is not implemented for `isize`\n   = help: the following other types implement trait `Mul<Rhs>`:\n             <&'a f32 as Mul<f32>>\n             <&'a f64 as Mul<f64>>\n             <&'a i128 as Mul<i128>>\n             <&'a i16 as Mul<i16>>\n             <&'a i32 as Mul<i32>>\n             <&'a i64 as Mul<i64>>\n             <&'a i8 as Mul<i8>>\n             <&'a isize as Mul<isize>>\n           and 49 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpe5j3yzfq.rs:16:10\n   |\n8  | fn derivative(xs: Vec<isize>) -> Vec<isize> {\n   |                                  ---------- expected `Vec<isize>` because of return type\n...\n16 |   return d\n   |          ^ expected struct `Vec`, found `isize`\n   |\n   = note: expected struct `Vec<isize>`\n                found type `isize`\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0061, E0277, E0308, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 1 {\n    return Vec::new(0)\n  }\n\n  let deriv = Vec::new(len(xs) - 1)\n  for i in 0..(len(xs) - 1) {\n    deriv[i] = (xs[i + 1] - xs[i])\n  }\n  return deriv\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmpgktd1w2g.rs:13:36\n   |\n13 |   let deriv = Vec::new(len(xs) - 1)\n   |                                    ^ help: add `;` here\n14 |   for i in 0..(len(xs) - 1) {\n   |   --- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpgktd1w2g.rs:9:6\n  |\n9 |   if len(xs) == 1 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpgktd1w2g.rs:13:24\n   |\n13 |   let deriv = Vec::new(len(xs) - 1)\n   |                        ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpgktd1w2g.rs:14:16\n   |\n14 |   for i in 0..(len(xs) - 1) {\n   |                ^^^ not found in this scope\n\nwarning: unnecessary parentheses around assigned value\n  --> /tmp/tmpgktd1w2g.rs:15:16\n   |\n15 |     deriv[i] = (xs[i + 1] - xs[i])\n   |                ^                 ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n15 -     deriv[i] = (xs[i + 1] - xs[i])\n15 +     deriv[i] = xs[i + 1] - xs[i]\n   | \n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpgktd1w2g.rs:10:12\n    |\n10  |     return Vec::new(0)\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpgktd1w2g.rs:13:15\n    |\n13  |   let deriv = Vec::new(len(xs) - 1)\n    |               ^^^^^^^^ ----------- supplied 1 argument\n    |               |\n    |               expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  if (n == 0) {\n    return Vec::new(0);\n  }\n  let d = Vec::new(n - 1);\n  for (let i = 0; i < n - 1; i++) {\n    d[i] = xs[i + 1] - xs[i];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpfnayj0h4.rs:14:8\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpfnayj0h4.rs:14:12\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpfnayj0h4.rs:14:14\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpfnayj0h4.rs:14:13\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpfnayj0h4.rs:14:14\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |              ^ expected expression\n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpfnayj0h4.rs:10:6\n   |\n10 |   if (n == 0) {\n   |      ^      ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n10 -   if (n == 0) {\n10 +   if n == 0 {\n   | \n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpfnayj0h4.rs:11:12\n    |\n11  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpfnayj0h4.rs:13:11\n    |\n13  |   let d = Vec::new(n - 1);\n    |           ^^^^^^^^ ----- supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors; 1 warning emitted\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  if (n == 0) {\n    return Vec::new(0);\n  }\n  let d = Vec::new(n - 1);\n  for (let i = 1; i < n; i++) {\n    d[i - 1] = xs[i] * i;\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpj0hxops_.rs:14:8\n   |\n14 |   for (let i = 1; i < n; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpj0hxops_.rs:14:12\n   |\n14 |   for (let i = 1; i < n; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpj0hxops_.rs:14:14\n   |\n14 |   for (let i = 1; i < n; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpj0hxops_.rs:14:13\n   |\n14 |   for (let i = 1; i < n; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpj0hxops_.rs:14:14\n   |\n14 |   for (let i = 1; i < n; i++) {\n   |              ^ expected expression\n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpj0hxops_.rs:10:6\n   |\n10 |   if (n == 0) {\n   |      ^      ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n10 -   if (n == 0) {\n10 +   if n == 0 {\n   | \n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpj0hxops_.rs:11:12\n    |\n11  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpj0hxops_.rs:13:11\n    |\n13  |   let d = Vec::new(n - 1);\n    |           ^^^^^^^^ ----- supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors; 1 warning emitted\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let ds = Vec::new(xs.len - 1);\n  for (let i = 0; i < ds.len; i++) {\n    ds[i] = xs[i + 1] - xs[i];\n  }\n  return ds;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpkv0iqxsx.rs:10:8\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpkv0iqxsx.rs:10:12\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpkv0iqxsx.rs:10:14\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpkv0iqxsx.rs:10:13\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpkv0iqxsx.rs:10:14\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |              ^ expected expression\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpkv0iqxsx.rs:9:24\n  |\n9 |   let ds = Vec::new(xs.len - 1);\n  |                        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let ds = Vec::new(xs.len() - 1);\n  |                           ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpkv0iqxsx.rs:9:12\n    |\n9   |   let ds = Vec::new(xs.len - 1);\n    |            ^^^^^^^^ ---------- supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 1 {\n    return Vec::new(0);\n  }\n  let d = xs[1] - xs[0];\n  for i in 0..(len(xs) - 2) {\n    d = d * xs[i + 2] + xs[i + 1];\n  }\n  return Vec::new(d);\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `len` in this scope\n --> /tmp/tmprmblkzkh.rs:9:6\n  |\n9 |   if len(xs) == 1 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmprmblkzkh.rs:13:16\n   |\n13 |   for i in 0..(len(xs) - 2) {\n   |                ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmprmblkzkh.rs:10:12\n    |\n10  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmprmblkzkh.rs:16:10\n    |\n16  |   return Vec::new(d);\n    |          ^^^^^^^^ - supplied 1 argument\n    |          |\n    |          expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 1 {\n    return Vec::new(0);\n  }\n  let d = Vec::new(len(xs) - 1);\n  for (i in 0..len(xs) - 1) {\n    d[i] = (xs[i + 1] - xs[i]) / (xs[i + 1] - xs[i] * xs[i]);\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n  --> /tmp/tmpgy5lpwl3.rs:13:10\n   |\n13 |   for (i in 0..len(xs) - 1) {\n   |          ^^ expected one of `)`, `,`, `@`, or `|`\n\nerror: unexpected parentheses surrounding `for` loop head\n  --> /tmp/tmpgy5lpwl3.rs:13:7\n   |\n13 |   for (i in 0..len(xs) - 1) {\n   |       ^                   ^\n   |\nhelp: remove parentheses in `for` loop\n   |\n13 -   for (i in 0..len(xs) - 1) {\n13 +   for i in 0..len(xs) - 1 {\n   | \n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpgy5lpwl3.rs:9:6\n  |\n9 |   if len(xs) == 1 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpgy5lpwl3.rs:12:20\n   |\n12 |   let d = Vec::new(len(xs) - 1);\n   |                    ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpgy5lpwl3.rs:13:16\n   |\n13 |   for (i in 0..len(xs) - 1) {\n   |                ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpgy5lpwl3.rs:10:12\n    |\n10  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpgy5lpwl3.rs:12:11\n    |\n12  |   let d = Vec::new(len(xs) - 1);\n    |           ^^^^^^^^ ----------- supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let d = 0;\n  for i in 0..xs.len() - 1 {\n    d = d + xs[i + 1] * i;\n  }\n  return Vec::from(d);\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n  --> /tmp/tmplmkkf0bo.rs:11:25\n   |\n11 |     d = d + xs[i + 1] * i;\n   |                         ^ expected `isize`, found `usize`\n\nerror[E0277]: cannot multiply `isize` by `usize`\n  --> /tmp/tmplmkkf0bo.rs:11:23\n   |\n11 |     d = d + xs[i + 1] * i;\n   |                       ^ no implementation for `isize * usize`\n   |\n   = help: the trait `Mul<usize>` is not implemented for `isize`\n   = help: the following other types implement trait `Mul<Rhs>`:\n             <&'a f32 as Mul<f32>>\n             <&'a f64 as Mul<f64>>\n             <&'a i128 as Mul<i128>>\n             <&'a i16 as Mul<i16>>\n             <&'a i32 as Mul<i32>>\n             <&'a i64 as Mul<i64>>\n             <&'a i8 as Mul<i8>>\n             <&'a isize as Mul<isize>>\n           and 49 others\n\nerror[E0277]: the trait bound `Vec<_, _>: From<isize>` is not satisfied\n  --> /tmp/tmplmkkf0bo.rs:13:10\n   |\n13 |   return Vec::from(d);\n   |          ^^^^^^^^^ the trait `From<isize>` is not implemented for `Vec<_, _>`\n   |\n   = help: the following other types implement trait `From<T>`:\n             <Vec<T, A> as From<Box<[T], A>>>\n             <Vec<T, A> as From<VecDeque<T, A>>>\n             <Vec<T> as From<&[T]>>\n             <Vec<T> as From<&mut [T]>>\n             <Vec<T> as From<BinaryHeap<T>>>\n             <Vec<T> as From<Cow<'a, [T]>>>\n             <Vec<T> as From<[T; N]>>\n             <Vec<u8> as From<&str>>\n           and 2 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 1 {\n    return Vec::new(0);\n  }\n  let d = xs[1] - xs[0];\n  for i in 0..len(xs) - 2 {\n    d = d * xs[i + 1] + xs[i + 2];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `len` in this scope\n --> /tmp/tmppdqv1nsd.rs:9:6\n  |\n9 |   if len(xs) == 1 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmppdqv1nsd.rs:13:15\n   |\n13 |   for i in 0..len(xs) - 2 {\n   |               ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmppdqv1nsd.rs:10:12\n    |\n10  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0308]: mismatched types\n  --> /tmp/tmppdqv1nsd.rs:16:10\n   |\n8  | fn derivative(xs: Vec<isize>) -> Vec<isize> {\n   |                                  ---------- expected `Vec<isize>` because of return type\n...\n16 |   return d;\n   |          ^ expected struct `Vec`, found `isize`\n   |\n   = note: expected struct `Vec<isize>`\n                found type `isize`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0061, E0308, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 1 {\n    return Vec::new(0);\n  }\n\n  let deriv = Vec::new(len(xs) - 1);\n  deriv[0] = 1;\n  for (i in 1..(len(xs) - 1)) {\n    deriv[i] = deriv[i - 1] * xs[i];\n  }\n  return deriv;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n  --> /tmp/tmp6rgrf4e4.rs:15:10\n   |\n15 |   for (i in 1..(len(xs) - 1)) {\n   |          ^^ expected one of `)`, `,`, `@`, or `|`\n\nerror: unexpected parentheses surrounding `for` loop head\n  --> /tmp/tmp6rgrf4e4.rs:15:7\n   |\n15 |   for (i in 1..(len(xs) - 1)) {\n   |       ^                     ^\n   |\nhelp: remove parentheses in `for` loop\n   |\n15 -   for (i in 1..(len(xs) - 1)) {\n15 +   for i in 1..(len(xs) - 1) {\n   | \n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmp6rgrf4e4.rs:9:6\n  |\n9 |   if len(xs) == 1 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp6rgrf4e4.rs:13:24\n   |\n13 |   let deriv = Vec::new(len(xs) - 1);\n   |                        ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp6rgrf4e4.rs:15:17\n   |\n15 |   for (i in 1..(len(xs) - 1)) {\n   |                 ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp6rgrf4e4.rs:10:12\n    |\n10  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp6rgrf4e4.rs:13:15\n    |\n13  |   let deriv = Vec::new(len(xs) - 1);\n    |               ^^^^^^^^ ----------- supplied 1 argument\n    |               |\n    |               expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let dxs: Vec<isize> = Vec::new(xs.len - 1);\n  for (i in 0..xs.len - 1) {\n    dxs[i] = xs[i + 1] - xs[i];\n  }\n  return dxs;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n  --> /tmp/tmpksv_0_km.rs:10:10\n   |\n10 |   for (i in 0..xs.len - 1) {\n   |          ^^ expected one of `)`, `,`, `@`, or `|`\n\nerror: unexpected parentheses surrounding `for` loop head\n  --> /tmp/tmpksv_0_km.rs:10:7\n   |\n10 |   for (i in 0..xs.len - 1) {\n   |       ^                  ^\n   |\nhelp: remove parentheses in `for` loop\n   |\n10 -   for (i in 0..xs.len - 1) {\n10 +   for i in 0..xs.len - 1 {\n   | \n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpksv_0_km.rs:9:37\n  |\n9 |   let dxs: Vec<isize> = Vec::new(xs.len - 1);\n  |                                     ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let dxs: Vec<isize> = Vec::new(xs.len() - 1);\n  |                                        ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpksv_0_km.rs:9:25\n    |\n9   |   let dxs: Vec<isize> = Vec::new(xs.len - 1);\n    |                         ^^^^^^^^ ---------- supplied 1 argument\n    |                         |\n    |                         expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpksv_0_km.rs:10:19\n   |\n10 |   for (i in 0..xs.len - 1) {\n   |                   ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n10 |   for (i in 0..xs.len() - 1) {\n   |                      ++\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let result = Vec::new(n);\n  for (let i = 0; i < n; i++) {\n    result[i] = xs[i + 1] - xs[i];\n  }\n  return result;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmp0aaq3ngd.rs:11:8\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmp0aaq3ngd.rs:11:12\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmp0aaq3ngd.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmp0aaq3ngd.rs:11:13\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmp0aaq3ngd.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp0aaq3ngd.rs:10:16\n    |\n10  |   let result = Vec::new(n);\n    |                ^^^^^^^^ - supplied 1 argument\n    |                |\n    |                expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 0 {\n    return Vec::new(0);\n  }\n  let d = xs[0];\n  for i in 1..xs.len() - 1 {\n    d = d + xs[i] * i;\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpqwbf52qi.rs:9:6\n  |\n9 |   if len(xs) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpqwbf52qi.rs:10:12\n    |\n10  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpqwbf52qi.rs:14:21\n   |\n14 |     d = d + xs[i] * i;\n   |                     ^ expected `isize`, found `usize`\n\nerror[E0277]: cannot multiply `isize` by `usize`\n  --> /tmp/tmpqwbf52qi.rs:14:19\n   |\n14 |     d = d + xs[i] * i;\n   |                   ^ no implementation for `isize * usize`\n   |\n   = help: the trait `Mul<usize>` is not implemented for `isize`\n   = help: the following other types implement trait `Mul<Rhs>`:\n             <&'a f32 as Mul<f32>>\n             <&'a f64 as Mul<f64>>\n             <&'a i128 as Mul<i128>>\n             <&'a i16 as Mul<i16>>\n             <&'a i32 as Mul<i32>>\n             <&'a i64 as Mul<i64>>\n             <&'a i8 as Mul<i8>>\n             <&'a isize as Mul<isize>>\n           and 49 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpqwbf52qi.rs:16:10\n   |\n8  | fn derivative(xs: Vec<isize>) -> Vec<isize> {\n   |                                  ---------- expected `Vec<isize>` because of return type\n...\n16 |   return d;\n   |          ^ expected struct `Vec`, found `isize`\n   |\n   = note: expected struct `Vec<isize>`\n                found type `isize`\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0061, E0277, E0308, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let d = Vec::new(n);\n  for (i in 0..n - 1) {\n    d[i] = xs[i + 1] - xs[i];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n  --> /tmp/tmp4gyc9xc1.rs:11:10\n   |\n11 |   for (i in 0..n - 1) {\n   |          ^^ expected one of `)`, `,`, `@`, or `|`\n\nerror: unexpected parentheses surrounding `for` loop head\n  --> /tmp/tmp4gyc9xc1.rs:11:7\n   |\n11 |   for (i in 0..n - 1) {\n   |       ^             ^\n   |\nhelp: remove parentheses in `for` loop\n   |\n11 -   for (i in 0..n - 1) {\n11 +   for i in 0..n - 1 {\n   | \n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp4gyc9xc1.rs:10:11\n    |\n10  |   let d = Vec::new(n);\n    |           ^^^^^^^^ - supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 0 {\n    return Vec::new(0)\n  }\n  let d = xs[1]\n  for i in 1..xs.len() - 1 {\n    d = d * xs[i + 1] + xs[i]\n  }\n  return d\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmpjvnjmsx0.rs:12:16\n   |\n12 |   let d = xs[1]\n   |                ^ help: add `;` here\n13 |   for i in 1..xs.len() - 1 {\n   |   --- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpjvnjmsx0.rs:9:6\n  |\n9 |   if len(xs) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpjvnjmsx0.rs:10:12\n    |\n10  |     return Vec::new(0)\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpjvnjmsx0.rs:16:10\n   |\n8  | fn derivative(xs: Vec<isize>) -> Vec<isize> {\n   |                                  ---------- expected `Vec<isize>` because of return type\n...\n16 |   return d\n   |          ^ expected struct `Vec`, found `isize`\n   |\n   = note: expected struct `Vec<isize>`\n                found type `isize`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0061, E0308, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let d = 0;\n  for (i in 0..xs.len) {\n    d = d + xs[i] * i;\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n  --> /tmp/tmpk1y5r8fb.rs:10:10\n   |\n10 |   for (i in 0..xs.len) {\n   |          ^^ expected one of `)`, `,`, `@`, or `|`\n\nerror: unexpected parentheses surrounding `for` loop head\n  --> /tmp/tmpk1y5r8fb.rs:10:7\n   |\n10 |   for (i in 0..xs.len) {\n   |       ^              ^\n   |\nhelp: remove parentheses in `for` loop\n   |\n10 -   for (i in 0..xs.len) {\n10 +   for i in 0..xs.len {\n   | \n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpk1y5r8fb.rs:10:19\n   |\n10 |   for (i in 0..xs.len) {\n   |                   ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n10 |   for (i in 0..xs.len()) {\n   |                      ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpk1y5r8fb.rs:11:21\n   |\n11 |     d = d + xs[i] * i;\n   |                     ^ expected `isize`, found `usize`\n\nerror[E0277]: cannot multiply `isize` by `usize`\n  --> /tmp/tmpk1y5r8fb.rs:11:19\n   |\n11 |     d = d + xs[i] * i;\n   |                   ^ no implementation for `isize * usize`\n   |\n   = help: the trait `Mul<usize>` is not implemented for `isize`\n   = help: the following other types implement trait `Mul<Rhs>`:\n             <&'a f32 as Mul<f32>>\n             <&'a f64 as Mul<f64>>\n             <&'a i128 as Mul<i128>>\n             <&'a i16 as Mul<i16>>\n             <&'a i32 as Mul<i32>>\n             <&'a i64 as Mul<i64>>\n             <&'a i8 as Mul<i8>>\n             <&'a isize as Mul<isize>>\n           and 49 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpk1y5r8fb.rs:13:10\n   |\n8  | fn derivative(xs: Vec<isize>) -> Vec<isize> {\n   |                                  ---------- expected `Vec<isize>` because of return type\n...\n13 |   return d;\n   |          ^ expected struct `Vec`, found `isize`\n   |\n   = note: expected struct `Vec<isize>`\n                found type `isize`\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0277, E0308, E0616.\nFor more information about an error, try `rustc --exp",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let (n, d) = derivative_coeffs(xs);\n  return vec(n + 1, d);\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `derivative_coeffs` in this scope\n --> /tmp/tmpy1_oi7w4.rs:9:16\n  |\n9 |   let (n, d) = derivative_coeffs(xs);\n  |                ^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0423]: expected function, found macro `vec`\n  --> /tmp/tmpy1_oi7w4.rs:10:10\n   |\n10 |   return vec(n + 1, d);\n   |          ^^^ not a function\n   |\nhelp: use `!` to invoke the macro\n   |\n10 |   return vec!(n + 1, d);\n   |             +\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0423, E0425.\nFor more information about an error, try `rustc --explain E0423`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if xs.len == 0 {\n    return xs\n  }\n\n  let dxs = Vec::new(xs.len - 1)\n  for i in 0..xs.len - 1 {\n    dxs[i] = xs[i + 1]\n  }\n  return dxs\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmpx3orlmzs.rs:13:33\n   |\n13 |   let dxs = Vec::new(xs.len - 1)\n   |                                 ^ help: add `;` here\n14 |   for i in 0..xs.len - 1 {\n   |   --- unexpected token\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpx3orlmzs.rs:9:9\n  |\n9 |   if xs.len == 0 {\n  |         ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   if xs.len() == 0 {\n  |            ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpx3orlmzs.rs:13:25\n   |\n13 |   let dxs = Vec::new(xs.len - 1)\n   |                         ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n13 |   let dxs = Vec::new(xs.len() - 1)\n   |                            ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpx3orlmzs.rs:13:13\n    |\n13  |   let dxs = Vec::new(xs.len - 1)\n    |             ^^^^^^^^ ---------- supplied 1 argument\n    |             |\n    |             expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpx3orlmzs.rs:14:18\n   |\n14 |   for i in 0..xs.len - 1 {\n   |                  ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n14 |   for i in 0..xs.len() - 1 {\n   |                     ++\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let result = Vec::new(n - 1);\n  for (let i = 1; i < n; i++) {\n    result[i - 1] = xs[i] * i;\n  }\n  return result;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmp9nlg8iae.rs:11:8\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmp9nlg8iae.rs:11:12\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmp9nlg8iae.rs:11:14\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmp9nlg8iae.rs:11:13\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmp9nlg8iae.rs:11:14\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp9nlg8iae.rs:10:16\n    |\n10  |   let result = Vec::new(n - 1);\n    |                ^^^^^^^^ ----- supplied 1 argument\n    |                |\n    |                expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let d = 0;\n  for i in 0..xs.len() - 1 {\n    d = d + xs[i + 1] * i;\n  }\n  return Vec::from(d);\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n  --> /tmp/tmplmkkf0bo.rs:11:25\n   |\n11 |     d = d + xs[i + 1] * i;\n   |                         ^ expected `isize`, found `usize`\n\nerror[E0277]: cannot multiply `isize` by `usize`\n  --> /tmp/tmplmkkf0bo.rs:11:23\n   |\n11 |     d = d + xs[i + 1] * i;\n   |                       ^ no implementation for `isize * usize`\n   |\n   = help: the trait `Mul<usize>` is not implemented for `isize`\n   = help: the following other types implement trait `Mul<Rhs>`:\n             <&'a f32 as Mul<f32>>\n             <&'a f64 as Mul<f64>>\n             <&'a i128 as Mul<i128>>\n             <&'a i16 as Mul<i16>>\n             <&'a i32 as Mul<i32>>\n             <&'a i64 as Mul<i64>>\n             <&'a i8 as Mul<i8>>\n             <&'a isize as Mul<isize>>\n           and 49 others\n\nerror[E0277]: the trait bound `Vec<_, _>: From<isize>` is not satisfied\n  --> /tmp/tmplmkkf0bo.rs:13:10\n   |\n13 |   return Vec::from(d);\n   |          ^^^^^^^^^ the trait `From<isize>` is not implemented for `Vec<_, _>`\n   |\n   = help: the following other types implement trait `From<T>`:\n             <Vec<T, A> as From<Box<[T], A>>>\n             <Vec<T, A> as From<VecDeque<T, A>>>\n             <Vec<T> as From<&[T]>>\n             <Vec<T> as From<&mut [T]>>\n             <Vec<T> as From<BinaryHeap<T>>>\n             <Vec<T> as From<Cow<'a, [T]>>>\n             <Vec<T> as From<[T; N]>>\n             <Vec<u8> as From<&str>>\n           and 2 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let d = 0;\n  for (let i = xs.len - 1; i >= 0; i--) {\n    d = d * xs[i] + (i + 1);\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpnvr8wcdr.rs:10:8\n   |\n10 |   for (let i = xs.len - 1; i >= 0; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpnvr8wcdr.rs:10:12\n   |\n10 |   for (let i = xs.len - 1; i >= 0; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpnvr8wcdr.rs:10:14\n   |\n10 |   for (let i = xs.len - 1; i >= 0; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpnvr8wcdr.rs:10:13\n   |\n10 |   for (let i = xs.len - 1; i >= 0; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpnvr8wcdr.rs:10:14\n   |\n10 |   for (let i = xs.len - 1; i >= 0; i--) {\n   |              ^ expected expression\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let d = vec![];\n  for (let i = n - 1; i >= 0; i--) {\n    d = vec![d[i + 1] + d[i], d[i]];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpohx3ez95.rs:11:8\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpohx3ez95.rs:11:12\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpohx3ez95.rs:11:14\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpohx3ez95.rs:11:13\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpohx3ez95.rs:11:14\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected expression\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if xs.len == 0 {\n    return Vec::new(0);\n  }\n\n  let deriv = Vec::new(xs.len - 1);\n  deriv[0] = 1;\n  for (let i = 1; i < deriv.len; i++) {\n    deriv[i] = deriv[i - 1] * xs[i];\n  }\n  return deriv;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpk7gy0yap.rs:15:8\n   |\n15 |   for (let i = 1; i < deriv.len; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpk7gy0yap.rs:15:12\n   |\n15 |   for (let i = 1; i < deriv.len; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpk7gy0yap.rs:15:14\n   |\n15 |   for (let i = 1; i < deriv.len; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpk7gy0yap.rs:15:13\n   |\n15 |   for (let i = 1; i < deriv.len; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpk7gy0yap.rs:15:14\n   |\n15 |   for (let i = 1; i < deriv.len; i++) {\n   |              ^ expected expression\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpk7gy0yap.rs:9:9\n  |\n9 |   if xs.len == 0 {\n  |         ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   if xs.len() == 0 {\n  |            ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpk7gy0yap.rs:10:12\n    |\n10  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpk7gy0yap.rs:13:27\n   |\n13 |   let deriv = Vec::new(xs.len - 1);\n   |                           ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n13 |   let deriv = Vec::new(xs.len() - 1);\n   |                              ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpk7gy0yap.rs:13:15\n    |\n13  |   let deriv = Vec::new(xs.len - 1);\n    |               ^^^^^^^^ ---------- supplied 1 argument\n    |       ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let d = Vec::new(n);\n  for (let i = 0; i < n - 1; i++) {\n    d[i] = xs[i + 1] - xs[i];\n  }\n  d[n - 1] = 0;\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmp0o7krbqn.rs:11:8\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmp0o7krbqn.rs:11:12\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmp0o7krbqn.rs:11:14\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmp0o7krbqn.rs:11:13\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmp0o7krbqn.rs:11:14\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp0o7krbqn.rs:10:11\n    |\n10  |   let d = Vec::new(n);\n    |           ^^^^^^^^ - supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 0 {\n    return Vec::new(0)\n  }\n  let d = xs[1]\n  for i in 0..xs.len() - 2 {\n    d = d * xs[i + 1] + xs[i + 2]\n  }\n  return Vec::new(d)\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmpkd_kzy5y.rs:12:16\n   |\n12 |   let d = xs[1]\n   |                ^ help: add `;` here\n13 |   for i in 0..xs.len() - 2 {\n   |   --- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpkd_kzy5y.rs:9:6\n  |\n9 |   if len(xs) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpkd_kzy5y.rs:10:12\n    |\n10  |     return Vec::new(0)\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpkd_kzy5y.rs:16:10\n    |\n16  |   return Vec::new(d)\n    |          ^^^^^^^^ - supplied 1 argument\n    |          |\n    |          expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let result = Vec::new(n);\n  for (let i = 0; i < n; i++) {\n    result[i] = xs[i + 1] - xs[i];\n  }\n  return result;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmp0aaq3ngd.rs:11:8\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmp0aaq3ngd.rs:11:12\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmp0aaq3ngd.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmp0aaq3ngd.rs:11:13\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmp0aaq3ngd.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp0aaq3ngd.rs:10:16\n    |\n10  |   let result = Vec::new(n);\n    |                ^^^^^^^^ - supplied 1 argument\n    |                |\n    |                expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 0 {\n    return Vec::new(0)\n  }\n\n  let d = Vec::new(len(xs) - 1)\n  for i in 0..(len(xs) - 1) {\n    d[i] = xs[i + 1] - xs[i]\n  }\n  return d\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmpgep70hrk.rs:13:32\n   |\n13 |   let d = Vec::new(len(xs) - 1)\n   |                                ^ help: add `;` here\n14 |   for i in 0..(len(xs) - 1) {\n   |   --- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpgep70hrk.rs:9:6\n  |\n9 |   if len(xs) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpgep70hrk.rs:13:20\n   |\n13 |   let d = Vec::new(len(xs) - 1)\n   |                    ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpgep70hrk.rs:14:16\n   |\n14 |   for i in 0..(len(xs) - 1) {\n   |                ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpgep70hrk.rs:10:12\n    |\n10  |     return Vec::new(0)\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpgep70hrk.rs:13:11\n    |\n13  |   let d = Vec::new(len(xs) - 1)\n    |           ^^^^^^^^ ----------- supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if xs.len == 0 {\n    return xs\n  }\n  let dxs = Vec::new(xs.len - 1)\n  for i in 0..xs.len - 1 {\n    dxs[i] = xs[i + 1]\n  }\n  return dxs\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmp2_6uh121.rs:12:33\n   |\n12 |   let dxs = Vec::new(xs.len - 1)\n   |                                 ^ help: add `;` here\n13 |   for i in 0..xs.len - 1 {\n   |   --- unexpected token\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp2_6uh121.rs:9:9\n  |\n9 |   if xs.len == 0 {\n  |         ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   if xs.len() == 0 {\n  |            ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmp2_6uh121.rs:12:25\n   |\n12 |   let dxs = Vec::new(xs.len - 1)\n   |                         ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n12 |   let dxs = Vec::new(xs.len() - 1)\n   |                            ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp2_6uh121.rs:12:13\n    |\n12  |   let dxs = Vec::new(xs.len - 1)\n    |             ^^^^^^^^ ---------- supplied 1 argument\n    |             |\n    |             expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmp2_6uh121.rs:13:18\n   |\n13 |   for i in 0..xs.len - 1 {\n   |                  ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n13 |   for i in 0..xs.len() - 1 {\n   |                     ++\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 0 {\n    return Vec::new(0)\n  }\n  let deriv = Vec::new(len(xs) - 1)\n  for i in 0..(len(xs) - 1) {\n    deriv[i] = xs[i + 1] - xs[i]\n  }\n  return deriv\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmprghbmkx5.rs:12:36\n   |\n12 |   let deriv = Vec::new(len(xs) - 1)\n   |                                    ^ help: add `;` here\n13 |   for i in 0..(len(xs) - 1) {\n   |   --- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmprghbmkx5.rs:9:6\n  |\n9 |   if len(xs) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmprghbmkx5.rs:12:24\n   |\n12 |   let deriv = Vec::new(len(xs) - 1)\n   |                        ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmprghbmkx5.rs:13:16\n   |\n13 |   for i in 0..(len(xs) - 1) {\n   |                ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmprghbmkx5.rs:10:12\n    |\n10  |     return Vec::new(0)\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmprghbmkx5.rs:12:15\n    |\n12  |   let deriv = Vec::new(len(xs) - 1)\n    |               ^^^^^^^^ ----------- supplied 1 argument\n    |               |\n    |               expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if xs.len == 0 {\n    return xs\n  }\n\n  let deriv = Vec::new(xs.len - 1)\n  for i in 0..xs.len - 1 {\n    deriv[i] = xs[i + 1]\n  }\n  return deriv\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmp54nr0sf9.rs:13:35\n   |\n13 |   let deriv = Vec::new(xs.len - 1)\n   |                                   ^ help: add `;` here\n14 |   for i in 0..xs.len - 1 {\n   |   --- unexpected token\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp54nr0sf9.rs:9:9\n  |\n9 |   if xs.len == 0 {\n  |         ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   if xs.len() == 0 {\n  |            ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmp54nr0sf9.rs:13:27\n   |\n13 |   let deriv = Vec::new(xs.len - 1)\n   |                           ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n13 |   let deriv = Vec::new(xs.len() - 1)\n   |                              ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp54nr0sf9.rs:13:15\n    |\n13  |   let deriv = Vec::new(xs.len - 1)\n    |               ^^^^^^^^ ---------- supplied 1 argument\n    |               |\n    |               expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmp54nr0sf9.rs:14:18\n   |\n14 |   for i in 0..xs.len - 1 {\n   |                  ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n14 |   for i in 0..xs.len() - 1 {\n   |                     ++\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len;\n  let d = n - 1;\n  let result = Vec::new(n);\n  for (let i = 0; i < n; i++) {\n    result[i] = (d * xs[i] + (i - 1)) * (i + 1);\n  }\n  return result;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpasx21fgb.rs:12:8\n   |\n12 |   for (let i = 0; i < n; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpasx21fgb.rs:12:12\n   |\n12 |   for (let i = 0; i < n; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpasx21fgb.rs:12:14\n   |\n12 |   for (let i = 0; i < n; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpasx21fgb.rs:12:13\n   |\n12 |   for (let i = 0; i < n; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpasx21fgb.rs:12:14\n   |\n12 |   for (let i = 0; i < n; i++) {\n   |              ^ expected expression\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpasx21fgb.rs:9:14\n  |\n9 |   let n = xs.len;\n  |              ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let n = xs.len();\n  |                 ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpasx21fgb.rs:11:16\n    |\n11  |   let result = Vec::new(n);\n    |                ^^^^^^^^ - supplied 1 argument\n    |                |\n    |                expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let d = 0;\n  for (let i = xs.len() - 1; i >= 0; i--) {\n    d = d * xs[i] + 1;\n  }\n  return Vec::from(d);\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpk2jhrvwc.rs:10:8\n   |\n10 |   for (let i = xs.len() - 1; i >= 0; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpk2jhrvwc.rs:10:12\n   |\n10 |   for (let i = xs.len() - 1; i >= 0; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpk2jhrvwc.rs:10:14\n   |\n10 |   for (let i = xs.len() - 1; i >= 0; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpk2jhrvwc.rs:10:13\n   |\n10 |   for (let i = xs.len() - 1; i >= 0; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpk2jhrvwc.rs:10:14\n   |\n10 |   for (let i = xs.len() - 1; i >= 0; i--) {\n   |              ^ expected expression\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let result = Vec::new(n - 1);\n  for (let i = 1; i < n; i++) {\n    result[i - 1] = xs[i] * i;\n  }\n  return result;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmp9nlg8iae.rs:11:8\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmp9nlg8iae.rs:11:12\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmp9nlg8iae.rs:11:14\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmp9nlg8iae.rs:11:13\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmp9nlg8iae.rs:11:14\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp9nlg8iae.rs:10:16\n    |\n10  |   let result = Vec::new(n - 1);\n    |                ^^^^^^^^ ----- supplied 1 argument\n    |                |\n    |                expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let d = Vec::new(n);\n  for (let i = n - 1; i >= 0; i--) {\n    d[i] = xs[i + 1] - xs[i];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpzzi03qz_.rs:11:8\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpzzi03qz_.rs:11:12\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpzzi03qz_.rs:11:14\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpzzi03qz_.rs:11:13\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpzzi03qz_.rs:11:14\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpzzi03qz_.rs:10:11\n    |\n10  |   let d = Vec::new(n);\n    |           ^^^^^^^^ - supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len;\n  if n == 0 {\n    return Vec::new(0);\n  }\n  let d = Vec::new(n - 1);\n  for (let i = n - 1; i >= 0; i--) {\n    d[i] = xs[i] * (i + 1);\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpmnckfgwx.rs:14:8\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpmnckfgwx.rs:14:12\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpmnckfgwx.rs:14:14\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpmnckfgwx.rs:14:13\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpmnckfgwx.rs:14:14\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected expression\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpmnckfgwx.rs:9:14\n  |\n9 |   let n = xs.len;\n  |              ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let n = xs.len();\n  |                 ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpmnckfgwx.rs:11:12\n    |\n11  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpmnckfgwx.rs:13:11\n    |\n13  |   let d = Vec::new(n - 1);\n    |           ^^^^^^^^ ----- supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 8 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let d = 0;\n  for (let i = xs.len - 1; i >= 0; i--) {\n    d = d * xs[i] + (i + 1);\n  }\n  return Vec::from(d);\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpxce4h1qo.rs:10:8\n   |\n10 |   for (let i = xs.len - 1; i >= 0; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpxce4h1qo.rs:10:12\n   |\n10 |   for (let i = xs.len - 1; i >= 0; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpxce4h1qo.rs:10:14\n   |\n10 |   for (let i = xs.len - 1; i >= 0; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpxce4h1qo.rs:10:13\n   |\n10 |   for (let i = xs.len - 1; i >= 0; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpxce4h1qo.rs:10:14\n   |\n10 |   for (let i = xs.len - 1; i >= 0; i--) {\n   |              ^ expected expression\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if xs.len == 0 {\n    return xs\n  }\n  let d = xs.len - 1\n  let result = Vec::new(d)\n  for i in 0..d {\n    result[i] = xs[i + 1]\n  }\n  return result\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp9ys66j6e.rs:12:21\n   |\n12 |   let d = xs.len - 1\n   |                     ^ help: add `;` here\n13 |   let result = Vec::new(d)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmp9ys66j6e.rs:13:27\n   |\n13 |   let result = Vec::new(d)\n   |                           ^ help: add `;` here\n14 |   for i in 0..d {\n   |   --- unexpected token\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp9ys66j6e.rs:9:9\n  |\n9 |   if xs.len == 0 {\n  |         ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   if xs.len() == 0 {\n  |            ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmp9ys66j6e.rs:12:14\n   |\n12 |   let d = xs.len - 1\n   |              ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n12 |   let d = xs.len() - 1\n   |                 ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp9ys66j6e.rs:13:16\n    |\n13  |   let result = Vec::new(d)\n    |                ^^^^^^^^ - supplied 1 argument\n    |                |\n    |                expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  if (n == 0) {\n    return Vec::new(0);\n  }\n  let d = Vec::new(n - 1);\n  for (let i = n - 1; i >= 0; i--) {\n    d[i] = xs[i] * (i + 1);\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpnv48rt1m.rs:14:8\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpnv48rt1m.rs:14:12\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpnv48rt1m.rs:14:14\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpnv48rt1m.rs:14:13\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpnv48rt1m.rs:14:14\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected expression\n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpnv48rt1m.rs:10:6\n   |\n10 |   if (n == 0) {\n   |      ^      ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n10 -   if (n == 0) {\n10 +   if n == 0 {\n   | \n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpnv48rt1m.rs:11:12\n    |\n11  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpnv48rt1m.rs:13:11\n    |\n13  |   let d = Vec::new(n - 1);\n    |           ^^^^^^^^ ----- supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors; 1 warning emitted\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let result = Vec::new(n);\n  for (let i = 0; i < n; i++) {\n    result[i] = xs[i + 1] - xs[i];\n  }\n  return result;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmp0aaq3ngd.rs:11:8\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmp0aaq3ngd.rs:11:12\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmp0aaq3ngd.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmp0aaq3ngd.rs:11:13\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmp0aaq3ngd.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp0aaq3ngd.rs:10:16\n    |\n10  |   let result = Vec::new(n);\n    |                ^^^^^^^^ - supplied 1 argument\n    |                |\n    |                expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let dxs: Vec<isize> = Vec::new(xs.len - 1);\n  for (i in 0..xs.len - 1) {\n    dxs[i] = xs[i + 1] - xs[i];\n  }\n  return dxs;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n  --> /tmp/tmpksv_0_km.rs:10:10\n   |\n10 |   for (i in 0..xs.len - 1) {\n   |          ^^ expected one of `)`, `,`, `@`, or `|`\n\nerror: unexpected parentheses surrounding `for` loop head\n  --> /tmp/tmpksv_0_km.rs:10:7\n   |\n10 |   for (i in 0..xs.len - 1) {\n   |       ^                  ^\n   |\nhelp: remove parentheses in `for` loop\n   |\n10 -   for (i in 0..xs.len - 1) {\n10 +   for i in 0..xs.len - 1 {\n   | \n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpksv_0_km.rs:9:37\n  |\n9 |   let dxs: Vec<isize> = Vec::new(xs.len - 1);\n  |                                     ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let dxs: Vec<isize> = Vec::new(xs.len() - 1);\n  |                                        ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpksv_0_km.rs:9:25\n    |\n9   |   let dxs: Vec<isize> = Vec::new(xs.len - 1);\n    |                         ^^^^^^^^ ---------- supplied 1 argument\n    |                         |\n    |                         expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpksv_0_km.rs:10:19\n   |\n10 |   for (i in 0..xs.len - 1) {\n   |                   ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n10 |   for (i in 0..xs.len() - 1) {\n   |                      ++\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if xs.len == 0 {\n    return xs\n  }\n  let dxs = Vec::new(xs.len - 1)\n  for i in 0..xs.len - 1 {\n    dxs[i] = xs[i + 1]\n  }\n  return dxs\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmp2_6uh121.rs:12:33\n   |\n12 |   let dxs = Vec::new(xs.len - 1)\n   |                                 ^ help: add `;` here\n13 |   for i in 0..xs.len - 1 {\n   |   --- unexpected token\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp2_6uh121.rs:9:9\n  |\n9 |   if xs.len == 0 {\n  |         ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   if xs.len() == 0 {\n  |            ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmp2_6uh121.rs:12:25\n   |\n12 |   let dxs = Vec::new(xs.len - 1)\n   |                         ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n12 |   let dxs = Vec::new(xs.len() - 1)\n   |                            ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp2_6uh121.rs:12:13\n    |\n12  |   let dxs = Vec::new(xs.len - 1)\n    |             ^^^^^^^^ ---------- supplied 1 argument\n    |             |\n    |             expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmp2_6uh121.rs:13:18\n   |\n13 |   for i in 0..xs.len - 1 {\n   |                  ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n13 |   for i in 0..xs.len() - 1 {\n   |                     ++\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let dxs: Vec<isize> = Vec::new(xs.len - 1);\n  for (let i = 0; i < dxs.len; i++) {\n    dxs[i] = xs[i + 1] - xs[i];\n  }\n  return dxs;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpm8pf3nhf.rs:10:8\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpm8pf3nhf.rs:10:12\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpm8pf3nhf.rs:10:14\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpm8pf3nhf.rs:10:13\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpm8pf3nhf.rs:10:14\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |              ^ expected expression\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpm8pf3nhf.rs:9:37\n  |\n9 |   let dxs: Vec<isize> = Vec::new(xs.len - 1);\n  |                                     ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let dxs: Vec<isize> = Vec::new(xs.len() - 1);\n  |                                        ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpm8pf3nhf.rs:9:25\n    |\n9   |   let dxs: Vec<isize> = Vec::new(xs.len - 1);\n    |                         ^^^^^^^^ ---------- supplied 1 argument\n    |                         |\n    |                         expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 1 {\n    return Vec::new(0);\n  }\n\n  let deriv = Vec::new(len(xs) - 1);\n  deriv[0] = 0;\n  for (i in 1..(len(xs) - 1)) {\n    deriv[i] = deriv[i - 1] + xs[i];\n  }\n  return deriv;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n  --> /tmp/tmpucpe4faz.rs:15:10\n   |\n15 |   for (i in 1..(len(xs) - 1)) {\n   |          ^^ expected one of `)`, `,`, `@`, or `|`\n\nerror: unexpected parentheses surrounding `for` loop head\n  --> /tmp/tmpucpe4faz.rs:15:7\n   |\n15 |   for (i in 1..(len(xs) - 1)) {\n   |       ^                     ^\n   |\nhelp: remove parentheses in `for` loop\n   |\n15 -   for (i in 1..(len(xs) - 1)) {\n15 +   for i in 1..(len(xs) - 1) {\n   | \n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpucpe4faz.rs:9:6\n  |\n9 |   if len(xs) == 1 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpucpe4faz.rs:13:24\n   |\n13 |   let deriv = Vec::new(len(xs) - 1);\n   |                        ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpucpe4faz.rs:15:17\n   |\n15 |   for (i in 1..(len(xs) - 1)) {\n   |                 ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpucpe4faz.rs:10:12\n    |\n10  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpucpe4faz.rs:13:15\n    |\n13  |   let deriv = Vec::new(len(xs) - 1);\n    |               ^^^^^^^^ ----------- supplied 1 argument\n    |               |\n    |               expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let (n, d) = derivative_coeffs(xs);\n  return Vec::from(n).map(x => x * d);\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found `=>`\n  --> /tmp/tmpvyxrtkcr.rs:10:29\n   |\n10 |   return Vec::from(n).map(x => x * d);\n   |                             ^^ expected one of 8 possible tokens\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let d = 0;\n  for (i in 0..xs.len) {\n    d = d + xs[i] * i;\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n  --> /tmp/tmpk1y5r8fb.rs:10:10\n   |\n10 |   for (i in 0..xs.len) {\n   |          ^^ expected one of `)`, `,`, `@`, or `|`\n\nerror: unexpected parentheses surrounding `for` loop head\n  --> /tmp/tmpk1y5r8fb.rs:10:7\n   |\n10 |   for (i in 0..xs.len) {\n   |       ^              ^\n   |\nhelp: remove parentheses in `for` loop\n   |\n10 -   for (i in 0..xs.len) {\n10 +   for i in 0..xs.len {\n   | \n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpk1y5r8fb.rs:10:19\n   |\n10 |   for (i in 0..xs.len) {\n   |                   ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n10 |   for (i in 0..xs.len()) {\n   |                      ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpk1y5r8fb.rs:11:21\n   |\n11 |     d = d + xs[i] * i;\n   |                     ^ expected `isize`, found `usize`\n\nerror[E0277]: cannot multiply `isize` by `usize`\n  --> /tmp/tmpk1y5r8fb.rs:11:19\n   |\n11 |     d = d + xs[i] * i;\n   |                   ^ no implementation for `isize * usize`\n   |\n   = help: the trait `Mul<usize>` is not implemented for `isize`\n   = help: the following other types implement trait `Mul<Rhs>`:\n             <&'a f32 as Mul<f32>>\n             <&'a f64 as Mul<f64>>\n             <&'a i128 as Mul<i128>>\n             <&'a i16 as Mul<i16>>\n             <&'a i32 as Mul<i32>>\n             <&'a i64 as Mul<i64>>\n             <&'a i8 as Mul<i8>>\n             <&'a isize as Mul<isize>>\n           and 49 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpk1y5r8fb.rs:13:10\n   |\n8  | fn derivative(xs: Vec<isize>) -> Vec<isize> {\n   |                                  ---------- expected `Vec<isize>` because of return type\n...\n13 |   return d;\n   |          ^ expected struct `Vec`, found `isize`\n   |\n   = note: expected struct `Vec<isize>`\n                found type `isize`\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0277, E0308, E0616.\nFor more information about an error, try `rustc --exp",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let (n, d) = derivative_coeffs(xs);\n  return Vec::from([n, d]);\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `derivative_coeffs` in this scope\n --> /tmp/tmpcqumlqwd.rs:9:16\n  |\n9 |   let (n, d) = derivative_coeffs(xs);\n  |                ^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let d = Vec::new(n);\n  for (let i = n - 1; i >= 0; i--) {\n    d[i] = xs[i + 1] - xs[i];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpzzi03qz_.rs:11:8\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpzzi03qz_.rs:11:12\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpzzi03qz_.rs:11:14\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpzzi03qz_.rs:11:13\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpzzi03qz_.rs:11:14\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpzzi03qz_.rs:10:11\n    |\n10  |   let d = Vec::new(n);\n    |           ^^^^^^^^ - supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  if (n == 0) {\n    return Vec::new(0);\n  }\n  let d = Vec::new(n - 1);\n  for (let i = 0; i < n - 1; i++) {\n    d[i] = xs[i + 1] - xs[i];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpfnayj0h4.rs:14:8\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpfnayj0h4.rs:14:12\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpfnayj0h4.rs:14:14\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpfnayj0h4.rs:14:13\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpfnayj0h4.rs:14:14\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |              ^ expected expression\n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpfnayj0h4.rs:10:6\n   |\n10 |   if (n == 0) {\n   |      ^      ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n10 -   if (n == 0) {\n10 +   if n == 0 {\n   | \n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpfnayj0h4.rs:11:12\n    |\n11  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpfnayj0h4.rs:13:11\n    |\n13  |   let d = Vec::new(n - 1);\n    |           ^^^^^^^^ ----- supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors; 1 warning emitted\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let deriv = Vec::new(xs.len - 1);\n  deriv.copy_from(xs);\n  deriv.set(0, deriv.get(0) + deriv.get(1));\n  deriv.set(1, deriv.get(1) + deriv.get(2) * 2);\n  deriv.set(2, deriv.get(2) + deriv.get(3) * 2);\n  deriv.set(3, deriv.get(3) + deriv.get(4) * 2);\n  deriv.set(4, deriv.get(4) + deriv.get(5) * 2);\n  return deriv;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpshqo_hf7.rs:9:27\n  |\n9 |   let deriv = Vec::new(xs.len - 1);\n  |                           ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let deriv = Vec::new(xs.len() - 1);\n  |                              ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpshqo_hf7.rs:9:15\n    |\n9   |   let deriv = Vec::new(xs.len - 1);\n    |               ^^^^^^^^ ---------- supplied 1 argument\n    |               |\n    |               expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0599]: no method named `copy_from` found for struct `Vec<_>` in the current scope\n  --> /tmp/tmpshqo_hf7.rs:10:9\n   |\n10 |   deriv.copy_from(xs);\n   |         ^^^^^^^^^ help: there is an associated function with a similar name: `copy_from_slice`\n\nerror[E0599]: no method named `set` found for struct `Vec<_>` in the current scope\n   --> /tmp/tmpshqo_hf7.rs:11:9\n    |\n11  |   deriv.set(0, deriv.get(0) + deriv.get(1));\n    |         ^^^\n    |\nhelp: consider wrapping the receiver expression with the appropriate type\n    |\n11  |   Pin::new(deriv).set(0, deriv.get(0) + deriv.get(1));\n    |   +++++++++     +\nhelp: consider wrapping the receiver expression with the appropriate type\n    |\n11  |   Pin::new(&mut deriv).set(0, deriv.get(0) + deriv.get(1));\n    |   +++++++++++++      +\nhelp: there is an associated function with a similar name\n    |\n11  |   deriv.get(0, deriv.get(0) + deriv.get(1));\n    |         ~~~\n\nerror[E0369]: cannot add `Option<&_>` to `Option<&_>`\n  --> /tmp/tmpshqo_hf7.rs:11:29\n   |\n11 |   deriv.set(0, deriv.get(0) + deriv.get(1));\n   |                ------------ ^ ------------ Option<&_>\n   |                |\n   |                Option<&_>\n\nerror[E0599]: no method named `set` found for struct `Vec<_>` in the current scope\n   --> /tmp/tmpshqo_hf7.rs:12:9\n    |\n12  |   deriv.set(1, deriv.get(1) + deriv.get(2) * 2);\n    |         ^^^\n    |\nhelp: consider wrapping th",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 0 {\n    return Vec::new(0)\n  }\n  if len(xs) == 1 {\n    return Vec::new(0)\n  }\n  let deriv = Vec::new(len(xs) - 1)\n  for i in 0..(len(xs) - 1) {\n    deriv[i] = xs[i + 1] - xs[i]\n  }\n  return deriv\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmppef4ikn0.rs:15:36\n   |\n15 |   let deriv = Vec::new(len(xs) - 1)\n   |                                    ^ help: add `;` here\n16 |   for i in 0..(len(xs) - 1) {\n   |   --- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmppef4ikn0.rs:9:6\n  |\n9 |   if len(xs) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmppef4ikn0.rs:12:6\n   |\n12 |   if len(xs) == 1 {\n   |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmppef4ikn0.rs:15:24\n   |\n15 |   let deriv = Vec::new(len(xs) - 1)\n   |                        ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmppef4ikn0.rs:16:16\n   |\n16 |   for i in 0..(len(xs) - 1) {\n   |                ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmppef4ikn0.rs:10:12\n    |\n10  |     return Vec::new(0)\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmppef4ikn0.rs:13:12\n    |\n13  |     return Vec::new(0)\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmppef4ikn0.rs:15:15\n    |\n15  |   let deriv = Vec::new(len(xs) - 1)\n    |               ^^^^^^^^ ----------- supplied 1 argument\n    |               |\n    |               expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 8 previous errors\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 1 {\n    return Vec::from(0);\n  }\n  let d = Vec::from(0);\n  for i in 0..xs.len() - 1 {\n    d = d.add(xs[i + 1] * i);\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpzfg6ir1k.rs:9:6\n  |\n9 |   if len(xs) == 1 {\n  |      ^^^ not found in this scope\n\nerror[E0277]: the trait bound `Vec<_, _>: From<{integer}>` is not satisfied\n  --> /tmp/tmpzfg6ir1k.rs:10:12\n   |\n10 |     return Vec::from(0);\n   |            ^^^^^^^^^ the trait `From<{integer}>` is not implemented for `Vec<_, _>`\n   |\n   = help: the following other types implement trait `From<T>`:\n             <Vec<T, A> as From<Box<[T], A>>>\n             <Vec<T, A> as From<VecDeque<T, A>>>\n             <Vec<T> as From<&[T]>>\n             <Vec<T> as From<&mut [T]>>\n             <Vec<T> as From<BinaryHeap<T>>>\n             <Vec<T> as From<Cow<'a, [T]>>>\n             <Vec<T> as From<[T; N]>>\n             <Vec<u8> as From<&str>>\n           and 2 others\n\nerror[E0277]: the trait bound `Vec<_, _>: From<{integer}>` is not satisfied\n  --> /tmp/tmpzfg6ir1k.rs:12:11\n   |\n12 |   let d = Vec::from(0);\n   |           ^^^^^^^^^ the trait `From<{integer}>` is not implemented for `Vec<_, _>`\n   |\n   = help: the following other types implement trait `From<T>`:\n             <Vec<T, A> as From<Box<[T], A>>>\n             <Vec<T, A> as From<VecDeque<T, A>>>\n             <Vec<T> as From<&[T]>>\n             <Vec<T> as From<&mut [T]>>\n             <Vec<T> as From<BinaryHeap<T>>>\n             <Vec<T> as From<Cow<'a, [T]>>>\n             <Vec<T> as From<[T; N]>>\n             <Vec<u8> as From<&str>>\n           and 2 others\n\nerror[E0599]: no method named `add` found for struct `Vec<_, _>` in the current scope\n  --> /tmp/tmpzfg6ir1k.rs:14:11\n   |\n14 |     d = d.add(xs[i + 1] * i);\n   |           ^^^ method not found in `Vec<_, _>`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpzfg6ir1k.rs:14:27\n   |\n14 |     d = d.add(xs[i + 1] * i);\n   |                           ^ expected `isize`, found `usize`\n\nerror[E0277]: cannot multiply `isize` by `usize`\n  --> /tmp/tmpzfg6ir1k.rs:14:25\n   |\n14 |     d = d.add(xs[i + 1] * i);\n   |                         ^ no implementation for `isize * usize`\n   |\n   =",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 0 {\n    return Vec::new(0)\n  }\n  let d = xs[0]\n  for i in 0..(len(xs) - 1) {\n    d = d + xs[i + 1] * i\n  }\n  return Vec::new(d)\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmpyaj8bmoq.rs:12:16\n   |\n12 |   let d = xs[0]\n   |                ^ help: add `;` here\n13 |   for i in 0..(len(xs) - 1) {\n   |   --- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpyaj8bmoq.rs:9:6\n  |\n9 |   if len(xs) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpyaj8bmoq.rs:13:16\n   |\n13 |   for i in 0..(len(xs) - 1) {\n   |                ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpyaj8bmoq.rs:10:12\n    |\n10  |     return Vec::new(0)\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpyaj8bmoq.rs:14:25\n   |\n14 |     d = d + xs[i + 1] * i\n   |                         ^ expected `isize`, found `usize`\n\nerror[E0277]: cannot multiply `isize` by `usize`\n  --> /tmp/tmpyaj8bmoq.rs:14:23\n   |\n14 |     d = d + xs[i + 1] * i\n   |                       ^ no implementation for `isize * usize`\n   |\n   = help: the trait `Mul<usize>` is not implemented for `isize`\n   = help: the following other types implement trait `Mul<Rhs>`:\n             <&'a f32 as Mul<f32>>\n             <&'a f64 as Mul<f64>>\n             <&'a i128 as Mul<i128>>\n             <&'a i16 as Mul<i16>>\n             <&'a i32 as Mul<i32>>\n             <&'a i64 as Mul<i64>>\n             <&'a i8 as Mul<i8>>\n             <&'a isize as Mul<isize>>\n           and 49 others\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpyaj8bmoq.rs:16:10\n    |\n16  |   return Vec::new(d)\n    |          ^^^^^^^^ - supplied 1 argument\n    |          |\n    |          expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0277, E0308, E0425.\nFor more information about an error, t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 0 {\n    return Vec::new(0);\n  }\n  let n = xs.len();\n  let d = Vec::new(n);\n  for (let i = 0; i < n - 1; i++) {\n    d[i] = xs[i + 1] - xs[i];\n  }\n  d[n - 1] = 0;\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpkz_za_ti.rs:14:8\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpkz_za_ti.rs:14:12\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpkz_za_ti.rs:14:14\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpkz_za_ti.rs:14:13\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpkz_za_ti.rs:14:14\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |              ^ expected expression\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpkz_za_ti.rs:9:6\n  |\n9 |   if len(xs) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpkz_za_ti.rs:10:12\n    |\n10  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpkz_za_ti.rs:13:11\n    |\n13  |   let d = Vec::new(n);\n    |           ^^^^^^^^ - supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 8 previous errors\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 1 {\n    return Vec::new(0);\n  }\n\n  let deriv = Vec::new(len(xs) - 1);\n  for (i in 0..(len(xs) - 1)) {\n    deriv[i] = xs[i + 1] - xs[i];\n  }\n  return deriv;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n  --> /tmp/tmp8fbyt796.rs:14:10\n   |\n14 |   for (i in 0..(len(xs) - 1)) {\n   |          ^^ expected one of `)`, `,`, `@`, or `|`\n\nerror: unexpected parentheses surrounding `for` loop head\n  --> /tmp/tmp8fbyt796.rs:14:7\n   |\n14 |   for (i in 0..(len(xs) - 1)) {\n   |       ^                     ^\n   |\nhelp: remove parentheses in `for` loop\n   |\n14 -   for (i in 0..(len(xs) - 1)) {\n14 +   for i in 0..(len(xs) - 1) {\n   | \n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmp8fbyt796.rs:9:6\n  |\n9 |   if len(xs) == 1 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp8fbyt796.rs:13:24\n   |\n13 |   let deriv = Vec::new(len(xs) - 1);\n   |                        ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp8fbyt796.rs:14:17\n   |\n14 |   for (i in 0..(len(xs) - 1)) {\n   |                 ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp8fbyt796.rs:10:12\n    |\n10  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp8fbyt796.rs:13:15\n    |\n13  |   let deriv = Vec::new(len(xs) - 1);\n    |               ^^^^^^^^ ----------- supplied 1 argument\n    |               |\n    |               expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if xs.len == 0 {\n    return xs\n  }\n  let (d, x) = derivative(xs.tail())\n  return xs.head() + d * x\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `return`\n  --> /tmp/tmpi97h_rjg.rs:12:37\n   |\n12 |   let (d, x) = derivative(xs.tail())\n   |                                     ^ help: add `;` here\n13 |   return xs.head() + d * x\n   |   ------ unexpected token\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpi97h_rjg.rs:9:9\n  |\n9 |   if xs.len == 0 {\n  |         ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   if xs.len() == 0 {\n  |            ++\n\nerror[E0599]: no method named `tail` found for struct `Vec<isize>` in the current scope\n  --> /tmp/tmpi97h_rjg.rs:12:30\n   |\n12 |   let (d, x) = derivative(xs.tail())\n   |                              ^^^^ method not found in `Vec<isize>`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpi97h_rjg.rs:12:7\n   |\n12 |   let (d, x) = derivative(xs.tail())\n   |       ^^^^^^   --------------------- this expression has type `Vec<isize>`\n   |       |\n   |       expected struct `Vec`, found tuple\n   |\n   = note: expected struct `Vec<isize>`\n               found tuple `(_, _)`\n\nerror[E0599]: no method named `head` found for struct `Vec<isize>` in the current scope\n  --> /tmp/tmpi97h_rjg.rs:13:13\n   |\n13 |   return xs.head() + d * x\n   |             ^^^^ method not found in `Vec<isize>`\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0308, E0599, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let ds = Vec::new(xs.len - 1);\n  for (let i = 0; i < ds.len; i++) {\n    ds[i] = xs[i + 1] - xs[i];\n  }\n  return ds;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpkv0iqxsx.rs:10:8\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpkv0iqxsx.rs:10:12\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpkv0iqxsx.rs:10:14\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpkv0iqxsx.rs:10:13\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpkv0iqxsx.rs:10:14\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |              ^ expected expression\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpkv0iqxsx.rs:9:24\n  |\n9 |   let ds = Vec::new(xs.len - 1);\n  |                        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let ds = Vec::new(xs.len() - 1);\n  |                           ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpkv0iqxsx.rs:9:12\n    |\n9   |   let ds = Vec::new(xs.len - 1);\n    |            ^^^^^^^^ ---------- supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let d = 0;\n  for (let i = 1; i < xs.len; i++) {\n    d = d + xs[i] * i;\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmp4akaeqnh.rs:10:8\n   |\n10 |   for (let i = 1; i < xs.len; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmp4akaeqnh.rs:10:12\n   |\n10 |   for (let i = 1; i < xs.len; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmp4akaeqnh.rs:10:14\n   |\n10 |   for (let i = 1; i < xs.len; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmp4akaeqnh.rs:10:13\n   |\n10 |   for (let i = 1; i < xs.len; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmp4akaeqnh.rs:10:14\n   |\n10 |   for (let i = 1; i < xs.len; i++) {\n   |              ^ expected expression\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 0 {\n    return Vec::new(0)\n  }\n  let (n, d) = derivative_coeffs(xs);\n  return Vec::new(n + 1)\n    .extend(d)\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpu1v6z100.rs:9:6\n  |\n9 |   if len(xs) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `derivative_coeffs` in this scope\n  --> /tmp/tmpu1v6z100.rs:12:16\n   |\n12 |   let (n, d) = derivative_coeffs(xs);\n   |                ^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpu1v6z100.rs:10:12\n    |\n10  |     return Vec::new(0)\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpu1v6z100.rs:13:10\n    |\n13  |   return Vec::new(n + 1)\n    |          ^^^^^^^^ ----- supplied 1 argument\n    |          |\n    |          expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpu1v6z100.rs:13:10\n   |\n8  |   fn derivative(xs: Vec<isize>) -> Vec<isize> {\n   |                                    ---------- expected `Vec<isize>` because of return type\n...\n13 |     return Vec::new(n + 1)\n   |  __________^\n14 | |     .extend(d)\n   | |______________^ expected struct `Vec`, found `()`\n   |\n   = note: expected struct `Vec<isize>`\n           found unit type `()`\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0061, E0308, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let dxs: Vec<isize> = Vec::new(xs.len - 1);\n  for (i in 0..xs.len - 1) {\n    dxs[i] = xs[i + 1] - xs[i];\n  }\n  return dxs;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n  --> /tmp/tmpksv_0_km.rs:10:10\n   |\n10 |   for (i in 0..xs.len - 1) {\n   |          ^^ expected one of `)`, `,`, `@`, or `|`\n\nerror: unexpected parentheses surrounding `for` loop head\n  --> /tmp/tmpksv_0_km.rs:10:7\n   |\n10 |   for (i in 0..xs.len - 1) {\n   |       ^                  ^\n   |\nhelp: remove parentheses in `for` loop\n   |\n10 -   for (i in 0..xs.len - 1) {\n10 +   for i in 0..xs.len - 1 {\n   | \n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpksv_0_km.rs:9:37\n  |\n9 |   let dxs: Vec<isize> = Vec::new(xs.len - 1);\n  |                                     ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let dxs: Vec<isize> = Vec::new(xs.len() - 1);\n  |                                        ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpksv_0_km.rs:9:25\n    |\n9   |   let dxs: Vec<isize> = Vec::new(xs.len - 1);\n    |                         ^^^^^^^^ ---------- supplied 1 argument\n    |                         |\n    |                         expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpksv_0_km.rs:10:19\n   |\n10 |   for (i in 0..xs.len - 1) {\n   |                   ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n10 |   for (i in 0..xs.len() - 1) {\n   |                      ++\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  if n == 0 {\n    return Vec::new(0);\n  }\n  let d = Vec::new(n - 1);\n  for (let i = 0; i < n - 1; i++) {\n    d[i] = xs[i + 1] - xs[i];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmp9a1jg6z5.rs:14:8\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmp9a1jg6z5.rs:14:12\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmp9a1jg6z5.rs:14:14\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmp9a1jg6z5.rs:14:13\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmp9a1jg6z5.rs:14:14\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp9a1jg6z5.rs:11:12\n    |\n11  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp9a1jg6z5.rs:13:11\n    |\n13  |   let d = Vec::new(n - 1);\n    |           ^^^^^^^^ ----- supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let d = 0;\n  for (let i = xs.len - 1; i >= 0; i--) {\n    d = d * xs[i] + 1;\n  }\n  return Vec::from(d);\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmp3ipho00p.rs:10:8\n   |\n10 |   for (let i = xs.len - 1; i >= 0; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmp3ipho00p.rs:10:12\n   |\n10 |   for (let i = xs.len - 1; i >= 0; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmp3ipho00p.rs:10:14\n   |\n10 |   for (let i = xs.len - 1; i >= 0; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmp3ipho00p.rs:10:13\n   |\n10 |   for (let i = xs.len - 1; i >= 0; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmp3ipho00p.rs:10:14\n   |\n10 |   for (let i = xs.len - 1; i >= 0; i--) {\n   |              ^ expected expression\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if xs.len == 0 {\n    return xs\n  }\n  let deriv = Vec::new(xs.len - 1)\n  for i in 0..xs.len - 1 {\n    deriv[i] = xs[i + 1] - xs[i]\n  }\n  return deriv\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmpwud5dsq1.rs:12:35\n   |\n12 |   let deriv = Vec::new(xs.len - 1)\n   |                                   ^ help: add `;` here\n13 |   for i in 0..xs.len - 1 {\n   |   --- unexpected token\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpwud5dsq1.rs:9:9\n  |\n9 |   if xs.len == 0 {\n  |         ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   if xs.len() == 0 {\n  |            ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpwud5dsq1.rs:12:27\n   |\n12 |   let deriv = Vec::new(xs.len - 1)\n   |                           ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n12 |   let deriv = Vec::new(xs.len() - 1)\n   |                              ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpwud5dsq1.rs:12:15\n    |\n12  |   let deriv = Vec::new(xs.len - 1)\n    |               ^^^^^^^^ ---------- supplied 1 argument\n    |               |\n    |               expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpwud5dsq1.rs:13:18\n   |\n13 |   for i in 0..xs.len - 1 {\n   |                  ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n13 |   for i in 0..xs.len() - 1 {\n   |                     ++\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if xs.len == 0 {\n    return xs\n  }\n  let (a, b) = (xs[0], xs[1]);\n  let (c, d) = (xs[1], xs[2]);\n  let (e, f) = (xs[2], xs[3]);\n  let (g, h) = (xs[3], xs[4]);\n  let (i, j) = (xs[4], xs[5]);\n  let (k, l) = (xs[5], xs[6]);\n  let (m, n) = (xs[6], xs[7]);\n  let (o, p) = (xs[7], xs[8]);\n  let (q, r) = (xs[8], xs[9]);\n  let (s, t) = (xs[9], xs[10]);\n  let (u, v) = (xs[10], xs[11]);\n  let (w, x) = (xs[11], xs[12]);\n  let (y, z) = (xs[12], xs[13]);\n  let (A, B) = (xs[13], xs[14]);\n  let (C, D) = (xs[14], xs[15]);\n  let (E, F) = (xs[15], xs[16]);\n  let (G, H) = (xs[16], xs[17]);\n  let (I, J) = (xs[17], xs[18]);\n  let (K, L) = (xs[18], xs[19]);\n  let (M, N) = (xs[19], xs[20]);\n  let (O, P) = (xs[20], xs[21]);\n  let (Q, R) = (xs[21], xs[22]);\n  let (S, T) = (xs[22], xs[23]);\n  let (U, V) = (xs[23], xs[24]);\n  let (W, X) = (xs[24], xs[25]);\n  let (Y, Z) = (xs[25], xs[26]);\n\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp11yio21a.rs:9:9\n  |\n9 |   if xs.len == 0 {\n  |         ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   if xs.len() == 0 {\n  |            ++\n\nerror[E0308]: mismatched types\n --> /tmp/tmp11yio21a.rs:8:34\n  |\n8 | fn derivative(xs: Vec<isize>) -> Vec<isize> {\n  |    ----------                    ^^^^^^^^^^ expected struct `Vec`, found `()`\n  |    |\n  |    implicitly returns `()` as its body has no tail or `return` expression\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0308, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let d = 0;\n  for (i in 0..xs.len) {\n    d = d + xs[i] * i;\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n  --> /tmp/tmpk1y5r8fb.rs:10:10\n   |\n10 |   for (i in 0..xs.len) {\n   |          ^^ expected one of `)`, `,`, `@`, or `|`\n\nerror: unexpected parentheses surrounding `for` loop head\n  --> /tmp/tmpk1y5r8fb.rs:10:7\n   |\n10 |   for (i in 0..xs.len) {\n   |       ^              ^\n   |\nhelp: remove parentheses in `for` loop\n   |\n10 -   for (i in 0..xs.len) {\n10 +   for i in 0..xs.len {\n   | \n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpk1y5r8fb.rs:10:19\n   |\n10 |   for (i in 0..xs.len) {\n   |                   ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n10 |   for (i in 0..xs.len()) {\n   |                      ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpk1y5r8fb.rs:11:21\n   |\n11 |     d = d + xs[i] * i;\n   |                     ^ expected `isize`, found `usize`\n\nerror[E0277]: cannot multiply `isize` by `usize`\n  --> /tmp/tmpk1y5r8fb.rs:11:19\n   |\n11 |     d = d + xs[i] * i;\n   |                   ^ no implementation for `isize * usize`\n   |\n   = help: the trait `Mul<usize>` is not implemented for `isize`\n   = help: the following other types implement trait `Mul<Rhs>`:\n             <&'a f32 as Mul<f32>>\n             <&'a f64 as Mul<f64>>\n             <&'a i128 as Mul<i128>>\n             <&'a i16 as Mul<i16>>\n             <&'a i32 as Mul<i32>>\n             <&'a i64 as Mul<i64>>\n             <&'a i8 as Mul<i8>>\n             <&'a isize as Mul<isize>>\n           and 49 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpk1y5r8fb.rs:13:10\n   |\n8  | fn derivative(xs: Vec<isize>) -> Vec<isize> {\n   |                                  ---------- expected `Vec<isize>` because of return type\n...\n13 |   return d;\n   |          ^ expected struct `Vec`, found `isize`\n   |\n   = note: expected struct `Vec<isize>`\n                found type `isize`\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0277, E0308, E0616.\nFor more information about an error, try `rustc --exp",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let d = Vec::new(n);\n  for (let i = 0; i < n; i++) {\n    d[i] = xs[i + 1] - xs[i];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpr10kq8cg.rs:11:8\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpr10kq8cg.rs:11:12\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpr10kq8cg.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpr10kq8cg.rs:11:13\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpr10kq8cg.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpr10kq8cg.rs:10:11\n    |\n10  |   let d = Vec::new(n);\n    |           ^^^^^^^^ - supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 1 {\n    return Vec::new(0);\n  }\n  let (d, x) = derivative(xs[1:]);\n  return Vec::new(xs[0] * d);\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected type, found `]`\n  --> /tmp/tmpfwnbaowj.rs:12:32\n   |\n12 |   let (d, x) = derivative(xs[1:]);\n   |                               -^ expected type\n   |                               |\n   |                               tried to parse a type due to this\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpfwnbaowj.rs:9:6\n  |\n9 |   if len(xs) == 1 {\n  |      ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpfwnbaowj.rs:10:12\n    |\n10  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpfwnbaowj.rs:13:10\n    |\n13  |   return Vec::new(xs[0] * d);\n    |          ^^^^^^^^ --------- supplied 1 argument\n    |          |\n    |          expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let d = vec![];\n  for (let i = n - 1; i >= 0; i--) {\n    d = vec![d[i + 1] + d[i], d[i]];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpohx3ez95.rs:11:8\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpohx3ez95.rs:11:12\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpohx3ez95.rs:11:14\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpohx3ez95.rs:11:13\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpohx3ez95.rs:11:14\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected expression\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let d = Vec::new(n);\n  for (let i = 0; i < n; i++) {\n    d[i] = xs[i + 1] - xs[i];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpr10kq8cg.rs:11:8\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpr10kq8cg.rs:11:12\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpr10kq8cg.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpr10kq8cg.rs:11:13\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpr10kq8cg.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpr10kq8cg.rs:10:11\n    |\n10  |   let d = Vec::new(n);\n    |           ^^^^^^^^ - supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let d = 0;\n  for (let i = 1; i < xs.len; i++) {\n    d += xs[i] * i;\n  }\n  return Vec::from(d);\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpc8qdsxk2.rs:10:8\n   |\n10 |   for (let i = 1; i < xs.len; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpc8qdsxk2.rs:10:12\n   |\n10 |   for (let i = 1; i < xs.len; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpc8qdsxk2.rs:10:14\n   |\n10 |   for (let i = 1; i < xs.len; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpc8qdsxk2.rs:10:13\n   |\n10 |   for (let i = 1; i < xs.len; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpc8qdsxk2.rs:10:14\n   |\n10 |   for (let i = 1; i < xs.len; i++) {\n   |              ^ expected expression\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let dxs: Vec<isize> = Vec::new(xs.len - 1);\n  for (let i = 0; i < dxs.len; i++) {\n    dxs[i] = xs[i + 1] - xs[i];\n  }\n  return dxs;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpm8pf3nhf.rs:10:8\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpm8pf3nhf.rs:10:12\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpm8pf3nhf.rs:10:14\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpm8pf3nhf.rs:10:13\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpm8pf3nhf.rs:10:14\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |              ^ expected expression\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpm8pf3nhf.rs:9:37\n  |\n9 |   let dxs: Vec<isize> = Vec::new(xs.len - 1);\n  |                                     ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let dxs: Vec<isize> = Vec::new(xs.len() - 1);\n  |                                        ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpm8pf3nhf.rs:9:25\n    |\n9   |   let dxs: Vec<isize> = Vec::new(xs.len - 1);\n    |                         ^^^^^^^^ ---------- supplied 1 argument\n    |                         |\n    |                         expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 0 {\n    return Vec::new(0);\n  }\n  let deriv = Vec::new(len(xs) - 1);\n  for (i in 0..(len(xs) - 1)) {\n    deriv[i] = xs[i + 1] - xs[i];\n  }\n  return deriv;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n  --> /tmp/tmpzmimo2fb.rs:13:10\n   |\n13 |   for (i in 0..(len(xs) - 1)) {\n   |          ^^ expected one of `)`, `,`, `@`, or `|`\n\nerror: unexpected parentheses surrounding `for` loop head\n  --> /tmp/tmpzmimo2fb.rs:13:7\n   |\n13 |   for (i in 0..(len(xs) - 1)) {\n   |       ^                     ^\n   |\nhelp: remove parentheses in `for` loop\n   |\n13 -   for (i in 0..(len(xs) - 1)) {\n13 +   for i in 0..(len(xs) - 1) {\n   | \n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpzmimo2fb.rs:9:6\n  |\n9 |   if len(xs) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpzmimo2fb.rs:12:24\n   |\n12 |   let deriv = Vec::new(len(xs) - 1);\n   |                        ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpzmimo2fb.rs:13:17\n   |\n13 |   for (i in 0..(len(xs) - 1)) {\n   |                 ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpzmimo2fb.rs:10:12\n    |\n10  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpzmimo2fb.rs:12:15\n    |\n12  |   let deriv = Vec::new(len(xs) - 1);\n    |               ^^^^^^^^ ----------- supplied 1 argument\n    |               |\n    |               expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if xs.len == 0 {\n    return xs\n  }\n\n  let deriv = Vec::new(xs.len - 1)\n  deriv.copy_from(xs)\n  deriv.set(0, deriv.get(0) + deriv.get(1))\n  for i in 0..deriv.len - 2 {\n    deriv.set(i + 1, deriv.get(i + 1) + deriv.get(i + 2) * deriv.get(i + 1))\n  }\n  return deriv\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found `deriv`\n  --> /tmp/tmpmggxgqqb.rs:13:35\n   |\n13 |   let deriv = Vec::new(xs.len - 1)\n   |                                   ^ help: add `;` here\n14 |   deriv.copy_from(xs)\n   |   ----- unexpected token\n\nerror: expected `;`, found `deriv`\n  --> /tmp/tmpmggxgqqb.rs:14:22\n   |\n14 |   deriv.copy_from(xs)\n   |                      ^ help: add `;` here\n15 |   deriv.set(0, deriv.get(0) + deriv.get(1))\n   |   ----- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmpmggxgqqb.rs:15:44\n   |\n15 |   deriv.set(0, deriv.get(0) + deriv.get(1))\n   |                                            ^ help: add `;` here\n16 |   for i in 0..deriv.len - 2 {\n   |   --- unexpected token\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpmggxgqqb.rs:9:9\n  |\n9 |   if xs.len == 0 {\n  |         ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   if xs.len() == 0 {\n  |            ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpmggxgqqb.rs:13:27\n   |\n13 |   let deriv = Vec::new(xs.len - 1)\n   |                           ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n13 |   let deriv = Vec::new(xs.len() - 1)\n   |                              ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpmggxgqqb.rs:13:15\n    |\n13  |   let deriv = Vec::new(xs.len - 1)\n    |               ^^^^^^^^ ---------- supplied 1 argument\n    |               |\n    |               expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0599]: no method named `copy_from` found for struct `Vec<_>` in the current scope\n  --> /tmp/tmpmggxgqqb.rs:14:9\n   |\n14 |   deriv.copy_from(xs)\n   |         ^^^^^^^^^ help: there is an associated function with a similar name: `copy_from_slice`\n\nerror[E0599]: no method named `set` found for struct `Vec<_>` in the current scope\n   --> /tmp/tmpmggxgqqb.rs:15:9\n    |\n15  |   deriv.set(0, deriv.get(0) + deriv.get(1))\n    |  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let dxs: Vec<isize> = Vec::new(xs.len - 1);\n  for (i in 0..xs.len - 1) {\n    dxs[i] = xs[i + 1] - xs[i];\n  }\n  return dxs;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n  --> /tmp/tmpksv_0_km.rs:10:10\n   |\n10 |   for (i in 0..xs.len - 1) {\n   |          ^^ expected one of `)`, `,`, `@`, or `|`\n\nerror: unexpected parentheses surrounding `for` loop head\n  --> /tmp/tmpksv_0_km.rs:10:7\n   |\n10 |   for (i in 0..xs.len - 1) {\n   |       ^                  ^\n   |\nhelp: remove parentheses in `for` loop\n   |\n10 -   for (i in 0..xs.len - 1) {\n10 +   for i in 0..xs.len - 1 {\n   | \n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpksv_0_km.rs:9:37\n  |\n9 |   let dxs: Vec<isize> = Vec::new(xs.len - 1);\n  |                                     ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let dxs: Vec<isize> = Vec::new(xs.len() - 1);\n  |                                        ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpksv_0_km.rs:9:25\n    |\n9   |   let dxs: Vec<isize> = Vec::new(xs.len - 1);\n    |                         ^^^^^^^^ ---------- supplied 1 argument\n    |                         |\n    |                         expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpksv_0_km.rs:10:19\n   |\n10 |   for (i in 0..xs.len - 1) {\n   |                   ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n10 |   for (i in 0..xs.len() - 1) {\n   |                      ++\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if xs.len == 0 {\n    return Vec::new(0);\n  }\n\n  let d = xs[0];\n  for i in 0..xs.len-1 {\n    d = d + xs[i+1] * i;\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpiaw_2t_l.rs:9:9\n  |\n9 |   if xs.len == 0 {\n  |         ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   if xs.len() == 0 {\n  |            ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpiaw_2t_l.rs:10:12\n    |\n10  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpiaw_2t_l.rs:14:18\n   |\n14 |   for i in 0..xs.len-1 {\n   |                  ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n14 |   for i in 0..xs.len()-1 {\n   |                     ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpiaw_2t_l.rs:15:23\n   |\n15 |     d = d + xs[i+1] * i;\n   |                       ^ expected `isize`, found `usize`\n\nerror[E0277]: cannot multiply `isize` by `usize`\n  --> /tmp/tmpiaw_2t_l.rs:15:21\n   |\n15 |     d = d + xs[i+1] * i;\n   |                     ^ no implementation for `isize * usize`\n   |\n   = help: the trait `Mul<usize>` is not implemented for `isize`\n   = help: the following other types implement trait `Mul<Rhs>`:\n             <&'a f32 as Mul<f32>>\n             <&'a f64 as Mul<f64>>\n             <&'a i128 as Mul<i128>>\n             <&'a i16 as Mul<i16>>\n             <&'a i32 as Mul<i32>>\n             <&'a i64 as Mul<i64>>\n             <&'a i8 as Mul<i8>>\n             <&'a isize as Mul<isize>>\n           and 49 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpiaw_2t_l.rs:17:10\n   |\n8  | fn derivative(xs: Vec<isize>) -> Vec<isize> {\n   |                                  ---------- expected `Vec<isize>` because of return type\n...\n17 |   return d;\n   |          ^ expected struct `Vec`, found `isize`\n   |\n   = note: expected struct `Vec<isize>`\n                found type `isize`\n\nerror: aborting due to 6 previous errors\n\nSome errors have d",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let d = Vec::new(n - 1);\n  for (let i = 0; i < n - 1; i++) {\n    d[i] = xs[i + 1] - xs[i];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmp8d1tdzk3.rs:11:8\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmp8d1tdzk3.rs:11:12\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmp8d1tdzk3.rs:11:14\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmp8d1tdzk3.rs:11:13\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmp8d1tdzk3.rs:11:14\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp8d1tdzk3.rs:10:11\n    |\n10  |   let d = Vec::new(n - 1);\n    |           ^^^^^^^^ ----- supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 1 {\n    return Vec::new(0);\n  }\n\n  let deriv = Vec::new(len(xs) - 1);\n  for (let i = 1; i < len(xs); i++) {\n    deriv[i - 1] = xs[i] * i;\n  }\n  return deriv;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmprhriu5pj.rs:14:8\n   |\n14 |   for (let i = 1; i < len(xs); i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmprhriu5pj.rs:14:12\n   |\n14 |   for (let i = 1; i < len(xs); i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmprhriu5pj.rs:14:14\n   |\n14 |   for (let i = 1; i < len(xs); i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmprhriu5pj.rs:14:13\n   |\n14 |   for (let i = 1; i < len(xs); i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmprhriu5pj.rs:14:14\n   |\n14 |   for (let i = 1; i < len(xs); i++) {\n   |              ^ expected expression\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmprhriu5pj.rs:9:6\n  |\n9 |   if len(xs) == 1 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmprhriu5pj.rs:13:24\n   |\n13 |   let deriv = Vec::new(len(xs) - 1);\n   |                        ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmprhriu5pj.rs:10:12\n    |\n10  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmprhriu5pj.rs:13:15\n    |\n13  |   let deriv = Vec::new(len(xs) - 1);\n    |               ^^^^^^^^ ----------- supplied 1 argument\n    |               |\n    |               expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 9 previous errors\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --expl",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 0 {\n    return Vec::new(0)\n  }\n\n  let deriv = Vec::new(len(xs) - 1)\n  for i in 0..(len(xs) - 1) {\n    deriv[i] = xs[i + 1] - xs[i]\n  }\n  return deriv\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmp_kcyj8un.rs:13:36\n   |\n13 |   let deriv = Vec::new(len(xs) - 1)\n   |                                    ^ help: add `;` here\n14 |   for i in 0..(len(xs) - 1) {\n   |   --- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmp_kcyj8un.rs:9:6\n  |\n9 |   if len(xs) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp_kcyj8un.rs:13:24\n   |\n13 |   let deriv = Vec::new(len(xs) - 1)\n   |                        ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp_kcyj8un.rs:14:16\n   |\n14 |   for i in 0..(len(xs) - 1) {\n   |                ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp_kcyj8un.rs:10:12\n    |\n10  |     return Vec::new(0)\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp_kcyj8un.rs:13:15\n    |\n13  |   let deriv = Vec::new(len(xs) - 1)\n    |               ^^^^^^^^ ----------- supplied 1 argument\n    |               |\n    |               expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let ds = Vec::new(xs.len - 1);\n  for (let i = 0; i < ds.len; i++) {\n    ds[i] = xs[i + 1] - xs[i];\n  }\n  return ds;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpkv0iqxsx.rs:10:8\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpkv0iqxsx.rs:10:12\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpkv0iqxsx.rs:10:14\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpkv0iqxsx.rs:10:13\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpkv0iqxsx.rs:10:14\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |              ^ expected expression\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpkv0iqxsx.rs:9:24\n  |\n9 |   let ds = Vec::new(xs.len - 1);\n  |                        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let ds = Vec::new(xs.len() - 1);\n  |                           ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpkv0iqxsx.rs:9:12\n    |\n9   |   let ds = Vec::new(xs.len - 1);\n    |            ^^^^^^^^ ---------- supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len;\n  let d = vec![];\n  for (let i = n - 1; i >= 0; i--) {\n    d = vec![d[i] + xs[i + 1]];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmppcenqyfs.rs:11:8\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmppcenqyfs.rs:11:12\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmppcenqyfs.rs:11:14\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmppcenqyfs.rs:11:13\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmppcenqyfs.rs:11:14\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected expression\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmppcenqyfs.rs:9:14\n  |\n9 |   let n = xs.len;\n  |              ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let n = xs.len();\n  |                 ++\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0616`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  if n == 0 {\n    return Vec::new(0);\n  }\n  let d = Vec::new(n - 1);\n  for (let i = 1; i < n; i++) {\n    d[i - 1] = xs[i] * i;\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpzr32avhq.rs:14:8\n   |\n14 |   for (let i = 1; i < n; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpzr32avhq.rs:14:12\n   |\n14 |   for (let i = 1; i < n; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpzr32avhq.rs:14:14\n   |\n14 |   for (let i = 1; i < n; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpzr32avhq.rs:14:13\n   |\n14 |   for (let i = 1; i < n; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpzr32avhq.rs:14:14\n   |\n14 |   for (let i = 1; i < n; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpzr32avhq.rs:11:12\n    |\n11  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpzr32avhq.rs:13:11\n    |\n13  |   let d = Vec::new(n - 1);\n    |           ^^^^^^^^ ----- supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 0 {\n    return Vec::new(0);\n  }\n  let d = xs[1];\n  for (i in 1..xs.len - 1) {\n    d = d * xs[i + 1] + xs[i];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n  --> /tmp/tmp7wf2j6o5.rs:13:10\n   |\n13 |   for (i in 1..xs.len - 1) {\n   |          ^^ expected one of `)`, `,`, `@`, or `|`\n\nerror: unexpected parentheses surrounding `for` loop head\n  --> /tmp/tmp7wf2j6o5.rs:13:7\n   |\n13 |   for (i in 1..xs.len - 1) {\n   |       ^                  ^\n   |\nhelp: remove parentheses in `for` loop\n   |\n13 -   for (i in 1..xs.len - 1) {\n13 +   for i in 1..xs.len - 1 {\n   | \n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmp7wf2j6o5.rs:9:6\n  |\n9 |   if len(xs) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp7wf2j6o5.rs:10:12\n    |\n10  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmp7wf2j6o5.rs:13:19\n   |\n13 |   for (i in 1..xs.len - 1) {\n   |                   ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n13 |   for (i in 1..xs.len() - 1) {\n   |                      ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp7wf2j6o5.rs:16:10\n   |\n8  | fn derivative(xs: Vec<isize>) -> Vec<isize> {\n   |                                  ---------- expected `Vec<isize>` because of return type\n...\n16 |   return d;\n   |          ^ expected struct `Vec`, found `isize`\n   |\n   = note: expected struct `Vec<isize>`\n                found type `isize`\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0061, E0308, E0425, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 0 {\n    return Vec::new(0);\n  }\n  let d = xs[0];\n  for i in 0..(len(xs) - 1) {\n    d = d + xs[i + 1] * i;\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpb9xu7_00.rs:9:6\n  |\n9 |   if len(xs) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpb9xu7_00.rs:13:16\n   |\n13 |   for i in 0..(len(xs) - 1) {\n   |                ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpb9xu7_00.rs:10:12\n    |\n10  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpb9xu7_00.rs:14:25\n   |\n14 |     d = d + xs[i + 1] * i;\n   |                         ^ expected `isize`, found `usize`\n\nerror[E0277]: cannot multiply `isize` by `usize`\n  --> /tmp/tmpb9xu7_00.rs:14:23\n   |\n14 |     d = d + xs[i + 1] * i;\n   |                       ^ no implementation for `isize * usize`\n   |\n   = help: the trait `Mul<usize>` is not implemented for `isize`\n   = help: the following other types implement trait `Mul<Rhs>`:\n             <&'a f32 as Mul<f32>>\n             <&'a f64 as Mul<f64>>\n             <&'a i128 as Mul<i128>>\n             <&'a i16 as Mul<i16>>\n             <&'a i32 as Mul<i32>>\n             <&'a i64 as Mul<i64>>\n             <&'a i8 as Mul<i8>>\n             <&'a isize as Mul<isize>>\n           and 49 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpb9xu7_00.rs:16:10\n   |\n8  | fn derivative(xs: Vec<isize>) -> Vec<isize> {\n   |                                  ---------- expected `Vec<isize>` because of return type\n...\n16 |   return d;\n   |          ^ expected struct `Vec`, found `isize`\n   |\n   = note: expected struct `Vec<isize>`\n                found type `isize`\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0061, E0277, E0308, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let ds = Vec::new(xs.len - 1);\n  for (let i = 0; i < ds.len; i++) {\n    ds[i] = xs[i + 1] - xs[i];\n  }\n  return ds;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpkv0iqxsx.rs:10:8\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpkv0iqxsx.rs:10:12\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpkv0iqxsx.rs:10:14\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpkv0iqxsx.rs:10:13\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpkv0iqxsx.rs:10:14\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |              ^ expected expression\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpkv0iqxsx.rs:9:24\n  |\n9 |   let ds = Vec::new(xs.len - 1);\n  |                        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let ds = Vec::new(xs.len() - 1);\n  |                           ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpkv0iqxsx.rs:9:12\n    |\n9   |   let ds = Vec::new(xs.len - 1);\n    |            ^^^^^^^^ ---------- supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if xs.len == 0 {\n    return xs\n  }\n  let d = xs.len - 1\n  let result = Vec::new(d)\n  for i in 0..d {\n    result[i] = xs[i + 1]\n  }\n  return result\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp9ys66j6e.rs:12:21\n   |\n12 |   let d = xs.len - 1\n   |                     ^ help: add `;` here\n13 |   let result = Vec::new(d)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmp9ys66j6e.rs:13:27\n   |\n13 |   let result = Vec::new(d)\n   |                           ^ help: add `;` here\n14 |   for i in 0..d {\n   |   --- unexpected token\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp9ys66j6e.rs:9:9\n  |\n9 |   if xs.len == 0 {\n  |         ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   if xs.len() == 0 {\n  |            ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmp9ys66j6e.rs:12:14\n   |\n12 |   let d = xs.len - 1\n   |              ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n12 |   let d = xs.len() - 1\n   |                 ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp9ys66j6e.rs:13:16\n    |\n13  |   let result = Vec::new(d)\n    |                ^^^^^^^^ - supplied 1 argument\n    |                |\n    |                expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let d = 0;\n  for i in 0..xs.len() - 1 {\n    d = d + xs[i + 1] * i;\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n  --> /tmp/tmp8cf3_gx5.rs:11:25\n   |\n11 |     d = d + xs[i + 1] * i;\n   |                         ^ expected `isize`, found `usize`\n\nerror[E0277]: cannot multiply `isize` by `usize`\n  --> /tmp/tmp8cf3_gx5.rs:11:23\n   |\n11 |     d = d + xs[i + 1] * i;\n   |                       ^ no implementation for `isize * usize`\n   |\n   = help: the trait `Mul<usize>` is not implemented for `isize`\n   = help: the following other types implement trait `Mul<Rhs>`:\n             <&'a f32 as Mul<f32>>\n             <&'a f64 as Mul<f64>>\n             <&'a i128 as Mul<i128>>\n             <&'a i16 as Mul<i16>>\n             <&'a i32 as Mul<i32>>\n             <&'a i64 as Mul<i64>>\n             <&'a i8 as Mul<i8>>\n             <&'a isize as Mul<isize>>\n           and 49 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp8cf3_gx5.rs:13:10\n   |\n8  | fn derivative(xs: Vec<isize>) -> Vec<isize> {\n   |                                  ---------- expected `Vec<isize>` because of return type\n...\n13 |   return d;\n   |          ^ expected struct `Vec`, found `isize`\n   |\n   = note: expected struct `Vec<isize>`\n                found type `isize`\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len;\n  let d = Vec::new(n - 1);\n  for (let i = 1; i < n; i++) {\n    d[i - 1] = xs[i] * i;\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpbi4owu99.rs:11:8\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpbi4owu99.rs:11:12\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpbi4owu99.rs:11:14\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpbi4owu99.rs:11:13\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpbi4owu99.rs:11:14\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |              ^ expected expression\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpbi4owu99.rs:9:14\n  |\n9 |   let n = xs.len;\n  |              ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let n = xs.len();\n  |                 ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpbi4owu99.rs:10:11\n    |\n10  |   let d = Vec::new(n - 1);\n    |           ^^^^^^^^ ----- supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let ds = xs.len();\n  if (ds == 0) {\n    return Vec::new(0);\n  }\n  let ds_1 = ds - 1;\n  let ds_2 = ds - 2;\n  let ds_3 = ds - 3;\n  let ds_4 = ds - 4;\n  let ds_5 = ds - 5;\n  let ds_6 = ds - 6;\n  let ds_7 = ds - 7;\n  let ds_8 = ds - 8;\n  let ds_9 = ds - 9;\n  let ds_10 = ds - 10;\n  let ds_11 = ds - 11;\n  let ds_12 = ds - 12;\n  let ds_13 = ds - 13;\n  let ds_14 = ds - 14;\n  let ds_15 = ds - 15;\n  let ds_16 = ds - 16;\n  let ds_17 = ds - 17;\n  let ds_18 = ds - 18;\n  let ds_19 = ds - 19;\n  let ds_20 = ds - 20;\n  let ds_21 = ds - 21;\n  let ds_22 = ds - 22;\n  let ds_23 = ds - 23;\n  let ds_24 = ds - 24;\n  let ds_25 = ds - 25;\n  let ds_26 = ds - 26;\n  let ds_27 = ds - 27;\n  let ds_28 = ds - 28;\n  let ds_29 = ds - 29;\n  let ds_30 = ds - 30;\n  let ds_31 = ds - 31;\n  let ds_32 = ds - 32;\n  let ds_33 = ds - 33;\n  let ds_34 = ds - 34;\n  let ds_35 = ds - 35;\n  let ds_36 = ds - 36;\n  let ds_37 = ds - 37;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpt3lx9xw3.rs:10:6\n   |\n10 |   if (ds == 0) {\n   |      ^       ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n10 -   if (ds == 0) {\n10 +   if ds == 0 {\n   | \n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpt3lx9xw3.rs:11:12\n    |\n11  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0308]: mismatched types\n --> /tmp/tmpt3lx9xw3.rs:8:34\n  |\n8 | fn derivative(xs: Vec<isize>) -> Vec<isize> {\n  |    ----------                    ^^^^^^^^^^ expected struct `Vec`, found `()`\n  |    |\n  |    implicitly returns `()` as its body has no tail or `return` expression\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type `()`\n\nerror: aborting due to 2 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0061, E0308.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len;\n  let d = vec![];\n  for (let i = n - 1; i >= 0; i--) {\n    d = vec![d[i] + xs[i + 1], ...];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmp_gdvbj8t.rs:11:8\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmp_gdvbj8t.rs:11:12\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmp_gdvbj8t.rs:11:14\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmp_gdvbj8t.rs:11:13\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmp_gdvbj8t.rs:11:14\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected expression\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp_gdvbj8t.rs:9:14\n  |\n9 |   let n = xs.len;\n  |              ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let n = xs.len();\n  |                 ++\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0616`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  if n == 0 {\n    return Vec::new(0);\n  }\n  let d = Vec::new(n - 1);\n  for (let i = n - 1; i >= 1; i--) {\n    d[i - 1] = xs[i] * i;\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpen5keme9.rs:14:8\n   |\n14 |   for (let i = n - 1; i >= 1; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpen5keme9.rs:14:12\n   |\n14 |   for (let i = n - 1; i >= 1; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpen5keme9.rs:14:14\n   |\n14 |   for (let i = n - 1; i >= 1; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpen5keme9.rs:14:13\n   |\n14 |   for (let i = n - 1; i >= 1; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpen5keme9.rs:14:14\n   |\n14 |   for (let i = n - 1; i >= 1; i--) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpen5keme9.rs:11:12\n    |\n11  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpen5keme9.rs:13:11\n    |\n13  |   let d = Vec::new(n - 1);\n    |           ^^^^^^^^ ----- supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 0 {\n    return Vec::new(0)\n  }\n\n  let d = xs[0]\n  for i in 0..xs.len - 1 {\n    d = d + xs[i + 1] * i\n  }\n  return Vec::new(d)\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmpdrcub6q0.rs:13:16\n   |\n13 |   let d = xs[0]\n   |                ^ help: add `;` here\n14 |   for i in 0..xs.len - 1 {\n   |   --- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpdrcub6q0.rs:9:6\n  |\n9 |   if len(xs) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpdrcub6q0.rs:10:12\n    |\n10  |     return Vec::new(0)\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpdrcub6q0.rs:14:18\n   |\n14 |   for i in 0..xs.len - 1 {\n   |                  ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n14 |   for i in 0..xs.len() - 1 {\n   |                     ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpdrcub6q0.rs:15:25\n   |\n15 |     d = d + xs[i + 1] * i\n   |                         ^ expected `isize`, found `usize`\n\nerror[E0277]: cannot multiply `isize` by `usize`\n  --> /tmp/tmpdrcub6q0.rs:15:23\n   |\n15 |     d = d + xs[i + 1] * i\n   |                       ^ no implementation for `isize * usize`\n   |\n   = help: the trait `Mul<usize>` is not implemented for `isize`\n   = help: the following other types implement trait `Mul<Rhs>`:\n             <&'a f32 as Mul<f32>>\n             <&'a f64 as Mul<f64>>\n             <&'a i128 as Mul<i128>>\n             <&'a i16 as Mul<i16>>\n             <&'a i32 as Mul<i32>>\n             <&'a i64 as Mul<i64>>\n             <&'a i8 as Mul<i8>>\n             <&'a isize as Mul<isize>>\n           and 49 others\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpdrcub6q0.rs:17:10\n    |\n17  |   return Vec::new(d)\n    |          ^^^^^^^^ - supplied 1 argument\n    |          |\n    |          expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 1 {\n    return Vec::new(0);\n  }\n  let (n, d) = derivative(xs[1..]);\n  for i in 0..n {\n    d = d.add(xs[i+1] * i);\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpng_ldwo5.rs:9:6\n  |\n9 |   if len(xs) == 1 {\n  |      ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpng_ldwo5.rs:10:12\n    |\n10  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpng_ldwo5.rs:12:27\n   |\n12 |   let (n, d) = derivative(xs[1..]);\n   |                           ^^^^^^^- help: try using a conversion method: `.to_vec()`\n   |                           |\n   |                           expected struct `Vec`, found slice `[isize]`\n   |\n   = note: expected struct `Vec<isize>`\n               found slice `[isize]`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpng_ldwo5.rs:12:7\n   |\n12 |   let (n, d) = derivative(xs[1..]);\n   |       ^^^^^^   ------------------- this expression has type `Vec<isize>`\n   |       |\n   |       expected struct `Vec`, found tuple\n   |\n   = note: expected struct `Vec<isize>`\n               found tuple `(_, _)`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpng_ldwo5.rs:14:25\n   |\n14 |     d = d.add(xs[i+1] * i);\n   |                         ^ expected `isize`, found `usize`\n\nerror[E0277]: cannot multiply `isize` by `usize`\n  --> /tmp/tmpng_ldwo5.rs:14:23\n   |\n14 |     d = d.add(xs[i+1] * i);\n   |                       ^ no implementation for `isize * usize`\n   |\n   = help: the trait `Mul<usize>` is not implemented for `isize`\n   = help: the following other types implement trait `Mul<Rhs>`:\n             <&'a f32 as Mul<f32>>\n             <&'a f64 as Mul<f64>>\n             <&'a i128 as Mul<i128>>\n             <&'a i16 as Mul<i16>>\n             <&'a i32 as Mul<i32>>\n             <&'a i64 as Mul<i64>>\n             <&'a i8 as Mul<i8>>\n             <&'a isize as Mul<isize>>\n           and 49 others\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0061, E0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let d = Vec::new(n);\n  for (let i = 0; i < n; i++) {\n    d[i] = xs[i + 1] - xs[i];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpr10kq8cg.rs:11:8\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpr10kq8cg.rs:11:12\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpr10kq8cg.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpr10kq8cg.rs:11:13\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpr10kq8cg.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpr10kq8cg.rs:10:11\n    |\n10  |   let d = Vec::new(n);\n    |           ^^^^^^^^ - supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let d = 0;\n  for i in 0..xs.len() - 1 {\n    d = d + xs[i + 1] * i;\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n  --> /tmp/tmp8cf3_gx5.rs:11:25\n   |\n11 |     d = d + xs[i + 1] * i;\n   |                         ^ expected `isize`, found `usize`\n\nerror[E0277]: cannot multiply `isize` by `usize`\n  --> /tmp/tmp8cf3_gx5.rs:11:23\n   |\n11 |     d = d + xs[i + 1] * i;\n   |                       ^ no implementation for `isize * usize`\n   |\n   = help: the trait `Mul<usize>` is not implemented for `isize`\n   = help: the following other types implement trait `Mul<Rhs>`:\n             <&'a f32 as Mul<f32>>\n             <&'a f64 as Mul<f64>>\n             <&'a i128 as Mul<i128>>\n             <&'a i16 as Mul<i16>>\n             <&'a i32 as Mul<i32>>\n             <&'a i64 as Mul<i64>>\n             <&'a i8 as Mul<i8>>\n             <&'a isize as Mul<isize>>\n           and 49 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp8cf3_gx5.rs:13:10\n   |\n8  | fn derivative(xs: Vec<isize>) -> Vec<isize> {\n   |                                  ---------- expected `Vec<isize>` because of return type\n...\n13 |   return d;\n   |          ^ expected struct `Vec`, found `isize`\n   |\n   = note: expected struct `Vec<isize>`\n                found type `isize`\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 0 {\n    return Vec::new(0)\n  }\n\n  let deriv = Vec::new(len(xs) - 1)\n  deriv[0] = 1\n\n  for i in 0..(len(xs) - 2) {\n    deriv[i + 1] = xs[i + 1] + deriv[i] * xs[i]\n  }\n\n  return deriv\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found `deriv`\n  --> /tmp/tmp6a4wsx1j.rs:13:36\n   |\n13 |   let deriv = Vec::new(len(xs) - 1)\n   |                                    ^ help: add `;` here\n14 |   deriv[0] = 1\n   |   ----- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmp6a4wsx1j.rs:14:15\n   |\n14 |   deriv[0] = 1\n   |               ^ help: add `;` here\n15 | \n16 |   for i in 0..(len(xs) - 2) {\n   |   --- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmp6a4wsx1j.rs:9:6\n  |\n9 |   if len(xs) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp6a4wsx1j.rs:13:24\n   |\n13 |   let deriv = Vec::new(len(xs) - 1)\n   |                        ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp6a4wsx1j.rs:16:16\n   |\n16 |   for i in 0..(len(xs) - 2) {\n   |                ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp6a4wsx1j.rs:10:12\n    |\n10  |     return Vec::new(0)\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp6a4wsx1j.rs:13:15\n    |\n13  |   let deriv = Vec::new(len(xs) - 1)\n    |               ^^^^^^^^ ----------- supplied 1 argument\n    |               |\n    |               expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let d = Vec::new(n);\n  for (i in 0..n - 1) {\n    d[i] = xs[i + 1] - xs[i];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n  --> /tmp/tmp4gyc9xc1.rs:11:10\n   |\n11 |   for (i in 0..n - 1) {\n   |          ^^ expected one of `)`, `,`, `@`, or `|`\n\nerror: unexpected parentheses surrounding `for` loop head\n  --> /tmp/tmp4gyc9xc1.rs:11:7\n   |\n11 |   for (i in 0..n - 1) {\n   |       ^             ^\n   |\nhelp: remove parentheses in `for` loop\n   |\n11 -   for (i in 0..n - 1) {\n11 +   for i in 0..n - 1 {\n   | \n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp4gyc9xc1.rs:10:11\n    |\n10  |   let d = Vec::new(n);\n    |           ^^^^^^^^ - supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 0 {\n    return Vec::new(0)\n  }\n  let ds = Vec::new(len(xs) - 1)\n  for i in 0..(len(xs) - 1) {\n    ds[i] = xs[i + 1] - xs[i]\n  }\n  return ds\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmpi0fs5dsd.rs:12:33\n   |\n12 |   let ds = Vec::new(len(xs) - 1)\n   |                                 ^ help: add `;` here\n13 |   for i in 0..(len(xs) - 1) {\n   |   --- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpi0fs5dsd.rs:9:6\n  |\n9 |   if len(xs) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpi0fs5dsd.rs:12:21\n   |\n12 |   let ds = Vec::new(len(xs) - 1)\n   |                     ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpi0fs5dsd.rs:13:16\n   |\n13 |   for i in 0..(len(xs) - 1) {\n   |                ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpi0fs5dsd.rs:10:12\n    |\n10  |     return Vec::new(0)\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpi0fs5dsd.rs:12:12\n    |\n12  |   let ds = Vec::new(len(xs) - 1)\n    |            ^^^^^^^^ ----------- supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let (n, d) = derivative_coeffs(xs);\n  return Vec::from(n, d);\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `derivative_coeffs` in this scope\n --> /tmp/tmp7vxzd6ic.rs:9:16\n  |\n9 |   let (n, d) = derivative_coeffs(xs);\n  |                ^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0061]: this function takes 1 argument but 2 arguments were supplied\n   --> /tmp/tmp7vxzd6ic.rs:10:10\n    |\n10  |   return Vec::from(n, d);\n    |          ^^^^^^^^^ -  - supplied 2 arguments\n    |          |\n    |          expected 1 argument\n    |\nnote: associated function defined here\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let d = 0;\n  for (let i = xs.len - 1; i >= 0; i--) {\n    d = d * xs[i] + (i + 1);\n  }\n  return Vec::from(d);\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpxce4h1qo.rs:10:8\n   |\n10 |   for (let i = xs.len - 1; i >= 0; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpxce4h1qo.rs:10:12\n   |\n10 |   for (let i = xs.len - 1; i >= 0; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpxce4h1qo.rs:10:14\n   |\n10 |   for (let i = xs.len - 1; i >= 0; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpxce4h1qo.rs:10:13\n   |\n10 |   for (let i = xs.len - 1; i >= 0; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpxce4h1qo.rs:10:14\n   |\n10 |   for (let i = xs.len - 1; i >= 0; i--) {\n   |              ^ expected expression\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  if (n == 0) {\n    return Vec::new(0);\n  }\n  let d = Vec::new(n - 1);\n  for (let i = n - 1; i >= 0; i--) {\n    d[i] = d[i - 1] + xs[i];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmp_35g60t_.rs:14:8\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmp_35g60t_.rs:14:12\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmp_35g60t_.rs:14:14\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmp_35g60t_.rs:14:13\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmp_35g60t_.rs:14:14\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected expression\n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmp_35g60t_.rs:10:6\n   |\n10 |   if (n == 0) {\n   |      ^      ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n10 -   if (n == 0) {\n10 +   if n == 0 {\n   | \n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp_35g60t_.rs:11:12\n    |\n11  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp_35g60t_.rs:13:11\n    |\n13  |   let d = Vec::new(n - 1);\n    |           ^^^^^^^^ ----- supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors; 1 warning emitted\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if xs.len == 0 {\n    return xs\n  }\n  let dxs = Vec::new(xs.len - 1)\n  for i in 0..xs.len - 1 {\n    dxs[i] = xs[i + 1]\n  }\n  return dxs\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmp2_6uh121.rs:12:33\n   |\n12 |   let dxs = Vec::new(xs.len - 1)\n   |                                 ^ help: add `;` here\n13 |   for i in 0..xs.len - 1 {\n   |   --- unexpected token\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp2_6uh121.rs:9:9\n  |\n9 |   if xs.len == 0 {\n  |         ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   if xs.len() == 0 {\n  |            ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmp2_6uh121.rs:12:25\n   |\n12 |   let dxs = Vec::new(xs.len - 1)\n   |                         ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n12 |   let dxs = Vec::new(xs.len() - 1)\n   |                            ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp2_6uh121.rs:12:13\n    |\n12  |   let dxs = Vec::new(xs.len - 1)\n    |             ^^^^^^^^ ---------- supplied 1 argument\n    |             |\n    |             expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmp2_6uh121.rs:13:18\n   |\n13 |   for i in 0..xs.len - 1 {\n   |                  ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n13 |   for i in 0..xs.len() - 1 {\n   |                     ++\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  if (n == 0) {\n    return Vec::new(0);\n  }\n  let d = Vec::new(n - 1);\n  for (let i = n - 1; i >= 1; i--) {\n    d[i - 1] = d[i] + xs[i] * i;\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpkteqtp69.rs:14:8\n   |\n14 |   for (let i = n - 1; i >= 1; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpkteqtp69.rs:14:12\n   |\n14 |   for (let i = n - 1; i >= 1; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpkteqtp69.rs:14:14\n   |\n14 |   for (let i = n - 1; i >= 1; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpkteqtp69.rs:14:13\n   |\n14 |   for (let i = n - 1; i >= 1; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpkteqtp69.rs:14:14\n   |\n14 |   for (let i = n - 1; i >= 1; i--) {\n   |              ^ expected expression\n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpkteqtp69.rs:10:6\n   |\n10 |   if (n == 0) {\n   |      ^      ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n10 -   if (n == 0) {\n10 +   if n == 0 {\n   | \n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpkteqtp69.rs:11:12\n    |\n11  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpkteqtp69.rs:13:11\n    |\n13  |   let d = Vec::new(n - 1);\n    |           ^^^^^^^^ ----- supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors; 1 warning emitted\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let d = 0;\n  for (let i = xs.len() - 1; i >= 0; i--) {\n    d = d * xs[i] + 1;\n  }\n  return Vec::from(d);\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpk2jhrvwc.rs:10:8\n   |\n10 |   for (let i = xs.len() - 1; i >= 0; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpk2jhrvwc.rs:10:12\n   |\n10 |   for (let i = xs.len() - 1; i >= 0; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpk2jhrvwc.rs:10:14\n   |\n10 |   for (let i = xs.len() - 1; i >= 0; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpk2jhrvwc.rs:10:13\n   |\n10 |   for (let i = xs.len() - 1; i >= 0; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpk2jhrvwc.rs:10:14\n   |\n10 |   for (let i = xs.len() - 1; i >= 0; i--) {\n   |              ^ expected expression\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let d = Vec::new(n);\n  for (let i = 0; i < n; i++) {\n    d[i] = xs[i + 1] - xs[i];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpr10kq8cg.rs:11:8\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpr10kq8cg.rs:11:12\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpr10kq8cg.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpr10kq8cg.rs:11:13\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpr10kq8cg.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpr10kq8cg.rs:10:11\n    |\n10  |   let d = Vec::new(n);\n    |           ^^^^^^^^ - supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let (n, d) = derivative_coeffs(xs);\n  return Vec::from([n, d]);\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `derivative_coeffs` in this scope\n --> /tmp/tmpcqumlqwd.rs:9:16\n  |\n9 |   let (n, d) = derivative_coeffs(xs);\n  |                ^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let d = Vec::new(n - 1);\n  for (let i = 1; i < n; i++) {\n    d[i - 1] = xs[i] * i;\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmphvqxvvu6.rs:11:8\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmphvqxvvu6.rs:11:12\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmphvqxvvu6.rs:11:14\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmphvqxvvu6.rs:11:13\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmphvqxvvu6.rs:11:14\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmphvqxvvu6.rs:10:11\n    |\n10  |   let d = Vec::new(n - 1);\n    |           ^^^^^^^^ ----- supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let deriv = Vec<isize>::new(xs.len - 1);\n  for (i in deriv.iter()) {\n    deriv[i] = (xs[i + 1] - xs[i]) / (xs[i] * xs[i]);\n  }\n  return deriv;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: comparison operators cannot be chained\n --> /tmp/tmp0bqw8iqg.rs:9:18\n  |\n9 |   let deriv = Vec<isize>::new(xs.len - 1);\n  |                  ^     ^\n  |\nhelp: use `::<...>` instead of `<...>` to specify lifetime, type, or const arguments\n  |\n9 |   let deriv = Vec::<isize>::new(xs.len - 1);\n  |                  ++\n\nerror: expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n  --> /tmp/tmp0bqw8iqg.rs:10:10\n   |\n10 |   for (i in deriv.iter()) {\n   |          ^^ expected one of `)`, `,`, `@`, or `|`\n\nerror: unexpected parentheses surrounding `for` loop head\n  --> /tmp/tmp0bqw8iqg.rs:10:7\n   |\n10 |   for (i in deriv.iter()) {\n   |       ^                 ^\n   |\nhelp: remove parentheses in `for` loop\n   |\n10 -   for (i in deriv.iter()) {\n10 +   for i in deriv.iter() {\n   | \n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  if n == 0 {\n    return Vec::new(0);\n  }\n  let d = Vec::new(n - 1);\n  for (let i = 0; i < n - 1; i++) {\n    d[i] = xs[i + 1] - xs[i];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmp9a1jg6z5.rs:14:8\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmp9a1jg6z5.rs:14:12\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmp9a1jg6z5.rs:14:14\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmp9a1jg6z5.rs:14:13\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmp9a1jg6z5.rs:14:14\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp9a1jg6z5.rs:11:12\n    |\n11  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp9a1jg6z5.rs:13:11\n    |\n13  |   let d = Vec::new(n - 1);\n    |           ^^^^^^^^ ----- supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 0 {\n    return Vec::new(0)\n  }\n  let d = xs[0]\n  for i in 0..xs.len - 1 {\n    d = d + xs[i + 1] * i\n  }\n  return d\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmpw7w0n4ej.rs:12:16\n   |\n12 |   let d = xs[0]\n   |                ^ help: add `;` here\n13 |   for i in 0..xs.len - 1 {\n   |   --- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpw7w0n4ej.rs:9:6\n  |\n9 |   if len(xs) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpw7w0n4ej.rs:10:12\n    |\n10  |     return Vec::new(0)\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpw7w0n4ej.rs:13:18\n   |\n13 |   for i in 0..xs.len - 1 {\n   |                  ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n13 |   for i in 0..xs.len() - 1 {\n   |                     ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpw7w0n4ej.rs:14:25\n   |\n14 |     d = d + xs[i + 1] * i\n   |                         ^ expected `isize`, found `usize`\n\nerror[E0277]: cannot multiply `isize` by `usize`\n  --> /tmp/tmpw7w0n4ej.rs:14:23\n   |\n14 |     d = d + xs[i + 1] * i\n   |                       ^ no implementation for `isize * usize`\n   |\n   = help: the trait `Mul<usize>` is not implemented for `isize`\n   = help: the following other types implement trait `Mul<Rhs>`:\n             <&'a f32 as Mul<f32>>\n             <&'a f64 as Mul<f64>>\n             <&'a i128 as Mul<i128>>\n             <&'a i16 as Mul<i16>>\n             <&'a i32 as Mul<i32>>\n             <&'a i64 as Mul<i64>>\n             <&'a i8 as Mul<i8>>\n             <&'a isize as Mul<isize>>\n           and 49 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpw7w0n4ej.rs:16:10\n   |\n8  | fn derivative(xs: Vec<isize>) -> Vec<isize> {\n   |                                  ---------- expected `Vec<isize>` because of return type\n...\n16 |   return d\n   |          ^ expected struct `Vec`, found `isize`\n   |\n   = note: expected struct ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let d = Vec::new(n - 1);\n  for (i in 0..n - 1) {\n    d[i] = xs[i + 1] - xs[i];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n  --> /tmp/tmpwc7jugc4.rs:11:10\n   |\n11 |   for (i in 0..n - 1) {\n   |          ^^ expected one of `)`, `,`, `@`, or `|`\n\nerror: unexpected parentheses surrounding `for` loop head\n  --> /tmp/tmpwc7jugc4.rs:11:7\n   |\n11 |   for (i in 0..n - 1) {\n   |       ^             ^\n   |\nhelp: remove parentheses in `for` loop\n   |\n11 -   for (i in 0..n - 1) {\n11 +   for i in 0..n - 1 {\n   | \n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpwc7jugc4.rs:10:11\n    |\n10  |   let d = Vec::new(n - 1);\n    |           ^^^^^^^^ ----- supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 1 {\n    return Vec::new(0)\n  }\n  let (n, d) = derivative_coeffs(xs);\n  return Vec::new(n, d)\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpef8m_qs2.rs:9:6\n  |\n9 |   if len(xs) == 1 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `derivative_coeffs` in this scope\n  --> /tmp/tmpef8m_qs2.rs:12:16\n   |\n12 |   let (n, d) = derivative_coeffs(xs);\n   |                ^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpef8m_qs2.rs:10:12\n    |\n10  |     return Vec::new(0)\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 2 arguments were supplied\n   --> /tmp/tmpef8m_qs2.rs:13:10\n    |\n13  |   return Vec::new(n, d)\n    |          ^^^^^^^^ -  - supplied 2 arguments\n    |          |\n    |          expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let result = Vec::new(n);\n  for (let i = 0; i < n - 1; i++) {\n    result[i] = xs[i + 1] - xs[i];\n  }\n  result[n - 1] = 0;\n  return result;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpirk_gkl9.rs:11:8\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpirk_gkl9.rs:11:12\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpirk_gkl9.rs:11:14\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpirk_gkl9.rs:11:13\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpirk_gkl9.rs:11:14\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpirk_gkl9.rs:10:16\n    |\n10  |   let result = Vec::new(n);\n    |                ^^^^^^^^ - supplied 1 argument\n    |                |\n    |                expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len;\n  if (n == 0) {\n    return Vec::new(0);\n  }\n  let d = Vec::new(n - 1);\n  for (let i = n - 1; i >= 0; i--) {\n    d[i] = xs[i] * (i + 1);\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpe35oqwfa.rs:14:8\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpe35oqwfa.rs:14:12\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpe35oqwfa.rs:14:14\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpe35oqwfa.rs:14:13\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpe35oqwfa.rs:14:14\n   |\n14 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected expression\n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpe35oqwfa.rs:10:6\n   |\n10 |   if (n == 0) {\n   |      ^      ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n10 -   if (n == 0) {\n10 +   if n == 0 {\n   | \n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpe35oqwfa.rs:9:14\n  |\n9 |   let n = xs.len;\n  |              ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let n = xs.len();\n  |                 ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpe35oqwfa.rs:11:12\n    |\n11  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpe35oqwfa.rs:13:11\n    |\n13  |   let d = Vec::new(n - 1);\n    |           ^^^^^^^^ ----- supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined he",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let d = Vec::new(n);\n  for (let i = 0; i < n; i++) {\n    d[i] = xs[i + 1] - xs[i];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpr10kq8cg.rs:11:8\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpr10kq8cg.rs:11:12\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpr10kq8cg.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpr10kq8cg.rs:11:13\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpr10kq8cg.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpr10kq8cg.rs:10:11\n    |\n10  |   let d = Vec::new(n);\n    |           ^^^^^^^^ - supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let d = Vec::new(n);\n  for (let i = 0; i < n; i++) {\n    d[i] = xs[i + 1] - xs[i];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpr10kq8cg.rs:11:8\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpr10kq8cg.rs:11:12\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpr10kq8cg.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpr10kq8cg.rs:11:13\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpr10kq8cg.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpr10kq8cg.rs:10:11\n    |\n10  |   let d = Vec::new(n);\n    |           ^^^^^^^^ - supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 0 {\n    return Vec::new(0)\n  }\n\n  let result = Vec::new(len(xs) - 1)\n  for i in 0..(len(xs) - 1) {\n    result[i] = xs[i + 1] - xs[i]\n  }\n  return result\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmp4pi057mr.rs:13:37\n   |\n13 |   let result = Vec::new(len(xs) - 1)\n   |                                     ^ help: add `;` here\n14 |   for i in 0..(len(xs) - 1) {\n   |   --- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmp4pi057mr.rs:9:6\n  |\n9 |   if len(xs) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp4pi057mr.rs:13:25\n   |\n13 |   let result = Vec::new(len(xs) - 1)\n   |                         ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp4pi057mr.rs:14:16\n   |\n14 |   for i in 0..(len(xs) - 1) {\n   |                ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp4pi057mr.rs:10:12\n    |\n10  |     return Vec::new(0)\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp4pi057mr.rs:13:16\n    |\n13  |   let result = Vec::new(len(xs) - 1)\n    |                ^^^^^^^^ ----------- supplied 1 argument\n    |                |\n    |                expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  if n == 0 {\n    return Vec::new(0);\n  }\n  let d = Vec::new(n - 1);\n  for (let i = 0; i < n - 1; i++) {\n    d[i] = xs[i + 1] - xs[i];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmp9a1jg6z5.rs:14:8\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmp9a1jg6z5.rs:14:12\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmp9a1jg6z5.rs:14:14\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmp9a1jg6z5.rs:14:13\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmp9a1jg6z5.rs:14:14\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp9a1jg6z5.rs:11:12\n    |\n11  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp9a1jg6z5.rs:13:11\n    |\n13  |   let d = Vec::new(n - 1);\n    |           ^^^^^^^^ ----- supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if xs.len == 0 {\n    return xs\n  }\n  let dxs = Vec::new(xs.len - 1)\n  for i in 0..xs.len - 1 {\n    dxs[i] = xs[i + 1]\n  }\n  return dxs\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmp2_6uh121.rs:12:33\n   |\n12 |   let dxs = Vec::new(xs.len - 1)\n   |                                 ^ help: add `;` here\n13 |   for i in 0..xs.len - 1 {\n   |   --- unexpected token\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp2_6uh121.rs:9:9\n  |\n9 |   if xs.len == 0 {\n  |         ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   if xs.len() == 0 {\n  |            ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmp2_6uh121.rs:12:25\n   |\n12 |   let dxs = Vec::new(xs.len - 1)\n   |                         ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n12 |   let dxs = Vec::new(xs.len() - 1)\n   |                            ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp2_6uh121.rs:12:13\n    |\n12  |   let dxs = Vec::new(xs.len - 1)\n    |             ^^^^^^^^ ---------- supplied 1 argument\n    |             |\n    |             expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmp2_6uh121.rs:13:18\n   |\n13 |   for i in 0..xs.len - 1 {\n   |                  ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n13 |   for i in 0..xs.len() - 1 {\n   |                     ++\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len;\n  let result = Vec::new(n - 1);\n  for (let i = 1; i < n; i++) {\n    result[i - 1] = xs[i] * i;\n  }\n  return result;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpzyfqccoe.rs:11:8\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpzyfqccoe.rs:11:12\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpzyfqccoe.rs:11:14\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpzyfqccoe.rs:11:13\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpzyfqccoe.rs:11:14\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |              ^ expected expression\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpzyfqccoe.rs:9:14\n  |\n9 |   let n = xs.len;\n  |              ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let n = xs.len();\n  |                 ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpzyfqccoe.rs:10:16\n    |\n10  |   let result = Vec::new(n - 1);\n    |                ^^^^^^^^ ----- supplied 1 argument\n    |                |\n    |                expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let d = vec![];\n  for (let i = n - 1; i >= 0; i--) {\n    d = vec![d[i] + xs[i + 1], d[i + 1]];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpgmz600g9.rs:11:8\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpgmz600g9.rs:11:12\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpgmz600g9.rs:11:14\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpgmz600g9.rs:11:13\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpgmz600g9.rs:11:14\n   |\n11 |   for (let i = n - 1; i >= 0; i--) {\n   |              ^ expected expression\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  if (n == 0) {\n    return Vec::new(0);\n  }\n  let d = Vec::new(n - 1);\n  for (let i = 0; i < n - 1; i++) {\n    d[i] = xs[i + 1] - xs[i];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpfnayj0h4.rs:14:8\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpfnayj0h4.rs:14:12\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpfnayj0h4.rs:14:14\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpfnayj0h4.rs:14:13\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpfnayj0h4.rs:14:14\n   |\n14 |   for (let i = 0; i < n - 1; i++) {\n   |              ^ expected expression\n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmpfnayj0h4.rs:10:6\n   |\n10 |   if (n == 0) {\n   |      ^      ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n10 -   if (n == 0) {\n10 +   if n == 0 {\n   | \n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpfnayj0h4.rs:11:12\n    |\n11  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpfnayj0h4.rs:13:11\n    |\n13  |   let d = Vec::new(n - 1);\n    |           ^^^^^^^^ ----- supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors; 1 warning emitted\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 0 {\n    return Vec::new(0)\n  }\n  let d = xs[0]\n  for i in 1..xs.len() - 1 {\n    d = d + xs[i] * i\n  }\n  return d\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmpjq995eri.rs:12:16\n   |\n12 |   let d = xs[0]\n   |                ^ help: add `;` here\n13 |   for i in 1..xs.len() - 1 {\n   |   --- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpjq995eri.rs:9:6\n  |\n9 |   if len(xs) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpjq995eri.rs:10:12\n    |\n10  |     return Vec::new(0)\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpjq995eri.rs:14:21\n   |\n14 |     d = d + xs[i] * i\n   |                     ^ expected `isize`, found `usize`\n\nerror[E0277]: cannot multiply `isize` by `usize`\n  --> /tmp/tmpjq995eri.rs:14:19\n   |\n14 |     d = d + xs[i] * i\n   |                   ^ no implementation for `isize * usize`\n   |\n   = help: the trait `Mul<usize>` is not implemented for `isize`\n   = help: the following other types implement trait `Mul<Rhs>`:\n             <&'a f32 as Mul<f32>>\n             <&'a f64 as Mul<f64>>\n             <&'a i128 as Mul<i128>>\n             <&'a i16 as Mul<i16>>\n             <&'a i32 as Mul<i32>>\n             <&'a i64 as Mul<i64>>\n             <&'a i8 as Mul<i8>>\n             <&'a isize as Mul<isize>>\n           and 49 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpjq995eri.rs:16:10\n   |\n8  | fn derivative(xs: Vec<isize>) -> Vec<isize> {\n   |                                  ---------- expected `Vec<isize>` because of return type\n...\n16 |   return d\n   |          ^ expected struct `Vec`, found `isize`\n   |\n   = note: expected struct `Vec<isize>`\n                found type `isize`\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0061, E0277, E0308, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 0 {\n    return Vec::new(0)\n  }\n  let d = xs[0]\n  for i in 0..(len(xs) - 1) {\n    d = d + xs[i + 1] * i\n  }\n  return Vec::new(d)\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmpyaj8bmoq.rs:12:16\n   |\n12 |   let d = xs[0]\n   |                ^ help: add `;` here\n13 |   for i in 0..(len(xs) - 1) {\n   |   --- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpyaj8bmoq.rs:9:6\n  |\n9 |   if len(xs) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpyaj8bmoq.rs:13:16\n   |\n13 |   for i in 0..(len(xs) - 1) {\n   |                ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpyaj8bmoq.rs:10:12\n    |\n10  |     return Vec::new(0)\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpyaj8bmoq.rs:14:25\n   |\n14 |     d = d + xs[i + 1] * i\n   |                         ^ expected `isize`, found `usize`\n\nerror[E0277]: cannot multiply `isize` by `usize`\n  --> /tmp/tmpyaj8bmoq.rs:14:23\n   |\n14 |     d = d + xs[i + 1] * i\n   |                       ^ no implementation for `isize * usize`\n   |\n   = help: the trait `Mul<usize>` is not implemented for `isize`\n   = help: the following other types implement trait `Mul<Rhs>`:\n             <&'a f32 as Mul<f32>>\n             <&'a f64 as Mul<f64>>\n             <&'a i128 as Mul<i128>>\n             <&'a i16 as Mul<i16>>\n             <&'a i32 as Mul<i32>>\n             <&'a i64 as Mul<i64>>\n             <&'a i8 as Mul<i8>>\n             <&'a isize as Mul<isize>>\n           and 49 others\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpyaj8bmoq.rs:16:10\n    |\n16  |   return Vec::new(d)\n    |          ^^^^^^^^ - supplied 1 argument\n    |          |\n    |          expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0277, E0308, E0425.\nFor more information about an error, t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 0 {\n    return Vec::new(0);\n  }\n\n  let dxs = Vec::new(len(xs) - 1);\n  for (let i = 1; i < len(xs); i++) {\n    dxs[i - 1] = xs[i] * i;\n  }\n\n  return dxs;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpdspp72gw.rs:14:8\n   |\n14 |   for (let i = 1; i < len(xs); i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpdspp72gw.rs:14:12\n   |\n14 |   for (let i = 1; i < len(xs); i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpdspp72gw.rs:14:14\n   |\n14 |   for (let i = 1; i < len(xs); i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpdspp72gw.rs:14:13\n   |\n14 |   for (let i = 1; i < len(xs); i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpdspp72gw.rs:14:14\n   |\n14 |   for (let i = 1; i < len(xs); i++) {\n   |              ^ expected expression\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpdspp72gw.rs:9:6\n  |\n9 |   if len(xs) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpdspp72gw.rs:13:22\n   |\n13 |   let dxs = Vec::new(len(xs) - 1);\n   |                      ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpdspp72gw.rs:10:12\n    |\n10  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpdspp72gw.rs:13:13\n    |\n13  |   let dxs = Vec::new(len(xs) - 1);\n    |             ^^^^^^^^ ----------- supplied 1 argument\n    |             |\n    |             expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 9 previous errors\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 0 {\n    return Vec::new(0)\n  }\n  let d = xs[0]\n  for i in 1..xs.len() {\n    d = d + xs[i] * i\n  }\n  return d\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmpe5j3yzfq.rs:12:16\n   |\n12 |   let d = xs[0]\n   |                ^ help: add `;` here\n13 |   for i in 1..xs.len() {\n   |   --- unexpected token\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpe5j3yzfq.rs:9:6\n  |\n9 |   if len(xs) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpe5j3yzfq.rs:10:12\n    |\n10  |     return Vec::new(0)\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpe5j3yzfq.rs:14:21\n   |\n14 |     d = d + xs[i] * i\n   |                     ^ expected `isize`, found `usize`\n\nerror[E0277]: cannot multiply `isize` by `usize`\n  --> /tmp/tmpe5j3yzfq.rs:14:19\n   |\n14 |     d = d + xs[i] * i\n   |                   ^ no implementation for `isize * usize`\n   |\n   = help: the trait `Mul<usize>` is not implemented for `isize`\n   = help: the following other types implement trait `Mul<Rhs>`:\n             <&'a f32 as Mul<f32>>\n             <&'a f64 as Mul<f64>>\n             <&'a i128 as Mul<i128>>\n             <&'a i16 as Mul<i16>>\n             <&'a i32 as Mul<i32>>\n             <&'a i64 as Mul<i64>>\n             <&'a i8 as Mul<i8>>\n             <&'a isize as Mul<isize>>\n           and 49 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpe5j3yzfq.rs:16:10\n   |\n8  | fn derivative(xs: Vec<isize>) -> Vec<isize> {\n   |                                  ---------- expected `Vec<isize>` because of return type\n...\n16 |   return d\n   |          ^ expected struct `Vec`, found `isize`\n   |\n   = note: expected struct `Vec<isize>`\n                found type `isize`\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0061, E0277, E0308, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 1 {\n    return Vec::from(0);\n  }\n  let d = Vec::from(0);\n  for i in 0..xs.len() - 1 {\n    d = d.add(xs.get(i + 1) * i);\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpqou4nywx.rs:9:6\n  |\n9 |   if len(xs) == 1 {\n  |      ^^^ not found in this scope\n\nerror[E0277]: the trait bound `Vec<_, _>: From<{integer}>` is not satisfied\n  --> /tmp/tmpqou4nywx.rs:10:12\n   |\n10 |     return Vec::from(0);\n   |            ^^^^^^^^^ the trait `From<{integer}>` is not implemented for `Vec<_, _>`\n   |\n   = help: the following other types implement trait `From<T>`:\n             <Vec<T, A> as From<Box<[T], A>>>\n             <Vec<T, A> as From<VecDeque<T, A>>>\n             <Vec<T> as From<&[T]>>\n             <Vec<T> as From<&mut [T]>>\n             <Vec<T> as From<BinaryHeap<T>>>\n             <Vec<T> as From<Cow<'a, [T]>>>\n             <Vec<T> as From<[T; N]>>\n             <Vec<u8> as From<&str>>\n           and 2 others\n\nerror[E0277]: the trait bound `Vec<_, _>: From<{integer}>` is not satisfied\n  --> /tmp/tmpqou4nywx.rs:12:11\n   |\n12 |   let d = Vec::from(0);\n   |           ^^^^^^^^^ the trait `From<{integer}>` is not implemented for `Vec<_, _>`\n   |\n   = help: the following other types implement trait `From<T>`:\n             <Vec<T, A> as From<Box<[T], A>>>\n             <Vec<T, A> as From<VecDeque<T, A>>>\n             <Vec<T> as From<&[T]>>\n             <Vec<T> as From<&mut [T]>>\n             <Vec<T> as From<BinaryHeap<T>>>\n             <Vec<T> as From<Cow<'a, [T]>>>\n             <Vec<T> as From<[T; N]>>\n             <Vec<u8> as From<&str>>\n           and 2 others\n\nerror[E0599]: no method named `add` found for struct `Vec<_, _>` in the current scope\n  --> /tmp/tmpqou4nywx.rs:14:11\n   |\n14 |     d = d.add(xs.get(i + 1) * i);\n   |           ^^^ method not found in `Vec<_, _>`\n\nerror[E0369]: cannot multiply `Option<&isize>` by `usize`\n  --> /tmp/tmpqou4nywx.rs:14:29\n   |\n14 |     d = d.add(xs.get(i + 1) * i);\n   |               ------------- ^ - usize\n   |               |\n   |               Option<&isize>\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0277, E0369, E0425, E0599.\nFor more information ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let (n, d) = derivative_coeffs(xs);\n  return Vec::from(n, d);\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `derivative_coeffs` in this scope\n --> /tmp/tmp7vxzd6ic.rs:9:16\n  |\n9 |   let (n, d) = derivative_coeffs(xs);\n  |                ^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0061]: this function takes 1 argument but 2 arguments were supplied\n   --> /tmp/tmp7vxzd6ic.rs:10:10\n    |\n10  |   return Vec::from(n, d);\n    |          ^^^^^^^^^ -  - supplied 2 arguments\n    |          |\n    |          expected 1 argument\n    |\nnote: associated function defined here\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let dxs: Vec<isize> = Vec::new(xs.len - 1);\n  for (i in 0..xs.len - 1) {\n    dxs[i] = xs[i + 1] - xs[i];\n  }\n  return dxs;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n  --> /tmp/tmpksv_0_km.rs:10:10\n   |\n10 |   for (i in 0..xs.len - 1) {\n   |          ^^ expected one of `)`, `,`, `@`, or `|`\n\nerror: unexpected parentheses surrounding `for` loop head\n  --> /tmp/tmpksv_0_km.rs:10:7\n   |\n10 |   for (i in 0..xs.len - 1) {\n   |       ^                  ^\n   |\nhelp: remove parentheses in `for` loop\n   |\n10 -   for (i in 0..xs.len - 1) {\n10 +   for i in 0..xs.len - 1 {\n   | \n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpksv_0_km.rs:9:37\n  |\n9 |   let dxs: Vec<isize> = Vec::new(xs.len - 1);\n  |                                     ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let dxs: Vec<isize> = Vec::new(xs.len() - 1);\n  |                                        ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpksv_0_km.rs:9:25\n    |\n9   |   let dxs: Vec<isize> = Vec::new(xs.len - 1);\n    |                         ^^^^^^^^ ---------- supplied 1 argument\n    |                         |\n    |                         expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpksv_0_km.rs:10:19\n   |\n10 |   for (i in 0..xs.len - 1) {\n   |                   ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n10 |   for (i in 0..xs.len() - 1) {\n   |                      ++\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if xs.len == 0 {\n    return xs\n  }\n  let (\n    dxs: Vec<isize>\n  ) = Vec::new(xs.len - 1);\n  for i in 0..xs.len - 1 {\n    dxs[i] = xs[i + 1]\n  }\n  return dxs\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected one of `)`, `,`, `@`, or `|`, found `:`\n  --> /tmp/tmps1_crpig.rs:13:8\n   |\n13 |     dxs: Vec<isize>\n   |        ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: expected one of `!`, `+`, `::`, `;`, or `=`, found `)`\n  --> /tmp/tmps1_crpig.rs:14:3\n   |\n13 |     dxs: Vec<isize>\n   |                    - expected one of `!`, `+`, `::`, `;`, or `=`\n14 |   ) = Vec::new(xs.len - 1);\n   |   ^ unexpected token\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmps1_crpig.rs:9:9\n  |\n9 |   if xs.len == 0 {\n  |         ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   if xs.len() == 0 {\n  |            ++\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0616`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let d = 0;\n  for (let i = 1; i < xs.len; i++) {\n    d += xs[i] * i;\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmplm4c1cof.rs:10:8\n   |\n10 |   for (let i = 1; i < xs.len; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmplm4c1cof.rs:10:12\n   |\n10 |   for (let i = 1; i < xs.len; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmplm4c1cof.rs:10:14\n   |\n10 |   for (let i = 1; i < xs.len; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmplm4c1cof.rs:10:13\n   |\n10 |   for (let i = 1; i < xs.len; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmplm4c1cof.rs:10:14\n   |\n10 |   for (let i = 1; i < xs.len; i++) {\n   |              ^ expected expression\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let result = Vec::new(n);\n  for (let i = 0; i < n; i++) {\n    result[i] = xs[i + 1] - xs[i];\n  }\n  return result;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmp0aaq3ngd.rs:11:8\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmp0aaq3ngd.rs:11:12\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmp0aaq3ngd.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmp0aaq3ngd.rs:11:13\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmp0aaq3ngd.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp0aaq3ngd.rs:10:16\n    |\n10  |   let result = Vec::new(n);\n    |                ^^^^^^^^ - supplied 1 argument\n    |                |\n    |                expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let d = vec![];\n  for (let i = 1; i < n; i++) {\n    d = d.add(xs.get(i) * i);\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmppgpc4ulk.rs:11:8\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmppgpc4ulk.rs:11:12\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmppgpc4ulk.rs:11:14\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmppgpc4ulk.rs:11:13\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmppgpc4ulk.rs:11:14\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |              ^ expected expression\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let d = Vec::new(n - 1);\n  for (let i = 1; i < n; i++) {\n    d[i - 1] = xs[i] * i;\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmphvqxvvu6.rs:11:8\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmphvqxvvu6.rs:11:12\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmphvqxvvu6.rs:11:14\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmphvqxvvu6.rs:11:13\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmphvqxvvu6.rs:11:14\n   |\n11 |   for (let i = 1; i < n; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmphvqxvvu6.rs:10:11\n    |\n10  |   let d = Vec::new(n - 1);\n    |           ^^^^^^^^ ----- supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let d = 0;\n  for i in 0..xs.len() - 1 {\n    d = d + xs[i + 1] * i;\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n  --> /tmp/tmp8cf3_gx5.rs:11:25\n   |\n11 |     d = d + xs[i + 1] * i;\n   |                         ^ expected `isize`, found `usize`\n\nerror[E0277]: cannot multiply `isize` by `usize`\n  --> /tmp/tmp8cf3_gx5.rs:11:23\n   |\n11 |     d = d + xs[i + 1] * i;\n   |                       ^ no implementation for `isize * usize`\n   |\n   = help: the trait `Mul<usize>` is not implemented for `isize`\n   = help: the following other types implement trait `Mul<Rhs>`:\n             <&'a f32 as Mul<f32>>\n             <&'a f64 as Mul<f64>>\n             <&'a i128 as Mul<i128>>\n             <&'a i16 as Mul<i16>>\n             <&'a i32 as Mul<i32>>\n             <&'a i64 as Mul<i64>>\n             <&'a i8 as Mul<i8>>\n             <&'a isize as Mul<isize>>\n           and 49 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp8cf3_gx5.rs:13:10\n   |\n8  | fn derivative(xs: Vec<isize>) -> Vec<isize> {\n   |                                  ---------- expected `Vec<isize>` because of return type\n...\n13 |   return d;\n   |          ^ expected struct `Vec`, found `isize`\n   |\n   = note: expected struct `Vec<isize>`\n                found type `isize`\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if xs.len == 0 {\n    return Vec::new(0);\n  }\n  let d = xs.len - 1;\n  let result = Vec::new(d);\n  for (let i = d; i >= 0; i--) {\n    result[i] = xs[i + 1] * d;\n    d--;\n  }\n  return result;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpowzxyf8e.rs:14:8\n   |\n14 |   for (let i = d; i >= 0; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpowzxyf8e.rs:14:12\n   |\n14 |   for (let i = d; i >= 0; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpowzxyf8e.rs:14:14\n   |\n14 |   for (let i = d; i >= 0; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpowzxyf8e.rs:14:13\n   |\n14 |   for (let i = d; i >= 0; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpowzxyf8e.rs:14:14\n   |\n14 |   for (let i = d; i >= 0; i--) {\n   |              ^ expected expression\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpowzxyf8e.rs:9:9\n  |\n9 |   if xs.len == 0 {\n  |         ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   if xs.len() == 0 {\n  |            ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpowzxyf8e.rs:10:12\n    |\n10  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpowzxyf8e.rs:12:14\n   |\n12 |   let d = xs.len - 1;\n   |              ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n12 |   let d = xs.len() - 1;\n   |                 ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpowzxyf8e.rs:13:16\n    |\n13  |   let result = Vec::new(d);\n    |                ^^^^^^^^ - supplied 1 argument\n    |                |\n    |                expected 0 arguments\n    |\nnote: associated function defined here\n\nerror:",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if xs.len == 0 {\n    return xs\n  }\n  let ds = Vec::new(xs.len - 1)\n  for i in 0..xs.len - 1 {\n    ds[i] = xs[i + 1]\n  }\n  return ds\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmpgtofp4r9.rs:12:32\n   |\n12 |   let ds = Vec::new(xs.len - 1)\n   |                                ^ help: add `;` here\n13 |   for i in 0..xs.len - 1 {\n   |   --- unexpected token\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpgtofp4r9.rs:9:9\n  |\n9 |   if xs.len == 0 {\n  |         ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   if xs.len() == 0 {\n  |            ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpgtofp4r9.rs:12:24\n   |\n12 |   let ds = Vec::new(xs.len - 1)\n   |                        ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n12 |   let ds = Vec::new(xs.len() - 1)\n   |                           ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpgtofp4r9.rs:12:12\n    |\n12  |   let ds = Vec::new(xs.len - 1)\n    |            ^^^^^^^^ ---------- supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpgtofp4r9.rs:13:18\n   |\n13 |   for i in 0..xs.len - 1 {\n   |                  ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n13 |   for i in 0..xs.len() - 1 {\n   |                     ++\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let d = Vec::new(n - 1);\n  for (let i = 0; i < n - 1; i++) {\n    d[i] = xs[i + 1] - xs[i];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmp8d1tdzk3.rs:11:8\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmp8d1tdzk3.rs:11:12\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmp8d1tdzk3.rs:11:14\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmp8d1tdzk3.rs:11:13\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmp8d1tdzk3.rs:11:14\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp8d1tdzk3.rs:10:11\n    |\n10  |   let d = Vec::new(n - 1);\n    |           ^^^^^^^^ ----- supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let dxs: Vec<isize> = Vec::new(xs.len - 1);\n  for (i in 0..xs.len - 1) {\n    dxs[i] = xs[i + 1] - xs[i];\n  }\n  return dxs;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n  --> /tmp/tmpksv_0_km.rs:10:10\n   |\n10 |   for (i in 0..xs.len - 1) {\n   |          ^^ expected one of `)`, `,`, `@`, or `|`\n\nerror: unexpected parentheses surrounding `for` loop head\n  --> /tmp/tmpksv_0_km.rs:10:7\n   |\n10 |   for (i in 0..xs.len - 1) {\n   |       ^                  ^\n   |\nhelp: remove parentheses in `for` loop\n   |\n10 -   for (i in 0..xs.len - 1) {\n10 +   for i in 0..xs.len - 1 {\n   | \n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpksv_0_km.rs:9:37\n  |\n9 |   let dxs: Vec<isize> = Vec::new(xs.len - 1);\n  |                                     ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let dxs: Vec<isize> = Vec::new(xs.len() - 1);\n  |                                        ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpksv_0_km.rs:9:25\n    |\n9   |   let dxs: Vec<isize> = Vec::new(xs.len - 1);\n    |                         ^^^^^^^^ ---------- supplied 1 argument\n    |                         |\n    |                         expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpksv_0_km.rs:10:19\n   |\n10 |   for (i in 0..xs.len - 1) {\n   |                   ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n10 |   for (i in 0..xs.len() - 1) {\n   |                      ++\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let dxs = Vec::new(xs.len - 1);\n  for (let i = 0; i < dxs.len; i++) {\n    dxs[i] = xs[i + 1] - xs[i];\n  }\n  return dxs;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmp9477d4lt.rs:10:8\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmp9477d4lt.rs:10:12\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmp9477d4lt.rs:10:14\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmp9477d4lt.rs:10:13\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmp9477d4lt.rs:10:14\n   |\n10 |   for (let i = 0; i < dxs.len; i++) {\n   |              ^ expected expression\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp9477d4lt.rs:9:25\n  |\n9 |   let dxs = Vec::new(xs.len - 1);\n  |                         ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let dxs = Vec::new(xs.len() - 1);\n  |                            ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp9477d4lt.rs:9:13\n    |\n9   |   let dxs = Vec::new(xs.len - 1);\n    |             ^^^^^^^^ ---------- supplied 1 argument\n    |             |\n    |             expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 1 {\n    return Vec::new(0);\n  }\n\n  let dxs = Vec::new(len(xs) - 1);\n  for (let i = 1; i < len(xs); i++) {\n    dxs[i - 1] = xs[i] * i;\n  }\n  return dxs;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpx88v1278.rs:14:8\n   |\n14 |   for (let i = 1; i < len(xs); i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpx88v1278.rs:14:12\n   |\n14 |   for (let i = 1; i < len(xs); i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpx88v1278.rs:14:14\n   |\n14 |   for (let i = 1; i < len(xs); i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpx88v1278.rs:14:13\n   |\n14 |   for (let i = 1; i < len(xs); i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpx88v1278.rs:14:14\n   |\n14 |   for (let i = 1; i < len(xs); i++) {\n   |              ^ expected expression\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpx88v1278.rs:9:6\n  |\n9 |   if len(xs) == 1 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpx88v1278.rs:13:22\n   |\n13 |   let dxs = Vec::new(len(xs) - 1);\n   |                      ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpx88v1278.rs:10:12\n    |\n10  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpx88v1278.rs:13:13\n    |\n13  |   let dxs = Vec::new(len(xs) - 1);\n    |             ^^^^^^^^ ----------- supplied 1 argument\n    |             |\n    |             expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 9 previous errors\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let ds = Vec::new(xs.len - 1);\n  for (let i = 0; i < ds.len; i++) {\n    ds[i] = xs[i + 1] - xs[i];\n  }\n  return ds;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpkv0iqxsx.rs:10:8\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpkv0iqxsx.rs:10:12\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpkv0iqxsx.rs:10:14\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpkv0iqxsx.rs:10:13\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpkv0iqxsx.rs:10:14\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |              ^ expected expression\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpkv0iqxsx.rs:9:24\n  |\n9 |   let ds = Vec::new(xs.len - 1);\n  |                        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let ds = Vec::new(xs.len() - 1);\n  |                           ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpkv0iqxsx.rs:9:12\n    |\n9   |   let ds = Vec::new(xs.len - 1);\n    |            ^^^^^^^^ ---------- supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let ds = vec![];\n  for (let i = 1; i < xs.len; i++) {\n    ds = vec![ds, xs[i] * i];\n  }\n  return ds;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpofxw0nte.rs:10:8\n   |\n10 |   for (let i = 1; i < xs.len; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpofxw0nte.rs:10:12\n   |\n10 |   for (let i = 1; i < xs.len; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpofxw0nte.rs:10:14\n   |\n10 |   for (let i = 1; i < xs.len; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpofxw0nte.rs:10:13\n   |\n10 |   for (let i = 1; i < xs.len; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpofxw0nte.rs:10:14\n   |\n10 |   for (let i = 1; i < xs.len; i++) {\n   |              ^ expected expression\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let d = Vec::new(n);\n  for (let i = 0; i < n - 1; i++) {\n    d[i] = xs[i + 1] - xs[i];\n  }\n  d[n - 1] = 0;\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmp0o7krbqn.rs:11:8\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmp0o7krbqn.rs:11:12\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmp0o7krbqn.rs:11:14\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmp0o7krbqn.rs:11:13\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmp0o7krbqn.rs:11:14\n   |\n11 |   for (let i = 0; i < n - 1; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp0o7krbqn.rs:10:11\n    |\n10  |   let d = Vec::new(n);\n    |           ^^^^^^^^ - supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let d = 0;\n  for i in 0..xs.len() - 1 {\n    d = d + xs[i + 1] * i;\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n  --> /tmp/tmp8cf3_gx5.rs:11:25\n   |\n11 |     d = d + xs[i + 1] * i;\n   |                         ^ expected `isize`, found `usize`\n\nerror[E0277]: cannot multiply `isize` by `usize`\n  --> /tmp/tmp8cf3_gx5.rs:11:23\n   |\n11 |     d = d + xs[i + 1] * i;\n   |                       ^ no implementation for `isize * usize`\n   |\n   = help: the trait `Mul<usize>` is not implemented for `isize`\n   = help: the following other types implement trait `Mul<Rhs>`:\n             <&'a f32 as Mul<f32>>\n             <&'a f64 as Mul<f64>>\n             <&'a i128 as Mul<i128>>\n             <&'a i16 as Mul<i16>>\n             <&'a i32 as Mul<i32>>\n             <&'a i64 as Mul<i64>>\n             <&'a i8 as Mul<i8>>\n             <&'a isize as Mul<isize>>\n           and 49 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp8cf3_gx5.rs:13:10\n   |\n8  | fn derivative(xs: Vec<isize>) -> Vec<isize> {\n   |                                  ---------- expected `Vec<isize>` because of return type\n...\n13 |   return d;\n   |          ^ expected struct `Vec`, found `isize`\n   |\n   = note: expected struct `Vec<isize>`\n                found type `isize`\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let d = 0;\n  for i in 0..xs.len() - 1 {\n    d = d + xs[i + 1] * i;\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n  --> /tmp/tmp8cf3_gx5.rs:11:25\n   |\n11 |     d = d + xs[i + 1] * i;\n   |                         ^ expected `isize`, found `usize`\n\nerror[E0277]: cannot multiply `isize` by `usize`\n  --> /tmp/tmp8cf3_gx5.rs:11:23\n   |\n11 |     d = d + xs[i + 1] * i;\n   |                       ^ no implementation for `isize * usize`\n   |\n   = help: the trait `Mul<usize>` is not implemented for `isize`\n   = help: the following other types implement trait `Mul<Rhs>`:\n             <&'a f32 as Mul<f32>>\n             <&'a f64 as Mul<f64>>\n             <&'a i128 as Mul<i128>>\n             <&'a i16 as Mul<i16>>\n             <&'a i32 as Mul<i32>>\n             <&'a i64 as Mul<i64>>\n             <&'a i8 as Mul<i8>>\n             <&'a isize as Mul<isize>>\n           and 49 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp8cf3_gx5.rs:13:10\n   |\n8  | fn derivative(xs: Vec<isize>) -> Vec<isize> {\n   |                                  ---------- expected `Vec<isize>` because of return type\n...\n13 |   return d;\n   |          ^ expected struct `Vec`, found `isize`\n   |\n   = note: expected struct `Vec<isize>`\n                found type `isize`\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let result = Vec::new(n);\n  for (let i = 0; i < n; i++) {\n    result[i] = xs[i + 1] - xs[i];\n  }\n  return result;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmp0aaq3ngd.rs:11:8\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmp0aaq3ngd.rs:11:12\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmp0aaq3ngd.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmp0aaq3ngd.rs:11:13\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmp0aaq3ngd.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp0aaq3ngd.rs:10:16\n    |\n10  |   let result = Vec::new(n);\n    |                ^^^^^^^^ - supplied 1 argument\n    |                |\n    |                expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let (n, d) = derivative_coeffs(xs);\n  return vec![d, n * d];\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `derivative_coeffs` in this scope\n --> /tmp/tmpdr7yvmqc.rs:9:16\n  |\n9 |   let (n, d) = derivative_coeffs(xs);\n  |                ^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  if n == 0 {\n    return Vec::new(0);\n  }\n  let d = Vec::new(n - 1);\n  for (let i = 1; i < n; i++) {\n    d[i - 1] = xs[i] * i;\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpzr32avhq.rs:14:8\n   |\n14 |   for (let i = 1; i < n; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpzr32avhq.rs:14:12\n   |\n14 |   for (let i = 1; i < n; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpzr32avhq.rs:14:14\n   |\n14 |   for (let i = 1; i < n; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpzr32avhq.rs:14:13\n   |\n14 |   for (let i = 1; i < n; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpzr32avhq.rs:14:14\n   |\n14 |   for (let i = 1; i < n; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpzr32avhq.rs:11:12\n    |\n11  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpzr32avhq.rs:13:11\n    |\n13  |   let d = Vec::new(n - 1);\n    |           ^^^^^^^^ ----- supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let d = Vec::new(n);\n  for (i in 0..n-1) {\n    d[i] = xs[i+1] - xs[i];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n  --> /tmp/tmpe000efay.rs:11:10\n   |\n11 |   for (i in 0..n-1) {\n   |          ^^ expected one of `)`, `,`, `@`, or `|`\n\nerror: unexpected parentheses surrounding `for` loop head\n  --> /tmp/tmpe000efay.rs:11:7\n   |\n11 |   for (i in 0..n-1) {\n   |       ^           ^\n   |\nhelp: remove parentheses in `for` loop\n   |\n11 -   for (i in 0..n-1) {\n11 +   for i in 0..n-1 {\n   | \n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpe000efay.rs:10:11\n    |\n10  |   let d = Vec::new(n);\n    |           ^^^^^^^^ - supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let ds = Vec::new(xs.len - 1);\n  for (let i = 0; i < ds.len; i++) {\n    ds[i] = xs[i + 1] - xs[i];\n  }\n  return ds;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpkv0iqxsx.rs:10:8\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpkv0iqxsx.rs:10:12\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpkv0iqxsx.rs:10:14\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpkv0iqxsx.rs:10:13\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpkv0iqxsx.rs:10:14\n   |\n10 |   for (let i = 0; i < ds.len; i++) {\n   |              ^ expected expression\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpkv0iqxsx.rs:9:24\n  |\n9 |   let ds = Vec::new(xs.len - 1);\n  |                        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let ds = Vec::new(xs.len() - 1);\n  |                           ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpkv0iqxsx.rs:9:12\n    |\n9   |   let ds = Vec::new(xs.len - 1);\n    |            ^^^^^^^^ ---------- supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let d: Vec<isize> = Vec::new(xs.len - 1);\n  for (i in 0..xs.len - 1) {\n    d[i] = xs[i + 1] - xs[i];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n  --> /tmp/tmpnn0sq9tp.rs:10:10\n   |\n10 |   for (i in 0..xs.len - 1) {\n   |          ^^ expected one of `)`, `,`, `@`, or `|`\n\nerror: unexpected parentheses surrounding `for` loop head\n  --> /tmp/tmpnn0sq9tp.rs:10:7\n   |\n10 |   for (i in 0..xs.len - 1) {\n   |       ^                  ^\n   |\nhelp: remove parentheses in `for` loop\n   |\n10 -   for (i in 0..xs.len - 1) {\n10 +   for i in 0..xs.len - 1 {\n   | \n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpnn0sq9tp.rs:9:35\n  |\n9 |   let d: Vec<isize> = Vec::new(xs.len - 1);\n  |                                   ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   let d: Vec<isize> = Vec::new(xs.len() - 1);\n  |                                      ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpnn0sq9tp.rs:9:23\n    |\n9   |   let d: Vec<isize> = Vec::new(xs.len - 1);\n    |                       ^^^^^^^^ ---------- supplied 1 argument\n    |                       |\n    |                       expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpnn0sq9tp.rs:10:19\n   |\n10 |   for (i in 0..xs.len - 1) {\n   |                   ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n10 |   for (i in 0..xs.len() - 1) {\n   |                      ++\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let d = 0;\n  for (let i = xs.len() - 1; i >= 0; i--) {\n    d = d * xs[i] + 1;\n  }\n  return Vec::from(d);\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpk2jhrvwc.rs:10:8\n   |\n10 |   for (let i = xs.len() - 1; i >= 0; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpk2jhrvwc.rs:10:12\n   |\n10 |   for (let i = xs.len() - 1; i >= 0; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpk2jhrvwc.rs:10:14\n   |\n10 |   for (let i = xs.len() - 1; i >= 0; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpk2jhrvwc.rs:10:13\n   |\n10 |   for (let i = xs.len() - 1; i >= 0; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpk2jhrvwc.rs:10:14\n   |\n10 |   for (let i = xs.len() - 1; i >= 0; i--) {\n   |              ^ expected expression\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let d = Vec::new(n);\n  for (let i = 0; i < n; i++) {\n    d[i] = xs[i + 1] - xs[i];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpr10kq8cg.rs:11:8\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpr10kq8cg.rs:11:12\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpr10kq8cg.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpr10kq8cg.rs:11:13\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpr10kq8cg.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpr10kq8cg.rs:10:11\n    |\n10  |   let d = Vec::new(n);\n    |           ^^^^^^^^ - supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  if n == 0 {\n    return Vec::new(0);\n  }\n  let d = Vec::new(n - 1);\n  for (let i = n - 1; i > 0; i--) {\n    d[i - 1] = xs[i] * i;\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmp2aock989.rs:14:8\n   |\n14 |   for (let i = n - 1; i > 0; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmp2aock989.rs:14:12\n   |\n14 |   for (let i = n - 1; i > 0; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmp2aock989.rs:14:14\n   |\n14 |   for (let i = n - 1; i > 0; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmp2aock989.rs:14:13\n   |\n14 |   for (let i = n - 1; i > 0; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmp2aock989.rs:14:14\n   |\n14 |   for (let i = n - 1; i > 0; i--) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp2aock989.rs:11:12\n    |\n11  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp2aock989.rs:13:11\n    |\n13  |   let d = Vec::new(n - 1);\n    |           ^^^^^^^^ ----- supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 0 {\n    return Vec::new(0);\n  }\n\n  let dxs = Vec::new(len(xs) - 1);\n  for (let i = 1; i < len(xs); i++) {\n    dxs[i - 1] = xs[i] * i;\n  }\n  return dxs;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpz4b1mwak.rs:14:8\n   |\n14 |   for (let i = 1; i < len(xs); i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpz4b1mwak.rs:14:12\n   |\n14 |   for (let i = 1; i < len(xs); i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpz4b1mwak.rs:14:14\n   |\n14 |   for (let i = 1; i < len(xs); i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpz4b1mwak.rs:14:13\n   |\n14 |   for (let i = 1; i < len(xs); i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpz4b1mwak.rs:14:14\n   |\n14 |   for (let i = 1; i < len(xs); i++) {\n   |              ^ expected expression\n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmpz4b1mwak.rs:9:6\n  |\n9 |   if len(xs) == 0 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpz4b1mwak.rs:13:22\n   |\n13 |   let dxs = Vec::new(len(xs) - 1);\n   |                      ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpz4b1mwak.rs:10:12\n    |\n10  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpz4b1mwak.rs:13:13\n    |\n13  |   let dxs = Vec::new(len(xs) - 1);\n    |             ^^^^^^^^ ----------- supplied 1 argument\n    |             |\n    |             expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 9 previous errors\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let d = 0;\n  for (i in 0..xs.len) {\n    d = d + xs[i] * i;\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n  --> /tmp/tmpk1y5r8fb.rs:10:10\n   |\n10 |   for (i in 0..xs.len) {\n   |          ^^ expected one of `)`, `,`, `@`, or `|`\n\nerror: unexpected parentheses surrounding `for` loop head\n  --> /tmp/tmpk1y5r8fb.rs:10:7\n   |\n10 |   for (i in 0..xs.len) {\n   |       ^              ^\n   |\nhelp: remove parentheses in `for` loop\n   |\n10 -   for (i in 0..xs.len) {\n10 +   for i in 0..xs.len {\n   | \n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpk1y5r8fb.rs:10:19\n   |\n10 |   for (i in 0..xs.len) {\n   |                   ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n10 |   for (i in 0..xs.len()) {\n   |                      ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpk1y5r8fb.rs:11:21\n   |\n11 |     d = d + xs[i] * i;\n   |                     ^ expected `isize`, found `usize`\n\nerror[E0277]: cannot multiply `isize` by `usize`\n  --> /tmp/tmpk1y5r8fb.rs:11:19\n   |\n11 |     d = d + xs[i] * i;\n   |                   ^ no implementation for `isize * usize`\n   |\n   = help: the trait `Mul<usize>` is not implemented for `isize`\n   = help: the following other types implement trait `Mul<Rhs>`:\n             <&'a f32 as Mul<f32>>\n             <&'a f64 as Mul<f64>>\n             <&'a i128 as Mul<i128>>\n             <&'a i16 as Mul<i16>>\n             <&'a i32 as Mul<i32>>\n             <&'a i64 as Mul<i64>>\n             <&'a i8 as Mul<i8>>\n             <&'a isize as Mul<isize>>\n           and 49 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpk1y5r8fb.rs:13:10\n   |\n8  | fn derivative(xs: Vec<isize>) -> Vec<isize> {\n   |                                  ---------- expected `Vec<isize>` because of return type\n...\n13 |   return d;\n   |          ^ expected struct `Vec`, found `isize`\n   |\n   = note: expected struct `Vec<isize>`\n                found type `isize`\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0277, E0308, E0616.\nFor more information about an error, try `rustc --exp",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if len(xs) == 1 {\n    return Vec::new(0);\n  }\n\n  let deriv = Vec::new(len(xs) - 1);\n  for (i in 0..(len(xs) - 1)) {\n    deriv[i] = xs[i + 1] - xs[i];\n  }\n  return deriv;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n  --> /tmp/tmp8fbyt796.rs:14:10\n   |\n14 |   for (i in 0..(len(xs) - 1)) {\n   |          ^^ expected one of `)`, `,`, `@`, or `|`\n\nerror: unexpected parentheses surrounding `for` loop head\n  --> /tmp/tmp8fbyt796.rs:14:7\n   |\n14 |   for (i in 0..(len(xs) - 1)) {\n   |       ^                     ^\n   |\nhelp: remove parentheses in `for` loop\n   |\n14 -   for (i in 0..(len(xs) - 1)) {\n14 +   for i in 0..(len(xs) - 1) {\n   | \n\nerror[E0425]: cannot find function `len` in this scope\n --> /tmp/tmp8fbyt796.rs:9:6\n  |\n9 |   if len(xs) == 1 {\n  |      ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp8fbyt796.rs:13:24\n   |\n13 |   let deriv = Vec::new(len(xs) - 1);\n   |                        ^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmp8fbyt796.rs:14:17\n   |\n14 |   for (i in 0..(len(xs) - 1)) {\n   |                 ^^^ not found in this scope\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp8fbyt796.rs:10:12\n    |\n10  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp8fbyt796.rs:13:15\n    |\n13  |   let deriv = Vec::new(len(xs) - 1);\n    |               ^^^^^^^^ ----------- supplied 1 argument\n    |               |\n    |               expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0061, E0425.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let d = 0;\n  for i in 0..xs.len() - 1 {\n    d = d + xs[i + 1] * i;\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n  --> /tmp/tmp8cf3_gx5.rs:11:25\n   |\n11 |     d = d + xs[i + 1] * i;\n   |                         ^ expected `isize`, found `usize`\n\nerror[E0277]: cannot multiply `isize` by `usize`\n  --> /tmp/tmp8cf3_gx5.rs:11:23\n   |\n11 |     d = d + xs[i + 1] * i;\n   |                       ^ no implementation for `isize * usize`\n   |\n   = help: the trait `Mul<usize>` is not implemented for `isize`\n   = help: the following other types implement trait `Mul<Rhs>`:\n             <&'a f32 as Mul<f32>>\n             <&'a f64 as Mul<f64>>\n             <&'a i128 as Mul<i128>>\n             <&'a i16 as Mul<i16>>\n             <&'a i32 as Mul<i32>>\n             <&'a i64 as Mul<i64>>\n             <&'a i8 as Mul<i8>>\n             <&'a isize as Mul<isize>>\n           and 49 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp8cf3_gx5.rs:13:10\n   |\n8  | fn derivative(xs: Vec<isize>) -> Vec<isize> {\n   |                                  ---------- expected `Vec<isize>` because of return type\n...\n13 |   return d;\n   |          ^ expected struct `Vec`, found `isize`\n   |\n   = note: expected struct `Vec<isize>`\n                found type `isize`\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let d = 0;\n  for (let i = xs.len - 1; i >= 0; i--) {\n    d = d * xs[i] + (i + 1);\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpnvr8wcdr.rs:10:8\n   |\n10 |   for (let i = xs.len - 1; i >= 0; i--) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpnvr8wcdr.rs:10:12\n   |\n10 |   for (let i = xs.len - 1; i >= 0; i--) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpnvr8wcdr.rs:10:14\n   |\n10 |   for (let i = xs.len - 1; i >= 0; i--) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpnvr8wcdr.rs:10:13\n   |\n10 |   for (let i = xs.len - 1; i >= 0; i--) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpnvr8wcdr.rs:10:14\n   |\n10 |   for (let i = xs.len - 1; i >= 0; i--) {\n   |              ^ expected expression\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if xs.len == 0 {\n    return xs\n  }\n  let ds = Vec::new(xs.len - 1)\n  for i in 0..xs.len - 1 {\n    ds[i] = xs[i + 1] - xs[i]\n  }\n  return ds\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmp9e54wvsk.rs:12:32\n   |\n12 |   let ds = Vec::new(xs.len - 1)\n   |                                ^ help: add `;` here\n13 |   for i in 0..xs.len - 1 {\n   |   --- unexpected token\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp9e54wvsk.rs:9:9\n  |\n9 |   if xs.len == 0 {\n  |         ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   if xs.len() == 0 {\n  |            ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmp9e54wvsk.rs:12:24\n   |\n12 |   let ds = Vec::new(xs.len - 1)\n   |                        ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n12 |   let ds = Vec::new(xs.len() - 1)\n   |                           ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp9e54wvsk.rs:12:12\n    |\n12  |   let ds = Vec::new(xs.len - 1)\n    |            ^^^^^^^^ ---------- supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmp9e54wvsk.rs:13:18\n   |\n13 |   for i in 0..xs.len - 1 {\n   |                  ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n13 |   for i in 0..xs.len() - 1 {\n   |                     ++\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let n = xs.len();\n  let d = Vec::new(n);\n  for (let i = 0; i < n; i++) {\n    d[i] = xs[i + 1] - xs[i];\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected identifier, found keyword `let`\n  --> /tmp/tmpr10kq8cg.rs:11:8\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |        ^^^ expected identifier, found keyword\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n  --> /tmp/tmpr10kq8cg.rs:11:12\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |           -^ expected one of `)`, `,`, `@`, or `|`\n   |           |\n   |           help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `=`\n  --> /tmp/tmpr10kq8cg.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n  --> /tmp/tmpr10kq8cg.rs:11:13\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |             ^ help: try adding `in` here\n\nerror: expected expression, found `=`\n  --> /tmp/tmpr10kq8cg.rs:11:14\n   |\n11 |   for (let i = 0; i < n; i++) {\n   |              ^ expected expression\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpr10kq8cg.rs:10:11\n    |\n10  |   let d = Vec::new(n);\n    |           ^^^^^^^^ - supplied 1 argument\n    |           |\n    |           expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  let d = 0;\n  for (i in 0..xs.len) {\n    d = d + xs[i] * i;\n  }\n  return d;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n  --> /tmp/tmpk1y5r8fb.rs:10:10\n   |\n10 |   for (i in 0..xs.len) {\n   |          ^^ expected one of `)`, `,`, `@`, or `|`\n\nerror: unexpected parentheses surrounding `for` loop head\n  --> /tmp/tmpk1y5r8fb.rs:10:7\n   |\n10 |   for (i in 0..xs.len) {\n   |       ^              ^\n   |\nhelp: remove parentheses in `for` loop\n   |\n10 -   for (i in 0..xs.len) {\n10 +   for i in 0..xs.len {\n   | \n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpk1y5r8fb.rs:10:19\n   |\n10 |   for (i in 0..xs.len) {\n   |                   ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n10 |   for (i in 0..xs.len()) {\n   |                      ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpk1y5r8fb.rs:11:21\n   |\n11 |     d = d + xs[i] * i;\n   |                     ^ expected `isize`, found `usize`\n\nerror[E0277]: cannot multiply `isize` by `usize`\n  --> /tmp/tmpk1y5r8fb.rs:11:19\n   |\n11 |     d = d + xs[i] * i;\n   |                   ^ no implementation for `isize * usize`\n   |\n   = help: the trait `Mul<usize>` is not implemented for `isize`\n   = help: the following other types implement trait `Mul<Rhs>`:\n             <&'a f32 as Mul<f32>>\n             <&'a f64 as Mul<f64>>\n             <&'a i128 as Mul<i128>>\n             <&'a i16 as Mul<i16>>\n             <&'a i32 as Mul<i32>>\n             <&'a i64 as Mul<i64>>\n             <&'a i8 as Mul<i8>>\n             <&'a isize as Mul<isize>>\n           and 49 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpk1y5r8fb.rs:13:10\n   |\n8  | fn derivative(xs: Vec<isize>) -> Vec<isize> {\n   |                                  ---------- expected `Vec<isize>` because of return type\n...\n13 |   return d;\n   |          ^ expected struct `Vec`, found `isize`\n   |\n   = note: expected struct `Vec<isize>`\n                found type `isize`\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0277, E0308, E0616.\nFor more information about an error, try `rustc --exp",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if xs.len == 0 {\n    return xs\n  }\n  let d = xs.len - 1\n  let result = Vec::new(d)\n  for i in 0..d {\n    result[i] = xs[i + 1]\n  }\n  return result\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp9ys66j6e.rs:12:21\n   |\n12 |   let d = xs.len - 1\n   |                     ^ help: add `;` here\n13 |   let result = Vec::new(d)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmp9ys66j6e.rs:13:27\n   |\n13 |   let result = Vec::new(d)\n   |                           ^ help: add `;` here\n14 |   for i in 0..d {\n   |   --- unexpected token\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp9ys66j6e.rs:9:9\n  |\n9 |   if xs.len == 0 {\n  |         ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   if xs.len() == 0 {\n  |            ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmp9ys66j6e.rs:12:14\n   |\n12 |   let d = xs.len - 1\n   |              ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n12 |   let d = xs.len() - 1\n   |                 ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmp9ys66j6e.rs:13:16\n    |\n13  |   let result = Vec::new(d)\n    |                ^^^^^^^^ - supplied 1 argument\n    |                |\n    |                expected 0 arguments\n    |\nnote: associated function defined here\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0061, E0616.\nFor more information about an error, try `rustc --explain E0061`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n/// >>> derivative(vec![3, 1, 2, 4, 5])\n/// vec![1, 4, 12, 20]\n/// >>> derivative(vec![1, 2, 3])\n/// vec![2, 6]\nfn derivative(xs: Vec<isize>) -> Vec<isize> {\n  if xs.len == 0 {\n    return Vec::new(0);\n  }\n  if xs.len == 1 {\n    return Vec::new(0);\n  }\n  let ds = Vec::new(xs.len - 1);\n  for i in 0..xs.len - 1 {\n    ds[i] = xs[i + 1] - xs[i];\n  }\n  return ds;\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n",
      "timestamp": 1664292462,
      "stdout": "",
      "stderr": "error[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpxk16ae4k.rs:9:9\n  |\n9 |   if xs.len == 0 {\n  |         ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n9 |   if xs.len() == 0 {\n  |            ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpxk16ae4k.rs:10:12\n    |\n10  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpxk16ae4k.rs:12:9\n   |\n12 |   if xs.len == 1 {\n   |         ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n12 |   if xs.len() == 1 {\n   |            ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpxk16ae4k.rs:13:12\n    |\n13  |     return Vec::new(0);\n    |            ^^^^^^^^ - supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpxk16ae4k.rs:15:24\n   |\n15 |   let ds = Vec::new(xs.len - 1);\n   |                        ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n15 |   let ds = Vec::new(xs.len() - 1);\n   |                           ++\n\nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> /tmp/tmpxk16ae4k.rs:15:12\n    |\n15  |   let ds = Vec::new(xs.len - 1);\n    |            ^^^^^^^^ ---------- supplied 1 argument\n    |            |\n    |            expected 0 arguments\n    |\nnote: associated function defined here\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpxk16ae4k.rs:16:18\n   |\n16 |   for i in 0..xs.len - 1 {\n   |                  ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n16 |   for i in 0..xs.len() - 1 {\n   |                     ++\n\nerror: aborting due to 7 pr",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
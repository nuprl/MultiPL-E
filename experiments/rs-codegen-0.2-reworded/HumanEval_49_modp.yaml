name: HumanEval_49_modp
language: rs
prompt: "/// Return 2^n modulo p (be aware of numerics).\n/// >>> modp(3, 5)\n///\
  \ 3\n/// >>> modp(1101, 101)\n/// 2\n/// >>> modp(0, 101)\n/// 1\n/// >>> modp(3,\
  \ 11)\n/// 8\n/// >>> modp(100, 101)\n/// 1\nfn modp(n: isize, p: isize) -> isize\
  \ {\n"
tests: "}\n\nfn main() {\n    let candidate = modp;\n    assert_eq!(candidate(3, 5),\
  \ 3);\n    assert_eq!(candidate(1101, 101), 2);\n    assert_eq!(candidate(0, 101),\
  \ 1);\n    assert_eq!(candidate(3, 11), 8);\n    assert_eq!(candidate(100, 101),\
  \ 1);\n    assert_eq!(candidate(30, 5), 4);\n    assert_eq!(candidate(31, 5), 3);\n\
  }\n"
completions: ["  let r = 1;\n  for (; n > 0; n >>= 1) {\n    r = (r * r) % p;\n  }\n\
    \  return r;", "  if p == 0 {\n    return 0\n  }\n  if p == 1 {\n    return 1\n\
    \  }\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 1\n  }\n  if\
    \ n == 2 {\n    return p\n  }\n  if n % 2 == 0 {\n    return modp(n / 2, p) *\
    \ modp(n / 2, p) % p\n  }\n  return modp(n - 1, p) * modp(n - 1, p) % p", "  let\
    \ r = 1;\n  for i in 0..n {\n    r = (r * 2) % p;\n  }\n  r;", "  if p == 0 {\n\
    \    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n  return (n % p) * modp(n\
    \ / p, p) % p", "  if p == 0 {\n    return 1\n  }\n  if p == 1 {\n    return 0\n\
    \  }\n  if p == 2 {\n    return n & 1\n  }\n  if p == 3 {\n    return (n * n)\
    \ & 1\n  }\n  if p == 4 {\n    return (n * n * n) & 1\n  }\n  if p == 5 {\n  \
    \  return (n * n * n * n) & 1\n  }\n  if p == 6 {\n    return (n * n * n * n *\
    \ n) & 1\n  }\n  if p == 7 {\n    return (n * n * n * n * n * n) & 1\n  }\n  if\
    \ p == 8 {\n    return (n * n * n * n * n * n * n) & 1\n  }\n  if p == 9 {\n \
    \   return (n * n * n * n * n * n * n * n) & 1\n  }\n  if p == 10 {\n    return\
    \ (n * n * n * n * n * n * n * n * n) & 1\n  }\n  if p == 11 {\n    return (n\
    \ * n * n * n * n * n * n * n * n * n) & 1\n  }\n  if p == 12 {\n    return (n\
    \ * n * n * n * n * n * n * n * n * n * n) & 1\n  }\n  if p == 13 {\n    return\
    \ (n * n * n * n * n * n * n * n * n * n * n * n) & 1\n  }\n  if p == 14 {\n \
    \   return (n * n * n * n * n * n * n * n * n * n * n * n * n) & 1\n  }\n  if\
    \ p == 15 {\n    return (n * n * n * n * n * n * n * n * n * n * n * n * n * n)\
    \ & 1\n  }\n  if p == 16 {\n    return (n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n * n) & 1\n  }\n  if p == 17 {", "  if p == 0 {\n    return 1\n\
    \  }\n  if n == 0 {\n    return 0\n  }\n  return (n % p) + (n / p) * (p - 1)",
  "  if p == 0 {\n    return 1\n  }\n  let r = 1\n  while n > 0 {\n    if n % 2 ==\
    \ 1 {\n      r = (r * p) % p\n    }\n    n >>= 1\n  }\n  return r", "  if p ==\
    \ 0 {\n    return 1\n  }\n  let r = n % p\n  if r == 0 {\n    return r\n  }\n\
    \  return modp(r, p)", "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n    return\
    \ 0\n  }\n  return (n % p) + (n % p) * (p - 2)", "  let r = 1;\n  for i in 0..n\
    \ {\n    r = (r * 2) % p;\n  }\n  return r;", "  if p == 0 {\n    return 1\n \
    \ }\n  if n == 0 {\n    return 0\n  }\n  return (n % p) + (n % p) * (p - 2)",
  "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n  if n == 1\
    \ {\n    return p\n  }\n  return modp(n >> 1, p) * (n & 1)", "  if n == 0 {\n\
    \    return 1\n  }\n  if p == 0 {\n    return 0\n  }\n  if p == 1 {\n    return\
    \ n\n  }\n  let r = n % p\n  if r == 0 {\n    return r\n  }\n  return modp(r,\
    \ p)", "  let r = 1;\n  for i in 0..n {\n    r = (r * 2) % p;\n  }\n  return r;",
  "  if n == 0 {\n    return 1\n  }\n  if n == 1 {\n    return p\n  }\n  return modp(n\
    \ / 2, p) * modp(n % 2, p)", "  if p == 0 {\n    return 1\n  }\n  if p == 1 {\n\
    \    return 0\n  }\n  if p % 2 == 0 {\n    return modp(n, p / 2) * 2\n  }\n  return\
    \ modp(n, p - 1)", "  if p == 0 {\n    return 1\n  }\n  if p == 1 {\n    return\
    \ 0\n  }\n  let r = 1\n  for i in 0..n {\n    r = (r * 2) % p\n  }\n  return r",
  "  if p == 0 {\n    return 1\n  }\n  if p == 1 {\n    return 0\n  }\n  if p == 2\
    \ {\n    return 1\n  }\n  if p == 3 {\n    return 2\n  }\n  if p == 4 {\n    return\
    \ 3\n  }\n  if p == 5 {\n    return 4\n  }\n  if p == 6 {\n    return 5\n  }\n\
    \  if p == 7 {\n    return 6\n  }\n  if p == 8 {\n    return 7\n  }\n  if p ==\
    \ 9 {\n    return 8\n  }\n  if p == 10 {\n    return 9\n  }\n  if p == 11 {\n\
    \    return 10\n  }\n  if p == 12 {\n    return 11\n  }\n  if p == 13 {\n    return\
    \ 12\n  }\n  if p == 14 {\n    return 13\n  }\n  if p == 15 {\n    return 14\n\
    \  }\n  if p == 16 {\n    return 15\n  }\n  if p == 17 {\n    return 16\n  }\n\
    \  if p == 18 {\n    return 17\n  }\n  if p == 19 {\n    return 18\n  }\n  if\
    \ p == 20 {\n    return 19\n  }\n  if p == 21 {\n    return 20\n  }\n  if p ==\
    \ 22 {\n    return 21\n  }\n  if p == 23 {\n    return 22\n  }\n  if p == 24 {\n\
    \    return 23\n  }\n  if p == 25 {\n    return 24\n  }\n  if p == 26 {\n    return\
    \ 25\n  }\n  if p == 27 {\n    return 26\n  }\n  if p == 28 {\n    return 27\n\
    \  }\n  if p == 29 {\n    return 28\n  }\n  if p == 30 {\n    return 29\n  }\n\
    \  if p == 31 {\n    return 30\n  }\n  if p == 32 {\n    return 31\n  }\n  if\
    \ p == 33 {\n    return 32\n  }\n  if p == 34 {\n    return 33\n  }\n  if p ==\
    \ 35 {\n    return 34\n  }\n  if p == 36 {\n    ", "  if p == 0 {\n    return\
    \ 1\n  }\n  if n == 0 {\n    return 0\n  }\n  return (n % p) + (n / p) * (p -\
    \ 1)", "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n \
    \ return (n % p) + (n % p) * (p - 2)", "  if p == 0 {\n    return 1\n  }\n  if\
    \ n == 0 {\n    return 0\n  }\n  return (n % p) + (n % p) * (p - 2)", "  if p\
    \ == 0 {\n    return 1\n  }\n  let r = 1\n  for i in 0..n {\n    r = (r * 2) %\
    \ p\n  }\n  return r", "  if p == 0 {\n    return 1\n  }\n  if p == 1 {\n    return\
    \ 0\n  }\n  if n == 0 {\n    return 1\n  }\n  if n == 1 {\n    return p\n  }\n\
    \  return modp(n / 2, p) * (2 * n % p) % p", "  if p == 0 {\n    return 1\n  }\n\
    \  if n == 0 {\n    return 0\n  }\n  return (n % p) * modp(n / p, p) % p", " \
    \ if p == 0 {\n    return 1\n  }\n  if p == 1 {\n    return 0\n  }\n  if n ==\
    \ 0 {\n    return 0\n  }\n  if n == 1 {\n    return 1\n  }\n  if n % 2 == 0 {\n\
    \    return modp(n / 2, p) * modp(n / 2, p) % p\n  }\n  return modp(n - 1, p)\
    \ * modp(n - 1, p) % p", "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n  \
    \  return 0\n  }\n  return (n % p) + (n / p) * (p - 1)", "  if p == 0 {\n    return\
    \ 1\n  }\n  if n == 0 {\n    return 0\n  }\n  return (n % p) + (n / p) * (p -\
    \ 1)", "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n \
    \ return (n % p) * modp(n / p, p) % p", "  let r = 1;\n  for i in 0..n {\n   \
    \ r = (r * 2) % p;\n  }\n  r;", "  if p == 0 {\n    return 1\n  }\n  if n == 0\
    \ {\n    return 0\n  }\n  let r = n % p\n  if r == 0 {\n    return r\n  }\n  return\
    \ modp(n - p, p)", "  if p == 0 {\n    return 1\n  }\n  if p == 1 {\n    return\
    \ 0\n  }\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 1\n  }\n\
    \  if n % 2 == 0 {\n    return modp(n / 2, p) * modp(n / 2, p) % p\n  }\n  return\
    \ modp(n - 1, p) * modp(n - 1, p) % p", "  if p == 0 {\n    return 1\n  }\n  if\
    \ p == 1 {\n    return 0\n  }\n  if p == 2 {\n    return 1\n  }\n  if p == 3 {\n\
    \    return 2\n  }\n  if p == 4 {\n    return 3\n  }\n  if p == 5 {\n    return\
    \ 4\n  }\n  if p == 6 {\n    return 5\n  }\n  if p == 7 {\n    return 6\n  }\n\
    \  if p == 8 {\n    return 7\n  }\n  if p == 9 {\n    return 8\n  }\n  if p ==\
    \ 10 {\n    return 9\n  }\n  if p == 11 {\n    return 10\n  }\n  if p == 12 {\n\
    \    return 11\n  }\n  if p == 13 {\n    return 12\n  }\n  if p == 14 {\n    return\
    \ 13\n  }\n  if p == 15 {\n    return 14\n  }\n  if p == 16 {\n    return 15\n\
    \  }\n  if p == 17 {\n    return 16\n  }\n  if p == 18 {\n    return 17\n  }\n\
    \  if p == 19 {\n    return 18\n  }\n  if p == 20 {\n    return 19\n  }\n  if\
    \ p == 21 {\n    return 20\n  }\n  if p == 22 {\n    return 21\n  }\n  if p ==\
    \ 23 {\n    return 22\n  }\n  if p == 24 {\n    return 23\n  }\n  if p == 25 {\n\
    \    return 24\n  }\n  if p == 26 {\n    return 25\n  }\n  if p == 27 {\n    return\
    \ 26\n  }\n  if p == 28 {\n    return 27\n  }\n  if p == 29 {\n    return 28\n\
    \  }\n  if p == 30 {\n    return 29\n  }\n  if p == 31 {\n    return 30\n  }\n\
    \  if p == 32 {\n    return 31\n  }\n  if p == 33 {\n    return 32\n  }\n  if\
    \ p == 34 {\n    return 33\n  }\n  if p == 35 {\n    return 34\n  }\n  if p ==\
    \ 36 {\n    ", "  let r = 1;\n  for i in 0..n {\n    r = (r * 2) % p;\n  }\n \
    \ return r;", "  let r = 1;\n  for i in 0..n {\n    r = (r * 2) % p;\n  }\n  return\
    \ r;", "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n \
    \ return (n % p) + (n % p) * (p - 2)", "  if p == 0 {\n    return 1\n  }\n  if\
    \ p == 1 {\n    return 0\n  }\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n\
    \    return 1\n  }\n  if n % 2 == 0 {\n    return modp(n / 2, p) * modp(n / 2,\
    \ p) % p\n  }\n  return modp(n - 1, p) * modp(n - 1, p) % p", "  if p == 0 {\n\
    \    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n  return (n % p) + (n /\
    \ p) * (p - 1)", "  let r = 1;\n  for i in 0..n {\n    r = (r * 2) % p;\n  }\n\
    \  return r;", "  if p == 0 {\n    return 1\n  }\n  if p == 1 {\n    return 0\n\
    \  }\n  if n == 0 {\n    return 1\n  }\n  return (n % p) * modp(n / p, p) % p",
  "  if p == 0 {\n    return 1\n  }\n  let r = 1\n  while n > 0 {\n    r = (r * 2)\
    \ % p\n    n -= 1\n  }\n  return r", "  if p == 0 {\n    return 1\n  }\n  if n\
    \ == 0 {\n    return 0\n  }\n  let r = n % p\n  if r == 0 {\n    return r\n  }\n\
    \  return modp(r, p)", "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n    return\
    \ 0\n  }\n  return (n % p) + (n % p) * (p - 2)", "  if p == 0 {\n    return 1\n\
    \  }\n  if p == 1 {\n    return 0\n  }\n  if p == 2 {\n    return n & 1\n  }\n\
    \  if p == 3 {\n    return (n * n) & 1\n  }\n  if p == 4 {\n    return (n * n\
    \ * n) & 1\n  }\n  if p == 5 {\n    return (n * n * n * n) & 1\n  }\n  if p ==\
    \ 6 {\n    return (n * n * n * n * n) & 1\n  }\n  if p == 7 {\n    return (n *\
    \ n * n * n * n * n) & 1\n  }\n  if p == 8 {\n    return (n * n * n * n * n *\
    \ n * n) & 1\n  }\n  if p == 9 {\n    return (n * n * n * n * n * n * n * n) &\
    \ 1\n  }\n  if p == 10 {\n    return (n * n * n * n * n * n * n * n * n) & 1\n\
    \  }\n  if p == 11 {\n    return (n * n * n * n * n * n * n * n * n * n) & 1\n\
    \  }\n  if p == 12 {\n    return (n * n * n * n * n * n * n * n * n * n * n) &\
    \ 1\n  }\n  if p == 13 {\n    return (n * n * n * n * n * n * n * n * n * n *\
    \ n * n) & 1\n  }\n  if p == 14 {\n    return (n * n * n * n * n * n * n * n *\
    \ n * n * n * n * n) & 1\n  }\n  if p == 15 {\n    return (n * n * n * n * n *\
    \ n * n * n * n * n * n * n * n * n) & 1\n  }\n  if p == 16 {\n    return (n *\
    \ n * n * n * n * n * n * n * n * n * n * n * n * n * n) & 1\n  }\n  if p == 17\
    \ {", "  if p == 0 {\n    return 1\n  }\n  let r = 1\n  while n > 0 {\n    r =\
    \ (r * 2) % p\n    n -= 1\n  }\n  return r", "  if p == 0 {\n    return 1\n  }\n\
    \  if n == 0 {\n    return 0\n  }\n  return 1ll << (n - 1) % p", "  if p == 0\
    \ {\n    return 1\n  }\n  if p == 1 {\n    return 0\n  }\n  if n == 0 {\n    return\
    \ 1\n  }\n  if n == 1 {\n    return p\n  }\n  if n % 2 == 0 {\n    return modp(n\
    \ / 2, p) * modp(n / 2, p) % p\n  }\n  return modp(n / 2, p) * modp(n / 2, p)\
    \ * modp(n / 2, p) % p", "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n  \
    \  return 0\n  }\n  return 1ll << (n - 1) % p", "  if p == 0 {\n    return 1\n\
    \  }\n  if n == 0 {\n    return 0\n  }\n  let r = 1\n  while n > 0 {\n    let\
    \ d = n % p\n    n = n / p\n    r = (r * d) % p\n  }\n  return r", "  if p ==\
    \ 0 {\n    return 1\n  }\n  if p == 1 {\n    return 0\n  }\n  if p % 2 == 0 {\n\
    \    return (n % p) * (modp(n, p / 2) % p)\n  }\n  return (n % p) * (modp(n, p\
    \ - 1) % p)", "  let r = 1;\n  for i in 0..n {\n    r = (r * 2) % p;\n  }\n  return\
    \ r;", "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n \
    \ return (n % p) * modp(n / p, p) % p", "  if n == 0 {\n    return 1\n  }\n  let\
    \ r = n % p\n  if r == 0 {\n    return r\n  }\n  return modp(p, r)", "  if p ==\
    \ 0 {\n    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n  \
    \  return p\n  }\n  return modp(n - 1, p) * (p - 1) % p", "  if n == 0 {\n   \
    \ return 1\n  }\n  if p == 0 {\n    return 0\n  }\n  if n == 1 {\n    return n\n\
    \  }\n  return n % p", "  if n == 0 {\n    return 1\n  }\n  if p == 0 {\n    return\
    \ 0\n  }\n  if p == 1 {\n    return n\n  }\n  return (n * modp(n - 1, p)) % p",
  "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n  if p == 1\
    \ {\n    return n\n  }\n  return n % p", "  if n == 0 {\n    return 1\n  }\n \
    \ if p == 0 {\n    return 0\n  }\n  if p == 1 {\n    return n\n  }\n  return (n\
    \ * modp(n - 1, p)) % p", "  if p == 0 {\n    return 1\n  }\n  if p == 1 {\n \
    \   return 0\n  }\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return\
    \ 1\n  }\n  return (n % p) * modp(n / p, p) % p", "  if n == 0 {\n    return 1\n\
    \  }\n  if n == 1 {\n    return p\n  }\n  return modp(n - 1, p) * p % p", "  if\
    \ p == 0 {\n    return 1\n  }\n  if p == 1 {\n    return 0\n  }\n  if p == 2 {\n\
    \    return 1\n  }\n  if p == 3 {\n    return 2\n  }\n  if p == 4 {\n    return\
    \ 3\n  }\n  if p == 5 {\n    return 4\n  }\n  if p == 6 {\n    return 5\n  }\n\
    \  if p == 7 {\n    return 6\n  }\n  if p == 8 {\n    return 7\n  }\n  if p ==\
    \ 9 {\n    return 8\n  }\n  if p == 10 {\n    return 9\n  }\n  if p == 11 {\n\
    \    return 10\n  }\n  if p == 12 {\n    return 11\n  }\n  if p == 13 {\n    return\
    \ 12\n  }\n  if p == 14 {\n    return 13\n  }\n  if p == 15 {\n    return 14\n\
    \  }\n  if p == 16 {\n    return 15\n  }\n  if p == 17 {\n    return 16\n  }\n\
    \  if p == 18 {\n    return 17\n  }\n  if p == 19 {\n    return 18\n  }\n  if\
    \ p == 20 {\n    return 19\n  }\n  if p == 21 {\n    return 20\n  }\n  if p ==\
    \ 22 {\n    return 21\n  }\n  if p == 23 {\n    return 22\n  }\n  if p == 24 {\n\
    \    return 23\n  }\n  if p == 25 {\n    return 24\n  }\n  if p == 26 {\n    return\
    \ 25\n  }\n  if p == 27 {\n    return 26\n  }\n  if p == 28 {\n    return 27\n\
    \  }\n  if p == 29 {\n    return 28\n  }\n  if p == 30 {\n    return 29\n  }\n\
    \  if p == 31 {\n    return 30\n  }\n  if p == 32 {\n    return 31\n  }\n  if\
    \ p == 33 {\n    return 32\n  }\n  if p == 34 {\n    return 33\n  }\n  if p ==\
    \ 35 {\n    return 34\n  }\n  if p == 36 {\n    ", "  if p == 0 {\n    return\
    \ 1\n  }\n  if n == 0 {\n    return 0\n  }\n  return (n % p + p) % p", "  if p\
    \ == 0 {\n    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n  return (n % p)\
    \ + (n / p) * (p - 1)", "  if n == 0 {\n    return 1\n  }\n  return (n * modp(n\
    \ - 1, p)) % p", "  if p == 0 {\n    return 1\n  }\n  if p == 1 {\n    return\
    \ 0\n  }\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return p\n  }\n\
    \  return (n * modp(n - 1, p)) % p", "  if p == 0 {\n    return 1\n  }\n  if n\
    \ == 0 {\n    return 0\n  }\n  return (n % p) * modp(n / p, p) % p", "  if p ==\
    \ 0 {\n    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n  return (n % p) +\
    \ (n / p) * modp(n / p, p)", "  if p == 0 {\n    return 1\n  }\n  if p == 1 {\n\
    \    return 0\n  }\n  if p == 2 {\n    return n & 1\n  }\n  if p == 3 {\n    return\
    \ (n * n) & 1\n  }\n  if p == 4 {\n    return (n * n * n) & 1\n  }\n  if p ==\
    \ 5 {\n    return (n * n * n * n) & 1\n  }\n  if p == 6 {\n    return (n * n *\
    \ n * n * n) & 1\n  }\n  if p == 7 {\n    return (n * n * n * n * n * n) & 1\n\
    \  }\n  if p == 8 {\n    return (n * n * n * n * n * n * n) & 1\n  }\n  if p ==\
    \ 9 {\n    return (n * n * n * n * n * n * n * n) & 1\n  }\n  if p == 10 {\n \
    \   return (n * n * n * n * n * n * n * n * n) & 1\n  }\n  if p == 11 {\n    return\
    \ (n * n * n * n * n * n * n * n * n * n) & 1\n  }\n  if p == 12 {\n    return\
    \ (n * n * n * n * n * n * n * n * n * n * n) & 1\n  }\n  if p == 13 {\n    return\
    \ (n * n * n * n * n * n * n * n * n * n * n * n) & 1\n  }\n  if p == 14 {\n \
    \   return (n * n * n * n * n * n * n * n * n * n * n * n * n) & 1\n  }\n  if\
    \ p == 15 {\n    return (n * n * n * n * n * n * n * n * n * n * n * n * n * n)\
    \ & 1\n  }\n  if p == 16 {\n    return (n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n * n) & 1\n  }\n  if p == 17 {", "  if p == 0 {\n    return 1\n\
    \  }\n  if n == 0 {\n    return 0\n  }\n  let r = 1\n  for i in 0..n {\n    r\
    \ = (r * 2) % p\n  }\n  return r", "  if p == 0 {\n    return 1\n  }\n  if p ==\
    \ 1 {\n    return 0\n  }\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n  \
    \  return p\n  }\n  return (n * modp(n - 1, p)) % p", "  if n == 0 {\n    return\
    \ 1\n  }\n  if n == 1 {\n    return p\n  }\n  return modp(n / 2, p) * modp(n %\
    \ 2, p)", "  if p == 0 {\n    return 1\n  }\n  let r = 1\n  while n > 0 {\n  \
    \  if n & 1 {\n      r = (r * p) % p\n    }\n    n >>= 1\n    p = (p * p) % p\n\
    \  }\n  return r", "  if p == 0 {\n    return 1\n  }\n  let r = 1\n  while n >\
    \ 0 {\n    r = (r * 2) % p\n    n -= 1\n  }\n  return r", "  if n == 0 {\n   \
    \ return 1\n  }\n  if p == 0 {\n    return 0\n  }\n  if n == 1 {\n    return n\n\
    \  }\n  if p == 1 {\n    return 0\n  }\n  if p == 2 {\n    return n & 1\n  }\n\
    \  if p == 3 {\n    return (n * n) & 1\n  }\n  if p == 4 {\n    return (n * n\
    \ * n) & 1\n  }\n  if p == 5 {\n    return (n * n * n * n) & 1\n  }\n  if p ==\
    \ 6 {\n    return (n * n * n * n * n) & 1\n  }\n  if p == 7 {\n    return (n *\
    \ n * n * n * n * n) & 1\n  }\n  if p == 8 {\n    return (n * n * n * n * n *\
    \ n * n) & 1\n  }\n  if p == 9 {\n    return (n * n * n * n * n * n * n * n) &\
    \ 1\n  }\n  if p == 10 {\n    return (n * n * n * n * n * n * n * n * n) & 1\n\
    \  }\n  if p == 11 {\n    return (n * n * n * n * n * n * n * n * n * n) & 1\n\
    \  }\n  if p == 12 {\n    return (n * n * n * n * n * n * n * n * n * n * n) &\
    \ 1\n  }\n  if p == 13 {\n    return (n * n * n * n * n * n * n * n * n * n *\
    \ n * n) & 1\n  }\n  if p == 14 {\n    return (n * n * n * n * n * n * n * n *\
    \ n * n * n * n * n) & 1\n  }\n  if p == 15 {\n    return (n * n * n * n * n *\
    \ n * n * n * n * n * n * n * n * n) & 1\n  }\n  if p == 16 {\n    return (n *\
    \ n * n * n * n * n * n *", "  if p == 0 {\n    return 1\n  }\n  if p == 1 {\n\
    \    return 0\n  }\n  if p % 2 == 0 {\n    return modp(n, p / 2) * (p / 2)\n \
    \ }\n  return modp(n, p - 1) * (p - 1)", "  if n == 0 {\n    return 1\n  }\n \
    \ if p == 0 {\n    return 0\n  }\n  if n == 1 {\n    return n\n  }\n  if p ==\
    \ 1 {\n    return 0\n  }\n  if p == 2 {\n    return n & 1\n  }\n  if p == 3 {\n\
    \    return (n * n) & 1\n  }\n  if p == 4 {\n    return (n * n * n) & 1\n  }\n\
    \  if p == 5 {\n    return (n * n * n * n) & 1\n  }\n  if p == 6 {\n    return\
    \ (n * n * n * n * n) & 1\n  }\n  if p == 7 {\n    return (n * n * n * n * n *\
    \ n) & 1\n  }\n  if p == 8 {\n    return (n * n * n * n * n * n * n) & 1\n  }\n\
    \  if p == 9 {\n    return (n * n * n * n * n * n * n * n) & 1\n  }\n  if p ==\
    \ 10 {\n    return (n * n * n * n * n * n * n * n * n) & 1\n  }\n  if p == 11\
    \ {\n    return (n * n * n * n * n * n * n * n * n * n) & 1\n  }\n  if p == 12\
    \ {\n    return (n * n * n * n * n * n * n * n * n * n * n) & 1\n  }\n  if p ==\
    \ 13 {\n    return (n * n * n * n * n * n * n * n * n * n * n * n) & 1\n  }\n\
    \  if p == 14 {\n    return (n * n * n * n * n * n * n * n * n * n * n * n * n)\
    \ & 1\n  }\n  if p == 15 {\n    return (n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n) & 1\n  }\n  if p == 16 {\n    return (n * n * n * n * n * n\
    \ * n *", "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n\
    \  return (n % p) * modp(n / p, p) % p", "  let r = 1;\n  for i in 0..n {\n  \
    \  r = (r * 2) % p;\n  }\n  return r;", "  let r = 1;\n  for i in 0..n {\n   \
    \ r = (r * 2) % p;\n  }\n  return r;", "  if n == 0 {\n    return 1\n  }\n  if\
    \ p == 0 {\n    return 0\n  }\n  if p == 1 {\n    return n\n  }\n  return (n *\
    \ modp(n - 1, p)) % p", "  if p == 0 {\n    return 1\n  }\n  if p == 1 {\n   \
    \ return 0\n  }\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return p\n\
    \  }\n  return (n * modp(n - 1, p)) % p", "  let r = 1;\n  for i in 0..n {\n \
    \   r = (r * 2) % p;\n  }\n  r;", "  if p == 0 {\n    return 1\n  }\n  if n ==\
    \ 0 {\n    return 0\n  }\n  return (n % p) + (n / p) * modp(n / p, p)", "  if\
    \ n == 0 {\n    return 1\n  }\n  return (n % p) + (n / p) * (p - 1)", "  if p\
    \ == 0 {\n    return 1\n  }\n  if p == 1 {\n    return 0\n  }\n  if n == 0 {\n\
    \    return 0\n  }\n  if n == 1 {\n    return p\n  }\n  return modp(n >> 1, p)\
    \ * (p - 1) % p", "  if p == 0 {\n    return 1\n  }\n  let r = 1\n  while n >\
    \ 0 {\n    if n % 2 == 1 {\n      r = (r * p) % p\n    }\n    n = n >> 1\n   \
    \ p = (p * p) % p\n  }\n  return r", "  if p == 0 {\n    return 1\n  }\n  if p\
    \ == 1 {\n    return 0\n  }\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n\
    \    return p\n  }\n  return (n * modp(n - 1, p)) % p", "  if p == 0 {\n    return\
    \ 1\n  }\n  if n == 0 {\n    return 0\n  }\n  return (n % p) * modp(n / p, p)\
    \ % p", "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n\
    \  if p == 1 {\n    return n\n  }\n  return (n * modp(n - 1, p)) % p", "  if p\
    \ == 0 {\n    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n  let r = 1\n \
    \ while (n > 0) {\n    r = (r * 2) % p\n    n = n - 1\n  }\n  return r", "  if\
    \ p == 0 {\n    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n  let r = n %\
    \ p\n  if r == 0 {\n    return r\n  }\n  return modp(n - p, p)", "  if p == 0\
    \ {\n    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n  return (n % p) * modp(n\
    \ / p, p) % p", "  if n == 0 {\n    return 1\n  }\n  if n == 1 {\n    return p\n\
    \  }\n  return modp(n >> 1, p) * modp(n & 1, p) % p", "  if n == 0 {\n    return\
    \ 1\n  }\n  return (n % p) + (n / p) * (p - 1)", "  let r = 1;\n  for i in 0..n\
    \ {\n    r = (r * 2) % p;\n  }\n  return r;", "  if n == 0 {\n    return 1\n \
    \ }\n  return (n % p) + (n / p) * (p - 1)", "  let r = 1;\n  while (n > 0) {\n\
    \    r = (r * 2) % p;\n    n -= 1;\n  }\n  return r;", "  if p == 0 {\n    return\
    \ 1\n  }\n  if n == 0 {\n    return 0\n  }\n  return (n % p) + (n / p) * (p -\
    \ 1)", "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n \
    \ let r = 1\n  while n > 0 {\n    if n & 1 {\n      r = (r * p) % p\n    }\n \
    \   n >>= 1\n    p = (p * p) % p\n  }\n  return r", "  if p == 0 {\n    return\
    \ 1\n  }\n  if n == 0 {\n    return 0\n  }\n  return (n % p) * modp(n / p, p)\
    \ % p", "  if p == 0 {\n    return 0\n  }\n  if n == 0 {\n    return 1\n  }\n\
    \  let r = 1\n  for i in 0..n {\n    r = (r * p) % p\n  }\n  return r", "  let\
    \ r = 1;\n  while (n > 0) {\n    r = (r * 2) % p;\n    n -= 1;\n  }\n  return\
    \ r;", "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n \
    \ return (n % p) + (n % p) * (p - 2)", "  if p == 0 {\n    return 1\n  }\n  if\
    \ p == 1 {\n    return 0\n  }\n  if p == 2 {\n    return n & 1\n  }\n  if p ==\
    \ 3 {\n    return (n * n) & 1\n  }\n  if p == 4 {\n    return (n * n * n) & 1\n\
    \  }\n  if p == 5 {\n    return (n * n * n * n) & 1\n  }\n  if p == 6 {\n    return\
    \ (n * n * n * n * n) & 1\n  }\n  if p == 7 {\n    return (n * n * n * n * n *\
    \ n) & 1\n  }\n  if p == 8 {\n    return (n * n * n * n * n * n * n) & 1\n  }\n\
    \  if p == 9 {\n    return (n * n * n * n * n * n * n * n) & 1\n  }\n  if p ==\
    \ 10 {\n    return (n * n * n * n * n * n * n * n * n) & 1\n  }\n  if p == 11\
    \ {\n    return (n * n * n * n * n * n * n * n * n * n) & 1\n  }\n  if p == 12\
    \ {\n    return (n * n * n * n * n * n * n * n * n * n * n) & 1\n  }\n  if p ==\
    \ 13 {\n    return (n * n * n * n * n * n * n * n * n * n * n * n) & 1\n  }\n\
    \  if p == 14 {\n    return (n * n * n * n * n * n * n * n * n * n * n * n * n)\
    \ & 1\n  }\n  if p == 15 {\n    return (n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n) & 1\n  }\n  if p == 16 {\n    return (n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n) & 1\n  }\n  if p == 17 {", "  if p == 0\
    \ {\n    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n  let r = 1\n  for i\
    \ in 0..n {\n    r = (r * 2) % p\n  }\n  return r", "  if p == 0 {\n    return\
    \ 1\n  }\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return p\n  }\n\
    \  return modp(n >> 1, p) * modp(n & 1, p) % p", "  let r = 1;\n  for i in 0..n\
    \ {\n    r = (r * 2) % p;\n  }\n  r;", "  if p == 0 {\n    return 1\n  }\n  if\
    \ n == 0 {\n    return 0\n  }\n  return (n % p) + (n % p) * (p - 2)", "  let r\
    \ = 1;\n  for i in 0..n {\n    r = (r * 2) % p;\n  }\n  return r;", "  if p ==\
    \ 0 {\n    return 1\n  }\n  if p == 1 {\n    return 0\n  }\n  if n == 0 {\n  \
    \  return 0\n  }\n  if n == 1 {\n    return 1\n  }\n  if n % 2 == 0 {\n    return\
    \ modp(n / 2, p) * modp(n / 2, p) % p\n  }\n  return modp(n - 1, p) * modp(n -\
    \ 1, p) % p", "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n    return 0\n\
    \  }\n  return (n % p) + (n / p) * modp(n / p, p)", "  if p == 0 {\n    return\
    \ 1\n  }\n  if n == 0 {\n    return 0\n  }\n  let r = n % p\n  if r == 0 {\n \
    \   return r\n  }\n  return modp(n - p, p)", "  let r = 1;\n  for i in 0..n {\n\
    \    r = (r * 2) % p;\n  }\n  return r;", "  if p == 0 {\n    return 1\n  }\n\
    \  if n == 0 {\n    return 0\n  }\n  let r = 1\n  while n > 0 {\n    r = (r *\
    \ 2) % p\n    n -= 1\n  }\n  return r", "  let r = 1;\n  for (; n; n >>= 1) {\n\
    \    r = (r * r) % p;\n  }\n  return r;", "  if p == 0 {\n    return 1\n  }\n\
    \  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return p\n  }\n  return\
    \ modp(n / 2, p) * modp(n % 2, p)", "  if p == 0 {\n    return 1\n  }\n  if n\
    \ == 0 {\n    return 0\n  }\n  return 1ll << (n - 1) * log2(p)", "  if p == 0\
    \ {\n    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return\
    \ p\n  }\n  return modp(n / 2, p) * (2 * n % p) % p", "  let r = 1;\n  while (n\
    \ > 0) {\n    r = (r * 2) % p;\n    n -= 1;\n  }\n  return r;", "  if p == 0 {\n\
    \    return 1\n  }\n  if p == 1 {\n    return 0\n  }\n  if n == 0 {\n    return\
    \ 0\n  }\n  if n == 1 {\n    return p\n  }\n  if n % 2 == 0 {\n    return modp(n\
    \ / 2, p) * modp(n / 2, p) % p\n  }\n  return modp(n / 2, p) * modp(n / 2, p)\
    \ * modp(n / 2, p) % p", "  if p == 0 {\n    return 1\n  }\n  if p == 1 {\n  \
    \  return 0\n  }\n  if p == 2 {\n    return 1\n  }\n  if p == 3 {\n    return\
    \ 2\n  }\n  if p == 4 {\n    return 3\n  }\n  if p == 5 {\n    return 4\n  }\n\
    \  if p == 6 {\n    return 5\n  }\n  if p == 7 {\n    return 6\n  }\n  if p ==\
    \ 8 {\n    return 7\n  }\n  if p == 9 {\n    return 8\n  }\n  if p == 10 {\n \
    \   return 9\n  }\n  if p == 11 {\n    return 10\n  }\n  if p == 12 {\n    return\
    \ 11\n  }\n  if p == 13 {\n    return 12\n  }\n  if p == 14 {\n    return 13\n\
    \  }\n  if p == 15 {\n    return 14\n  }\n  if p == 16 {\n    return 15\n  }\n\
    \  if p == 17 {\n    return 16\n  }\n  if p == 18 {\n    return 17\n  }\n  if\
    \ p == 19 {\n    return 18\n  }\n  if p == 20 {\n    return 19\n  }\n  if p ==\
    \ 21 {\n    return 20\n  }\n  if p == 22 {\n    return 21\n  }\n  if p == 23 {\n\
    \    return 22\n  }\n  if p == 24 {\n    return 23\n  }\n  if p == 25 {\n    return\
    \ 24\n  }\n  if p == 26 {\n    return 25\n  }\n  if p == 27 {\n    return 26\n\
    \  }\n  if p == 28 {\n    return 27\n  }\n  if p == 29 {\n    return 28\n  }\n\
    \  if p == 30 {\n    return 29\n  }\n  if p == 31 {\n    return 30\n  }\n  if\
    \ p == 32 {\n    return 31\n  }\n  if p == 33 {\n    return 32\n  }\n  if p ==\
    \ 34 {\n    return 33\n  }\n  if p == 35 {\n    return 34\n  }\n  if p == 36 {\n\
    \    ", "  if n == 0 {\n    return 1\n  }\n  return (n % p) + (n / p) * (p - 1)",
  "  if p == 0 {\n    return 1\n  }\n  let r = 1\n  while n > 0 {\n    r = (r * 2)\
    \ % p\n    n -= 1\n  }\n  return r", "  if p == 0 {\n    return 1\n  }\n  if p\
    \ == 1 {\n    return 0\n  }\n  let r = 1\n  while n > 0 {\n    if n & 1 {\n  \
    \    r = (r * p) % p\n    }\n    n >>= 1\n    p = (p * p) % p\n  }\n  return r",
  "  if p == 0 {\n    return 1\n  }\n  if p == 1 {\n    return 0\n  }\n  if p == 2\
    \ {\n    return 1\n  }\n  if p == 3 {\n    return 2\n  }\n  if p == 4 {\n    return\
    \ 3\n  }\n  if p == 5 {\n    return 4\n  }\n  if p == 6 {\n    return 5\n  }\n\
    \  if p == 7 {\n    return 6\n  }\n  if p == 8 {\n    return 7\n  }\n  if p ==\
    \ 9 {\n    return 8\n  }\n  if p == 10 {\n    return 9\n  }\n  if p == 11 {\n\
    \    return 10\n  }\n  if p == 12 {\n    return 11\n  }\n  if p == 13 {\n    return\
    \ 12\n  }\n  if p == 14 {\n    return 13\n  }\n  if p == 15 {\n    return 14\n\
    \  }\n  if p == 16 {\n    return 15\n  }\n  if p == 17 {\n    return 16\n  }\n\
    \  if p == 18 {\n    return 17\n  }\n  if p == 19 {\n    return 18\n  }\n  if\
    \ p == 20 {\n    return 19\n  }\n  if p == 21 {\n    return 20\n  }\n  if p ==\
    \ 22 {\n    return 21\n  }\n  if p == 23 {\n    return 22\n  }\n  if p == 24 {\n\
    \    return 23\n  }\n  if p == 25 {\n    return 24\n  }\n  if p == 26 {\n    return\
    \ 25\n  }\n  if p == 27 {\n    return 26\n  }\n  if p == 28 {\n    return 27\n\
    \  }\n  if p == 29 {\n    return 28\n  }\n  if p == 30 {\n    return 29\n  }\n\
    \  if p == 31 {\n    return 30\n  }\n  if p == 32 {\n    return 31\n  }\n  if\
    \ p == 33 {\n    return 32\n  }\n  if p == 34 {\n    return 33\n  }\n  if p ==\
    \ 35 {\n    return 34\n  }\n  if p == 36 {\n    ", "  if p == 0 {\n    return\
    \ 1\n  }\n  if n == 0 {\n    return 0\n  }\n  return (n % p) + (n / p) * (p -\
    \ 1)", "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n \
    \ let r = 1\n  for i in 0..n - 1 {\n    r = (r * 2) % p\n  }\n  return r", " \
    \ if p == 0 {\n    return 0\n  }\n  if p == 1 {\n    return 1\n  }\n  if n ==\
    \ 0 {\n    return 1\n  }\n  if n == 1 {\n    return p\n  }\n  if n % 2 == 0 {\n\
    \    return modp(n / 2, p) * modp(n / 2, p) % p\n  }\n  return modp(n / 2, p)\
    \ * modp(n / 2, p) * modp(n / 2, p) % p", "  if n == 0 {\n    return 1\n  }\n\
    \  if p == 0 {\n    return 0\n  }\n  if n == 1 {\n    return n\n  }\n  return\
    \ (n * modp(n - 1, p)) % p", "  let r = 1;\n  for i in 0..n {\n    r = (r * 2)\
    \ % p;\n  }\n  return r;", "  let r = 1;\n  for (; n > 0; n >>= 1) {\n    r =\
    \ (r * r) % p;\n  }\n  return r;", "  if p == 0 {\n    return 1\n  }\n  let r\
    \ = 1\n  while n > 0 {\n    r = (r * 2) % p\n    n -= 1\n  }\n  return r", " \
    \ let r = 1;\n  for i in 0..n {\n    r = (r * 2) % p;\n  }\n  return r;", "  if\
    \ n == 0 {\n    return 1\n  }\n  if p == 0 {\n    return 0\n  }\n  if n == 1 {\n\
    \    return n\n  }\n  if n == 2 {\n    return (p * p) % p\n  }\n  if n % 2 ==\
    \ 0 {\n    return modp(n / 2, p) * modp(n / 2, p) % p\n  }\n  return modp(n /\
    \ 2, p) * modp(n / 2, p) * modp(n / 2, p) % p", "  if n == 0 {\n    return 1\n\
    \  }\n  if n == 1 {\n    return n\n  }\n  return (n * modp(n - 1, p)) % p", " \
    \ if p == 0 {\n    return 1\n  }\n  if p == 1 {\n    return 0\n  }\n  if p ==\
    \ 2 {\n    return 1\n  }\n  if p == 3 {\n    return 2\n  }\n  if p == 4 {\n  \
    \  return 3\n  }\n  if p == 5 {\n    return 4\n  }\n  if p == 6 {\n    return\
    \ 5\n  }\n  if p == 7 {\n    return 6\n  }\n  if p == 8 {\n    return 7\n  }\n\
    \  if p == 9 {\n    return 8\n  }\n  if p == 10 {\n    return 9\n  }\n  if p ==\
    \ 11 {\n    return 10\n  }\n  if p == 12 {\n    return 11\n  }\n  if p == 13 {\n\
    \    return 12\n  }\n  if p == 14 {\n    return 13\n  }\n  if p == 15 {\n    return\
    \ 14\n  }\n  if p == 16 {\n    return 15\n  }\n  if p == 17 {\n    return 16\n\
    \  }\n  if p == 18 {\n    return 17\n  }\n  if p == 19 {\n    return 18\n  }\n\
    \  if p == 20 {\n    return 19\n  }\n  if p == 21 {\n    return 20\n  }\n  if\
    \ p == 22 {\n    return 21\n  }\n  if p == 23 {\n    return 22\n  }\n  if p ==\
    \ 24 {\n    return 23\n  }\n  if p == 25 {\n    return 24\n  }\n  if p == 26 {\n\
    \    return 25\n  }\n  if p == 27 {\n    return 26\n  }\n  if p == 28 {\n    return\
    \ 27\n  }\n  if p == 29 {\n    return 28\n  }\n  if p == 30 {\n    return 29\n\
    \  }\n  if p == 31 {\n    return 30\n  }\n  if p == 32 {\n    return 31\n  }\n\
    \  if p == 33 {\n    return 32\n  }\n  if p == 34 {\n    return 33\n  }\n  if\
    \ p == 35 {\n    return 34\n  }\n  if p == 36 {\n    ", "  if p == 0 {\n    return\
    \ 0\n  }\n  if p == 1 {\n    return 1\n  }\n  if p == 2 {\n    return n & 1\n\
    \  }\n  if p == 3 {\n    return (n * n) & 1\n  }\n  if p == 4 {\n    return (n\
    \ * n * n) & 1\n  }\n  if p == 5 {\n    return (n * n * n * n) & 1\n  }\n  if\
    \ p == 6 {\n    return (n * n * n * n * n) & 1\n  }\n  if p == 7 {\n    return\
    \ (n * n * n * n * n * n) & 1\n  }\n  if p == 8 {\n    return (n * n * n * n *\
    \ n * n * n) & 1\n  }\n  if p == 9 {\n    return (n * n * n * n * n * n * n *\
    \ n) & 1\n  }\n  if p == 10 {\n    return (n * n * n * n * n * n * n * n * n)\
    \ & 1\n  }\n  if p == 11 {\n    return (n * n * n * n * n * n * n * n * n * n)\
    \ & 1\n  }\n  if p == 12 {\n    return (n * n * n * n * n * n * n * n * n * n\
    \ * n) & 1\n  }\n  if p == 13 {\n    return (n * n * n * n * n * n * n * n * n\
    \ * n * n * n) & 1\n  }\n  if p == 14 {\n    return (n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n) & 1\n  }\n  if p == 15 {\n    return (n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n * n) & 1\n  }\n  if p == 16 {\n    return\
    \ (n * n * n * n * n * n * n * n * n * n * n * n * n * n * n) & 1\n  }\n  if p\
    \ == 17 {", "  let r = 1;\n  for i in 0..n {\n    r = (r * 2) % p;\n  }\n  return\
    \ r;", "  if n == 0 {\n    return 1\n  }\n  let r = 1\n  for i in 0..n {\n   \
    \ r = (r * p) % p\n  }\n  return r", "  if p == 0 {\n    return 1\n  }\n  if p\
    \ == 1 {\n    return 0\n  }\n  if p == 2 {\n    return 1\n  }\n  if p == 3 {\n\
    \    return 2\n  }\n  if p == 4 {\n    return 3\n  }\n  if p == 5 {\n    return\
    \ 4\n  }\n  if p == 6 {\n    return 5\n  }\n  if p == 7 {\n    return 6\n  }\n\
    \  if p == 8 {\n    return 7\n  }\n  if p == 9 {\n    return 8\n  }\n  if p ==\
    \ 10 {\n    return 9\n  }\n  if p == 11 {\n    return 10\n  }\n  if p == 12 {\n\
    \    return 11\n  }\n  if p == 13 {\n    return 12\n  }\n  if p == 14 {\n    return\
    \ 13\n  }\n  if p == 15 {\n    return 14\n  }\n  if p == 16 {\n    return 15\n\
    \  }\n  if p == 17 {\n    return 16\n  }\n  if p == 18 {\n    return 17\n  }\n\
    \  if p == 19 {\n    return 18\n  }\n  if p == 20 {\n    return 19\n  }\n  if\
    \ p == 21 {\n    return 20\n  }\n  if p == 22 {\n    return 21\n  }\n  if p ==\
    \ 23 {\n    return 22\n  }\n  if p == 24 {\n    return 23\n  }\n  if p == 25 {\n\
    \    return 24\n  }\n  if p == 26 {\n    return 25\n  }\n  if p == 27 {\n    return\
    \ 26\n  }\n  if p == 28 {\n    return 27\n  }\n  if p == 29 {\n    return 28\n\
    \  }\n  if p == 30 {\n    return 29\n  }\n  if p == 31 {\n    return 30\n  }\n\
    \  if p == 32 {\n    return 31\n  }\n  if p == 33 {\n    return 32\n  }\n  if\
    \ p == 34 {\n    return 33\n  }\n  if p == 35 {\n    return 34\n  }\n  if p ==\
    \ 36 {\n    ", "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n    return 0\n\
    \  }\n  return (n % p) + (n / p) * (p - 1)", "  if n == 0 {\n    return 1\n  }\n\
    \  return (n % p) + (n / p) * (p - 1)", "  if p == 0 {\n    return 1\n  }\n  if\
    \ n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return p\n  }\n  return modp(n\
    \ >> 1, p) * modp(n & 1, p)", "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n\
    \    return 0\n  }\n  let r = n % p\n  if r == 0 {\n    return r\n  }\n  return\
    \ modp(n - p, p)", "  if p == 0 {\n    return 1\n  }\n  let r = 1\n  for i in\
    \ 0..n {\n    r = (r * 2) % p\n  }\n  return r", "  if n == 0 {\n    return 1\n\
    \  }\n  if p == 0 {\n    return 0\n  }\n  return (n * modp(n - 1, p)) % p", " \
    \ if p == 0 {\n    return 1\n  }\n  if p == 1 {\n    return 0\n  }\n  let r =\
    \ 1\n  while n > 0 {\n    let d = n % p\n    r = (r * d) % p\n    n = n / p\n\
    \  }\n  return r", "  if p == 0 {\n    return 1\n  }\n  if p == 1 {\n    return\
    \ 0\n  }\n  let r = 1\n  for i in 0..n {\n    r = (r * 2) % p\n  }\n  return r",
  "  if n == 0 {\n    return 1\n  }\n  return (n % p) + (n / p) * (p - 1)", "  if\
    \ p == 0 {\n    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n  return (n %\
    \ p) + (n / p) * (p - 1)", "  if n == 0 {\n    return 1\n  }\n  return (n % p)\
    \ + (n / p) * (p - 1)", "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n   \
    \ return 0\n  }\n  let r = 1\n  while n > 0 {\n    r = (r * 2) % p\n    n -= 1\n\
    \  }\n  return r", "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n    return\
    \ 0\n  }\n  if n == 1 {\n    return p\n  }\n  return modp(n >> 1, p) * modp(n\
    \ & 1, p)", "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n    return 0\n \
    \ }\n  let r = n % p\n  if r == 0 {\n    return r\n  }\n  return modp(n - p, p)",
  "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n  return (n\
    \ % p) + (n / p) * (p - 1)", "  if n == 0 {\n    return 1\n  }\n  return (n *\
    \ modp(n - 1, p)) % p", "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n   \
    \ return 0\n  }\n  return (n % p) + (n / p) * (p - 1)", "  if p == 0 {\n    return\
    \ 1\n  }\n  if n == 0 {\n    return 0\n  }\n  return (n % p) + (n % p) * (p -\
    \ 2)", "  let r = 1;\n  for (; n > 0; n >>= 1) {\n    r = (r * r) % p;\n  }\n\
    \  return r;", "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n    return 0\n\
    \  }\n  return (n % p) * modp(n / p, p) % p", "  if p == 0 {\n    return 1\n \
    \ }\n  if p == 1 {\n    return 0\n  }\n  if n == 0 {\n    return 0\n  }\n  if\
    \ n == 1 {\n    return 1\n  }\n  if n == 2 {\n    return p\n  }\n  if n % 2 ==\
    \ 0 {\n    return modp(n / 2, p) * modp(n / 2, p) % p\n  }\n  return modp(n /\
    \ 2, p) * modp(n / 2, p) * modp(n / 2, p) % p", "  let r = 1;\n  while (n > 0)\
    \ {\n    if (n & 1) {\n      r = (r * p) % p;\n    }\n    n >>= 1;\n    p = (p\
    \ * p) % p;\n  }\n  return r;", "  if p == 0 {\n    return 1\n  }\n  let r = 1\n\
    \  while n > 0 {\n    r = (r * 2) % p\n    n -= 1\n  }\n  return r", "  let r\
    \ = 1;\n  for i in 0..n {\n    r = (r * 2) % p;\n  }\n  return r;", "  let r =\
    \ 1;\n  for (; n > 0; n >>= 1) {\n    r = (r * r) % p;\n  }\n  return r;", " \
    \ if n == 0 {\n    return 1\n  }\n  if p == 0 {\n    return 0\n  }\n  if n ==\
    \ 1 {\n    return n\n  }\n  return n % p", "  if p == 0 {\n    return 1\n  }\n\
    \  if n == 0 {\n    return 0\n  }\n  return (n % p + p) % p", "  if p == 0 {\n\
    \    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n  return (n % p) + (n %\
    \ p) * (p - 2)", "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n    return\
    \ 0\n  }\n  let r = n % p\n  if r == 0 {\n    return r\n  }\n  return modp(n -\
    \ p, p)", "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n\
    \  let r = 1\n  while n > 0 {\n    r = (r * 2) % p\n    n -= 1\n  }\n  return\
    \ r", "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n  return\
    \ (n % p) * modp(n / p, p) % p", "  if p == 0 {\n    return 1\n  }\n  if n ==\
    \ 0 {\n    return 0\n  }\n  return (n % p) + (n % p) * (p - 2)", "  if p == 0\
    \ {\n    return 1\n  }\n  if p == 1 {\n    return 0\n  }\n  if n == 0 {\n    return\
    \ 0\n  }\n  if n == 1 {\n    return p\n  }\n  return (n * modp(n - 1, p)) % p",
  "  if p == 0 {\n    return 1\n  }\n  if p == 1 {\n    return 0\n  }\n  if n == 0\
    \ {\n    return 1\n  }\n  if n == 1 {\n    return p\n  }\n  return (n * modp(n\
    \ - 1, p)) % p", "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n    return\
    \ 0\n  }\n  return (n % p) + (n / p) * (p - 1)", "  if p == 0 {\n    return 1\n\
    \  }\n  if n == 0 {\n    return 0\n  }\n  return (n % p) * modp(n / p, p) % p",
  "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n  return 1ll\
    \ << (n - 1) % p", "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n    return\
    \ 0\n  }\n  return (n % p) * modp(n / p, p) % p", "  if n == 0 {\n    return 1\n\
    \  }\n  let r = 1\n  for i in 0..n - 1 {\n    r = (r * 2) % p\n  }\n  return r",
  "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n  let r = 1\n\
    \  while n > 0 {\n    r = (r * 2) % p\n    n -= 1\n  }\n  return r", "  if p ==\
    \ 0 {\n    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n  let r = 1\n  while\
    \ n > 0 {\n    r = (r * 2) % p\n    n -= 1\n  }\n  return r", "  if n == 0 {\n\
    \    return 1\n  }\n  if p == 0 {\n    return 0\n  }\n  if p == 1 {\n    return\
    \ n\n  }\n  return (n * modp(n - 1, p)) % p", "  if p == 0 {\n    return 1\n \
    \ }\n  let r = 1\n  while n > 0 {\n    r = (r * 2) % p\n    n -= 1\n  }\n  return\
    \ r", "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n  return\
    \ (n % p) + (n / p) * (p - 1)", "  if p == 0 {\n    return 1\n  }\n  if p == 1\
    \ {\n    return 0\n  }\n  if p % 2 == 0 {\n    return modp(n, p / 2) * 2\n  }\n\
    \  return modp(n, p - 1)", "  if p == 0 {\n    return 1\n  }\n  if p == 1 {\n\
    \    return 0\n  }\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return\
    \ p\n  }\n  return (n * modp(n - 1, p)) % p", "  if n == 0 {\n    return 1\n \
    \ }\n  return (n % p) + (n / p) * (p - 1)", "  let r = 1;\n  for (; n > 0; n >>=\
    \ 1) {\n    r = (r * r) % p;\n  }\n  return r;", "  if p == 0 {\n    return 0\n\
    \  }\n  if n == 0 {\n    return 1\n  }\n  if n == 1 {\n    return p\n  }\n  return\
    \ (n * modp(n - 1, p)) % p", "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n\
    \    return 0\n  }\n  let r = 1\n  while n > 0 {\n    r = (r * 2) % p\n    n -=\
    \ 1\n  }\n  return r", "  if p == 0 {\n    return 1\n  }\n  if p == 1 {\n    return\
    \ 0\n  }\n  if p == 2 {\n    return 1\n  }\n  if p == 3 {\n    return 2\n  }\n\
    \  if p == 4 {\n    return 3\n  }\n  if p == 5 {\n    return 4\n  }\n  if p ==\
    \ 6 {\n    return 5\n  }\n  if p == 7 {\n    return 6\n  }\n  if p == 8 {\n  \
    \  return 7\n  }\n  if p == 9 {\n    return 8\n  }\n  if p == 10 {\n    return\
    \ 9\n  }\n  if p == 11 {\n    return 10\n  }\n  if p == 12 {\n    return 11\n\
    \  }\n  if p == 13 {\n    return 12\n  }\n  if p == 14 {\n    return 13\n  }\n\
    \  if p == 15 {\n    return 14\n  }\n  if p == 16 {\n    return 15\n  }\n  if\
    \ p == 17 {\n    return 16\n  }\n  if p == 18 {\n    return 17\n  }\n  if p ==\
    \ 19 {\n    return 18\n  }\n  if p == 20 {\n    return 19\n  }\n  if p == 21 {\n\
    \    return 20\n  }\n  if p == 22 {\n    return 21\n  }\n  if p == 23 {\n    return\
    \ 22\n  }\n  if p == 24 {\n    return 23\n  }\n  if p == 25 {\n    return 24\n\
    \  }\n  if p == 26 {\n    return 25\n  }\n  if p == 27 {\n    return 26\n  }\n\
    \  if p == 28 {\n    return 27\n  }\n  if p == 29 {\n    return 28\n  }\n  if\
    \ p == 30 {\n    return 29\n  }\n  if p == 31 {\n    return 30\n  }\n  if p ==\
    \ 32 {\n    return 31\n  }\n  if p == 33 {\n    return 32\n  }\n  if p == 34 {\n\
    \    return 33\n  }\n  if p == 35 {\n    return 34\n  }\n  if p == 36 {\n    ",
  "  let r = 1;\n  for i in 0..n {\n    r = (r * 2) % p;\n  }\n  r;", "  if p == 0\
    \ {\n    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n  return (n % p) + (n\
    \ / p) * modp(n / p, p)", "  let r = 1;\n  for (; n > 0; n >>= 1) {\n    r = (r\
    \ * r) % p;\n  }\n  return r;", "  if p == 0 {\n    return 1\n  }\n  if n == 0\
    \ {\n    return 0\n  }\n  return (n % p) * modp(n / p, p) % p", "  let r = 1;\n\
    \  while n > 0 {\n    r = (r * 2) % p;\n    n -= 1;\n  }\n  return r;", "  if\
    \ p == 0 {\n    return 1\n  }\n  let r = 1\n  while n > 0 {\n    if n & 1 {\n\
    \      r = (r * p) % p\n    }\n    n >>= 1\n    p = (p * p) % p\n  }\n  return\
    \ r", "  if n == 0 {\n    return 1\n  }\n  if p == 0 {\n    return 0\n  }\n  return\
    \ 1 + (n % p)", "  if p == 0 {\n    return 1\n  }\n  if n == 0 {\n    return 0\n\
    \  }\n  return (n % p) * modp(n / p, p) % p", "  if p == 0 {\n    return 1\n \
    \ }\n  if p == 1 {\n    return 0\n  }\n  if n == 0 {\n    return 0\n  }\n  if\
    \ n == 1 {\n    return p\n  }\n  return modp(n - 1, p) * (p - 1) % p", "  if p\
    \ == 0 {\n    return 1\n  }\n  if n == 0 {\n    return 0\n  }\n  return (n % p)\
    \ + (n % p) * (p - 2)"]
stop_tokens:
- "\n}"

{
  "name": "HumanEval_161_solve",
  "language": "rs",
  "prompt": "/// You are given a string s.\n/// if s[i] is a letter, reverse its case from lower to upper or vise versa, \n/// otherwise keep it as it is.\n/// If the string contains no letters, reverse the string.\n/// The function should return the resulted string.\n/// Examples\n/// >>> solve(String::from(\"1234\"))\n/// String::from(\"4321\")\n/// >>> solve(String::from(\"ab\"))\n/// String::from(\"AB\")\n/// >>> solve(String::from(\"#a@C\"))\n/// String::from(\"#A@c\")\nfn solve(s: String) -> String {\n",
  "tests": "}\n\nfn main() {\n    let candidate = solve;\n    assert_eq!(candidate(String::from(\"AsDf\")), String::from(\"aSdF\"));\n    assert_eq!(candidate(String::from(\"1234\")), String::from(\"4321\"));\n    assert_eq!(candidate(String::from(\"ab\")), String::from(\"AB\"));\n    assert_eq!(candidate(String::from(\"#a@C\")), String::from(\"#A@c\"));\n    assert_eq!(candidate(String::from(\"#AsdfW^45\")), String::from(\"#aSDFw^45\"));\n    assert_eq!(candidate(String::from(\"#6@2\")), String::from(\"2@6#\"));\n    assert_eq!(candidate(String::from(\"#$a^D\")), String::from(\"#$A^d\"));\n    assert_eq!(candidate(String::from(\"#ccc\")), String::from(\"#CCC\"));\n}\n",
  "completions": [
    "  let mut result = s.to_lower();\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      result[i] = s[i].to_lower();\n    } else if s[i].is_lower() {\n      result[i] = s[i].to_upper();\n    }\n  }\n  return result;",
    "  let mut r = s.to_lower();\n  let mut i = 0;\n  while (i < s.length()) {\n    if (s[i].is_upper()) {\n      r = r.insert(i, s[i].to_lower());\n    } else if (s[i].is_lower()) {\n      r = r.insert(i, s[i].to_upper());\n    }\n    i += 1;\n  }\n  return r;",
    "  let mut result = s;\n  for i in s.iter() {\n    if is_letter(i) {\n      let [_, lower, upper] = i;\n      let [lower_, upper_] = lower.to_upper() if lower < 'a' else lower.to_lower();\n      let [lower_, upper_] = upper.to_upper() if upper < 'a' else upper.to_lower();\n      result = result.replace(i, upper_ + upper_);\n    }\n  }\n  return result;",
    "  let mut r = s.to_lower();\n  let mut i = 0;\n  while (i < r.len()) {\n    if (r[i].is_upper()) {\n      r = r.substr(0, i) + r.substr(i).to_upper() + r.substr(i + 1);\n    } else if (r[i].is_lower()) {\n      r = r.substr(0, i) + r.substr(i).to_upper() + r.substr(i + 1);\n    }\n    i += 1;\n  }\n  return r;",
    "  let mut s2 = s.to_lower();\n  let mut s3 = s.to_upper();\n  let mut s4 = s.to_upper();\n  let mut s5 = s.to_lower();\n  let mut s6 = s.to_lower();\n  let mut s7 = s.to_lower();\n  let mut s8 = s.to_lower();\n  let mut s9 = s.to_lower();\n  let mut s10 = s.to_lower();\n  let mut s11 = s.to_lower();\n  let mut s12 = s.to_lower();\n  let mut s13 = s.to_lower();\n  let mut s14 = s.to_lower();\n  let mut s15 = s.to_lower();\n  let mut s16 = s.to_lower();\n  let mut s17 = s.to_lower();\n  let mut s18 = s.to_lower();\n  let mut s19 = s.to_lower();\n  let mut s20 = s.to_lower();\n  let mut s21 = s.to_lower();\n  let mut s22 = s.to_lower();\n  let mut s23 = s.to_lower();\n  let mut s24 = s.to_lower();\n  let mut s25 = s.to_lower();\n  let mut s26 = s.to_lower();\n  let mut s27 = s.to_lower();\n  let mut s28 = s.to_lower();\n  let mut s29 = s.to_lower();\n  let mut s30 = s.to_lower();\n  let mut s31 = s.to_lower();\n  let mut s32 = s.to_lower();\n  let mut s33 = s.to_lower();\n  let mut s34 = s.to_lower();\n  let mut s35 = s.to_lower();\n  let mut s36 = s.to_lower();\n  let mut s37 = s.to_lower();\n  let mut s38 = s.to_lower();\n  let mut s39 = s.to_lower();\n  let mut s40 = s.to_lower();\n  let mut s41",
    "  let mut result = s;\n  for i in s.iter() {\n    if is_letter(i) {\n      let l = i.to_lower();\n      let u = i.to_upper();\n      if l == u {\n        result = result.replace(i, l);\n      } else {\n        result = result.replace(i, u);\n      }\n    }\n  }\n  return result;",
    "  let mut s_copy = s\n  let mut s_lower = s\n  let mut s_upper = s\n  let mut s_reversed = s\n  let mut s_reversed_lower = s\n  let mut s_reversed_upper = s\n  let mut s_reversed_reversed = s\n  let mut s_reversed_reversed_lower = s\n  let mut s_reversed_reversed_upper = s\n  let mut s_reversed_reversed_reversed = s\n  let mut s_reversed_reversed_reversed_lower = s\n  let mut s_reversed_reversed_reversed_upper = s\n  let mut s_reversed_reversed_reversed_reversed = s\n  let mut s_reversed_reversed_reversed_reversed_lower = s\n  let mut s_reversed_reversed_reversed_reversed_upper = s\n  let mut s_reversed_reversed_reversed_reversed_reversed = s\n  let mut s_reversed_reversed_reversed_reversed_reversed_lower = s\n  let mut s_reversed_reversed_reversed_reversed_reversed_upper = s\n  let mut s_reversed_reversed_reversed_reversed_reversed_reversed = s\n  let mut s_reversed_reversed_reversed_reversed_reversed_reversed_lower = s\n  let mut s_reversed_reversed_reversed_reversed_reversed_reversed_upper = s\n  let mut s_reversed_reversed_reversed_reversed_reversed_reversed_reversed = s\n  let mut s_reversed_reversed_reversed_reversed_reversed_reversed_reversed_lower = s\n  let mut s_reversed_revers",
    "  let mut result = s.to_lower()\n  for i in s.chars() {\n    if is_letter(i) {\n      let l = i.to_lower()\n      let u = i.to_upper()\n      if l == u {\n        result = result.replace(i, l)\n      } else {\n        result = result.replace(i, u)\n      }\n    }\n  }\n  return result",
    "  let mut result = s.to_lower();\n  for i in s.chars() {\n    if is_letter(i) {\n      let l = i.to_lower();\n      let u = i.to_upper();\n      if l == u {\n        result = result.replace(i, l);\n      } else {\n        result = result.replace(i, u);\n      }\n    }\n  }\n  return result;",
    "  let mut result = s;\n  for i in s.iter() {\n    if is_letter(i) {\n      if is_lower(i) {\n        result = result.replace(i, upper(i));\n      } else {\n        result = result.replace(i, lower(i));\n      }\n    }\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      let c = s[i];\n      let l = s.len();\n      let r = l - i - 1;\n      let lc = c.to_upper();\n      let rc = c.to_lower();\n      if lc == rc {\n        result = result.substr(0, i) + lc + result.substr(i + 1, r);\n      } else {\n        result = result.substr(0, i) + rc + result.substr(i + 1, r);\n      }\n    }\n  }\n  return result;",
    "  let mut r = s.to_lower();\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      r = r.replace(s[i], s[i].to_lower());\n    } else if s[i].is_lower() {\n      r = r.replace(s[i], s[i].to_upper());\n    }\n  }\n  return r;",
    "  let mut res = s.to_lower();\n  let mut i = 0;\n  while (i < s.len()) {\n    if (s[i].is_upper()) {\n      res = res.replace(i, 1, s[i].to_lower());\n    } else if (s[i].is_lower()) {\n      res = res.replace(i, 1, s[i].to_upper());\n    }\n    i += 1;\n  }\n  return res;",
    "  let mut result = s.to_lower();\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      result[i] = s[i].to_lower();\n    } else if s[i].is_lower() {\n      result[i] = s[i].to_upper();\n    }\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      result[i] = s[i].to_lower();\n    } else if s[i].is_lower() {\n      result[i] = s[i].to_upper();\n    }\n  }\n  return result;",
    "  let mut res = s.to_lower();\n  let mut i = 0;\n  while (i < s.len()) {\n    if (s[i].is_upper()) {\n      res = res.replace(i, 1, s[i].to_lower());\n    } else if (s[i].is_lower()) {\n      res = res.replace(i, 1, s[i].to_upper());\n    }\n    i += 1;\n  }\n  return res;",
    "  let mut result = s.to_lower();\n  let mut i = 0;\n  while (i < s.len()) {\n    if (s[i].is_upper()) {\n      result = result.replace(i, 1, s[i].to_lower());\n    } else if (s[i].is_lower()) {\n      result = result.replace(i, 1, s[i].to_upper());\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut result = s;\n  for i in s.iter() {\n    if is_letter(i) {\n      let l = i.to_lower();\n      let u = i.to_upper();\n      if l == u {\n        result = result.replace(i, l);\n      } else {\n        result = result.replace(i, u);\n      }\n    }\n  }\n  return result;",
    "  let mut res = s.to_lower();\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      let l = s[i].to_lower();\n      let u = s[i].to_upper();\n      if l == u {\n        res = res.replace(i, 1, l);\n      } else {\n        res = res.replace(i, 1, u);\n      }\n    }\n  }\n  return res;",
    "  let mut res = s.to_lower();\n  let mut i = 0;\n  while i < s.len() {\n    if s[i].is_upper() {\n      res = res.replace(i, 1, s[i].to_lower());\n    } else if s[i].is_lower() {\n      res = res.replace(i, 1, s[i].to_upper());\n    }\n    i += 1;\n  }\n  return res;",
    "  let mut result = s;\n  for i in s.chars() {\n    if is_letter(i) {\n      let l = i.to_lower();\n      let u = i.to_upper();\n      if l == u {\n        result = result.replace(i, l);\n      } else {\n        result = result.replace(i, u);\n      }\n    }\n  }\n  return result;",
    "  let mut result = s;\n  for i in s.chars() {\n    if is_letter(i) {\n      let l = i.to_lower();\n      let u = i.to_upper();\n      if l == u {\n        result = result.replace(i, l);\n      } else {\n        result = result.replace(i, u);\n      }\n    }\n  }\n  return result;",
    "  let mut r = s.to_lower();\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      r = r.replace(i, 1, s[i].to_lower());\n    } else {\n      r = r.replace(i, 1, s[i].to_upper());\n    }\n  }\n  return r;",
    "  let mut res = s;\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      res = res.replace(i, 1, s[i].to_lower());\n    } else if s[i].is_lower() {\n      res = res.replace(i, 1, s[i].to_upper());\n    }\n  }\n  return res;",
    "  let mut r = s.to_lower();\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      r = r.replace(i, i.to_upper());\n    }\n  }\n  return r;",
    "  let mut result = s.to_lower();\n  let mut i = 0;\n  while (i < s.length()) {\n    if (s[i].is_upper()) {\n      result = result.replace(s[i], s[i].to_lower());\n    } else if (s[i].is_lower()) {\n      result = result.replace(s[i], s[i].to_upper());\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut r = s;\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      if s[i].is_upper() {\n        r = r.replace(i, i, s[i].to_lower());\n      } else {\n        r = r.replace(i, i, s[i].to_upper());\n      }\n    }\n  }\n  return r;",
    "  let mut r = s.to_lower();\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      let l = s[i].to_lower();\n      r = r.replace(l, l.to_upper());\n    }\n  }\n  return r;",
    "  let mut res = s;\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      if s[i].is_upper() {\n        res = res.replace(i, 1, s[i].to_lower());\n      } else {\n        res = res.replace(i, 1, s[i].to_upper());\n      }\n    }\n  }\n  return res;",
    "  let mut result = s.to_lower();\n  let mut i = 0;\n  while i < s.len() {\n    if s[i].is_upper() {\n      result = result.replace(s[i], s[i].to_lower());\n    } else if s[i].is_lower() {\n      result = result.replace(s[i], s[i].to_upper());\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut result = s;\n  let mut i = 0;\n  while (i < s.len()) {\n    if (s[i].is_upper()) {\n      result = result.replace(i, 1, s[i].to_lower());\n    } else if (s[i].is_lower()) {\n      result = result.replace(i, 1, s[i].to_upper());\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut r = s.bounds(1, s.len()).map(|(i, l) => {\n    if s[i].is_upper() {\n      return s[i].to_lower()\n    } else {\n      return s[i].to_upper()\n    }\n  }).collect(|_| s)\n  return r",
    "  let mut result = s;\n  for i in s.chars() {\n    if is_letter(i) {\n      if is_lower(i) {\n        result = result.replace(i, uppercase(i));\n      } else {\n        result = result.replace(i, lowercase(i));\n      }\n    }\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  for i in range(0, len(s)) {\n    if is_letter(s[i]) {\n      if s[i].is_upper() {\n        result[i] = s[i].to_lower();\n      } else {\n        result[i] = s[i].to_upper();\n      }\n    }\n  }\n  return result.to_string();",
    "  let mut result = s.to_lower();\n  let mut i = 0;\n  while (i < s.len()) {\n    if (s[i].is_upper()) {\n      result = result.replace(i, 1, s[i].to_lower());\n    } else if (s[i].is_lower()) {\n      result = result.replace(i, 1, s[i].to_upper());\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  let mut i = 0;\n  while (i < s.length()) {\n    if (s[i].is_upper()) {\n      result = result.replace(s[i], s[i].to_lower());\n    } else if (s[i].is_lower()) {\n      result = result.replace(s[i], s[i].to_upper());\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  for i in range(0, len(s)) {\n    if is_letter(s[i]) {\n      let c = s[i];\n      let upper = is_upper(c);\n      let lower = is_lower(c);\n      if upper {\n        result = result.replace(c, upper);\n      } else if lower {\n        result = result.replace(c, lower);\n      }\n    }\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  let mut i = 0;\n  while i < len(s) {\n    if is_letter(s[i]) {\n      let ch = s[i];\n      let upper = is_upper(ch);\n      let lower = is_lower(ch);\n      if upper {\n        result = result.replace(ch, ch.to_upper());\n      } else if lower {\n        result = result.replace(ch, ch.to_lower());\n      }\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut res = s.to_lower();\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      let l = s[i].to_lower();\n      let u = s[i].to_upper();\n      if l == u {\n        res = res.replace(i, 1, l);\n      } else {\n        res = res.replace(i, 1, u);\n      }\n    }\n  }\n  return res;",
    "  let mut result = s.to_lower();\n  let mut i = 0;\n  while i < len(s) {\n    if is_letter(s[i]) {\n      let mut j = i + 1;\n      while j < len(s) && is_letter(s[j]) {\n        result = result.replace(j, 1, s[j].to_upper());\n        j += 1;\n      }\n      i = j;\n    } else {\n      i += 1;\n    }\n  }\n  return result;",
    "  let mut res = s.to_lower();\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      res[i] = s[i].to_lower();\n    } else if s[i].is_lower() {\n      res[i] = s[i].to_upper();\n    }\n  }\n  return res;",
    "  let mut result = s;\n  for i in s.iter() {\n    if is_letter(i) {\n      if is_lower(i) {\n        result = result.replace(i, upper(i));\n      } else {\n        result = result.replace(i, lower(i));\n      }\n    }\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  for i in s.chars() {\n    if is_letter(i) {\n      let [lower, upper] = i.to_lower_upper();\n      result = result.replace(lower, upper);\n    }\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  for i in s.chars() {\n    if is_letter(i) {\n      let l = i.to_lower();\n      let u = i.to_upper();\n      if l == u {\n        result = result.replace(i, l);\n      } else {\n        result = result.replace(i, u);\n      }\n    }\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  for i in s.chars() {\n    if is_letter(i) {\n      let c = i.to_upper();\n      result = result.replace(c, c.to_lower());\n    }\n  }\n  return result.to_upper();",
    "  let mut result = s.to_lower();\n  let mut i = 0;\n  while i < len(s) {\n    if is_letter(s[i]) {\n      let c = s[i];\n      let l = lowercase(c);\n      let u = uppercase(c);\n      result = result.replace(c, l);\n      result = result.replace(c, u);\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut s2 = s.to_lower();\n  let mut s3 = s.to_upper();\n  let mut s4 = s.to_upper();\n  let mut s5 = s.to_lower();\n  let mut s6 = s.to_lower();\n  let mut s7 = s.to_upper();\n  let mut s8 = s.to_lower();\n  let mut s9 = s.to_upper();\n  let mut s10 = s.to_lower();\n  let mut s11 = s.to_upper();\n  let mut s12 = s.to_lower();\n  let mut s13 = s.to_upper();\n  let mut s14 = s.to_lower();\n  let mut s15 = s.to_upper();\n  let mut s16 = s.to_lower();\n  let mut s17 = s.to_upper();\n  let mut s18 = s.to_lower();\n  let mut s19 = s.to_upper();\n  let mut s20 = s.to_lower();\n  let mut s21 = s.to_upper();\n  let mut s22 = s.to_lower();\n  let mut s23 = s.to_upper();\n  let mut s24 = s.to_lower();\n  let mut s25 = s.to_upper();\n  let mut s26 = s.to_lower();\n  let mut s27 = s.to_upper();\n  let mut s28 = s.to_lower();\n  let mut s29 = s.to_upper();\n  let mut s30 = s.to_lower();\n  let mut s31 = s.to_upper();\n  let mut s32 = s.to_lower();\n  let mut s33 = s.to_upper();\n  let mut s34 = s.to_lower();\n  let mut s35 = s.to_upper();\n  let mut s36 = s.to_lower();\n  let mut s37 = s.to_upper();\n  let mut s38 = s.to_lower();\n  let mut s39 = s.to_upper();\n  let mut s40 = s.to_lower();\n  let mut s41",
    "  let mut r = s;\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      r = r.replace(i, 1, s[i].to_lower());\n    } else if s[i].is_lower() {\n      r = r.replace(i, 1, s[i].to_upper());\n    }\n  }\n  return r;",
    "  let mut r = s.to_lower();\n  let mut c = s.to_upper();\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      r = r.replace(i, 1, c[i]);\n    } else {\n      r = r.replace(i, 1, s[i]);\n    }\n  }\n  return r;",
    "  let mut result = s;\n  let mut i = 0;\n  while (i < s.length()) {\n    if (s[i].is_upper()) {\n      result = result.replace(s[i], s[i].to_lower());\n    } else if (s[i].is_lower()) {\n      result = result.replace(s[i], s[i].to_upper());\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  let mut i = 0;\n  while (i < s.length()) {\n    let c = s[i];\n    if (c.is_upper()) {\n      result = result.replace(c, c.to_lower());\n    } else if (c.is_lower()) {\n      result = result.replace(c, c.to_upper());\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut result = s.to_lower()\n  let mut i = 0\n  while i < len(result) {\n    if is_letter(result[i]) {\n      let mut j = i + 1\n      while j < len(result) and is_letter(result[j]) {\n        result[j] = to_upper(result[j])\n        j += 1\n      }\n      i = j\n    } else {\n      i += 1\n    }\n  }\n  return result",
    "  let mut res = s.to_lower();\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      if s[i].is_upper() {\n        res = res.replace(i, 1, s[i].to_lower());\n      } else {\n        res = res.replace(i, 1, s[i].to_upper());\n      }\n    }\n  }\n  return res;",
    "  let mut res = s.to_lower();\n  let mut i = 0;\n  while(i < s.len()) {\n    if(s[i].is_upper()) {\n      res = res.replace(i, 1, s[i].to_lower());\n    } else if(s[i].is_lower()) {\n      res = res.replace(i, 1, s[i].to_upper());\n    }\n    i += 1;\n  }\n  return res;",
    "  let mut result = s;\n  for i in s.chars() {\n    if is_letter(i) {\n      let lower = to_lower(i);\n      let upper = to_upper(i);\n      if lower < upper {\n        result = result.replace(lower, upper);\n      } else {\n        result = result.replace(upper, lower);\n      }\n    }\n  }\n  return result;",
    "  let mut result = s\n  for i in s.chars() {\n    if is_letter(i) {\n      let [lower, upper] = i.to_lower_upper();\n      result = result.replace(lower, upper)\n    }\n  }\n  return result",
    "  let mut result = s.copy();\n  let mut i = 0;\n  let mut j = 0;\n  while (i < s.len) {\n    if (s[i].is_upper()) {\n      result[j] = s[i].to_lower();\n      j += 1;\n    } else if (s[i].is_lower()) {\n      result[j] = s[i].to_upper();\n      j += 1;\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut res = s;\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      let c = s[i];\n      if is_lower(c) {\n        res = res.replace(c, uppercase(c));\n      } else {\n        res = res.replace(c, lowercase(c));\n      }\n    }\n  }\n  return res;",
    "  let mut result = s;\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      result = result.replace(i, 1, s[i].to_lower());\n    } else if s[i].is_lower() {\n      result = result.replace(i, 1, s[i].to_upper());\n    }\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      let c = s[i];\n      let lc = c.to_lower();\n      let uc = c.to_upper();\n      if lc == uc {\n        result = result.replace(c, c);\n      } else {\n        result = result.replace(lc, uc);\n      }\n    }\n  }\n  return result;",
    "  let mut res = String::from(s);\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      res = res.replace(i, 1, s[i].to_lower());\n    } else if s[i].is_lower() {\n      res = res.replace(i, 1, s[i].to_upper());\n    }\n  }\n  return res;",
    "  let mut result = s.copy();\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      let c = s[i];\n      let l = s.len();\n      let r = l - i - 1;\n      let lc = to_lower(c);\n      let rc = to_upper(c);\n      let lr = to_lower(r);\n      let rr = to_upper(r);\n      let lc_r = lc + rr;\n      let rc_r = rc + rr;\n      let lr_c = lr + rc;\n      let rr_c = rr + rc;\n      let lc_rc = lc_r + rc;\n      let rc_lc = rc_r + lc;\n      let lr_rc = lr_c + rc;\n      let rr_lc = rr_c + lc;\n      let lc_rr = lc_rc + rr;\n      let rc_lr = rc_lc + lr;\n      let lr_rr = lr_rc + rr;\n      let rr_lr = rr_lc + lr;\n      let lc_lr = lc_rr + lr;\n      let rc_rr = rc_lr + rr;\n      let lr_lc = lr_rr + lc;\n      let rr_lc = rr_lr + lc;\n      let lc_rr_r = lc_lr + rr;\n      let rc_lr_r = rc_rr + lr;\n      let lr_rr_r = lr_lc + rr;\n      let rr_lr_r = rr_lc + lr;\n      let lc_rr_lc = lc_rr_r + lc;\n      let rc_lr_lc = rc_lr_r + lc;\n      let lr_rr_lc = lr_rr_r + lc;\n      let rr_lr_lc = rr_lr_r + lc;\n      let lc_rr_lr = lc_rr_lc + rr",
    "  let mut r = s.to_lower();\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      let c = s[i];\n      if c.is_upper() {\n        r = r.replace(c, c.to_lower());\n      } else {\n        r = r.replace(c, c.to_upper());\n      }\n    }\n  }\n  return r;",
    "  let mut result = s.to_lower()\n  for i in s.chars() {\n    if is_letter(i) {\n      let [_, lower, upper] = i\n      if lower == upper {\n        result = result.replace(i, upper)\n      } else {\n        result = result.replace(i, upper)\n      }\n    }\n  }\n  return result",
    "  let mut r = s.to_lower();\n  let mut i = 0;\n  while (i < r.len()) {\n    if (is_letter(r[i])) {\n      let l = i;\n      let r = i + 1;\n      while (r < r.len() && is_letter(r[0])) {\n        r += 1;\n      }\n      let lc = r - l;\n      let rc = r - l;\n      for (let j = 0; j < lc; j += 1) {\n        let c = r[j];\n        r[j] = r[rc - j];\n        r[rc - j] = c;\n      }\n      i = r;\n    } else {\n      i += 1;\n    }\n  }\n  return r;",
    "  let mut result = s;\n  let mut i = 0;\n  while i < len(s) {\n    if is_letter(s[i]) {\n      let c = s[i];\n      let l = to_lower(c);\n      let u = to_upper(c);\n      if l == u {\n        result = result.replace(i, 1, l);\n      } else {\n        result = result.replace(i, 1, u);\n      }\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  let mut i = 0;\n  while (i < s.length()) {\n    if (s[i].is_upper()) {\n      result = result.replace(i, 1, s[i].to_lower());\n    } else if (s[i].is_lower()) {\n      result = result.replace(i, 1, s[i].to_upper());\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut result = s;\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      let l = s[i].to_lower();\n      let u = s[i].to_upper();\n      if l == u {\n        result = result.replace(i, 1, &l);\n      } else {\n        result = result.replace(i, 1, &u);\n      }\n    }\n  }\n  return result;",
    "  let mut result = s.to_lower()\n  for i in s.chars() {\n    if is_letter(i) {\n      if is_lower(i) {\n        result = result.replace(i, i.to_upper())\n      } else {\n        result = result.replace(i, i.to_lower())\n      }\n    }\n  }\n  return result",
    "  let mut r = s;\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      r = r.replace(i, 1, s[i].to_lower());\n    } else if s[i].is_lower() {\n      r = r.replace(i, 1, s[i].to_upper());\n    }\n  }\n  return r;",
    "  let mut result = s.to_lower();\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      let [lower, upper] = s[i].to_lower(), s[i].to_upper();\n      result = result.replace(lower, upper);\n    }\n  }\n  return result;",
    "  let mut s2 = s.to_lower()\n  let mut s3 = s.to_upper()\n  if s2.find_first_of(\"abcdefghijklmnopqrstuvwxyz\") == -1 {\n    return s3\n  }\n  return s2",
    "  let mut result = s.to_lower();\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      let [lower, upper] = s[i].to_lower(), s[i].to_upper();\n      result = result.replace(lower, upper);\n    }\n  }\n  return result;",
    "  let mut result = s;\n  for i in s.chars() {\n    if is_letter(i) {\n      let [lower, upper] = i.to_lower_upper();\n      result = result.replace(i, upper);\n    }\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  let mut i = 0;\n  while i < len(s) {\n    if is_letter(s[i]) {\n      let c = s[i];\n      let lc = to_lower(c);\n      let uc = to_upper(c);\n      if lc == uc {\n        result = result.replace(lc, c);\n      } else {\n        result = result.replace(lc, uc);\n      }\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut result = s;\n  for i in s.iter() {\n    if is_letter(i) {\n      let l = i.to_lower();\n      let u = i.to_upper();\n      if l == u {\n        result = result.replace(i, l);\n      } else {\n        result = result.replace(i, u);\n      }\n    }\n  }\n  return result;",
    "  let mut r = s;\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      if s[i].is_upper() {\n        r = r.chop(1).ascii_uppercase().pad_left(1) + r.chop(1);\n      } else {\n        r = r.chop(1).ascii_lowercase().pad_left(1) + r.chop(1);\n      }\n    }\n  }\n  return r;",
    "  let mut result = s.to_lower();\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      result[i] = s[i].to_lower();\n    } else if s[i].is_lower() {\n      result[i] = s[i].to_upper();\n    }\n  }\n  return result;",
    "  let mut res = s;\n  for i in s.chars() {\n    if is_letter(i) {\n      if is_lower(i) {\n        res = res.replace(i, to_upper(i));\n      } else {\n        res = res.replace(i, to_lower(i));\n      }\n    }\n  }\n  return res;",
    "  let mut r = s.bounds(1, len(s))\n  let mut i = 0\n  let mut j = 0\n  let mut c = 0\n  let mut c1 = 0\n  let mut c2 = 0\n  let mut c3 = 0\n  let mut c4 = 0\n  let mut c5 = 0\n  let mut c6 = 0\n  let mut c7 = 0\n  let mut c8 = 0\n  let mut c9 = 0\n  let mut c10 = 0\n  let mut c11 = 0\n  let mut c12 = 0\n  let mut c13 = 0\n  let mut c14 = 0\n  let mut c15 = 0\n  let mut c16 = 0\n  let mut c17 = 0\n  let mut c18 = 0\n  let mut c19 = 0\n  let mut c20 = 0\n  let mut c21 = 0\n  let mut c22 = 0\n  let mut c23 = 0\n  let mut c24 = 0\n  let mut c25 = 0\n  let mut c26 = 0\n  let mut c27 = 0\n  let mut c28 = 0\n  let mut c29 = 0\n  let mut c30 = 0\n  let mut c31 = 0\n  let mut c32 = 0\n  let mut c33 = 0\n  let mut c34 = 0\n  let mut c35 = 0\n  let mut c36 = 0\n  let mut c37 = 0\n  let mut c38 = 0\n  let mut c39 = 0\n  let mut c40 = 0\n  let mut c41 = 0\n  let mut c42 = 0\n  let mut c43 = 0\n  let mut c44 = 0\n  let mut c45 = 0\n  let mut c46 = 0\n  let mut c47 = 0\n  let mut c48 = 0\n  let mut c49 = 0\n  let mut c50 = 0\n  let mut c51 = 0\n  let mut c52 = 0\n  let mut c53 = 0\n  let mut c54 = 0\n  let mut c55 = 0\n  let mut c56 = 0\n  let mut c57 = 0\n  let mut c58 = 0\n  let mut c59 = 0\n  let",
    "  let mut res = s.to_lower();\n  let mut i = 0;\n  while i < s.len() {\n    if is_letter(s[i]) {\n      let c = s[i];\n      let lc = to_lower(c);\n      let uc = to_upper(c);\n      if c == lc {\n        res = res.replace(i, 1, uc);\n      } else {\n        res = res.replace(i, 1, uc);\n      }\n    }\n    i += 1;\n  }\n  return res;",
    "  let mut result = s;\n  for i in s.chars() {\n    if is_letter(i) {\n      let [lower, upper] = i.to_lower_upper();\n      result = result.replace(i, upper);\n    }\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  let mut i = 0;\n  while (i < s.len()) {\n    if (s[i].is_upper()) {\n      result = result.replace(i, 1, s[i].to_lower());\n    } else if (s[i].is_lower()) {\n      result = result.replace(i, 1, s[i].to_upper());\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut r = s.to_lower();\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      r = r.replace(i, 1, s[i].to_lower());\n    } else if s[i].is_lower() {\n      r = r.replace(i, 1, s[i].to_upper());\n    }\n  }\n  return r;",
    "  let mut result = s.to_lower();\n  for i in s.iter() {\n    if is_letter(i) {\n      let mut tmp = i.to_upper();\n      result = result.replace(tmp, i);\n    }\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  for i in s.chars() {\n    if is_letter(i) {\n      let l = i.to_lower();\n      let u = i.to_upper();\n      if l == u {\n        result = result.replace(i, l);\n      } else {\n        result = result.replace(i, u);\n      }\n    }\n  }\n  return result;",
    "  let mut r = s.to_lower();\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      r = r.replace(s[i], to_upper(s[i]));\n    }\n  }\n  return r;",
    "  let mut result = s.to_lower();\n  for i in s.chars() {\n    if is_letter(i) {\n      let [lower, upper] = i.to_lower_upper();\n      result = result.replace(lower, upper);\n    }\n  }\n  return result.to_upper();",
    "  let mut result = s;\n  for i in s.chars() {\n    if is_letter(i) {\n      let l = i.to_lower();\n      let u = i.to_upper();\n      if l == u {\n        result = result.replace(i, l);\n      } else {\n        result = result.replace(i, u);\n      }\n    }\n  }\n  return result;",
    "  let mut result = s;\n  for i in s.chars() {\n    if is_letter(i) {\n      let l = i.to_lower();\n      let u = i.to_upper();\n      if l == u {\n        result = result.replace(i, l);\n      } else {\n        result = result.replace(i, u);\n      }\n    }\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      let l = s[i].to_lower();\n      let u = s[i].to_upper();\n      if l == u {\n        result = result.replace(i, 1, l);\n      } else {\n        result = result.replace(i, 1, u);\n      }\n    }\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  for i in s.chars() {\n    if is_letter(i) {\n      let l = i.to_lower();\n      let u = i.to_upper();\n      if l == u {\n        result = result.replace(i, l);\n      } else {\n        result = result.replace(i, u);\n      }\n    }\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  let mut i = 0;\n  while (i < s.length()) {\n    if (s[i].is_upper()) {\n      result = result.replace(s[i], s[i].to_lower());\n    } else if (s[i].is_lower()) {\n      result = result.replace(s[i], s[i].to_upper());\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  for i in s.chars() {\n    if is_letter(i) {\n      let mut r = result.chars();\n      let mut l = i.to_lower();\n      let mut r = result.chars();\n      let mut l = i.to_upper();\n      let mut r = result.chars();\n      let mut l = i.to_lower();\n      let mut r = result.chars();\n      let mut l = i.to_upper();\n      let mut r = result.chars();\n      let mut l = i.to_lower();\n      let mut r = result.chars();\n      let mut l = i.to_upper();\n      let mut r = result.chars();\n      let mut l = i.to_lower();\n      let mut r = result.chars();\n      let mut l = i.to_upper();\n      let mut r = result.chars();\n      let mut l = i.to_lower();\n      let mut r = result.chars();\n      let mut l = i.to_upper();\n      let mut r = result.chars();\n      let mut l = i.to_lower();\n      let mut r = result.chars();\n      let mut l = i.to_upper();\n      let mut r = result.chars();\n      let mut l = i.to_lower();\n      let mut r = result.chars();\n      let mut l = i.to_upper();\n      let mut r = result.chars();\n      let mut l = i.to_lower();\n      let mut r = result.chars();\n      let mut l = i.to_upper();\n      let mut r = result.chars();\n      let mut l = i.to_lower();\n      let mut r = result.chars();\n      let mut l = i.to_upper();\n      let mut r = result.chars();\n      let mut l = i.to_lower();\n      let mut r = result.chars();\n      let mut l = i.to_upper();\n      let mut r = result.chars();\n      let mut l = i.to",
    "  let mut r = s.to_lower();\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      r = r.replace(i, 1, s[i].to_lower());\n    } else if s[i].is_lower() {\n      r = r.replace(i, 1, s[i].to_upper());\n    }\n  }\n  return r;",
    "  let mut result = s.to_lower()\n  for i in s.iter() {\n    if is_letter(i) {\n      let [_, c] = i\n      let [l, u] = c\n      let [_, _] = l\n      let [_, _] = u\n      result = result.replace(i, String::from(c))\n    }\n  }\n  return result",
    "  let mut result = s.copy();\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      result[i] = s[i].to_lower();\n    } else if s[i].is_lower() {\n      result[i] = s[i].to_upper();\n    }\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  for i in s.chars() {\n    if is_letter(i) {\n      let [lower, upper] = i;\n      result = result.replace(lower, upper);\n    }\n  }\n  return result.to_upper();",
    "  let mut result = s.to_lower();\n  for i in s.chars() {\n    if is_letter(i) {\n      let [lower, upper] = i.to_lower_upper();\n      result = result.replace(lower, upper);\n    }\n  }\n  return result;",
    "  let mut result = s;\n  for i in s.chars() {\n    if is_letter(i) {\n      let [lower, upper] = i.to_lower_upper();\n      result = result.replace(i, upper);\n    }\n  }\n  return result;",
    "  let mut result = s\n  for i in s.iter() {\n    if is_letter(i) {\n      let l = i.to_lower()\n      let u = i.to_upper()\n      if l == u {\n        result = result.replace(i, l)\n      } else {\n        result = result.replace(i, u)\n      }\n    }\n  }\n  return result",
    "  let mut result = s;\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      result = result.replace(i, 1, s[i].to_lower());\n    } else if s[i].is_lower() {\n      result = result.replace(i, 1, s[i].to_upper());\n    }\n  }\n  return result;",
    "  let mut r = s.to_lower();\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      r = r.replace(s[i], s[i].to_lower());\n    } else if s[i].is_lower() {\n      r = r.replace(s[i], s[i].to_upper());\n    }\n  }\n  return r;",
    "  let mut r = s.to_lower();\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      r = r.replace(s[i], s[i].to_upper());\n    }\n  }\n  return r;",
    "  let mut r = s.to_lower();\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      r = r.replace(i, 1, s[i].to_lower());\n    } else if s[i].is_lower() {\n      r = r.replace(i, 1, s[i].to_upper());\n    }\n  }\n  return r;",
    "  let mut result = s;\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      if s[i].is_upper() {\n        result = result.replace(i, 1, s[i].to_lower());\n      } else {\n        result = result.replace(i, 1, s[i].to_upper());\n      }\n    }\n  }\n  return result;",
    "  let mut result = String::from(s);\n  let mut i = 0;\n  while (i < result.len) {\n    if (result[i].is_upper()) {\n      result = result.slice(0, i).concat(result.slice(i).to_lower());\n    } else if (result[i].is_lower()) {\n      result = result.slice(0, i).concat(result.slice(i).to_upper());\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut result = s;\n  for i in s.chars() {\n    if is_letter(i) {\n      let [lower, upper] = i.to_lower_upper();\n      result = result.replace(lower, upper);\n    }\n  }\n  return result;",
    "  let mut r = s;\n  for i in s.iter() {\n    if is_letter(i) {\n      let l = i.to_lower();\n      let u = i.to_upper();\n      if l == u {\n        r = r.replace(i, l);\n      } else {\n        r = r.replace(i, u);\n      }\n    }\n  }\n  return r;",
    "  let mut result = s.to_lower();\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      result[i] = s[i].to_lower();\n    } else if s[i].is_lower() {\n      result[i] = s[i].to_upper();\n    }\n  }\n  return result;",
    "  let mut result = s;\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      result[i] = s[i].to_lower();\n    } else if s[i].is_lower() {\n      result[i] = s[i].to_upper();\n    }\n  }\n  return result;",
    "  let mut res = s.to_lower();\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      res = res.replace(i, 1, s[i].to_lower());\n    } else if s[i].is_lower() {\n      res = res.replace(i, 1, s[i].to_upper());\n    }\n  }\n  return res;",
    "  let mut result = s.copy();\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      result[i] = s[i].to_lower();\n    } else if s[i].is_lower() {\n      result[i] = s[i].to_upper();\n    }\n  }\n  return result;",
    "  let mut result = s.copy();\n  let mut i = 0;\n  while (i < s.len()) {\n    if (s[i].is_upper()) {\n      result.set_at(i, s[i].to_lower());\n    } else if (s[i].is_lower()) {\n      result.set_at(i, s[i].to_upper());\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  let mut i = 0;\n  while i < len(s) {\n    if is_letter(s[i]) {\n      let mut j = i + 1;\n      while j < len(s) && is_letter(s[j]) {\n        result = result.replace(j, j, s[j].to_upper());\n        j += 1;\n      }\n      i = j - 1;\n    } else {\n      i += 1;\n    }\n  }\n  return result;",
    "  let mut r = s.to_lower();\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      let l = s[i].to_lower();\n      r = r.replace(s[i], l);\n    }\n  }\n  return r;",
    "  let mut res = s;\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      if s[i].is_upper() {\n        res = res.replace(i, 1, s[i].to_lower());\n      } else {\n        res = res.replace(i, 1, s[i].to_upper());\n      }\n    }\n  }\n  return res;",
    "  let mut s2 = s.to_lower();\n  let mut s3 = s.to_upper();\n  let mut s4 = s.to_upper();\n  let mut s5 = s.to_lower();\n  let mut s6 = s.to_lower();\n  let mut s7 = s.to_upper();\n  let mut s8 = s.to_upper();\n  let mut s9 = s.to_lower();\n  let mut s10 = s.to_lower();\n  let mut s11 = s.to_upper();\n  let mut s12 = s.to_upper();\n  let mut s13 = s.to_lower();\n  let mut s14 = s.to_lower();\n  let mut s15 = s.to_upper();\n  let mut s16 = s.to_upper();\n  let mut s17 = s.to_lower();\n  let mut s18 = s.to_lower();\n  let mut s19 = s.to_upper();\n  let mut s20 = s.to_upper();\n  let mut s21 = s.to_lower();\n  let mut s22 = s.to_lower();\n  let mut s23 = s.to_upper();\n  let mut s24 = s.to_upper();\n  let mut s25 = s.to_lower();\n  let mut s26 = s.to_lower();\n  let mut s27 = s.to_upper();\n  let mut s28 = s.to_upper();\n  let mut s29 = s.to_lower();\n  let mut s30 = s.to_lower();\n  let mut s31 = s.to_upper();\n  let mut s32 = s.to_upper();\n  let mut s33 = s.to_lower();\n  let mut s34 = s.to_lower();\n  let mut s35 = s.to_upper();\n  let mut s36 = s.to_upper();\n  let mut s37 = s.to_lower();\n  let mut s38 = s.to_lower();\n  let mut s39 = s.to_upper();\n  let mut s40 = s.to_upper();\n  let mut s41",
    "  let mut r = s.to_lower();\n  let mut i = 0;\n  while i < r.len() {\n    if is_letter(r[i]) {\n      let l = r[i].to_upper();\n      r = r.substr(0, i) + l + r.substr(i + 1);\n      i += 1;\n    } else {\n      i += 1;\n    }\n  }\n  return r;",
    "  let mut r = s.to_lower();\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      r = r.replace(i, i, s[i].to_upper());\n    }\n  }\n  return r;",
    "  let mut result = s.copy();\n  let mut i = 0;\n  while (i < s.len) {\n    if (s[i].is_upper()) {\n      result[i] = s[i].to_lower();\n    } else {\n      result[i] = s[i].to_upper();\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut r = s;\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      let l = s[i].to_lower();\n      let u = s[i].to_upper();\n      if l == u {\n        r = r.replace(i, 1, l);\n      } else {\n        r = r.replace(i, 1, u);\n      }\n    }\n  }\n  return r;",
    "  let mut r = s;\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      let l = s[i].to_lower();\n      let u = s[i].to_upper();\n      if l == u {\n        r = r.replace(i, 1, l);\n      } else {\n        r = r.replace(i, 1, u);\n      }\n    }\n  }\n  return r;",
    "  let mut result = s;\n  for i in s.chars() {\n    if is_letter(i) {\n      let [lower, upper] = i.to_lower_upper();\n      result = result.replace(lower, upper);\n    }\n  }\n  return result;",
    "  let mut res = s.to_lower();\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      res[i] = s[i].to_lower();\n    } else if s[i].is_lower() {\n      res[i] = s[i].to_upper();\n    }\n  }\n  return res;",
    "  let mut result = s.to_lower();\n  let mut i = 0;\n  while (i < s.length()) {\n    if (s[i].is_upper()) {\n      result = result.replace(s[i], s[i].to_lower());\n    } else if (s[i].is_lower()) {\n      result = result.replace(s[i], s[i].to_upper());\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut r = s;\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      r = r.replace(i, 1, s[i].to_lower());\n    } else if s[i].is_lower() {\n      r = r.replace(i, 1, s[i].to_upper());\n    }\n  }\n  return r;",
    "  let mut result = s.copy();\n  let mut i = 0;\n  while (i < s.len()) {\n    if (s[i].is_upper()) {\n      result[i] = s[i].to_lower();\n    } else if (s[i].is_lower()) {\n      result[i] = s[i].to_upper();\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut r = s.to_lower();\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      r = r.replace(s[i], s[i].to_upper());\n    }\n  }\n  return r;",
    "  let mut result = s.to_lower();\n  let mut i = 0;\n  while i < len(result) {\n    if is_letter(result[i]) {\n      let mut j = i + 1;\n      while j < len(result) && is_letter(result[j]) {\n        result[j] = to_upper(result[j]);\n        j += 1;\n      }\n      i = j;\n    } else {\n      i += 1;\n    }\n  }\n  return result;",
    "  let mut result = s;\n  for i in s.iter() {\n    if is_letter(i) {\n      let [_, c] = i;\n      let [l, u] = [c.to_lower(), c.to_upper()];\n      result = result.replace(i, l);\n    }\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      let c = s[i];\n      let lc = c.to_lower();\n      let uc = c.to_upper();\n      if lc == uc {\n        result = result.replace(lc, c);\n      } else {\n        result = result.replace(lc, uc);\n      }\n    }\n  }\n  return result;",
    "  let mut r = s;\n  for i in s.iter() {\n    if is_letter(i) {\n      if is_lower(i) {\n        r = r.replace(i, to_upper(i));\n      } else {\n        r = r.replace(i, to_lower(i));\n      }\n    }\n  }\n  return r;",
    "  let mut result = s.to_lower();\n  for i in s.chars() {\n    if is_letter(i) {\n      let l = i.to_lower();\n      let u = i.to_upper();\n      if l == u {\n        result = result.replace(i, l);\n      } else {\n        result = result.replace(i, u);\n      }\n    }\n  }\n  return result;",
    "  let mut r = s.to_lower();\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      let c = s[i];\n      let l = r.len();\n      if c == 'a' {\n        r = r.replace(i, l, 'A');\n      } else {\n        r = r.replace(i, l, 'a');\n      }\n    }\n  }\n  return r;",
    "  let mut result = s.to_lower();\n  for i in s.chars() {\n    if is_letter(i) {\n      let [_, lower, upper] = i;\n      result = result.replace(lower, upper);\n    }\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      result[i] = s[i].to_lower();\n    } else if s[i].is_lower() {\n      result[i] = s[i].to_upper();\n    }\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  let mut i = 0;\n  while (i < s.length()) {\n    if (s[i].is_upper()) {\n      result = result.replace(s[i], s[i].to_lower());\n    } else if (s[i].is_lower()) {\n      result = result.replace(s[i], s[i].to_upper());\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut result = s.to_lower()\n  let mut i = 0\n  while i < len(result) {\n    if is_letter(result[i]) {\n      let j = i + 1\n      while j < len(result) && is_letter(result[j]) {\n        result[j] = to_upper(result[j])\n        j += 1\n      }\n      i = j\n    } else {\n      i += 1\n    }\n  }\n  return result",
    "  let mut res = s.to_lower();\n  let mut i = 0;\n  while i < s.len() {\n    if s[i].is_upper() {\n      res = res.replace(i, 1, s[i].to_lower());\n    } else if s[i].is_lower() {\n      res = res.replace(i, 1, s[i].to_upper());\n    }\n    i += 1;\n  }\n  return res;",
    "  let mut result = s.to_lower();\n  let mut i = 0;\n  while (i < s.length()) {\n    if (s[i].is_upper()) {\n      result = result.replace(s[i], s[i].to_lower());\n    } else if (s[i].is_lower()) {\n      result = result.replace(s[i], s[i].to_upper());\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  let mut i = 0;\n  while (i < s.length()) {\n    if (s[i].is_upper()) {\n      result = result.replace(s[i], s[i].to_lower());\n    } else if (s[i].is_lower()) {\n      result = result.replace(s[i], s[i].to_upper());\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  for i in s.chars() {\n    if is_letter(i) {\n      let [lower, upper] = i;\n      result = result.replace(lower, upper);\n    }\n  }\n  return result.to_upper();",
    "  let mut result = s.to_lower();\n  let mut i = 0;\n  while (i < s.length()) {\n    let c = s[i];\n    if (c.is_upper()) {\n      result = result.replace(c, c.to_lower());\n    } else if (c.is_lower()) {\n      result = result.replace(c, c.to_upper());\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut r = s.bounds(1, s.len()).map(|(i, l) => {\n    if s[i].is_upper() {\n      return s[i].to_lower()\n    } else {\n      return s[i].to_upper()\n    }\n  }).collect(|_| s)\n  return r",
    "  let mut r = s.to_lower();\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      r = r.replace(s[i], s[i].to_lower());\n    } else if s[i].is_lower() {\n      r = r.replace(s[i], s[i].to_upper());\n    }\n  }\n  return r;",
    "  let mut res = s.to_lower();\n  let mut i = 0;\n  while i < s.len() {\n    if s[i].is_upper() {\n      res = res.replace(i, 1, s[i].to_lower());\n    } else if s[i].is_lower() {\n      res = res.replace(i, 1, s[i].to_upper());\n    }\n    i += 1;\n  }\n  return res;",
    "  let mut r = s.to_lower();\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      let c = s[i];\n      let l = r.len();\n      let r = r.slice(0, i) + c.to_upper() + r.slice(i+1, l);\n    }\n  }\n  return r;",
    "  let mut result = s.to_lower();\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      result[i] = s[i].to_lower();\n    } else if s[i].is_lower() {\n      result[i] = s[i].to_upper();\n    }\n  }\n  return result;",
    "  let mut result = s;\n  for i in s.chars() {\n    if is_letter(i) {\n      let [lower, upper] = i.to_lower_upper();\n      result = result.replace(lower, upper);\n    }\n  }\n  return result;",
    "  let mut res = s.to_lower();\n  let mut i = 0;\n  for i in s.iter() {\n    if is_letter(s[i]) {\n      let mut j = i;\n      while(j < s.len() && is_letter(s[j])) {\n        let mut k = j;\n        while(k < s.len() && is_letter(s[k])) {\n          if s[k] > s[j] {\n            s[k] -= 32;\n          } else {\n            s[k] += 32;\n          }\n          k += 1;\n        }\n        j += 1;\n      }\n    }\n  }\n  res = s.to_upper();\n  return res;",
    "  let mut r = s.to_lower();\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      r = r.replace(i, i.to_upper());\n    }\n  }\n  return r;",
    "  let mut result = s;\n  for i in s.chars() {\n    if is_letter(i) {\n      let [lower, upper] = i.to_lower_upper();\n      result = result.replace(lower, upper);\n    }\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  let mut i = 0;\n  while i < len(s) {\n    if is_letter(s[i]) {\n      let mut j = i;\n      while j < len(s) and is_letter(s[j]) {\n        if s[j] == s[i] {\n          result = result.replace(j, 1, s[j].to_upper());\n        } else {\n          result = result.replace(j, 1, s[j].to_lower());\n        }\n        j += 1;\n      }\n      i += 1;\n    } else {\n      i += 1;\n    }\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  for i in s.chars() {\n    if is_letter(i) {\n      let l = i.to_lower();\n      let u = i.to_upper();\n      if l == u {\n        result = result.replace(i, l);\n      } else {\n        result = result.replace(i, u);\n      }\n    }\n  }\n  return result;",
    "  let mut res = s.to_lower();\n  let mut i = 0;\n  while (i < s.len()) {\n    if (s[i].is_upper()) {\n      res = res.replace(i, 1, s[i].to_lower());\n    } else if (s[i].is_lower()) {\n      res = res.replace(i, 1, s[i].to_upper());\n    }\n    i += 1;\n  }\n  return res;",
    "  let mut res = s.to_lower();\n  let mut i = 0;\n  while (i < s.len()) {\n    if (s[i].is_upper()) {\n      res = res.replace(i, 1, s[i].to_lower());\n    } else if (s[i].is_lower()) {\n      res = res.replace(i, 1, s[i].to_upper());\n    }\n    i += 1;\n  }\n  return res;",
    "  let mut result = s.to_lower();\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      result[i] = s[i].to_lower();\n    } else if s[i].is_lower() {\n      result[i] = s[i].to_upper();\n    }\n  }\n  return result;",
    "  let mut result = s\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      let lower = to_lower(s[i])\n      let upper = to_upper(s[i])\n      if lower == upper {\n        result = result.replace(i, 1, lower)\n      } else {\n        result = result.replace(i, 1, upper)\n      }\n    }\n  }\n  return result",
    "  let mut r = s.to_lower();\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      r = r.replace(s[i], s[i].to_upper());\n    }\n  }\n  return r;",
    "  let mut result = s.to_lower();\n  let mut i = 0;\n  for i in s.iter() {\n    if is_letter(s[i]) {\n      let mut j = i;\n      while (j < s.len() && is_letter(s[j])) {\n        let mut k = j;\n        while (k < s.len() && is_letter(s[k])) {\n          if (s[k] >= 'a' && s[k] <= 'z') {\n            result[k] = s[k] - 'a' + 'A';\n          } else if (s[k] >= 'A' && s[k] <= 'Z') {\n            result[k] = s[k] - 'A' + 'a';\n          }\n          k += 1;\n        }\n        j += 1;\n      }\n    }\n  }\n  return result;",
    "  let mut res = s.to_lower();\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      if s[i] >= 'a' && s[i] <= 'z' {\n        res[i] = s[i] - 'a' + 'A';\n      } else {\n        res[i] = s[i] - 'A' + 'a';\n      }\n    }\n  }\n  return res;",
    "  let mut result = s.to_lower();\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      result[i] = s[i].to_lower();\n    } else if s[i].is_lower() {\n      result[i] = s[i].to_upper();\n    }\n  }\n  return result;",
    "  let mut result = s;\n  for i in s.chars() {\n    if is_letter(i) {\n      let l = i.to_lower();\n      let u = i.to_upper();\n      if l == u {\n        result = result.replace(i, l);\n      } else {\n        result = result.replace(i, u);\n      }\n    }\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  for i in s.chars() {\n    if is_letter(i) {\n      let [lower, upper] = i.to_lower_upper();\n      result = result.replace(lower, upper);\n    }\n  }\n  return result;",
    "  let mut r = s.to_lower();\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      r = r.replace(i, i.to_upper());\n    }\n  }\n  return r;",
    "  let mut result = s.to_lower();\n  for i in s.chars() {\n    if is_letter(i) {\n      let l = i.to_lower();\n      let u = i.to_upper();\n      if l == u {\n        result = result.replace(i, l);\n      } else {\n        result = result.replace(i, u);\n      }\n    }\n  }\n  return result;",
    "  let mut result = s;\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      let c = s[i];\n      let l = c.to_lower();\n      let u = c.to_upper();\n      if l == u {\n        result = result.replace(c, c);\n      } else {\n        result = result.replace(c, u);\n      }\n    }\n  }\n  return result;",
    "  let mut r = s.to_lower();\n  let mut i = 0;\n  while (i < r.len()) {\n    if (r[i].is_upper()) {\n      r = r.substr(0, i) + r.substr(i).to_upper() + r.substr(i + 1);\n    } else if (r[i].is_lower()) {\n      r = r.substr(0, i) + r.substr(i).to_upper() + r.substr(i + 1);\n    }\n    i += 1;\n  }\n  return r;",
    "  let mut result = s.to_lower();\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      result = result.replace(s[i], s[i].to_lower());\n    } else if s[i].is_lower() {\n      result = result.replace(s[i], s[i].to_upper());\n    }\n  }\n  return result;",
    "  let mut r = s.to_lower();\n  let mut i = 0;\n  while i < r.len() {\n    if is_letter(r[i]) {\n      if is_lower(r[i]) {\n        r[i] = to_upper(r[i]);\n      } else {\n        r[i] = to_lower(r[i]);\n      }\n    }\n    i += 1;\n  }\n  return r;",
    "  let mut r = s.to_lower();\n  let mut c = s.to_upper();\n  let mut r2 = s.to_upper();\n  let mut c2 = s.to_lower();\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      r = r.substr(0, i) + s[i].to_lower() + r.substr(i+1);\n    } else if s[i].is_lower() {\n      c = c.substr(0, i) + s[i].to_upper() + c.substr(i+1);\n    }\n    if s[i].is_lower() {\n      r2 = r2.substr(0, i) + s[i].to_upper() + r2.substr(i+1);\n    } else if s[i].is_upper() {\n      c2 = c2.substr(0, i) + s[i].to_lower() + c2.substr(i+1);\n    }\n  }\n  if r == c {\n    return r;\n  } else if r == c2 {\n    return r2;\n  } else {\n    return s;\n  }",
    "  let mut r = s.to_lower();\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      let l = s[i].to_lower();\n      r = r.replace(l, l.to_upper());\n    }\n  }\n  return r;",
    "  let mut result = s.to_lower();\n  let mut i = 0;\n  while (i < s.length()) {\n    if (s[i].is_upper()) {\n      result = result.replace(i, 1, s[i].to_lower());\n    } else if (s[i].is_lower()) {\n      result = result.replace(i, 1, s[i].to_upper());\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut res = s.to_lower();\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      let l = s[i].to_lower();\n      let u = s[i].to_upper();\n      if l == u {\n        res = res.replace(i, 1, l);\n      } else {\n        res = res.replace(i, 1, u);\n      }\n    }\n  }\n  return res;",
    "  let mut result = s.to_lower();\n  let mut i = 0;\n  while (i < s.length()) {\n    let c = s[i];\n    if (c.is_upper()) {\n      result = result.replace(c, c.to_lower());\n    } else if (c.is_lower()) {\n      result = result.replace(c, c.to_upper());\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut result = s;\n  for i in s.chars() {\n    if is_letter(i) {\n      let l = i.to_lower();\n      let u = i.to_upper();\n      if l == u {\n        result = result.replace(i, l);\n      } else {\n        result = result.replace(i, u);\n      }\n    }\n  }\n  return result;",
    "  let mut result = s;\n  for i in s.chars() {\n    if is_letter(i) {\n      let [_, lower, upper] = i;\n      if lower == upper {\n        result = result.replace(i, upper);\n      } else {\n        result = result.replace(i, lower);\n      }\n    }\n  }\n  return result;",
    "  let mut r = s.to_lower();\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      r = r.replace(i, 1, s[i].to_lower());\n    } else if s[i].is_lower() {\n      r = r.replace(i, 1, s[i].to_upper());\n    }\n  }\n  return r;",
    "  let mut result = s.to_lower()\n  for i in s.chars() {\n    if is_letter(i) {\n      let [lower, upper] = i\n      let [l, u] = lower, upper\n      result[i] = u if l == 'a' else l\n    }\n  }\n  return result",
    "  let mut r = s.to_lower();\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      let l = s[i].to_lower();\n      r = r.replace(l, l.to_upper());\n    }\n  }\n  return r.to_upper();",
    "  let mut result = s.to_lower();\n  let mut i = 0;\n  while (i < s.length()) {\n    if (s[i].is_upper()) {\n      result = result.replace(s[i], s[i].to_lower());\n    } else if (s[i].is_lower()) {\n      result = result.replace(s[i], s[i].to_upper());\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      result[i] = s[i].to_lower();\n    } else if s[i].is_lower() {\n      result[i] = s[i].to_upper();\n    }\n  }\n  return result;",
    "  let mut result = String::from(s);\n  let mut i = 0;\n  while (i < len(s)) {\n    if is_letter(s[i]) {\n      let j = i + 1;\n      while (j < len(s) && is_letter(s[j])) {\n        let temp = s[j];\n        s[j] = s[j].to_upper();\n        s[j] = s[j].to_lower();\n        s[j] = temp;\n        j += 1;\n      }\n      result = result.concat(s[i]);\n      i = j;\n    } else {\n      i += 1;\n    }\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  for i in s.chars() {\n    if is_letter(i) {\n      let [lower, upper] = i.to_lower_upper();\n      result = result.replace(lower, upper);\n    }\n  }\n  return result.to_upper();",
    "  let mut result = s.to_lower();\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      result = result.replace(s[i], s[i].to_lower());\n    } else {\n      result = result.replace(s[i], s[i].to_upper());\n    }\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  for i in s.chars() {\n    if is_letter(i) {\n      let [lower, upper] = i.to_lower_upper();\n      result = result.replace(lower, upper);\n    }\n  }\n  return result;",
    "  let mut res = s;\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      if s[i].is_upper() {\n        res = res.replace(i, 1, s[i].to_lower());\n      } else {\n        res = res.replace(i, 1, s[i].to_upper());\n      }\n    }\n  }\n  return res;",
    "  let mut result = s.to_lower();\n  let mut i = 0;\n  while (i < s.length()) {\n    if (s[i].is_upper()) {\n      result = result.replace(i, 1, s[i].to_lower());\n    } else if (s[i].is_lower()) {\n      result = result.replace(i, 1, s[i].to_upper());\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  let mut i = 0;\n  while (i < s.length()) {\n    let c = s[i];\n    if (c.is_upper()) {\n      result = result.replace(c, c.to_lower());\n    } else if (c.is_lower()) {\n      result = result.replace(c, c.to_upper());\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut r = s;\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      r = r.replace(i, 1, s[i].to_lower());\n    } else if s[i].is_lower() {\n      r = r.replace(i, 1, s[i].to_upper());\n    }\n  }\n  return r;",
    "  let mut result = s.to_lower();\n  for i in s.chars() {\n    if is_letter(i) {\n      let [_, lower, upper] = i;\n      result = result.replace(lower, upper);\n    }\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  let mut i = 0;\n  while (i < s.length()) {\n    if (s[i].is_upper()) {\n      result = result.replace(s[i], s[i].to_lower());\n    } else if (s[i].is_lower()) {\n      result = result.replace(s[i], s[i].to_upper());\n    }\n    i += 1;\n  }\n  return result;",
    "  let mut r = s.to_lower();\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      r = r.replace(i, 1, s[i].to_lower());\n    } else if s[i].is_lower() {\n      r = r.replace(i, 1, s[i].to_upper());\n    }\n  }\n  return r;",
    "  let mut result = s;\n  for i in 0..s.len() {\n    if is_letter(s[i]) {\n      let l = s[i].to_lower();\n      let u = s[i].to_upper();\n      if l == u {\n        result = result.replace(i, 1, l);\n      } else {\n        result = result.replace(i, 1, u);\n      }\n    }\n  }\n  return result;",
    "  let mut result = s.to_lower();\n  let mut i = 0;\n  while (i < len(s)) {\n    if (is_letter(s[i])) {\n      let j = i + 1;\n      while (j < len(s) && is_letter(s[j])) {\n        result[j] = s[j].to_upper();\n        j += 1;\n      }\n      i = j;\n    } else {\n      i += 1;\n    }\n  }\n  return result.to_string();",
    "  let mut s2 = s.to_lower();\n  let mut s3 = s.to_upper();\n  let mut s4 = s.to_upper();\n  let mut s5 = s.to_lower();\n  let mut s6 = s.to_lower();\n  let mut s7 = s.to_lower();\n  let mut s8 = s.to_lower();\n  let mut s9 = s.to_lower();\n  let mut s10 = s.to_lower();\n  let mut s11 = s.to_lower();\n  let mut s12 = s.to_lower();\n  let mut s13 = s.to_lower();\n  let mut s14 = s.to_lower();\n  let mut s15 = s.to_lower();\n  let mut s16 = s.to_lower();\n  let mut s17 = s.to_lower();\n  let mut s18 = s.to_lower();\n  let mut s19 = s.to_lower();\n  let mut s20 = s.to_lower();\n  let mut s21 = s.to_lower();\n  let mut s22 = s.to_lower();\n  let mut s23 = s.to_lower();\n  let mut s24 = s.to_lower();\n  let mut s25 = s.to_lower();\n  let mut s26 = s.to_lower();\n  let mut s27 = s.to_lower();\n  let mut s28 = s.to_lower();\n  let mut s29 = s.to_lower();\n  let mut s30 = s.to_lower();\n  let mut s31 = s.to_lower();\n  let mut s32 = s.to_lower();\n  let mut s33 = s.to_lower();\n  let mut s34 = s.to_lower();\n  let mut s35 = s.to_lower();\n  let mut s36 = s.to_lower();\n  let mut s37 = s.to_lower();\n  let mut s38 = s.to_lower();\n  let mut s39 = s.to_lower();\n  let mut s40 = s.to_lower();\n  let mut s41",
    "  let mut res = s.to_lower();\n  let mut i = 0;\n  while (i < s.length()) {\n    if (s[i].is_upper()) {\n      res = res.replace(i, 1, s[i].to_lower());\n    } else if (s[i].is_lower()) {\n      res = res.replace(i, 1, s[i].to_upper());\n    }\n    i += 1;\n  }\n  return res;",
    "  let mut res = s.to_lower();\n  let mut i = 0;\n  for i in s.iter() {\n    if is_letter(s[i]) {\n      let c = s[i];\n      let lc = c.to_lower();\n      let uc = c.to_upper();\n      if lc == uc {\n        res = res.replace(i, 1, lc);\n      } else {\n        res = res.replace(i, 1, lc);\n      }\n    }\n  }\n  return res;",
    "  let mut res = s.to_lower();\n  for i in 0..s.len() {\n    if s[i].is_upper() {\n      res = res.replace(s[i], s[i].to_lower());\n    } else {\n      res = res.replace(s[i], s[i].to_upper());\n    }\n  }\n  return res;"
  ],
  "stop_tokens": [
    "\n}"
  ]
}
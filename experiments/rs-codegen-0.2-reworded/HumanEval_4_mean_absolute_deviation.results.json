{
  "name": "HumanEval_4_mean_absolute_deviation",
  "language": "rs",
  "prompt": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n",
  "tests": "}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmp9hwysrz0.rs:18:18\n   |\n18 |     deviation += abs(number - mean);\n   |                  ^^^ not found in this scope\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp9hwysrz0.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp9hwysrz0.rs:20:20\n   |\n20 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  let mut count = 0.0;\n\n  for number in numbers {\n    mean += number;\n    sum += std::abs(number - mean);\n    count += 1.0;\n  }\n\n  return sum / count;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpg4ckc5hg.rs:15:17\n   |\n15 |     sum += std::abs(number - mean);\n   |                 ^^^ not found in `std`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for number in numbers {\n    sum += abs(number - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpxbd17q6d.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmpxbd17q6d.rs:12:12\n   |\n12 |     sum += abs(number - mean);\n   |            ^^^ not found in this scope\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpxbd17q6d.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum_of_squares = 0.0;\n\n  for number in numbers {\n    mean += number;\n    sum_of_squares += (number * number);\n  }\n\n  let mut deviation = 0.0;\n  let mut temp = 0.0;\n\n  mean /= numbers.len();\n  sum_of_squares /= numbers.len();\n\n  for number in numbers {\n    temp = number - mean;\n    deviation += temp * temp;\n  }\n\n  deviation = sqrt(deviation);\n\n  return (deviation / numbers.len());\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `sqrt` in this scope\n  --> /tmp/tmpdr584m8i.rs:28:15\n   |\n28 |   deviation = sqrt(deviation);\n   |               ^^^^ not found in this scope\n\nwarning: unnecessary parentheses around assigned value\n  --> /tmp/tmpdr584m8i.rs:14:23\n   |\n14 |     sum_of_squares += (number * number);\n   |                       ^               ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n14 -     sum_of_squares += (number * number);\n14 +     sum_of_squares += number * number;\n   | \n\nwarning: unnecessary parentheses around `return` value\n  --> /tmp/tmpdr584m8i.rs:30:10\n   |\n30 |   return (deviation / numbers.len());\n   |          ^                         ^\n   |\nhelp: remove these parentheses\n   |\n30 -   return (deviation / numbers.len());\n30 +   return deviation / numbers.len();\n   | \n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmpdr584m8i.rs:20:8\n   |\n20 |   mean /= numbers.len();\n   |        ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmpdr584m8i.rs:21:18\n   |\n21 |   sum_of_squares /= numbers.len();\n   |                  ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut result = 0.0;\n  for number in numbers {\n    result += std::abs(number - mean);\n  }\n  return result / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpt3wutxjh.rs:17:20\n   |\n17 |     result += std::abs(number - mean);\n   |                    ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpt3wutxjh.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpt3wutxjh.rs:19:17\n   |\n19 |   return result / numbers.len();\n   |                 ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for i in numbers {\n    sum += std::abs(i - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpdi4ea_n2.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpdi4ea_n2.rs:12:17\n   |\n12 |     sum += std::abs(i - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpdi4ea_n2.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum_of_squares = 0.0;\n  let mut count = 0.0;\n\n  for number in numbers {\n    mean += number;\n    sum_of_squares += (number * number);\n    count += 1.0;\n  }\n\n  mean /= count;\n  sum_of_squares /= count;\n\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n\n  deviation /= count;\n\n  return deviation;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmppu60wuq6.rs:24:23\n   |\n24 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nwarning: unnecessary parentheses around assigned value\n  --> /tmp/tmppu60wuq6.rs:15:23\n   |\n15 |     sum_of_squares += (number * number);\n   |                       ^               ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n15 -     sum_of_squares += (number * number);\n15 +     sum_of_squares += number * number;\n   | \n\nerror: aborting due to previous error; 1 warning emitted\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut diff = 0.0;\n  for number in numbers {\n    diff += std::abs(number - mean);\n  }\n  return diff / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpiwcm3540.rs:17:18\n   |\n17 |     diff += std::abs(number - mean);\n   |                  ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpiwcm3540.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpiwcm3540.rs:19:15\n   |\n19 |   return diff / numbers.len();\n   |               ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let squared_deviations = numbers.map(x => (x - mean) * (x - mean));\n  return sum(squared_deviations) / len(numbers);\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error: expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found `=>`\n  --> /tmp/tmpp3b2ru04.rs:10:42\n   |\n10 |   let squared_deviations = numbers.map(x => (x - mean) * (x - mean));\n   |                                          ^^ expected one of 8 possible tokens\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum_of_squares = 0.0;\n\n  for number in numbers {\n    mean += number;\n    sum_of_squares += (number * number);\n  }\n\n  mean /= numbers.len();\n  return (sum_of_squares / numbers.len()) - (mean * mean);\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around assigned value\n  --> /tmp/tmp5ht00u1v.rs:14:23\n   |\n14 |     sum_of_squares += (number * number);\n   |                       ^               ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n14 -     sum_of_squares += (number * number);\n14 +     sum_of_squares += number * number;\n   | \n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmp5ht00u1v.rs:17:8\n   |\n17 |   mean /= numbers.len();\n   |        ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp5ht00u1v.rs:18:26\n   |\n18 |   return (sum_of_squares / numbers.len()) - (mean * mean);\n   |                          ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 2 previous errors; 1 warning emitted\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp4cq24_i6.rs:17:23\n   |\n17 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:19:20\n   |\n19 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let squared_deviations = numbers.map(x => (x - mean) * (x - mean));\n  return mean_absolute_deviation(squared_deviations);\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error: expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found `=>`\n  --> /tmp/tmpyp9dj83o.rs:10:42\n   |\n10 |   let squared_deviations = numbers.map(x => (x - mean) * (x - mean));\n   |                                          ^^ expected one of 8 possible tokens\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut sum_squared = 0.0;\n  for number in numbers {\n    sum_squared += (number - mean) * (number - mean);\n  }\n  return sum_squared / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpanx34cox.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpanx34cox.rs:19:22\n   |\n19 |   return sum_squared / numbers.len();\n   |                      ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let sum = 0.0;\n  let count = 0;\n  for number in numbers {\n    sum += number;\n    count += 1;\n  }\n  let mean = sum / count;\n  let squared_deviations = 0.0;\n  for number in numbers {\n    squared_deviations += (number - mean) * (number - mean);\n  }\n  return sqrt(squared_deviations / count);\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `sqrt` in this scope\n  --> /tmp/tmp3sj9zosk.rs:20:10\n   |\n20 |   return sqrt(squared_deviations / count);\n   |          ^^^^ not found in this scope\n\nerror[E0277]: cannot divide `f64` by `{integer}`\n  --> /tmp/tmp3sj9zosk.rs:15:18\n   |\n15 |   let mean = sum / count;\n   |                  ^ no implementation for `f64 / {integer}`\n   |\n   = help: the trait `Div<{integer}>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `{integer}`\n  --> /tmp/tmp3sj9zosk.rs:20:34\n   |\n20 |   return sqrt(squared_deviations / count);\n   |                                  ^ no implementation for `{float} / {integer}`\n   |\n   = help: the trait `Div<{integer}>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let squared_deviations = numbers.map(x => (x - mean) * (x - mean));\n  return mean_absolute_deviation(squared_deviations);\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error: expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found `=>`\n  --> /tmp/tmpyp9dj83o.rs:10:42\n   |\n10 |   let squared_deviations = numbers.map(x => (x - mean) * (x - mean));\n   |                                          ^^ expected one of 8 possible tokens\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp7_uqv7sm.rs:18:23\n   |\n18 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp7_uqv7sm.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp7_uqv7sm.rs:20:20\n   |\n20 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut result = 0.0;\n  for number in numbers {\n    result += std::abs(number - mean);\n  }\n  return result / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpt3wutxjh.rs:17:20\n   |\n17 |     result += std::abs(number - mean);\n   |                    ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpt3wutxjh.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpt3wutxjh.rs:19:17\n   |\n19 |   return result / numbers.len();\n   |                 ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut diff = 0.0;\n  for number in numbers {\n    diff += std::abs(number - mean);\n  }\n  return diff / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpiwcm3540.rs:17:18\n   |\n17 |     diff += std::abs(number - mean);\n   |                  ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpiwcm3540.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpiwcm3540.rs:19:15\n   |\n19 |   return diff / numbers.len();\n   |               ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for i in numbers {\n    sum += std::abs(i - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpdi4ea_n2.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpdi4ea_n2.rs:12:17\n   |\n12 |     sum += std::abs(i - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpdi4ea_n2.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let squared_deviations = numbers.map(x => (x - mean) * (x - mean));\n  return mean_absolute_deviation(squared_deviations);\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error: expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found `=>`\n  --> /tmp/tmpyp9dj83o.rs:10:42\n   |\n10 |   let squared_deviations = numbers.map(x => (x - mean) * (x - mean));\n   |                                          ^^ expected one of 8 possible tokens\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    mean += number;\n  }\n  mean /= numbers.len();\n\n  for number in numbers {\n    sum += std::abs(number - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp3chxvej9.rs:17:17\n   |\n17 |     sum += std::abs(number - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmp3chxvej9.rs:14:8\n   |\n14 |   mean /= numbers.len();\n   |        ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp3chxvej9.rs:19:14\n   |\n19 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut result = 0.0;\n  for number in numbers {\n    result += std::abs(number - mean);\n  }\n  result /= numbers.len();\n  return result;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpega6jc_1.rs:17:20\n   |\n17 |     result += std::abs(number - mean);\n   |                    ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpega6jc_1.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide-assign `{float}` by `usize`\n  --> /tmp/tmpega6jc_1.rs:19:10\n   |\n19 |   result /= numbers.len();\n   |          ^^ no implementation for `{float} /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp7_uqv7sm.rs:18:23\n   |\n18 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp7_uqv7sm.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp7_uqv7sm.rs:20:20\n   |\n20 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let sum = 0.0;\n  for number in numbers {\n    sum += std::abs(number - mean(numbers));\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp22ofz2bz.rs:11:17\n   |\n11 |     sum += std::abs(number - mean(numbers));\n   |                 ^^^ not found in `std`\n\nerror[E0425]: cannot find function `mean` in this scope\n  --> /tmp/tmp22ofz2bz.rs:11:30\n   |\n11 |     sum += std::abs(number - mean(numbers));\n   |                              ^^^^ not found in this scope\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp22ofz2bz.rs:13:14\n   |\n13 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for number in numbers {\n    sum += abs(number - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpxbd17q6d.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmpxbd17q6d.rs:12:12\n   |\n12 |     sum += abs(number - mean);\n   |            ^^^ not found in this scope\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpxbd17q6d.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum_of_squares = 0.0;\n\n  for number in numbers {\n    mean += number;\n    sum_of_squares += (number * number);\n  }\n\n  let mut deviation = 0.0;\n  mean /= numbers.len();\n  sum_of_squares /= numbers.len();\n  deviation = math::sqrt(sum_of_squares - (mean * mean));\n\n  return deviation;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared crate or module `math`\n  --> /tmp/tmp4lmb5gp9.rs:20:15\n   |\n20 |   deviation = math::sqrt(sum_of_squares - (mean * mean));\n   |               ^^^^ use of undeclared crate or module `math`\n\nwarning: unnecessary parentheses around assigned value\n  --> /tmp/tmp4lmb5gp9.rs:14:23\n   |\n14 |     sum_of_squares += (number * number);\n   |                       ^               ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n14 -     sum_of_squares += (number * number);\n14 +     sum_of_squares += number * number;\n   | \n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmp4lmb5gp9.rs:18:8\n   |\n18 |   mean /= numbers.len();\n   |        ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmp4lmb5gp9.rs:19:18\n   |\n19 |   sum_of_squares /= numbers.len();\n   |                  ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0277, E0433.\nFor more information about an error, try `rustc --exp",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut diff = 0.0;\n  for number in numbers {\n    diff += std::abs(number - mean);\n  }\n  return diff / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpiwcm3540.rs:17:18\n   |\n17 |     diff += std::abs(number - mean);\n   |                  ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpiwcm3540.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpiwcm3540.rs:19:15\n   |\n19 |   return diff / numbers.len();\n   |               ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for i in numbers {\n    sum += std::abs(i - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpdi4ea_n2.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpdi4ea_n2.rs:12:17\n   |\n12 |     sum += std::abs(i - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpdi4ea_n2.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  let mut count = 0;\n\n  for number in numbers {\n    mean += number;\n    sum += std::abs(number - mean);\n    count += 1;\n  }\n\n  return sum / count;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpuobyj21c.rs:15:17\n   |\n15 |     sum += std::abs(number - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide `{float}` by `{integer}`\n  --> /tmp/tmpuobyj21c.rs:19:14\n   |\n19 |   return sum / count;\n   |              ^ no implementation for `{float} / {integer}`\n   |\n   = help: the trait `Div<{integer}>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for i in numbers {\n    sum += std::abs(i - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpdi4ea_n2.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpdi4ea_n2.rs:12:17\n   |\n12 |     sum += std::abs(i - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpdi4ea_n2.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum_of_squares = 0.0;\n  for number in numbers {\n    mean += number;\n    sum_of_squares += (number * number);\n  }\n  mean /= numbers.len();\n  return (sum_of_squares / numbers.len()) - (mean * mean);\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around assigned value\n  --> /tmp/tmpjafbknbt.rs:13:23\n   |\n13 |     sum_of_squares += (number * number);\n   |                       ^               ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n13 -     sum_of_squares += (number * number);\n13 +     sum_of_squares += number * number;\n   | \n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmpjafbknbt.rs:15:8\n   |\n15 |   mean /= numbers.len();\n   |        ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpjafbknbt.rs:16:26\n   |\n16 |   return (sum_of_squares / numbers.len()) - (mean * mean);\n   |                          ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 2 previous errors; 1 warning emitted\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n\n  let mut diff = 0.0;\n  for number in numbers {\n    diff += std::abs(number - mean);\n  }\n  return diff / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpx3wmme76.rs:18:18\n   |\n18 |     diff += std::abs(number - mean);\n   |                  ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpx3wmme76.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpx3wmme76.rs:20:15\n   |\n20 |   return diff / numbers.len();\n   |               ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp4cq24_i6.rs:17:23\n   |\n17 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:19:20\n   |\n19 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut diff = 0.0;\n  for number in numbers {\n    diff += std::abs(number - mean);\n  }\n  return diff / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpiwcm3540.rs:17:18\n   |\n17 |     diff += std::abs(number - mean);\n   |                  ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpiwcm3540.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpiwcm3540.rs:19:15\n   |\n19 |   return diff / numbers.len();\n   |               ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum_of_squares = 0.0;\n  let mut count = 0.0;\n\n  for number in numbers {\n    mean += number;\n    sum_of_squares += (number * number);\n    count += 1.0;\n  }\n\n  mean /= count;\n  sum_of_squares /= count;\n\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n\n  deviation /= count;\n\n  return deviation;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmppu60wuq6.rs:24:23\n   |\n24 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nwarning: unnecessary parentheses around assigned value\n  --> /tmp/tmppu60wuq6.rs:15:23\n   |\n15 |     sum_of_squares += (number * number);\n   |                       ^               ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n15 -     sum_of_squares += (number * number);\n15 +     sum_of_squares += number * number;\n   | \n\nerror: aborting due to previous error; 1 warning emitted\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for i in numbers {\n    sum += std::abs(i - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpdi4ea_n2.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpdi4ea_n2.rs:12:17\n   |\n12 |     sum += std::abs(i - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpdi4ea_n2.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for i in numbers {\n    sum += std::abs(i - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpdi4ea_n2.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpdi4ea_n2.rs:12:17\n   |\n12 |     sum += std::abs(i - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpdi4ea_n2.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n\n  let mut result = 0.0;\n  for number in numbers {\n    result += std::abs(number - mean);\n  }\n  return result / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmppnxccljj.rs:18:20\n   |\n18 |     result += std::abs(number - mean);\n   |                    ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmppnxccljj.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmppnxccljj.rs:20:17\n   |\n20 |   return result / numbers.len();\n   |                 ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut diff = 0.0;\n  for number in numbers {\n    diff += std::abs(number - mean);\n  }\n  return diff / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpiwcm3540.rs:17:18\n   |\n17 |     diff += std::abs(number - mean);\n   |                  ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpiwcm3540.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpiwcm3540.rs:19:15\n   |\n19 |   return diff / numbers.len();\n   |               ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n\n  let mut result = 0.0;\n  for number in numbers {\n    result += std::abs(number - mean);\n  }\n  return result / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmppnxccljj.rs:18:20\n   |\n18 |     result += std::abs(number - mean);\n   |                    ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmppnxccljj.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmppnxccljj.rs:20:17\n   |\n20 |   return result / numbers.len();\n   |                 ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for i in numbers {\n    sum += std::abs(i - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpdi4ea_n2.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpdi4ea_n2.rs:12:17\n   |\n12 |     sum += std::abs(i - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpdi4ea_n2.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut diff = 0.0;\n  for number in numbers {\n    diff += std::abs(number - mean);\n  }\n  return diff / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpiwcm3540.rs:17:18\n   |\n17 |     diff += std::abs(number - mean);\n   |                  ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpiwcm3540.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpiwcm3540.rs:19:15\n   |\n19 |   return diff / numbers.len();\n   |               ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum_of_squares = 0.0;\n  let mut count = 0.0;\n\n  for number in numbers {\n    mean += number;\n    sum_of_squares += (number * number);\n    count += 1.0;\n  }\n\n  mean /= count;\n  sum_of_squares /= count;\n\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n\n  deviation /= count;\n  deviation = std::sqrt(deviation);\n\n  return deviation;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpqoo36bdh.rs:24:23\n   |\n24 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0425]: cannot find function `sqrt` in crate `std`\n  --> /tmp/tmpqoo36bdh.rs:28:20\n   |\n28 |   deviation = std::sqrt(deviation);\n   |                    ^^^^ not found in `std`\n\nwarning: unnecessary parentheses around assigned value\n  --> /tmp/tmpqoo36bdh.rs:15:23\n   |\n15 |     sum_of_squares += (number * number);\n   |                       ^               ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n15 -     sum_of_squares += (number * number);\n15 +     sum_of_squares += number * number;\n   | \n\nerror: aborting due to 2 previous errors; 1 warning emitted\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum_of_squares = 0.0;\n  let mut count = 0.0;\n\n  for number in numbers {\n    mean += number;\n    sum_of_squares += (number * number);\n    count += 1.0;\n  }\n\n  mean /= count;\n  return (sum_of_squares / count) - (mean * mean);\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293352,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0.25`,\n right: `0.5`', /tmp/tmpri3etvsq.rs:25:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp4cq24_i6.rs:17:23\n   |\n17 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:19:20\n   |\n19 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut diff = 0.0;\n  for number in numbers {\n    diff += std::abs(number - mean);\n  }\n  return diff / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpiwcm3540.rs:17:18\n   |\n17 |     diff += std::abs(number - mean);\n   |                  ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpiwcm3540.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpiwcm3540.rs:19:15\n   |\n19 |   return diff / numbers.len();\n   |               ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n\n  let mut result = 0.0;\n  for number in numbers {\n    result += std::abs(number - mean);\n  }\n  return result / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmppnxccljj.rs:18:20\n   |\n18 |     result += std::abs(number - mean);\n   |                    ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmppnxccljj.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmppnxccljj.rs:20:17\n   |\n20 |   return result / numbers.len();\n   |                 ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut result = 0.0;\n  for number in numbers {\n    result += std::abs(number - mean);\n  }\n  return result / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpt3wutxjh.rs:17:20\n   |\n17 |     result += std::abs(number - mean);\n   |                    ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpt3wutxjh.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpt3wutxjh.rs:19:17\n   |\n19 |   return result / numbers.len();\n   |                 ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum_of_squares = 0.0;\n  for number in numbers {\n    mean += number;\n    sum_of_squares += (number * number);\n  }\n  mean /= numbers.len();\n  let mut result = 0.0;\n  for number in numbers {\n    result += (number - mean) * (number - mean);\n  }\n  result = result / numbers.len();\n  result = sqrt(result);\n  return result;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `sqrt` in this scope\n  --> /tmp/tmpyxa4g2n3.rs:21:12\n   |\n21 |   result = sqrt(result);\n   |            ^^^^ not found in this scope\n\nwarning: unnecessary parentheses around assigned value\n  --> /tmp/tmpyxa4g2n3.rs:13:23\n   |\n13 |     sum_of_squares += (number * number);\n   |                       ^               ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n13 -     sum_of_squares += (number * number);\n13 +     sum_of_squares += number * number;\n   | \n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmpyxa4g2n3.rs:15:8\n   |\n15 |   mean /= numbers.len();\n   |        ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpyxa4g2n3.rs:20:19\n   |\n20 |   result = result / numbers.len();\n   |                   ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  for number in numbers {\n    mean += number;\n  }\n  mean /= numbers.len();\n\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += std::abs(number - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpzg_b0vt9.rs:17:17\n   |\n17 |     sum += std::abs(number - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmpzg_b0vt9.rs:13:8\n   |\n13 |   mean /= numbers.len();\n   |        ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpzg_b0vt9.rs:19:14\n   |\n19 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for i in numbers {\n    sum += std::abs(i - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpdi4ea_n2.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpdi4ea_n2.rs:12:17\n   |\n12 |     sum += std::abs(i - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpdi4ea_n2.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for i in numbers {\n    sum += std::abs(i - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpdi4ea_n2.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpdi4ea_n2.rs:12:17\n   |\n12 |     sum += std::abs(i - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpdi4ea_n2.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n\n  let mut result = 0.0;\n  for number in numbers {\n    result += std::abs(number - mean);\n  }\n  return result / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmppnxccljj.rs:18:20\n   |\n18 |     result += std::abs(number - mean);\n   |                    ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmppnxccljj.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmppnxccljj.rs:20:17\n   |\n20 |   return result / numbers.len();\n   |                 ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum_of_squares = 0.0;\n\n  for number in numbers {\n    mean += number;\n    sum_of_squares += (number * number);\n  }\n\n  let mut deviation = 0.0;\n  let mut difference = 0.0;\n\n  mean /= numbers.len();\n  sum_of_squares /= numbers.len();\n\n  for number in numbers {\n    difference = number - mean;\n    deviation += difference * difference;\n  }\n\n  deviation = sqrt(deviation);\n\n  return deviation;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `sqrt` in this scope\n  --> /tmp/tmpgi9juh0x.rs:28:15\n   |\n28 |   deviation = sqrt(deviation);\n   |               ^^^^ not found in this scope\n\nwarning: unnecessary parentheses around assigned value\n  --> /tmp/tmpgi9juh0x.rs:14:23\n   |\n14 |     sum_of_squares += (number * number);\n   |                       ^               ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n14 -     sum_of_squares += (number * number);\n14 +     sum_of_squares += number * number;\n   | \n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmpgi9juh0x.rs:20:8\n   |\n20 |   mean /= numbers.len();\n   |        ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmpgi9juh0x.rs:21:18\n   |\n21 |   sum_of_squares /= numbers.len();\n   |                  ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for number in numbers {\n    sum += abs(number - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpxbd17q6d.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmpxbd17q6d.rs:12:12\n   |\n12 |     sum += abs(number - mean);\n   |            ^^^ not found in this scope\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpxbd17q6d.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp7_uqv7sm.rs:18:23\n   |\n18 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp7_uqv7sm.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp7_uqv7sm.rs:20:20\n   |\n20 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let sum = 0.0;\n  for number in numbers {\n    sum += std::abs(number - mean(numbers));\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp22ofz2bz.rs:11:17\n   |\n11 |     sum += std::abs(number - mean(numbers));\n   |                 ^^^ not found in `std`\n\nerror[E0425]: cannot find function `mean` in this scope\n  --> /tmp/tmp22ofz2bz.rs:11:30\n   |\n11 |     sum += std::abs(number - mean(numbers));\n   |                              ^^^^ not found in this scope\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp22ofz2bz.rs:13:14\n   |\n13 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  let mut count = 0.0;\n\n  for number in numbers {\n    mean += number;\n    sum += std::abs(number - mean);\n    count += 1.0;\n  }\n\n  return sum / count;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpg4ckc5hg.rs:15:17\n   |\n15 |     sum += std::abs(number - mean);\n   |                 ^^^ not found in `std`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut diff = 0.0;\n  for number in numbers {\n    diff += std::abs(number - mean);\n  }\n  return diff / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpiwcm3540.rs:17:18\n   |\n17 |     diff += std::abs(number - mean);\n   |                  ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpiwcm3540.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpiwcm3540.rs:19:15\n   |\n19 |   return diff / numbers.len();\n   |               ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum_of_squares = 0.0;\n  for number in numbers {\n    mean += number;\n    sum_of_squares += (number * number);\n  }\n  let mut deviation = 0.0;\n  mean /= numbers.len();\n  for number in numbers {\n    deviation += (number - mean) * (number - mean);\n  }\n  deviation /= numbers.len();\n  deviation = sqrt(deviation);\n  return deviation;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `sqrt` in this scope\n  --> /tmp/tmpfvkjte1o.rs:21:15\n   |\n21 |   deviation = sqrt(deviation);\n   |               ^^^^ not found in this scope\n\nwarning: unnecessary parentheses around assigned value\n  --> /tmp/tmpfvkjte1o.rs:13:23\n   |\n13 |     sum_of_squares += (number * number);\n   |                       ^               ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n13 -     sum_of_squares += (number * number);\n13 +     sum_of_squares += number * number;\n   | \n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmpfvkjte1o.rs:16:8\n   |\n16 |   mean /= numbers.len();\n   |        ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmpfvkjte1o.rs:20:13\n   |\n20 |   deviation /= numbers.len();\n   |             ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for number in numbers {\n    sum += abs(number - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpxbd17q6d.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmpxbd17q6d.rs:12:12\n   |\n12 |     sum += abs(number - mean);\n   |            ^^^ not found in this scope\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpxbd17q6d.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut result = 0.0;\n  for number in numbers {\n    result += std::abs(number - mean);\n  }\n  result /= numbers.len();\n  return result;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpega6jc_1.rs:17:20\n   |\n17 |     result += std::abs(number - mean);\n   |                    ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpega6jc_1.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide-assign `{float}` by `usize`\n  --> /tmp/tmpega6jc_1.rs:19:10\n   |\n19 |   result /= numbers.len();\n   |          ^^ no implementation for `{float} /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n\n  let mut sum_of_squares = 0.0;\n  for number in numbers {\n    sum_of_squares += (number - mean) * (number - mean);\n  }\n\n  return sqrt(sum_of_squares / numbers.len());\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `sqrt` in this scope\n  --> /tmp/tmp96se_2nx.rs:21:10\n   |\n21 |   return sqrt(sum_of_squares / numbers.len());\n   |          ^^^^ not found in this scope\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp96se_2nx.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp96se_2nx.rs:21:30\n   |\n21 |   return sqrt(sum_of_squares / numbers.len());\n   |                              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp7_uqv7sm.rs:18:23\n   |\n18 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp7_uqv7sm.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp7_uqv7sm.rs:20:20\n   |\n20 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum_of_squares = 0.0;\n\n  // Accumulate the sum of squares and the mean:\n  for number in numbers {\n    sum_of_squares += (number - mean) * (number - mean);\n    mean += number;\n  }\n\n  // Calculate the mean:\n  mean /= numbers.len();\n\n  // Calculate the variance:\n  let variance = sum_of_squares / numbers.len();\n\n  // Calculate the MAD:\n  return sqrt(variance);\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `sqrt` in this scope\n  --> /tmp/tmplkxot9a4.rs:25:10\n   |\n25 |   return sqrt(variance);\n   |          ^^^^ not found in this scope\n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmplkxot9a4.rs:19:8\n   |\n19 |   mean /= numbers.len();\n   |        ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmplkxot9a4.rs:22:33\n   |\n22 |   let variance = sum_of_squares / numbers.len();\n   |                                 ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for i in numbers {\n    sum += std::abs(i - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpdi4ea_n2.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpdi4ea_n2.rs:12:17\n   |\n12 |     sum += std::abs(i - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpdi4ea_n2.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  let mut count = 0;\n  for number in numbers {\n    mean += number;\n    sum += std::abs(number - mean);\n    count += 1;\n  }\n  return sum / count;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpluk6asrh.rs:14:17\n   |\n14 |     sum += std::abs(number - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide `{float}` by `{integer}`\n  --> /tmp/tmpluk6asrh.rs:17:14\n   |\n17 |   return sum / count;\n   |              ^ no implementation for `{float} / {integer}`\n   |\n   = help: the trait `Div<{integer}>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n\n  let mut diff = 0.0;\n  for number in numbers {\n    diff += std::abs(number - mean);\n  }\n  return diff / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpx3wmme76.rs:18:18\n   |\n18 |     diff += std::abs(number - mean);\n   |                  ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpx3wmme76.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpx3wmme76.rs:20:15\n   |\n20 |   return diff / numbers.len();\n   |               ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for number in numbers {\n    sum += abs(number - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpxbd17q6d.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmpxbd17q6d.rs:12:12\n   |\n12 |     sum += abs(number - mean);\n   |            ^^^ not found in this scope\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpxbd17q6d.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n\n  for number in numbers {\n    sum += number;\n  }\n\n  mean = sum / numbers.len();\n\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp5tmdmcj9.rs:20:23\n   |\n20 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp5tmdmcj9.rs:16:14\n   |\n16 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp5tmdmcj9.rs:23:20\n   |\n23 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for i in numbers {\n    sum += abs(i - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmp8k9f8o7i.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmp8k9f8o7i.rs:12:12\n   |\n12 |     sum += abs(i - mean);\n   |            ^^^ not found in this scope\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp8k9f8o7i.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum_of_squares = 0.0;\n\n  for number in numbers {\n    mean += number;\n    sum_of_squares += (number * number);\n  }\n\n  let mut result = 0.0;\n  if numbers.len() > 0 {\n    result = sum_of_squares / numbers.len();\n    result -= mean * mean;\n    result /= numbers.len();\n  }\n\n  return result;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around assigned value\n  --> /tmp/tmpu_ygdeue.rs:14:23\n   |\n14 |     sum_of_squares += (number * number);\n   |                       ^               ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n14 -     sum_of_squares += (number * number);\n14 +     sum_of_squares += number * number;\n   | \n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpu_ygdeue.rs:19:29\n   |\n19 |     result = sum_of_squares / numbers.len();\n   |                             ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmpu_ygdeue.rs:21:12\n   |\n21 |     result /= numbers.len();\n   |            ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror: aborting due to 2 previous errors; 1 warning emitted\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let squared_deviations = numbers.map(x => (x - mean) * (x - mean));\n  return sum(squared_deviations) / numbers.length;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error: expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found `=>`\n  --> /tmp/tmp_9n4wdv8.rs:10:42\n   |\n10 |   let squared_deviations = numbers.map(x => (x - mean) * (x - mean));\n   |                                          ^^ expected one of 8 possible tokens\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum_of_squares = 0.0;\n  for number in numbers {\n    mean += number;\n    sum_of_squares += (number * number);\n  }\n  mean /= numbers.len();\n  let mut result = 0.0;\n  for number in numbers {\n    result += std::abs(number - mean);\n  }\n  result /= numbers.len();\n  return result;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpvccu3_u1.rs:18:20\n   |\n18 |     result += std::abs(number - mean);\n   |                    ^^^ not found in `std`\n\nwarning: unnecessary parentheses around assigned value\n  --> /tmp/tmpvccu3_u1.rs:13:23\n   |\n13 |     sum_of_squares += (number * number);\n   |                       ^               ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n13 -     sum_of_squares += (number * number);\n13 +     sum_of_squares += number * number;\n   | \n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmpvccu3_u1.rs:15:8\n   |\n15 |   mean /= numbers.len();\n   |        ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror[E0277]: cannot divide-assign `{float}` by `usize`\n  --> /tmp/tmpvccu3_u1.rs:20:10\n   |\n20 |   result /= numbers.len();\n   |          ^^ no implementation for `{float} /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut diff = 0.0;\n  for number in numbers {\n    diff += std::abs(number - mean);\n  }\n  return diff / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpiwcm3540.rs:17:18\n   |\n17 |     diff += std::abs(number - mean);\n   |                  ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpiwcm3540.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpiwcm3540.rs:19:15\n   |\n19 |   return diff / numbers.len();\n   |               ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut diff = 0.0;\n  for number in numbers {\n    diff += std::abs(number - mean);\n  }\n  return diff / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpiwcm3540.rs:17:18\n   |\n17 |     diff += std::abs(number - mean);\n   |                  ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpiwcm3540.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpiwcm3540.rs:19:15\n   |\n19 |   return diff / numbers.len();\n   |               ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum_of_squares = 0.0;\n  let mut count = 0.0;\n  for number in numbers {\n    mean += number;\n    sum_of_squares += (number * number);\n    count += 1.0;\n  }\n  mean /= count;\n  sum_of_squares /= count;\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  deviation /= count;\n  deviation = std::sqrt(deviation);\n  deviation = std::fabs(deviation);\n  deviation = std::sqrt(sum_of_squares - (deviation * deviation));\n  return deviation;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp185c_yxg.rs:21:23\n   |\n21 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0425]: cannot find function `sqrt` in crate `std`\n  --> /tmp/tmp185c_yxg.rs:24:20\n   |\n24 |   deviation = std::sqrt(deviation);\n   |                    ^^^^ not found in `std`\n\nerror[E0425]: cannot find function `fabs` in crate `std`\n  --> /tmp/tmp185c_yxg.rs:25:20\n   |\n25 |   deviation = std::fabs(deviation);\n   |                    ^^^^ not found in `std`\n\nerror[E0425]: cannot find function `sqrt` in crate `std`\n  --> /tmp/tmp185c_yxg.rs:26:20\n   |\n26 |   deviation = std::sqrt(sum_of_squares - (deviation * deviation));\n   |                    ^^^^ not found in `std`\n\nwarning: unnecessary parentheses around assigned value\n  --> /tmp/tmp185c_yxg.rs:14:23\n   |\n14 |     sum_of_squares += (number * number);\n   |                       ^               ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n14 -     sum_of_squares += (number * number);\n14 +     sum_of_squares += number * number;\n   | \n\nerror: aborting due to 4 previous errors; 1 warning emitted\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let sum = 0.0;\n  let count = 0;\n  for number in numbers {\n    sum += number;\n    count += 1;\n  }\n  return sum / count;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0277]: cannot divide `f64` by `{integer}`\n  --> /tmp/tmp1dbbu7mq.rs:15:14\n   |\n15 |   return sum / count;\n   |              ^ no implementation for `f64 / {integer}`\n   |\n   = help: the trait `Div<{integer}>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let sum = 0.0;\n  let count = 0;\n  for number in numbers {\n    sum += number;\n    count += 1;\n  }\n  return sum / count;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0277]: cannot divide `f64` by `{integer}`\n  --> /tmp/tmp1dbbu7mq.rs:15:14\n   |\n15 |   return sum / count;\n   |              ^ no implementation for `f64 / {integer}`\n   |\n   = help: the trait `Div<{integer}>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut diff = 0.0;\n  for number in numbers {\n    diff += std::abs(number - mean);\n  }\n  return diff / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpiwcm3540.rs:17:18\n   |\n17 |     diff += std::abs(number - mean);\n   |                  ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpiwcm3540.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpiwcm3540.rs:19:15\n   |\n19 |   return diff / numbers.len();\n   |               ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut diff = 0.0;\n  for number in numbers {\n    diff += std::abs(number - mean);\n  }\n  return diff / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpiwcm3540.rs:17:18\n   |\n17 |     diff += std::abs(number - mean);\n   |                  ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpiwcm3540.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpiwcm3540.rs:19:15\n   |\n19 |   return diff / numbers.len();\n   |               ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum_of_squares = 0.0;\n  for number in numbers {\n    mean += number;\n    sum_of_squares += (number * number);\n  }\n  mean /= numbers.len();\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  deviation /= numbers.len();\n  return std::sqrt(deviation) * std::sqrt(sum_of_squares / numbers.len());\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpc4ykdjz7.rs:18:23\n   |\n18 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0425]: cannot find function `sqrt` in crate `std`\n  --> /tmp/tmpc4ykdjz7.rs:21:15\n   |\n21 |   return std::sqrt(deviation) * std::sqrt(sum_of_squares / numbers.len());\n   |               ^^^^ not found in `std`\n\nerror[E0425]: cannot find function `sqrt` in crate `std`\n  --> /tmp/tmpc4ykdjz7.rs:21:38\n   |\n21 |   return std::sqrt(deviation) * std::sqrt(sum_of_squares / numbers.len());\n   |                                      ^^^^ not found in `std`\n\nwarning: unnecessary parentheses around assigned value\n  --> /tmp/tmpc4ykdjz7.rs:13:23\n   |\n13 |     sum_of_squares += (number * number);\n   |                       ^               ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n13 -     sum_of_squares += (number * number);\n13 +     sum_of_squares += number * number;\n   | \n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmpc4ykdjz7.rs:15:8\n   |\n15 |   mean /= numbers.len();\n   |        ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror[E0277]: cannot divide-assign `{float}` by `usize`\n  --> /tmp/tmpc4ykdjz7.rs:20:13\n   |\n20 |   deviation /= numbers.len();\n   |             ^^ no implementation for `{float} /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAss",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let squared_deviations = numbers.map(x => (x - mean) * (x - mean));\n  return mean_absolute_deviation(squared_deviations);\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error: expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found `=>`\n  --> /tmp/tmpyp9dj83o.rs:10:42\n   |\n10 |   let squared_deviations = numbers.map(x => (x - mean) * (x - mean));\n   |                                          ^^ expected one of 8 possible tokens\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut result = 0.0;\n  for number in numbers {\n    result += std::abs(number - mean);\n  }\n  return result / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpt3wutxjh.rs:17:20\n   |\n17 |     result += std::abs(number - mean);\n   |                    ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpt3wutxjh.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpt3wutxjh.rs:19:17\n   |\n19 |   return result / numbers.len();\n   |                 ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for number in numbers {\n    sum += abs(number - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpxbd17q6d.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmpxbd17q6d.rs:12:12\n   |\n12 |     sum += abs(number - mean);\n   |            ^^^ not found in this scope\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpxbd17q6d.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp4cq24_i6.rs:17:23\n   |\n17 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:19:20\n   |\n19 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp4cq24_i6.rs:17:23\n   |\n17 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:19:20\n   |\n19 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp7_uqv7sm.rs:18:23\n   |\n18 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp7_uqv7sm.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp7_uqv7sm.rs:20:20\n   |\n20 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for number in numbers {\n    sum += abs(number - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpxbd17q6d.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmpxbd17q6d.rs:12:12\n   |\n12 |     sum += abs(number - mean);\n   |            ^^^ not found in this scope\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpxbd17q6d.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum_of_squares = 0.0;\n  for number in numbers {\n    mean += number;\n    sum_of_squares += (number * number);\n  }\n  mean /= numbers.len();\n  return (sum_of_squares / numbers.len()) - (mean * mean);\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around assigned value\n  --> /tmp/tmpjafbknbt.rs:13:23\n   |\n13 |     sum_of_squares += (number * number);\n   |                       ^               ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n13 -     sum_of_squares += (number * number);\n13 +     sum_of_squares += number * number;\n   | \n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmpjafbknbt.rs:15:8\n   |\n15 |   mean /= numbers.len();\n   |        ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpjafbknbt.rs:16:26\n   |\n16 |   return (sum_of_squares / numbers.len()) - (mean * mean);\n   |                          ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 2 previous errors; 1 warning emitted\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp4cq24_i6.rs:17:23\n   |\n17 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:19:20\n   |\n19 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for i in numbers {\n    sum += std::abs(i - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpdi4ea_n2.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpdi4ea_n2.rs:12:17\n   |\n12 |     sum += std::abs(i - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpdi4ea_n2.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let sum = 0.0;\n  for number in numbers {\n    sum += std::abs(number - mean(numbers));\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp22ofz2bz.rs:11:17\n   |\n11 |     sum += std::abs(number - mean(numbers));\n   |                 ^^^ not found in `std`\n\nerror[E0425]: cannot find function `mean` in this scope\n  --> /tmp/tmp22ofz2bz.rs:11:30\n   |\n11 |     sum += std::abs(number - mean(numbers));\n   |                              ^^^^ not found in this scope\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp22ofz2bz.rs:13:14\n   |\n13 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut diff = 0.0;\n  for number in numbers {\n    diff += std::abs(number - mean);\n  }\n  return diff / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpiwcm3540.rs:17:18\n   |\n17 |     diff += std::abs(number - mean);\n   |                  ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpiwcm3540.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpiwcm3540.rs:19:15\n   |\n19 |   return diff / numbers.len();\n   |               ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n\n  let mut diff = 0.0;\n  for number in numbers {\n    diff += std::abs(number - mean);\n  }\n  return diff / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpx3wmme76.rs:18:18\n   |\n18 |     diff += std::abs(number - mean);\n   |                  ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpx3wmme76.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpx3wmme76.rs:20:15\n   |\n20 |   return diff / numbers.len();\n   |               ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  let mut count = 0.0;\n  for number in numbers {\n    mean += number;\n    sum += std::abs(number - mean);\n    count += 1.0;\n  }\n  return sum / count;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp5rsytc4s.rs:14:17\n   |\n14 |     sum += std::abs(number - mean);\n   |                 ^^^ not found in `std`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let sum = 0.0;\n  for number in numbers {\n    sum += abs(number - mean(numbers));\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmp5kyu960d.rs:11:12\n   |\n11 |     sum += abs(number - mean(numbers));\n   |            ^^^ not found in this scope\n\nerror[E0425]: cannot find function `mean` in this scope\n  --> /tmp/tmp5kyu960d.rs:11:25\n   |\n11 |     sum += abs(number - mean(numbers));\n   |                         ^^^^ not found in this scope\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp5kyu960d.rs:13:14\n   |\n13 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmp9hwysrz0.rs:18:18\n   |\n18 |     deviation += abs(number - mean);\n   |                  ^^^ not found in this scope\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp9hwysrz0.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp9hwysrz0.rs:20:20\n   |\n20 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut result = 0.0;\n  for number in numbers {\n    result += std::abs(number - mean);\n  }\n  result /= numbers.len();\n  return result;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpega6jc_1.rs:17:20\n   |\n17 |     result += std::abs(number - mean);\n   |                    ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpega6jc_1.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide-assign `{float}` by `usize`\n  --> /tmp/tmpega6jc_1.rs:19:10\n   |\n19 |   result /= numbers.len();\n   |          ^^ no implementation for `{float} /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut diff = 0.0;\n  for number in numbers {\n    diff += std::abs(number - mean);\n  }\n  return diff / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpiwcm3540.rs:17:18\n   |\n17 |     diff += std::abs(number - mean);\n   |                  ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpiwcm3540.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpiwcm3540.rs:19:15\n   |\n19 |   return diff / numbers.len();\n   |               ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let result = 0.0;\n  for i in numbers {\n    result += abs(i - mean);\n  }\n  result /= numbers.len();\n  return result;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpy2_blvid.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmpy2_blvid.rs:12:15\n   |\n12 |     result += abs(i - mean);\n   |               ^^^ not found in this scope\n\nerror[E0277]: cannot divide-assign `{float}` by `usize`\n  --> /tmp/tmpy2_blvid.rs:14:10\n   |\n14 |   result /= numbers.len();\n   |          ^^ no implementation for `{float} /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum_of_squares = 0.0;\n  for number in numbers {\n    mean += number;\n    sum_of_squares += (number * number);\n  }\n  mean /= numbers.len();\n  return (sum_of_squares / numbers.len()) - (mean * mean);\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around assigned value\n  --> /tmp/tmpjafbknbt.rs:13:23\n   |\n13 |     sum_of_squares += (number * number);\n   |                       ^               ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n13 -     sum_of_squares += (number * number);\n13 +     sum_of_squares += number * number;\n   | \n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmpjafbknbt.rs:15:8\n   |\n15 |   mean /= numbers.len();\n   |        ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpjafbknbt.rs:16:26\n   |\n16 |   return (sum_of_squares / numbers.len()) - (mean * mean);\n   |                          ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 2 previous errors; 1 warning emitted\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for i in numbers {\n    sum += std::abs(i - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpdi4ea_n2.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpdi4ea_n2.rs:12:17\n   |\n12 |     sum += std::abs(i - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpdi4ea_n2.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let sum = 0.0;\n  let count = 0;\n  for number in numbers {\n    sum += number;\n    count += 1;\n  }\n  let mean = sum / count;\n  let result = 0.0;\n  for number in numbers {\n    result += abs(number - mean);\n  }\n  return result / count;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmpkvyvp2mj.rs:18:15\n   |\n18 |     result += abs(number - mean);\n   |               ^^^ not found in this scope\n\nerror[E0277]: cannot divide `f64` by `{integer}`\n  --> /tmp/tmpkvyvp2mj.rs:15:18\n   |\n15 |   let mean = sum / count;\n   |                  ^ no implementation for `f64 / {integer}`\n   |\n   = help: the trait `Div<{integer}>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `{integer}`\n  --> /tmp/tmpkvyvp2mj.rs:20:17\n   |\n20 |   return result / count;\n   |                 ^ no implementation for `{float} / {integer}`\n   |\n   = help: the trait `Div<{integer}>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  let mut count = 0.0;\n\n  for number in numbers {\n    mean += number;\n    sum += std::abs(number - mean);\n    count += 1.0;\n  }\n\n  return sum / count;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpg4ckc5hg.rs:15:17\n   |\n15 |     sum += std::abs(number - mean);\n   |                 ^^^ not found in `std`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  for number in numbers {\n    mean += number;\n  }\n  mean /= numbers.len();\n\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += std::abs(number - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpzg_b0vt9.rs:17:17\n   |\n17 |     sum += std::abs(number - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmpzg_b0vt9.rs:13:8\n   |\n13 |   mean /= numbers.len();\n   |        ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpzg_b0vt9.rs:19:14\n   |\n19 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp4cq24_i6.rs:17:23\n   |\n17 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:19:20\n   |\n19 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for i in numbers {\n    sum += std::abs(i - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpdi4ea_n2.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpdi4ea_n2.rs:12:17\n   |\n12 |     sum += std::abs(i - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpdi4ea_n2.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp4cq24_i6.rs:17:23\n   |\n17 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:19:20\n   |\n19 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for i in numbers {\n    sum += std::abs(i - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpdi4ea_n2.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpdi4ea_n2.rs:12:17\n   |\n12 |     sum += std::abs(i - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpdi4ea_n2.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum_of_squares = 0.0;\n  let mut count = 0.0;\n\n  for number in numbers {\n    mean += number;\n    sum_of_squares += (number * number);\n    count += 1.0;\n  }\n\n  mean /= count;\n  return (sum_of_squares / count) - (mean * mean);\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293352,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0.25`,\n right: `0.5`', /tmp/tmpri3etvsq.rs:25:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum_of_squares = 0.0;\n\n  for number in numbers {\n    mean += number;\n    sum_of_squares += (number * number);\n  }\n\n  let mut deviation = 0.0;\n  let mut difference = 0.0;\n\n  mean /= numbers.len();\n  sum_of_squares /= numbers.len();\n\n  for number in numbers {\n    difference = number - mean;\n    deviation += difference * difference;\n  }\n\n  deviation = sqrt(deviation);\n\n  return deviation;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `sqrt` in this scope\n  --> /tmp/tmpgi9juh0x.rs:28:15\n   |\n28 |   deviation = sqrt(deviation);\n   |               ^^^^ not found in this scope\n\nwarning: unnecessary parentheses around assigned value\n  --> /tmp/tmpgi9juh0x.rs:14:23\n   |\n14 |     sum_of_squares += (number * number);\n   |                       ^               ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n14 -     sum_of_squares += (number * number);\n14 +     sum_of_squares += number * number;\n   | \n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmpgi9juh0x.rs:20:8\n   |\n20 |   mean /= numbers.len();\n   |        ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmpgi9juh0x.rs:21:18\n   |\n21 |   sum_of_squares /= numbers.len();\n   |                  ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  let mut count = 0;\n  for number in numbers {\n    mean += number;\n    sum += std::abs(number - mean);\n    count += 1;\n  }\n  return sum / count;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpluk6asrh.rs:14:17\n   |\n14 |     sum += std::abs(number - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide `{float}` by `{integer}`\n  --> /tmp/tmpluk6asrh.rs:17:14\n   |\n17 |   return sum / count;\n   |              ^ no implementation for `{float} / {integer}`\n   |\n   = help: the trait `Div<{integer}>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp4cq24_i6.rs:17:23\n   |\n17 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:19:20\n   |\n19 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp4cq24_i6.rs:17:23\n   |\n17 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:19:20\n   |\n19 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp4cq24_i6.rs:17:23\n   |\n17 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:19:20\n   |\n19 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for i in numbers {\n    sum += std::abs(i - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpdi4ea_n2.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpdi4ea_n2.rs:12:17\n   |\n12 |     sum += std::abs(i - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpdi4ea_n2.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let sum = 0.0;\n  for number in numbers {\n    sum += std::abs(number - mean(numbers));\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp22ofz2bz.rs:11:17\n   |\n11 |     sum += std::abs(number - mean(numbers));\n   |                 ^^^ not found in `std`\n\nerror[E0425]: cannot find function `mean` in this scope\n  --> /tmp/tmp22ofz2bz.rs:11:30\n   |\n11 |     sum += std::abs(number - mean(numbers));\n   |                              ^^^^ not found in this scope\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp22ofz2bz.rs:13:14\n   |\n13 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for number in numbers {\n    sum += std::abs(number - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmprg2k2515.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmprg2k2515.rs:12:17\n   |\n12 |     sum += std::abs(number - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmprg2k2515.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut sum_squares = 0.0;\n  for number in numbers {\n    sum_squares += (number - mean) * (number - mean);\n  }\n  return sum_squares / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp1t1vm4n5.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp1t1vm4n5.rs:19:22\n   |\n19 |   return sum_squares / numbers.len();\n   |                      ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let sum = 0.0;\n  for number in numbers {\n    sum += std::abs(number - mean(numbers));\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp22ofz2bz.rs:11:17\n   |\n11 |     sum += std::abs(number - mean(numbers));\n   |                 ^^^ not found in `std`\n\nerror[E0425]: cannot find function `mean` in this scope\n  --> /tmp/tmp22ofz2bz.rs:11:30\n   |\n11 |     sum += std::abs(number - mean(numbers));\n   |                              ^^^^ not found in this scope\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp22ofz2bz.rs:13:14\n   |\n13 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum_of_squares = 0.0;\n  let mut count = 0.0;\n\n  for number in numbers {\n    mean += number;\n    sum_of_squares += (number * number);\n    count += 1.0;\n  }\n\n  mean /= count;\n  sum_of_squares /= count;\n\n  return (sum_of_squares - (mean * mean)) / count;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293352,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0.125`,\n right: `0.5`', /tmp/tmp5sqllajq.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp7_uqv7sm.rs:18:23\n   |\n18 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp7_uqv7sm.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp7_uqv7sm.rs:20:20\n   |\n20 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for i in numbers {\n    sum += std::abs(i - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpdi4ea_n2.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpdi4ea_n2.rs:12:17\n   |\n12 |     sum += std::abs(i - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpdi4ea_n2.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp4cq24_i6.rs:17:23\n   |\n17 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:19:20\n   |\n19 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp4cq24_i6.rs:17:23\n   |\n17 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:19:20\n   |\n19 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n\n  let mut result = 0.0;\n  for number in numbers {\n    result += std::abs(number - mean);\n  }\n  return result / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmppnxccljj.rs:18:20\n   |\n18 |     result += std::abs(number - mean);\n   |                    ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmppnxccljj.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmppnxccljj.rs:20:17\n   |\n20 |   return result / numbers.len();\n   |                 ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut diff = 0.0;\n  for number in numbers {\n    diff += std::abs(number - mean);\n  }\n  return diff / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpiwcm3540.rs:17:18\n   |\n17 |     diff += std::abs(number - mean);\n   |                  ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpiwcm3540.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpiwcm3540.rs:19:15\n   |\n19 |   return diff / numbers.len();\n   |               ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for i in numbers {\n    sum += std::abs(i - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpdi4ea_n2.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpdi4ea_n2.rs:12:17\n   |\n12 |     sum += std::abs(i - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpdi4ea_n2.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n\n  for number in numbers {\n    sum += number;\n  }\n\n  mean = sum / numbers.len();\n\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp5tmdmcj9.rs:20:23\n   |\n20 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp5tmdmcj9.rs:16:14\n   |\n16 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp5tmdmcj9.rs:23:20\n   |\n23 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut diff = 0.0;\n  for number in numbers {\n    diff += std::abs(number - mean);\n  }\n  return diff / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpiwcm3540.rs:17:18\n   |\n17 |     diff += std::abs(number - mean);\n   |                  ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpiwcm3540.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpiwcm3540.rs:19:15\n   |\n19 |   return diff / numbers.len();\n   |               ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp7_uqv7sm.rs:18:23\n   |\n18 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp7_uqv7sm.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp7_uqv7sm.rs:20:20\n   |\n20 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp7_uqv7sm.rs:18:23\n   |\n18 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp7_uqv7sm.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp7_uqv7sm.rs:20:20\n   |\n20 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n\n  let mut diff = 0.0;\n  for number in numbers {\n    diff += std::abs(number - mean);\n  }\n  return diff / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpx3wmme76.rs:18:18\n   |\n18 |     diff += std::abs(number - mean);\n   |                  ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpx3wmme76.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpx3wmme76.rs:20:15\n   |\n20 |   return diff / numbers.len();\n   |               ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let sum = 0.0;\n  for number in numbers {\n    sum += std::abs(number - mean(numbers));\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp22ofz2bz.rs:11:17\n   |\n11 |     sum += std::abs(number - mean(numbers));\n   |                 ^^^ not found in `std`\n\nerror[E0425]: cannot find function `mean` in this scope\n  --> /tmp/tmp22ofz2bz.rs:11:30\n   |\n11 |     sum += std::abs(number - mean(numbers));\n   |                              ^^^^ not found in this scope\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp22ofz2bz.rs:13:14\n   |\n13 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut result = 0.0;\n  for number in numbers {\n    result += std::abs(number - mean);\n  }\n  return result / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpt3wutxjh.rs:17:20\n   |\n17 |     result += std::abs(number - mean);\n   |                    ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpt3wutxjh.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpt3wutxjh.rs:19:17\n   |\n19 |   return result / numbers.len();\n   |                 ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for i in numbers {\n    sum += std::abs(i - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpdi4ea_n2.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpdi4ea_n2.rs:12:17\n   |\n12 |     sum += std::abs(i - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpdi4ea_n2.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let sum = 0.0;\n  let count = 0;\n  for number in numbers {\n    sum += number;\n    count += 1;\n  }\n  return sum / count;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0277]: cannot divide `f64` by `{integer}`\n  --> /tmp/tmp1dbbu7mq.rs:15:14\n   |\n15 |   return sum / count;\n   |              ^ no implementation for `f64 / {integer}`\n   |\n   = help: the trait `Div<{integer}>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut result = 0.0;\n  for number in numbers {\n    result += std::abs(number - mean);\n  }\n  return result / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpt3wutxjh.rs:17:20\n   |\n17 |     result += std::abs(number - mean);\n   |                    ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpt3wutxjh.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpt3wutxjh.rs:19:17\n   |\n19 |   return result / numbers.len();\n   |                 ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut diff = 0.0;\n  for number in numbers {\n    diff += std::abs(number - mean);\n  }\n  return diff / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpiwcm3540.rs:17:18\n   |\n17 |     diff += std::abs(number - mean);\n   |                  ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpiwcm3540.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpiwcm3540.rs:19:15\n   |\n19 |   return diff / numbers.len();\n   |               ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp4cq24_i6.rs:17:23\n   |\n17 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:19:20\n   |\n19 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for number in numbers {\n    sum += abs(number - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpxbd17q6d.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmpxbd17q6d.rs:12:12\n   |\n12 |     sum += abs(number - mean);\n   |            ^^^ not found in this scope\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpxbd17q6d.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for number in numbers {\n    sum += abs(number - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpxbd17q6d.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmpxbd17q6d.rs:12:12\n   |\n12 |     sum += abs(number - mean);\n   |            ^^^ not found in this scope\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpxbd17q6d.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let sum = 0.0;\n  let count = 0;\n  for number in numbers {\n    sum += number;\n    count += 1;\n  }\n  let mean = sum / count;\n  let squared_sum = 0.0;\n  for number in numbers {\n    squared_sum += (number - mean) * (number - mean);\n  }\n  return sqrt(squared_sum / count);\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `sqrt` in this scope\n  --> /tmp/tmps0fq353v.rs:20:10\n   |\n20 |   return sqrt(squared_sum / count);\n   |          ^^^^ not found in this scope\n\nerror[E0277]: cannot divide `f64` by `{integer}`\n  --> /tmp/tmps0fq353v.rs:15:18\n   |\n15 |   let mean = sum / count;\n   |                  ^ no implementation for `f64 / {integer}`\n   |\n   = help: the trait `Div<{integer}>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `{integer}`\n  --> /tmp/tmps0fq353v.rs:20:27\n   |\n20 |   return sqrt(squared_sum / count);\n   |                           ^ no implementation for `{float} / {integer}`\n   |\n   = help: the trait `Div<{integer}>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp4cq24_i6.rs:17:23\n   |\n17 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:19:20\n   |\n19 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n\n  let mut diff = 0.0;\n  for number in numbers {\n    diff += std::abs(number - mean);\n  }\n  return diff / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpx3wmme76.rs:18:18\n   |\n18 |     diff += std::abs(number - mean);\n   |                  ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpx3wmme76.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpx3wmme76.rs:20:15\n   |\n20 |   return diff / numbers.len();\n   |               ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let sum = 0.0;\n  for number in numbers {\n    sum += abs(number - mean(numbers));\n  }\n  return sum / len(numbers);\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293352,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmpxqidk4mm.rs:11:12\n   |\n11 |     sum += abs(number - mean(numbers));\n   |            ^^^ not found in this scope\n\nerror[E0425]: cannot find function `mean` in this scope\n  --> /tmp/tmpxqidk4mm.rs:11:25\n   |\n11 |     sum += abs(number - mean(numbers));\n   |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpxqidk4mm.rs:13:16\n   |\n13 |   return sum / len(numbers);\n   |                ^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp4cq24_i6.rs:17:23\n   |\n17 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:19:20\n   |\n19 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let squared_deviations = numbers.map(x => (x - mean) * (x - mean));\n  return mean_absolute_deviation(squared_deviations);\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error: expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found `=>`\n  --> /tmp/tmpyp9dj83o.rs:10:42\n   |\n10 |   let squared_deviations = numbers.map(x => (x - mean) * (x - mean));\n   |                                          ^^ expected one of 8 possible tokens\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for number in numbers {\n    sum += abs(number - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpxbd17q6d.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmpxbd17q6d.rs:12:12\n   |\n12 |     sum += abs(number - mean);\n   |            ^^^ not found in this scope\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpxbd17q6d.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut result = 0.0;\n  for number in numbers {\n    result += abs(number - mean);\n  }\n  return result / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293352,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmphs_dv0fk.rs:17:15\n   |\n17 |     result += abs(number - mean);\n   |               ^^^ not found in this scope\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmphs_dv0fk.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmphs_dv0fk.rs:19:17\n   |\n19 |   return result / numbers.len();\n   |                 ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let squared_deviations = numbers.map(x => (x - mean) * (x - mean));\n  return mean_absolute_deviation(squared_deviations);\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error: expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found `=>`\n  --> /tmp/tmpyp9dj83o.rs:10:42\n   |\n10 |   let squared_deviations = numbers.map(x => (x - mean) * (x - mean));\n   |                                          ^^ expected one of 8 possible tokens\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut diff = 0.0;\n  for number in numbers {\n    diff += std::abs(number - mean);\n  }\n  return diff / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpiwcm3540.rs:17:18\n   |\n17 |     diff += std::abs(number - mean);\n   |                  ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpiwcm3540.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpiwcm3540.rs:19:15\n   |\n19 |   return diff / numbers.len();\n   |               ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for i in numbers {\n    sum += std::abs(i - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpdi4ea_n2.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpdi4ea_n2.rs:12:17\n   |\n12 |     sum += std::abs(i - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpdi4ea_n2.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum_of_squares = 0.0;\n  for number in numbers {\n    mean += number;\n    sum_of_squares += (number * number);\n  }\n  mean /= numbers.len();\n  return (sum_of_squares / numbers.len()) - (mean * mean);\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around assigned value\n  --> /tmp/tmpjafbknbt.rs:13:23\n   |\n13 |     sum_of_squares += (number * number);\n   |                       ^               ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n13 -     sum_of_squares += (number * number);\n13 +     sum_of_squares += number * number;\n   | \n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmpjafbknbt.rs:15:8\n   |\n15 |   mean /= numbers.len();\n   |        ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpjafbknbt.rs:16:26\n   |\n16 |   return (sum_of_squares / numbers.len()) - (mean * mean);\n   |                          ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 2 previous errors; 1 warning emitted\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for number in numbers {\n    sum += abs(number - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpxbd17q6d.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmpxbd17q6d.rs:12:12\n   |\n12 |     sum += abs(number - mean);\n   |            ^^^ not found in this scope\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpxbd17q6d.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  for number in numbers {\n    mean += number;\n  }\n  mean /= numbers.len();\n\n  let mut result = 0.0;\n  for number in numbers {\n    result += std::abs(number - mean);\n  }\n  result /= numbers.len();\n\n  return result;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293352,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpgpybaoux.rs:17:20\n   |\n17 |     result += std::abs(number - mean);\n   |                    ^^^ not found in `std`\n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmpgpybaoux.rs:13:8\n   |\n13 |   mean /= numbers.len();\n   |        ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror[E0277]: cannot divide-assign `{float}` by `usize`\n  --> /tmp/tmpgpybaoux.rs:19:10\n   |\n19 |   result /= numbers.len();\n   |          ^^ no implementation for `{float} /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  for number in numbers {\n    mean += number;\n  }\n  mean /= numbers.len();\n\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += std::abs(number - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpzg_b0vt9.rs:17:17\n   |\n17 |     sum += std::abs(number - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmpzg_b0vt9.rs:13:8\n   |\n13 |   mean /= numbers.len();\n   |        ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpzg_b0vt9.rs:19:14\n   |\n19 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut diff = 0.0;\n  for number in numbers {\n    diff += std::abs(number - mean);\n  }\n  return diff / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpiwcm3540.rs:17:18\n   |\n17 |     diff += std::abs(number - mean);\n   |                  ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpiwcm3540.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpiwcm3540.rs:19:15\n   |\n19 |   return diff / numbers.len();\n   |               ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for i in numbers {\n    sum += std::abs(i - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpdi4ea_n2.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpdi4ea_n2.rs:12:17\n   |\n12 |     sum += std::abs(i - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpdi4ea_n2.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp4cq24_i6.rs:17:23\n   |\n17 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:19:20\n   |\n19 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for number in numbers {\n    sum += abs(number - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpxbd17q6d.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmpxbd17q6d.rs:12:12\n   |\n12 |     sum += abs(number - mean);\n   |            ^^^ not found in this scope\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpxbd17q6d.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for i in numbers {\n    sum += std::abs(i - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpdi4ea_n2.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpdi4ea_n2.rs:12:17\n   |\n12 |     sum += std::abs(i - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpdi4ea_n2.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let sum = 0.0;\n  let count = 0;\n  for number in numbers {\n    sum += abs(number - mean(numbers));\n    count += 1;\n  }\n  return sum / count;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293352,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmphs21ty7x.rs:12:12\n   |\n12 |     sum += abs(number - mean(numbers));\n   |            ^^^ not found in this scope\n\nerror[E0425]: cannot find function `mean` in this scope\n  --> /tmp/tmphs21ty7x.rs:12:25\n   |\n12 |     sum += abs(number - mean(numbers));\n   |                         ^^^^ not found in this scope\n\nerror[E0277]: cannot divide `{float}` by `{integer}`\n  --> /tmp/tmphs21ty7x.rs:15:14\n   |\n15 |   return sum / count;\n   |              ^ no implementation for `{float} / {integer}`\n   |\n   = help: the trait `Div<{integer}>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp7_uqv7sm.rs:18:23\n   |\n18 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp7_uqv7sm.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp7_uqv7sm.rs:20:20\n   |\n20 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for i in numbers {\n    sum += std::abs(i - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpdi4ea_n2.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpdi4ea_n2.rs:12:17\n   |\n12 |     sum += std::abs(i - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpdi4ea_n2.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let sum = 0.0;\n  for number in numbers {\n    sum += std::abs(number - mean(numbers));\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp22ofz2bz.rs:11:17\n   |\n11 |     sum += std::abs(number - mean(numbers));\n   |                 ^^^ not found in `std`\n\nerror[E0425]: cannot find function `mean` in this scope\n  --> /tmp/tmp22ofz2bz.rs:11:30\n   |\n11 |     sum += std::abs(number - mean(numbers));\n   |                              ^^^^ not found in this scope\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp22ofz2bz.rs:13:14\n   |\n13 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut diff = 0.0;\n  for number in numbers {\n    diff += std::abs(number - mean);\n  }\n  return diff / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpiwcm3540.rs:17:18\n   |\n17 |     diff += std::abs(number - mean);\n   |                  ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpiwcm3540.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpiwcm3540.rs:19:15\n   |\n19 |   return diff / numbers.len();\n   |               ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp7_uqv7sm.rs:18:23\n   |\n18 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp7_uqv7sm.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp7_uqv7sm.rs:20:20\n   |\n20 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut diff = 0.0;\n  for number in numbers {\n    diff += std::abs(number - mean);\n  }\n  return diff / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpiwcm3540.rs:17:18\n   |\n17 |     diff += std::abs(number - mean);\n   |                  ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpiwcm3540.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpiwcm3540.rs:19:15\n   |\n19 |   return diff / numbers.len();\n   |               ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum_of_squares = 0.0;\n  let mut count = 0.0;\n\n  for number in numbers {\n    mean += number;\n    sum_of_squares += (number * number);\n    count += 1.0;\n  }\n\n  mean /= count;\n  sum_of_squares /= count;\n\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n\n  deviation /= count;\n\n  return deviation;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmppu60wuq6.rs:24:23\n   |\n24 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nwarning: unnecessary parentheses around assigned value\n  --> /tmp/tmppu60wuq6.rs:15:23\n   |\n15 |     sum_of_squares += (number * number);\n   |                       ^               ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n15 -     sum_of_squares += (number * number);\n15 +     sum_of_squares += number * number;\n   | \n\nerror: aborting due to previous error; 1 warning emitted\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp4cq24_i6.rs:17:23\n   |\n17 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:19:20\n   |\n19 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum_of_squares = 0.0;\n\n  for number in numbers {\n    mean += number;\n    sum_of_squares += (number * number);\n  }\n\n  let mut deviation = 0.0;\n  let mut numerator = 0.0;\n  let mut denominator = 0.0;\n\n  mean /= numbers.len();\n  numerator = sum_of_squares - (mean * mean);\n  denominator = numbers.len() * numerator;\n\n  if denominator == 0.0 {\n    return 0.0;\n  }\n\n  deviation = numerator / denominator;\n\n  return std::fabs(deviation);\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293352,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `fabs` in crate `std`\n  --> /tmp/tmpxpx3i5yk.rs:31:15\n   |\n31 |   return std::fabs(deviation);\n   |               ^^^^ not found in `std`\n\nwarning: unnecessary parentheses around assigned value\n  --> /tmp/tmpxpx3i5yk.rs:14:23\n   |\n14 |     sum_of_squares += (number * number);\n   |                       ^               ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n14 -     sum_of_squares += (number * number);\n14 +     sum_of_squares += number * number;\n   | \n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmpxpx3i5yk.rs:21:8\n   |\n21 |   mean /= numbers.len();\n   |        ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror[E0277]: cannot multiply `usize` by `f64`\n  --> /tmp/tmpxpx3i5yk.rs:23:31\n   |\n23 |   denominator = numbers.len() * numerator;\n   |                               ^ no implementation for `usize * f64`\n   |\n   = help: the trait `Mul<f64>` is not implemented for `usize`\n   = help: the following other types implement trait `Mul<Rhs>`:\n             <&'a f32 as Mul<f32>>\n             <&'a f64 as Mul<f64>>\n             <&'a i128 as Mul<i128>>\n             <&'a i16 as Mul<i16>>\n             <&'a i32 as Mul<i32>>\n             <&'a i64 as Mul<i64>>\n             <&'a i8 as Mul<i8>>\n             <&'a isize as Mul<isize>>\n           and 49 others\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for i in numbers {\n    sum += std::abs(i - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpdi4ea_n2.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpdi4ea_n2.rs:12:17\n   |\n12 |     sum += std::abs(i - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpdi4ea_n2.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let sum = 0.0;\n  for number in numbers {\n    sum += std::abs(number - mean(numbers));\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp22ofz2bz.rs:11:17\n   |\n11 |     sum += std::abs(number - mean(numbers));\n   |                 ^^^ not found in `std`\n\nerror[E0425]: cannot find function `mean` in this scope\n  --> /tmp/tmp22ofz2bz.rs:11:30\n   |\n11 |     sum += std::abs(number - mean(numbers));\n   |                              ^^^^ not found in this scope\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp22ofz2bz.rs:13:14\n   |\n13 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum_of_squares = 0.0;\n  for number in numbers {\n    mean += number;\n    sum_of_squares += (number * number);\n  }\n  mean /= numbers.len();\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  deviation /= numbers.len();\n  return std::sqrt(deviation / numbers.len());\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293352,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp65xld5fg.rs:18:23\n   |\n18 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0425]: cannot find function `sqrt` in crate `std`\n  --> /tmp/tmp65xld5fg.rs:21:15\n   |\n21 |   return std::sqrt(deviation / numbers.len());\n   |               ^^^^ not found in `std`\n\nwarning: unnecessary parentheses around assigned value\n  --> /tmp/tmp65xld5fg.rs:13:23\n   |\n13 |     sum_of_squares += (number * number);\n   |                       ^               ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n13 -     sum_of_squares += (number * number);\n13 +     sum_of_squares += number * number;\n   | \n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmp65xld5fg.rs:15:8\n   |\n15 |   mean /= numbers.len();\n   |        ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror[E0277]: cannot divide-assign `{float}` by `usize`\n  --> /tmp/tmp65xld5fg.rs:20:13\n   |\n20 |   deviation /= numbers.len();\n   |             ^^ no implementation for `{float} /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror[E0277]: cannot divi",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmp9hwysrz0.rs:18:18\n   |\n18 |     deviation += abs(number - mean);\n   |                  ^^^ not found in this scope\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp9hwysrz0.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp9hwysrz0.rs:20:20\n   |\n20 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for number in numbers {\n    sum += abs(number - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpxbd17q6d.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmpxbd17q6d.rs:12:12\n   |\n12 |     sum += abs(number - mean);\n   |            ^^^ not found in this scope\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpxbd17q6d.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n\n  let mut result = 0.0;\n  for number in numbers {\n    result += std::abs(number - mean);\n  }\n  result /= numbers.len();\n\n  return result;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293352,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpcx7e61e7.rs:18:20\n   |\n18 |     result += std::abs(number - mean);\n   |                    ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpcx7e61e7.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide-assign `{float}` by `usize`\n  --> /tmp/tmpcx7e61e7.rs:20:10\n   |\n20 |   result /= numbers.len();\n   |          ^^ no implementation for `{float} /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum_of_squares = 0.0;\n  for number in numbers {\n    mean += number;\n    sum_of_squares += (number * number);\n  }\n  mean /= numbers.len();\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  deviation /= numbers.len();\n  deviation = std::sqrt(deviation);\n  deviation = std::f64::sqrt(sum_of_squares / numbers.len() - (mean * mean));\n  return deviation;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293352,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmprjwa2y33.rs:18:23\n   |\n18 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0425]: cannot find function `sqrt` in crate `std`\n  --> /tmp/tmprjwa2y33.rs:21:20\n   |\n21 |   deviation = std::sqrt(deviation);\n   |                    ^^^^ not found in `std`\n\nerror[E0425]: cannot find function `sqrt` in module `std::f64`\n  --> /tmp/tmprjwa2y33.rs:22:25\n   |\n22 |   deviation = std::f64::sqrt(sum_of_squares / numbers.len() - (mean * mean));\n   |                         ^^^^ not found in `std::f64`\n\nwarning: unnecessary parentheses around assigned value\n  --> /tmp/tmprjwa2y33.rs:13:23\n   |\n13 |     sum_of_squares += (number * number);\n   |                       ^               ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n13 -     sum_of_squares += (number * number);\n13 +     sum_of_squares += number * number;\n   | \n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmprjwa2y33.rs:15:8\n   |\n15 |   mean /= numbers.len();\n   |        ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror[E0277]: cannot divide-assign `{float}` by `usize`\n  --> /tmp/tmprjwa2y33.rs:20:13\n   |\n20 |   deviation /= numbers.len();\n   |             ^^ no implementation for `{float} /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssi",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let sum = 0.0;\n  for number in numbers {\n    sum += abs(number - mean(numbers));\n  }\n  return sum / len(numbers);\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293352,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmpxqidk4mm.rs:11:12\n   |\n11 |     sum += abs(number - mean(numbers));\n   |            ^^^ not found in this scope\n\nerror[E0425]: cannot find function `mean` in this scope\n  --> /tmp/tmpxqidk4mm.rs:11:25\n   |\n11 |     sum += abs(number - mean(numbers));\n   |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `len` in this scope\n  --> /tmp/tmpxqidk4mm.rs:13:16\n   |\n13 |   return sum / len(numbers);\n   |                ^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp7_uqv7sm.rs:18:23\n   |\n18 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp7_uqv7sm.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp7_uqv7sm.rs:20:20\n   |\n20 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let squared_deviations = numbers.map(x => (x - mean) * (x - mean));\n  return mean_absolute_deviation(squared_deviations) / numbers.length;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error: expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found `=>`\n  --> /tmp/tmpo0yfb9l4.rs:10:42\n   |\n10 |   let squared_deviations = numbers.map(x => (x - mean) * (x - mean));\n   |                                          ^^ expected one of 8 possible tokens\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp4cq24_i6.rs:17:23\n   |\n17 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:19:20\n   |\n19 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n\n  let mut diff = 0.0;\n  for number in numbers {\n    diff += std::abs(number - mean);\n  }\n  return diff / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpx3wmme76.rs:18:18\n   |\n18 |     diff += std::abs(number - mean);\n   |                  ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpx3wmme76.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpx3wmme76.rs:20:15\n   |\n20 |   return diff / numbers.len();\n   |               ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut result = 0.0;\n  for number in numbers {\n    result += std::abs(number - mean);\n  }\n  result /= numbers.len();\n  return result;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpega6jc_1.rs:17:20\n   |\n17 |     result += std::abs(number - mean);\n   |                    ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpega6jc_1.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide-assign `{float}` by `usize`\n  --> /tmp/tmpega6jc_1.rs:19:10\n   |\n19 |   result /= numbers.len();\n   |          ^^ no implementation for `{float} /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n\n  let mut sum_of_squares = 0.0;\n  for number in numbers {\n    let diff = number - mean;\n    sum_of_squares += diff * diff;\n  }\n\n  return sum_of_squares / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293352,
      "stdout": "",
      "stderr": "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmplrg91l__.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmplrg91l__.rs:22:25\n   |\n22 |   return sum_of_squares / numbers.len();\n   |                         ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n\n  let mut diff = 0.0;\n  for number in numbers {\n    diff += abs(number - mean);\n  }\n  return diff / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293352,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmp0zzlfa_f.rs:18:13\n   |\n18 |     diff += abs(number - mean);\n   |             ^^^ not found in this scope\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp0zzlfa_f.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp0zzlfa_f.rs:20:15\n   |\n20 |   return diff / numbers.len();\n   |               ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let sum = 0.0;\n  for number in numbers {\n    sum += std::abs(number - mean(numbers));\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp22ofz2bz.rs:11:17\n   |\n11 |     sum += std::abs(number - mean(numbers));\n   |                 ^^^ not found in `std`\n\nerror[E0425]: cannot find function `mean` in this scope\n  --> /tmp/tmp22ofz2bz.rs:11:30\n   |\n11 |     sum += std::abs(number - mean(numbers));\n   |                              ^^^^ not found in this scope\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp22ofz2bz.rs:13:14\n   |\n13 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for i in numbers {\n    sum += std::abs(i - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpdi4ea_n2.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpdi4ea_n2.rs:12:17\n   |\n12 |     sum += std::abs(i - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpdi4ea_n2.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum_of_squares = 0.0;\n\n  for number in numbers {\n    mean += number;\n    sum_of_squares += (number * number);\n  }\n\n  mean /= numbers.len();\n  return (sum_of_squares / numbers.len()) - (mean * mean);\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "warning: unnecessary parentheses around assigned value\n  --> /tmp/tmp5ht00u1v.rs:14:23\n   |\n14 |     sum_of_squares += (number * number);\n   |                       ^               ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n14 -     sum_of_squares += (number * number);\n14 +     sum_of_squares += number * number;\n   | \n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmp5ht00u1v.rs:17:8\n   |\n17 |   mean /= numbers.len();\n   |        ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp5ht00u1v.rs:18:26\n   |\n18 |   return (sum_of_squares / numbers.len()) - (mean * mean);\n   |                          ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 2 previous errors; 1 warning emitted\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let sum = 0.0;\n  for number in numbers {\n    sum += std::abs(number - mean(numbers));\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp22ofz2bz.rs:11:17\n   |\n11 |     sum += std::abs(number - mean(numbers));\n   |                 ^^^ not found in `std`\n\nerror[E0425]: cannot find function `mean` in this scope\n  --> /tmp/tmp22ofz2bz.rs:11:30\n   |\n11 |     sum += std::abs(number - mean(numbers));\n   |                              ^^^^ not found in this scope\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp22ofz2bz.rs:13:14\n   |\n13 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for i in numbers {\n    sum += std::abs(i - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpdi4ea_n2.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpdi4ea_n2.rs:12:17\n   |\n12 |     sum += std::abs(i - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpdi4ea_n2.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  let mut count = 0;\n  for number in numbers {\n    mean += number;\n    sum += std::abs(number - mean);\n    count += 1;\n  }\n  return sum / count;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpluk6asrh.rs:14:17\n   |\n14 |     sum += std::abs(number - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide `{float}` by `{integer}`\n  --> /tmp/tmpluk6asrh.rs:17:14\n   |\n17 |   return sum / count;\n   |              ^ no implementation for `{float} / {integer}`\n   |\n   = help: the trait `Div<{integer}>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  for number in numbers {\n    mean += number;\n  }\n  mean /= numbers.len();\n\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += std::abs(number - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpzg_b0vt9.rs:17:17\n   |\n17 |     sum += std::abs(number - mean);\n   |                 ^^^ not found in `std`\n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmpzg_b0vt9.rs:13:8\n   |\n13 |   mean /= numbers.len();\n   |        ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpzg_b0vt9.rs:19:14\n   |\n19 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut result = 0.0;\n  for number in numbers {\n    result += std::abs(number - mean);\n  }\n  return result / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmpt3wutxjh.rs:17:20\n   |\n17 |     result += std::abs(number - mean);\n   |                    ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpt3wutxjh.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpt3wutxjh.rs:19:17\n   |\n19 |   return result / numbers.len();\n   |                 ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum = 0.0;\n  for number in numbers {\n    sum += number;\n  }\n  mean = sum / numbers.len();\n  let mut deviation = 0.0;\n  for number in numbers {\n    deviation += std::abs(number - mean);\n  }\n  return deviation / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `abs` in crate `std`\n  --> /tmp/tmp4cq24_i6.rs:17:23\n   |\n17 |     deviation += std::abs(number - mean);\n   |                       ^^^ not found in `std`\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:14:14\n   |\n14 |   mean = sum / numbers.len();\n   |              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmp4cq24_i6.rs:19:20\n   |\n19 |   return deviation / numbers.len();\n   |                    ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mean = mean(numbers);\n  let sum = 0.0;\n  for number in numbers {\n    sum += abs(number - mean);\n  }\n  return sum / numbers.len();\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293351,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `mean` in this scope\n --> /tmp/tmpxbd17q6d.rs:9:14\n  |\n9 |   let mean = mean(numbers);\n  |              ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmpxbd17q6d.rs:12:12\n   |\n12 |     sum += abs(number - mean);\n   |            ^^^ not found in this scope\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpxbd17q6d.rs:14:14\n   |\n14 |   return sum / numbers.len();\n   |              ^ no implementation for `{float} / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum_of_squares = 0.0;\n\n  for number in numbers {\n    mean += number;\n    sum_of_squares += (number * number);\n  }\n\n  let mut deviation = 0.0;\n  let mut variance = 0.0;\n\n  mean /= numbers.len();\n  variance = (sum_of_squares / numbers.len()) - (mean * mean);\n\n  if variance == 0.0 {\n    return 0.0;\n  }\n\n  deviation = math.sqrt(variance);\n\n  return deviation;\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293352,
      "stdout": "",
      "stderr": "error[E0425]: cannot find value `math` in this scope\n  --> /tmp/tmpq3vvq85k.rs:27:15\n   |\n27 |   deviation = math.sqrt(variance);\n   |               ^^^^ not found in this scope\n\nwarning: unnecessary parentheses around assigned value\n  --> /tmp/tmpq3vvq85k.rs:14:23\n   |\n14 |     sum_of_squares += (number * number);\n   |                       ^               ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n   |\n14 -     sum_of_squares += (number * number);\n14 +     sum_of_squares += number * number;\n   | \n\nerror[E0277]: cannot divide-assign `f64` by `usize`\n  --> /tmp/tmpq3vvq85k.rs:20:8\n   |\n20 |   mean /= numbers.len();\n   |        ^^ no implementation for `f64 /= usize`\n   |\n   = help: the trait `DivAssign<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `DivAssign<Rhs>`:\n             <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n             <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n             <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16 as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3vvq85k.rs:21:30\n   |\n21 |   variance = (sum_of_squares / numbers.len()) - (mean * mean);\n   |                              ^ no implementation for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n/// around the mean of this dataset.\n/// Mean Absolute Deviation is the average absolute difference between each\n/// element and a centerpoint (mean in this case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0, 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n  let mut mean = 0.0;\n  let mut sum_of_squares = 0.0;\n  let mut count = 0.0;\n\n  for number in numbers {\n    mean += number;\n    sum_of_squares += (number * number);\n    count += 1.0;\n  }\n\n  mean /= count;\n  return (sum_of_squares / count) - (mean * mean);\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n",
      "timestamp": 1664293352,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0.25`,\n right: `0.5`', /tmp/tmpri3etvsq.rs:25:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    }
  ]
}
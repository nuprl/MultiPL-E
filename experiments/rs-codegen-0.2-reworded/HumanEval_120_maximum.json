{
  "name": "HumanEval_120_maximum",
  "language": "rs",
  "prompt": "/// Given a vector arr of integers and a positive integer k, return a sorted vector \n/// of length k with the maximum k numbers in arr.\n/// Example 1:\n/// >>> maximum(vec![-3, -4, 5], 3)\n/// vec![-4, -3, 5]\n/// Example 2:\n/// >>> maximum(vec![4, -4, 4], 2)\n/// vec![4, 4]\n/// Example 3:\n/// >>> maximum(vec![-3, 2, 1, 2, -1, -2, 1], 1)\n/// vec![2]\n/// Note:\n/// 1. The length of the vector will be in the range of [1, 1000].\n/// 2. The elements in the vector will be in the range of [-1000, 1000].\n/// 3. 0 <= k <= len(arr)\nfn maximum(arr: Vec<isize>, k: isize) -> Vec<isize> {\n",
  "tests": "}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(vec![-3, -4, 5], 3), vec![-4, -3, 5]);\n    assert_eq!(candidate(vec![4, -4, 4], 2), vec![4, 4]);\n    assert_eq!(candidate(vec![-3, 2, 1, 2, -1, -2, 1], 1), vec![2]);\n    assert_eq!(candidate(vec![123, -123, 20, 0, 1, 2, -3], 3), vec![2, 20, 123]);\n    assert_eq!(candidate(vec![-123, 20, 0, 1, 2, -3], 4), vec![0, 1, 2, 20]);\n    assert_eq!(candidate(vec![5, 15, 0, 3, -13, -8, 0], 7), vec![-13, -8, 0, 0, 3, 5, 15]);\n    assert_eq!(candidate(vec![-1, 0, 2, 5, 3, -10], 2), vec![3, 5]);\n    assert_eq!(candidate(vec![1, 0, 5, -7], 1), vec![5]);\n    assert_eq!(candidate(vec![4, -4], 2), vec![-4, 4]);\n    assert_eq!(candidate(vec![-10, 10], 2), vec![-10, 10]);\n    assert_eq!(candidate(vec![1, 2, 3, -23, 243, -400, 0], 0), Vec::<isize>::new());\n}\n",
  "completions": [
    "    let max_arr = Vec.new(k);\n    let max_index = 0;\n    for i in 0..k {\n        if arr[i] > arr[max_index] {\n            max_index = i;\n        }\n    }\n    for i in 0..k {\n        max_arr[i] = arr[max_index];\n        max_index = (max_index + 1) % k;\n    }\n    return max_arr;",
    "    let max_arr = vec![];\n    for i in 0..k-1 {\n        max_arr = max_arr.push(arr[i]);\n    }\n    for i in k..len(arr) {\n        if arr[i] > max_arr[k-1] {\n            max_arr = max_arr.set(k-1, arr[i]);\n        }\n    }\n    return max_arr;",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in arr.iter() {\n        if i > max_value {\n            max_value = i\n            max_index = i\n        }\n    }\n    let result = [max_index]\n    for i in arr.iter() {\n        if i == max_value {\n            result.push(i)\n        }\n    }\n    if len(result) < k {\n        result.push(max_value)\n    }\n    return result",
    "    let max_idx = 0\n    let max_val = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_val {\n            max_val = arr[i]\n            max_idx = i\n        }\n    }\n    let result = arr.copy()\n    result[max_idx] = max_val\n    return result",
    "    let max = 0\n    let max_index = 0\n    for i in 0..k {\n        if arr[i] > max {\n            max = arr[i]\n            max_index = i\n        }\n    }\n    for i in k..len(arr) {\n        if arr[i] > max {\n            max = arr[i]\n            max_index = i\n        }\n    }\n    return arr.slice(max_index, max_index + k)",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k - 1 {\n        result.push(arr[max_index])\n        max_index = (max_index + 1) % k\n    }\n    return result",
    "    let max_arr = Vec.new(k)\n    let max_index = 0\n    for i in 0..k {\n        if arr[i] > arr[max_index] {\n            max_index = i\n        }\n    }\n    for i in 0..k {\n        max_arr[i] = arr[max_index]\n        max_index = (max_index + 1) % k\n    }\n    return max_arr",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k - 1 {\n        if arr[i] == max_value {\n            result = result.push(arr[i])\n        }\n    }\n    return result",
    "    let max_idx = 0\n    let max_val = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_val {\n            max_val = arr[i]\n            max_idx = i\n        }\n    }\n    let max_arr = Vec![max_val]\n    for i in 0..k-1 {\n        if arr[i] == max_val {\n            max_arr = max_arr.push(arr[i])\n        }\n    }\n    return max_arr",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result = result.concat(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k - 1 {\n        if arr[i] == max_value {\n            result = result.push(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k - 1 {\n        result.push(arr[i])\n    }\n    result.push(max_value)\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in arr.iter() {\n        if i > max_value {\n            max_value = i\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in arr.iter() {\n        if i == max_value {\n            result.push_back(max_index)\n        }\n    }\n    result.resize(k)\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k - 1 {\n        if arr[i] == max_value {\n            result = result.push(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in arr.iter() {\n        if i > max_value {\n            max_value = i\n            max_index = i\n        }\n    }\n    let result = []\n    for i in arr.iter() {\n        if i == max_value {\n            result.push(i)\n        }\n        if len(result) == k {\n            break\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result = result.push(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = [max_value]\n    for i in 0..k - 1 {\n        if arr[i] == max_value {\n            result = result.concat(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result = result.concat(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k-1 {\n        result.push(arr[i] if i == max_index else -1)\n    }\n    return result",
    "    let max_idx = 0\n    let max_val = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_val {\n            max_val = arr[i]\n            max_idx = i\n        }\n    }\n    let result = [max_val]\n    for i in 0..k-1 {\n        if arr[i] == max_val {\n            result.push(arr[i])\n        }\n    }\n    return result",
    "    let max = 0\n    let max_index = 0\n    for i in 0..k {\n        if arr[i] > max {\n            max = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k {\n        if arr[i] == max {\n            result.push_back(arr[i])\n        }\n    }\n    return result",
    "    let max_idx = 0\n    let max_val = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_val {\n            max_val = arr[i]\n            max_idx = i\n        }\n    }\n    let max_arr = Vec![max_val]\n    for i in 0..k-1 {\n        if arr[i] == max_val {\n            max_arr = max_arr.push(arr[i])\n        }\n    }\n    return max_arr",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k-1 {\n        result.push(arr[i] if i == max_index else -1)\n    }\n    return result",
    "    let max_idx = 0\n    let max_val = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_val {\n            max_val = arr[i]\n            max_idx = i\n        }\n    }\n    let result = [max_val]\n    for i in 0..k - 1 {\n        if arr[i] == max_val {\n            result.push(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result.push(arr[i])\n        }\n    }\n    return result",
    "    let max_arr = Vec::new(k);\n    let max_index = 0;\n    for i in 0..k {\n        if arr[i] > arr[max_index] {\n            max_index = i;\n        }\n    }\n    for i in 0..k {\n        max_arr[i] = arr[max_index];\n        max_index = (max_index + 1) % k;\n    }\n    return max_arr;",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec<isize>{}\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result = result.concat(arr[i])\n        }\n    }\n    return result",
    "    let max_idx = 0\n    let max_val = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_val {\n            max_val = arr[i]\n            max_idx = i\n        }\n    }\n    let res = Vec::new()\n    for i in 0..k-1 {\n        if arr[i] == max_val {\n            res.push_back(arr[i])\n        }\n    }\n    res.push_back(arr[max_idx])\n    return res",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result.push(arr[i])\n        }\n    }\n    result.push(arr[max_index])\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result.push(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k - 1 {\n        result = result.push(arr[i])\n    }\n    result = result.push(max_value)\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result = result.concat(arr[i])\n        }\n    }\n    return result",
    "    let max_k = 0\n    let max_index = 0\n    for i in 0..k {\n        if arr[i] > arr[max_index] {\n            max_index = i\n            max_k = 1\n        } else if arr[i] == arr[max_index] {\n            max_k += 1\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k {\n        if arr[i] == arr[max_index] {\n            result.push_back(arr[i])\n        }\n    }\n    result.push_back(arr[max_index])\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k - 1 {\n        if arr[i] == max_value {\n            result = result.push(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result.push(arr[i])\n        }\n    }\n    result.push(arr[max_index])\n    return result",
    "    let max = arr[0];\n    let max_index = 0;\n    for i in arr.iter() {\n        if i > max {\n            max = i;\n            max_index = i;\n        }\n    }\n    let result = [max_index];\n    for i in arr.iter() {\n        if i == max_index {\n            result.push(i);\n        }\n    }\n    if len(result) < k {\n        result.push(max_index);\n    }\n    return result;",
    "    let max = arr[0];\n    let max_index = 0;\n    for i in arr.iter() {\n        if i > max {\n            max = i;\n            max_index = i;\n        }\n    }\n    let result = Vec::new();\n    for i in range(k) {\n        result.push(max_index);\n        max_index = max_index + 1;\n        if max_index >= arr.len()) {\n            max_index = 0;\n        }\n        max = arr[max_index];\n    }\n    return result;",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in arr.iter() {\n        if i > max_value {\n            max_value = i\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in arr.iter() {\n        if i == max_value {\n            result.push_back(i)\n        }\n    }\n    if len(result) < k {\n        result.push_back(max_value)\n    }\n    return result",
    "    let max_arr = Vec.new(k);\n    let max_index = 0;\n    for i in 0..k {\n        if arr[i] > arr[max_index] {\n            max_index = i;\n        }\n    }\n    for i in 0..k {\n        max_arr[i] = arr[max_index];\n        max_index = (max_index + 1) % k;\n    }\n    return max_arr;",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in arr.iter() {\n        if i > max_value {\n            max_value = i\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in arr.iter() {\n        if i == max_value {\n            result.push_back(max_index)\n        }\n    }\n    result.sort()\n    if len(result) < k {\n        result.extend(k - len(result))\n    }\n    return result",
    "    let max = 0\n    let max_index = 0\n    for i in 0..k {\n        if arr[i] > max {\n            max = arr[i]\n            max_index = i\n        }\n    }\n    for i in k..len(arr) {\n        if arr[i] > max {\n            max = arr[i]\n            max_index = i\n        }\n    }\n    return arr.slice(max_index, k)",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result = result.push(arr[i])\n        }\n    }\n    return result",
    "    let max = 0\n    let max_index = 0\n    for i in 0..k {\n        if arr[i] > max {\n            max = arr[i]\n            max_index = i\n        }\n    }\n    for i in k..len(arr) {\n        if arr[i] > max {\n            max = arr[i]\n            max_index = i\n        }\n    }\n    return arr.slice(max_index, max_index + k)",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in arr {\n        if i > max_value {\n            max_value = i\n            max_index = i\n        }\n    }\n    let max_vec = Vec![max_value]\n    for i in arr {\n        if i == max_value {\n            max_vec = max_vec.push(i)\n        }\n    }\n    for i in range(1, k) {\n        max_vec = max_vec.push(arr[max_index])\n        max_index = max_index + 1\n        if max_index == len(arr) {\n            max_index = 0\n        }\n    }\n    return max_vec",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec<isize>{}\n    for i in 0..k - 1 {\n        if arr[i] == max_value {\n            result = result.push(i)\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let max_vec = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            max_vec = max_vec.push(arr[i])\n        }\n    }\n    return max_vec",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result = result.push(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in arr.iter() {\n        if i > max_value {\n            max_value = i\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in range(k) {\n        result.append(max_index)\n        max_index = max_index + 1\n        if max_index == len(arr) {\n            break\n        }\n        max_value = arr[max_index]\n        for j in arr.iter() {\n            if j > max_value {\n                max_value = j\n                max_index = j\n            }\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k - 1 {\n        result.push(arr[i])\n    }\n    result.push(max_value)\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result = result.push(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k - 1 {\n        result.push(arr[i] if i == max_index else -1)\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k-1 {\n        result.push(arr[i] if i == max_index else 0)\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result.push(i)\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = arr.copy()\n    for i in 0..k - 1 {\n        result[i] = arr[i]\n    }\n    result[max_index] = max_value\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let max_arr = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            max_arr = max_arr.concat(arr[i])\n        }\n    }\n    return max_arr",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result = result.push(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result = result.push(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = arr.copy()\n    result[max_index] = max_value\n    return result",
    "    let max_idx = 0\n    let max_val = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_val {\n            max_val = arr[i]\n            max_idx = i\n        }\n    }\n    let res = Vec::new()\n    for i in 0..k-1 {\n        if arr[i] == max_val {\n            res.push_back(arr[i])\n        }\n    }\n    return res",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in arr.iter() {\n        if i > max_value {\n            max_value = i\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in range(k) {\n        result.push(max_index)\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in arr.iter() {\n        if i > max_value {\n            max_value = i\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in range(0, k) {\n        result.push(max_index)\n        max_index = max_index + 1\n        if max_index >= len(arr) {\n            break\n        }\n        max_value = arr[max_index]\n        for j in arr.iter() {\n            if j > max_value {\n                max_value = j\n                max_index = j\n            }\n        }\n    }\n    return result",
    "    let max_arr = Vec.from_iter(0);\n    let max_k = 0;\n    for i in arr {\n        if i > max_arr[max_k] {\n            max_arr[max_k] = i;\n            max_k = max_k + 1;\n        }\n        if max_k == k {\n            break;\n        }\n    }\n    max_arr.length = k;\n    return max_arr;",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k-1 {\n        result.push(arr[i] if i == max_index else -1)\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let max_arr = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            max_arr = max_arr.concat(arr[i])\n        }\n    }\n    return max_arr",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec<isize>{}\n    for i in 0..k - 1 {\n        result = append(result, arr[i])\n    }\n    result = append(result, max_value)\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in arr {\n        if i > max_value {\n            max_value = i\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in range(k) {\n        result.push_back(max_index)\n        max_index = max_index + 1\n        if max_index >= len(arr) {\n            break\n        }\n        max_value = arr[max_index]\n    }\n    return result",
    "    let max_k = 0\n    let max_index = 0\n    for i in 0..k {\n        if arr[i] > arr[max_index] {\n            max_index = i\n            max_k = 1\n        } else if arr[i] == arr[max_index] {\n            max_k += 1\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k {\n        if arr[i] == arr[max_index] {\n            result.push(arr[i])\n        }\n    }\n    result.push(arr[max_index])\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in arr.iter() {\n        if i > max_value {\n            max_value = i\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in arr.iter() {\n        if i == max_value {\n            result.append(max_index)\n        }\n    }\n    result.sort()\n    if k > result.len() {\n        result.resize(k)\n    }\n    return result",
    "    let max_idx = 0\n    let max_val = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_val {\n            max_val = arr[i]\n            max_idx = i\n        }\n    }\n    let res = Vec::new()\n    for i in 0..k-1 {\n        if arr[i] == max_val {\n            res.push_back(arr[i])\n        }\n    }\n    res.push_back(arr[max_idx])\n    return res",
    "    let max = arr[0];\n    let max_index = 0;\n    for i in arr.iter() {\n        if i > max {\n            max = i;\n            max_index = i;\n        }\n    }\n    let result = [max_index];\n    for i in arr.iter() {\n        if i == max_index {\n            result = result.concat(arr.filter(j => j != max_index));\n            if len(result) == k {\n                return result;\n            }\n            result = [max_index];\n        }\n    }\n    return result;",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k - 1 {\n        if arr[i] == max_value {\n            result.push(arr[i])\n        }\n    }\n    result.push(arr[max_index])\n    return result",
    "    let max = arr[0]\n    let max_index = 0\n    for i in 1..k {\n        if arr[i] > max {\n            max = arr[i]\n            max_index = i\n        }\n    }\n    let max_arr = Vec![max]\n    for i in 0..k - 1 {\n        if arr[i] == max {\n            max_arr = max_arr.concat(arr[i])\n        }\n    }\n    return max_arr",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k - 1 {\n        if arr[i] == max_value {\n            result = result.push(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = [max_value]\n    for i in max_index+1..k-1 {\n        result = result.concat(arr[i]..)\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec<isize>{}\n    for i in 0..k-1 {\n        result = append(result, arr[i])\n    }\n    result = append(result, max_value)\n    return result",
    "    let max_idx = 0\n    let max_val = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_val {\n            max_val = arr[i]\n            max_idx = i\n        }\n    }\n    let max_vec = Vec![max_val]\n    for i in 0..k - 1 {\n        if arr[i] == max_val {\n            max_vec = max_vec.push(arr[i])\n        }\n    }\n    return max_vec",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k - 1 {\n        if arr[i] == max_value {\n            result.push_back(arr[i])\n        }\n    }\n    result.push_back(arr[max_index])\n    return result",
    "    let max = 0\n    let max_index = 0\n    for i in 0..k {\n        if arr[i] > max {\n            max = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec<isize>{}\n    for i in 0..k {\n        if arr[i] == max {\n            result = result.concat(arr[i])\n        }\n    }\n    return result",
    "    let max = arr[0];\n    let max_index = 0;\n    for i in arr.iter() {\n        if i > max {\n            max = i;\n            max_index = i;\n        }\n    }\n    let result = Vec::new();\n    for i in range(k) {\n        result.append(max_index);\n        max_index = max_index - 1;\n        if (max_index < 0) {\n            max_index = arr.len() - 1;\n        }\n        max = arr[max_index];\n    }\n    return result;",
    "    let max_arr = Vec.new(k)\n    let max_index = 0\n    let i = 0\n    for i in arr {\n        if i > max_arr[max_index] {\n            max_arr[max_index] = i\n            max_index = max_index + 1\n            if max_index == k {\n                break\n            }\n        }\n    }\n    max_arr.copy_from(arr)\n    return max_arr",
    "    let max = arr[0];\n    let max_index = 0;\n    for i in 0..k-1 {\n        if arr[i] > max {\n            max = arr[i];\n            max_index = i;\n        }\n    }\n    let result = Vec::new();\n    for i in 0..k-1 {\n        result.push(arr[i]);\n    }\n    result.push(max);\n    return result;",
    "    let max = 0\n    let max_index = 0\n    for i in 0..k {\n        if arr[i] > max {\n            max = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max]\n    for i in 0..k {\n        if arr[i] == max {\n            result = result.push(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let max_vec = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            max_vec = max_vec.push(arr[i])\n        }\n    }\n    return max_vec",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = arr.copy()\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result[i] = max_value\n        } else {\n            result[i] = arr[max_index]\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in arr.iter() {\n        if i > max_value {\n            max_value = i\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in range(k) {\n        result.push(max_index)\n        max_index = max_index + 1\n        if max_index == len(arr) {\n            break\n        }\n        max_value = arr[max_index]\n        for j in arr.iter() {\n            if j > max_value {\n                max_value = j\n                max_index = j\n            }\n        }\n    }\n    return result",
    "    let max = 0\n    let max_index = 0\n    for i in arr {\n        if i > max {\n            max = i\n            max_index = i\n        }\n    }\n    let result = [max_index]\n    for i in arr {\n        if i == max_index {\n            result.push(i)\n        } else {\n            result.push(i)\n        }\n    }\n    result.sort()\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k - 1 {\n        if arr[i] == max_value {\n            result = result.push(arr[i])\n        }\n    }\n    return result",
    "    let max = 0\n    let max_index = 0\n    for i in 0..k {\n        if arr[i] > max {\n            max = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new(k)\n    for i in 0..k {\n        result[i] = arr[i]\n    }\n    result[max_index] = max\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = arr.copy()\n    for i in 0..k - 1 {\n        if arr[i] == max_value {\n            result[i] = max_value\n        } else {\n            result[i] = arr[max_index]\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k - 1 {\n        result.push(arr[i])\n    }\n    result.push(max_value)\n    return result",
    "    let max = 0\n    let max_index = 0\n    for i in 0..k {\n        if arr[i] > max {\n            max = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max]\n    for i in 0..k {\n        if arr[i] == max {\n            result = result.push(i)\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result = result.push(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k - 1 {\n        result.push_back(arr[i])\n    }\n    result.push_back(max_value)\n    return result",
    "    let max = 0\n    let max_index = 0\n    for i in 0..k {\n        if arr[i] > max {\n            max = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k {\n        if arr[i] == max {\n            result.push_back(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in arr.iter() {\n        if i > max_value {\n            max_value = i\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in range(k) {\n        result.push(max_index)\n        max_index = max_index + 1\n        if max_index >= len(arr) {\n            break\n        }\n        max_value = arr[max_index]\n        for j in arr.iter() {\n            if j > max_value {\n                max_value = j\n                max_index = j\n            }\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in arr.iter() {\n        if i > max_value {\n            max_value = i\n            max_index = i\n        }\n    }\n    let max_arr = Vec![max_value]\n    for i in arr.iter() {\n        if i == max_value {\n            max_arr = max_arr.push(i)\n        }\n    }\n    if k < max_arr.len() {\n        max_arr = max_arr.take(k)\n    }\n    return max_arr",
    "    let max_idx = 0\n    let max_val = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_val {\n            max_val = arr[i]\n            max_idx = i\n        }\n    }\n    let max_arr = Vec![max_val]\n    for i in 0..k-1 {\n        if arr[i] == max_val {\n            max_arr = max_arr.push(arr[i])\n        }\n    }\n    return max_arr",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k-1 {\n        result.push(arr[i] if i == max_index else 0)\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = [max_value]\n    for i in 0..k - 1 {\n        if arr[i] == max_value {\n            result.push(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result = result.concat(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let max_arr = Vec![]\n    for i in 0..k - 1 {\n        if arr[i] == max_value {\n            max_arr = max_arr.push(arr[i])\n        }\n    }\n    return max_arr",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k - 1 {\n        if arr[i] == max_value {\n            result = result.concat(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result = result.push(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in arr.iter() {\n        if i > max_value {\n            max_value = i\n            max_index = i\n        }\n    }\n    let max_arr = Vec::new()\n    for i in arr.iter() {\n        if i == max_value {\n            max_arr.push(i)\n        }\n    }\n    for i in max_arr.iter() {\n        if i == max_index {\n            max_arr.push(i)\n        }\n    }\n    for i in max_arr.iter() {\n        if i < max_index {\n            max_arr.push(i)\n        }\n    }\n    max_arr.sort()\n    for i in max_arr.iter() {\n        if i < k {\n            max_arr.push(i)\n        }\n    }\n    return max_arr",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result = result.push(arr[i])\n        }\n    }\n    return result",
    "    let max_k = 0\n    let max_i = 0\n    for i in arr {\n        if i > max_k {\n            max_k = i\n            max_i = i\n        }\n    }\n    let max_arr = Vec::new()\n    for i in arr {\n        if i == max_i {\n            max_arr.push_back(i)\n        }\n    }\n    if k > max_k {\n        max_arr = Vec::new()\n        for i in arr {\n            if i == max_i {\n                max_arr.push_back(i)\n            }\n        }\n    }\n    max_arr.sort()\n    return max_arr",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result = result.push(arr[i])\n        }\n    }\n    return result",
    "    let max = 0\n    let max_index = 0\n    for i in 0..k {\n        if arr[i] > max {\n            max = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec<isize>{}\n    for i in 0..k {\n        result = result.push(arr[i] if i == max_index else 0)\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k - 1 {\n        if arr[i] == max_value {\n            result = result.concat(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result = result.push(arr[i])\n        }\n    }\n    return result",
    "    let max = 0\n    let max_index = 0\n    for i in arr {\n        if i > max {\n            max = i\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in range(k) {\n        result.push(max_index)\n        max_index = max_index - 1\n        if max_index < 0 {\n            max_index = arr.len - 1\n        }\n        max = max - 1\n        if max < 0 {\n            max = arr.len - 1\n        }\n    }\n    return result",
    "    let max = 0\n    let max_index = 0\n    for i in 0..k {\n        if arr[i] > max {\n            max = arr[i]\n            max_index = i\n        }\n    }\n    let res = Vec<isize>::new()\n    for i in 0..k {\n        if arr[i] == max {\n            res.push_back(i)\n        }\n    }\n    return res",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in arr.iter() {\n        if i > max_value {\n            max_value = i\n            max_index = i\n        }\n    }\n    let result = [max_index]\n    for i in arr.iter() {\n        if i == max_value {\n            result.push(i)\n        }\n    }\n    if len(result) < k {\n        result.push(max_value)\n    }\n    return result",
    "    let max = arr[0];\n    let max_index = 0;\n    for i in arr.iter() {\n        if i > max {\n            max = i;\n            max_index = i;\n        }\n    }\n    let result = Vec::new();\n    for i in arr.iter() {\n        if i == max_index {\n            result.append(i);\n        }\n    }\n    result.append(max_index);\n    if k > result.len() {\n        result.extend(k - result.len());\n    }\n    return result;",
    "    let max = arr[0];\n    for i in arr.iter() {\n        if i > max {\n            max = i;\n        }\n    }\n    let result = Vec::new();\n    for i in range(k) {\n        result.push(max);\n        max = max - arr[0];\n        arr = arr.drop(1);\n    }\n    return result;",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result.push(i)\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in arr.iter() {\n        if i > max_value {\n            max_value = i\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in range(k) {\n        result.push_back(max_index)\n        max_index = max_index + 1\n        if max_index >= arr.len() {\n            max_index = 0\n        }\n        max_value = arr[max_index]\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = arr.copy()\n    result[max_index] = max_value\n    return result",
    "    let max_k = 0\n    let max_index = 0\n    for i in 0..k {\n        if arr[i] > arr[max_index] {\n            max_index = i\n            max_k = 1\n        } else if arr[i] == arr[max_index] {\n            max_k += 1\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k {\n        if arr[i] == arr[max_index] {\n            result.push_back(arr[i])\n        }\n    }\n    result.push_back(arr[max_index])\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result = result.push(arr[i])\n        }\n    }\n    return result",
    "    let max = 0\n    let max_index = 0\n    for i in 0..k {\n        if arr[i] > max {\n            max = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max]\n    for i in 0..k {\n        if arr[i] == max {\n            result = result.concat(Vec![i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result.push(arr[i])\n        }\n    }\n    result.push(arr[max_index])\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in arr.iter() {\n        if i > max_value {\n            max_value = i\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in arr.iter() {\n        if i == max_value {\n            result.push_back(i)\n        }\n    }\n    for i in range(k - 1) {\n        result.push_back(max_index)\n    }\n    return result",
    "    let max = 0\n    let max_index = 0\n    for i in 0..k {\n        if arr[i] > max {\n            max = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max]\n    for i in 0..k {\n        if arr[i] == max {\n            result = result.push(i)\n        }\n    }\n    return result",
    "    let max = 0\n    let max_index = 0\n    for i in 0..k {\n        if arr[i] > max {\n            max = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec<isize>{}\n    for i in 0..k {\n        if arr[i] == max {\n            result = result.concat(arr[i])\n        }\n    }\n    return result",
    "    let max_arr = Vec::new(k);\n    let max_index = 0;\n    for i in 0..k {\n        if arr[i] > arr[max_index] {\n            max_index = i;\n        }\n    }\n    for i in 0..k {\n        max_arr[i] = arr[max_index];\n        max_index = (max_index + 1) % k;\n    }\n    return max_arr;",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = arr.copy()\n    result[max_index] = max_value\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result.push_back(arr[i])\n        }\n    }\n    result.push_back(arr[max_index])\n    return result",
    "    let max = 0\n    let max_index = 0\n    for i in arr {\n        if i > max {\n            max = i\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in range(k) {\n        result.push(max_index)\n        max_index = max_index - 1\n        if max_index < 0 {\n            max_index = arr.len() - 1\n        }\n        max = max - 1\n        if max < 0 {\n            max = arr.len() - 1\n        }\n    }\n    return result",
    "    let max_arr = Vec.new(k);\n    let max_index = 0;\n    for i in arr {\n        if i > max_arr[max_index] {\n            max_arr[max_index] = i;\n            max_index = 0;\n        } else if i == max_arr[max_index] {\n            max_index += 1;\n        }\n    }\n    max_arr.copy_from(arr);\n    return max_arr;",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result.push_back(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k - 1 {\n        if arr[i] == max_value {\n            result = result.concat(Vec![arr[i]])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec<isize>{}\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result = result.concat(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result = result.push(i)\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k-1 {\n        result.push(arr[i] if i == max_index else 0)\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec<isize>{}\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result = result.push(i)\n        }\n    }\n    return result",
    "    let max = 0\n    let max_index = 0\n    for i in 0..k {\n        if arr[i] > max {\n            max = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k {\n        if arr[i] == max {\n            result.push_back(arr[i])\n        }\n    }\n    return result",
    "    let max = 0\n    let max_index = 0\n    for i in 0..k-1 {\n        if arr[i] > max {\n            max = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec<isize>{}\n    for i in 0..k-1 {\n        if arr[i] == max {\n            result = result.concat(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result = result.concat(arr[i])\n        }\n    }\n    return result",
    "    let max = 0\n    let max_index = 0\n    for i in 0..k-1 {\n        if arr[i] > arr[max_index] {\n            max = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k-1 {\n        if arr[i] == max {\n            result.push_back(arr[i])\n        }\n    }\n    return result",
    "    let max_k = 0;\n    let max_index = 0;\n    for i in 0..k {\n        if arr[i] > arr[max_index] {\n            max_index = i;\n            max_k = arr[i];\n        }\n    }\n    let result = arr.copy();\n    result[max_index] = arr[max_index] + 1;\n    for i in k..len(arr) {\n        if arr[i] > max_k {\n            result[i] = arr[i] + 1;\n        }\n    }\n    return result;",
    "    let max = 0\n    let max_index = 0\n    for i in 0..k {\n        if arr[i] > max {\n            max = arr[i]\n            max_index = i\n        }\n    }\n    let max_arr = Vec![max]\n    for i in 0..k {\n        if arr[i] == max {\n            max_arr = max_arr.push(arr[i])\n        }\n    }\n    return max_arr",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let max_arr = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            max_arr = max_arr.push(arr[i])\n        }\n    }\n    return max_arr",
    "    let max_idx = 0\n    let max_val = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_val {\n            max_val = arr[i]\n            max_idx = i\n        }\n    }\n    let result = Vec![max_val]\n    for i in 0..k-1 {\n        if arr[i] == max_val {\n            result = result.concat(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result = result.push(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in arr.iter() {\n        if i > max_value {\n            max_value = i\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in range(0, k) {\n        result.push(max_index)\n        max_index = max_index + 1\n        if max_index == len(arr) {\n            break\n        }\n        max_value = arr[max_index]\n        for j in arr.iter() {\n            if j > max_value {\n                max_value = j\n                max_index = j\n            }\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k - 1 {\n        result.push(arr[i])\n    }\n    result.push(max_value)\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k - 1 {\n        result.push(arr[i])\n    }\n    result.push(max_value)\n    return result",
    "    let max = 0\n    let max_index = 0\n    for i in 0..k-1 {\n        if arr[i] > arr[max_index] {\n            max = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k-1 {\n        if arr[i] == max {\n            result.push_back(arr[i])\n        }\n    }\n    return result",
    "    let max_arr = Vec.empty(k);\n    let max_index = 0;\n    for i in 0..k {\n        let max = arr[0];\n        for j in 1..arr.len {\n            if arr[j] > max {\n                max = arr[j];\n                max_index = j;\n            }\n        }\n        max_arr[i] = max;\n        arr = arr.drop(max_index);\n    }\n    return max_arr;",
    "    let max_idx = 0\n    let max_val = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_val {\n            max_val = arr[i]\n            max_idx = i\n        }\n    }\n    let max_vec = Vec![max_val]\n    for i in 0..k-1 {\n        if arr[i] == max_val {\n            max_vec = max_vec.push(arr[i])\n        }\n    }\n    return max_vec",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k - 1 {\n        if arr[i] == max_value {\n            result = result.push(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k-1 {\n        result.push(arr[i] if i == max_index else -1)\n    }\n    return result",
    "    let max = arr[0];\n    let max_index = 0;\n    for i in arr.iter() {\n        if i > max {\n            max = i;\n            max_index = i;\n        }\n    }\n    let max_arr = Vec::new(k);\n    for i in arr.iter() {\n        if i == max_index {\n            max_arr.push_back(i);\n        }\n    }\n    return max_arr;",
    "    let max = 0\n    let max_index = 0\n    for i in 0..k {\n        if arr[i] > max {\n            max = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k {\n        if arr[i] == max {\n            result.push(i)\n        }\n    }\n    return result",
    "    let max = 0\n    let max_index = 0\n    for i in 0..k {\n        if arr[i] > max {\n            max = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k {\n        if arr[i] == max {\n            result.push(i)\n        }\n    }\n    return result",
    "    let max_idx = 0\n    let max_val = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_val {\n            max_val = arr[i]\n            max_idx = i\n        }\n    }\n    let result = arr.copy()\n    result[max_idx] = arr[0]\n    for i in 1..k - 1 {\n        if arr[i] > max_val {\n            max_val = arr[i]\n            max_idx = i\n        }\n    }\n    result[max_idx] = arr[0]\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = [max_value]\n    for i in 0..k - 1 {\n        if arr[i] == max_value {\n            result = result.concat(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let max_arr = Vec![]\n    for i in 0..k - 1 {\n        max_arr = max_arr.push(arr[i])\n    }\n    max_arr = max_arr.push(arr[max_index])\n    return max_arr",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k-1 {\n        result.push(arr[max_index])\n        max_index = (max_index + 1) % len(arr)\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k - 1 {\n        result.append(arr[i])\n    }\n    result.append(max_value)\n    return result",
    "    let max = arr[0];\n    let max_index = 0;\n    for i in arr.iter() {\n        if i > max {\n            max = i;\n            max_index = i;\n        }\n    }\n    let result = Vec::new();\n    for i in range(k) {\n        result.push_back(max_index);\n        max_index = max_index + 1;\n        if (max_index >= arr.len()) {\n            max_index = 0;\n        }\n        max = arr[max_index];\n    }\n    return result;",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result = result.concat(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k-1 {\n        result.push(arr[i] if i == max_index else 0)\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result = result.push(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result = result.push(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result = result.concat(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in arr.iter() {\n        if i > max_value {\n            max_value = i\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in range(k) {\n        result.push(max_index)\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result = result.concat(Vec![arr[i]])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in arr.iter() {\n        if i > max_value {\n            max_value = i\n            max_index = i\n        }\n    }\n    let max_k_numbers = []\n    for i in arr.iter() {\n        if i == max_value {\n            max_k_numbers.append(i)\n        }\n    }\n    if len(max_k_numbers) < k {\n        max_k_numbers.append(max_value)\n    }\n    max_k_numbers.sort()\n    return max_k_numbers",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = arr.copy()\n    result[max_index] = max_value\n    return result",
    "  let max_idx = 0\n  let max_val = arr[0]\n  for i in 0..k - 1 {\n    if arr[i] > max_val {\n      max_val = arr[i]\n      max_idx = i\n    }\n  }\n  let result = [max_val]\n  for i in 0..k - 1 {\n    if arr[i] == max_val {\n      result = result.concat(arr[i])\n    }\n  }\n  return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in arr.iter() {\n        if i > max_value {\n            max_value = i\n            max_index = i\n        }\n    }\n    let result = [max_index]\n    for i in arr.iter() {\n        if i == max_value {\n            result.push(i)\n        }\n    }\n    if k == 1 {\n        return result\n    }\n    let max_index = 0\n    let max_value = arr[0]\n    for i in arr.iter() {\n        if i > max_value {\n            max_value = i\n            max_index = i\n        }\n    }\n    let result = [max_index]\n    for i in arr.iter() {\n        if i == max_value {\n            result.push(i)\n        }\n    }\n    for i in arr.iter() {\n        if i == max_value {\n            result.push(i)\n        }\n    }\n    for i in arr.iter() {\n        if i == max_value {\n            result.push(i)\n        }\n    }\n    for i in arr.iter() {\n        if i == max_value {\n            result.push(i)\n        }\n    }\n    for i in arr.iter() {\n        if i == max_value {\n            result.push(i)\n        }\n    }\n    for i in arr.iter() {\n        if i == max_value {\n            result.push(i)\n        }\n    }\n    for i in arr.iter() {\n        if i == max_value {\n            result.push(i)\n        }\n    }\n    for i in arr.iter() {\n        if i == max_value {\n            result.push(i)\n        }\n    }\n    for i in arr.iter() {\n        if i == max_value {\n            result.push(i)\n        }\n    }\n    for i in arr.iter() {\n        if i == max_value {\n            result.push(i)\n        }\n    }",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in arr.iter() {\n        if i > max_value {\n            max_value = i\n            max_index = i\n        }\n    }\n    let result = [max_index]\n    for i in arr.iter() {\n        if i == max_value {\n            result.push(i)\n        }\n    }\n    if len(result) < k {\n        result.push(max_value)\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result = result.push(arr[i])\n        }\n    }\n    return result",
    "    let max = 0\n    let max_index = 0\n    for i in 0..k {\n        if arr[i] > max {\n            max = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec<isize>{}\n    for i in 0..k {\n        if arr[i] == max {\n            result = result.push(i)\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k-1 {\n        result.push_back(arr[i])\n    }\n    result.push_back(max_value)\n    return result",
    "    let max_idx = 0\n    let max_val = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_val {\n            max_val = arr[i]\n            max_idx = i\n        }\n    }\n    let res = [max_val]\n    for i in 0..k - 1 {\n        if arr[i] == max_val {\n            res.push(arr[i])\n        }\n    }\n    return res",
    "    let max = 0\n    let max_index = 0\n    for i in 0..k {\n        if arr[i] > max {\n            max = arr[i]\n            max_index = i\n        }\n    }\n    let res = Vec<isize>{}\n    for i in 0..k {\n        if arr[i] == max {\n            res = res.push(i)\n        }\n    }\n    return res",
    "    let max_arr = Vec::new(k);\n    let max_index = 0;\n    for i in 0..k - 1 {\n        if arr[i] > arr[max_index] {\n            max_index = i;\n        }\n    }\n    for i in 0..k - 1 {\n        max_arr[i] = arr[max_index];\n        max_index = (max_index + 1) % k;\n    }\n    return max_arr;",
    "    let max = 0\n    let max_index = 0\n    for i in 0..k {\n        if arr[i] > max {\n            max = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec<isize>{}\n    for i in 0..k {\n        if arr[i] == max {\n            result = result.push(i)\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result.push(i)\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result.push(arr[i])\n        }\n    }\n    result.push(arr[max_index])\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let max_arr = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            max_arr = max_arr.push(arr[i])\n        }\n    }\n    return max_arr",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in arr.iter() {\n        if i > max_value {\n            max_value = i\n            max_index = i\n        }\n    }\n    let result = [max_index]\n    for i in arr.iter() {\n        if i == max_value {\n            result.push(i)\n        }\n    }\n    if len(result) < k {\n        result.push(max_value)\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k-1 {\n        result.push_back(arr[i])\n    }\n    result.push_back(max_value)\n    return result",
    "    let max = 0\n    let max_index = 0\n    for i in 0..k {\n        if arr[i] > max {\n            max = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec<isize>{}\n    for i in 0..k {\n        if arr[i] == max {\n            result = result.push(i)\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k - 1 {\n        result.push_back(arr[i])\n    }\n    result.push_back(max_value)\n    return result",
    "    let max_idx = 0\n    let max_val = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_val {\n            max_val = arr[i]\n            max_idx = i\n        }\n    }\n    let max_vec = Vec![max_val]\n    for i in 0..k-1 {\n        if arr[i] == max_val {\n            max_vec = max_vec.push(arr[i])\n        }\n    }\n    return max_vec",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result = result.push(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            result = result.push(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = arr.copy()\n    for i in 0..k-1 {\n        result[i] = arr[max_index]\n        max_index = (max_index + 1) % k\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec::new()\n    for i in 0..k - 1 {\n        result.push(arr[i])\n    }\n    result.push(max_value)\n    return result",
    "    let max = 0\n    let max_index = 0\n    for i in 0..k-1 {\n        if arr[i] > arr[max_index] {\n            max = arr[i]\n            max_index = i\n        }\n    }\n    return arr.slice(max_index, k)",
    "    let max_idx = 0\n    let max_val = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_val {\n            max_val = arr[i]\n            max_idx = i\n        }\n    }\n    let res = Vec![max_val]\n    for i in 0..k-1 {\n        if arr[i] == max_val {\n            res = Vec![arr[i]]\n        }\n    }\n    return res",
    "    let max_idx = 0\n    let max_val = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_val {\n            max_val = arr[i]\n            max_idx = i\n        }\n    }\n    let res = Vec::new()\n    for i in 0..k-1 {\n        if arr[i] == max_val {\n            res.push(arr[i])\n        }\n    }\n    res.push(arr[max_idx])\n    return res",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let result = Vec![max_value]\n    for i in 0..k - 1 {\n        if arr[i] == max_value {\n            result = result.push(arr[i])\n        }\n    }\n    return result",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k - 1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let max_arr = Vec![max_value]\n    for i in 0..k - 1 {\n        max_arr = max_arr.push(arr[i])\n    }\n    return max_arr",
    "    let max_index = 0\n    let max_value = arr[0]\n    for i in 0..k-1 {\n        if arr[i] > max_value {\n            max_value = arr[i]\n            max_index = i\n        }\n    }\n    let max_arr = Vec![max_value]\n    for i in 0..k-1 {\n        if arr[i] == max_value {\n            max_arr = max_arr.push(arr[i])\n        }\n    }\n    return max_arr",
    "    let max = 0\n    let max_index = 0\n    for i in arr {\n        if i > max {\n            max = i\n            max_index = i\n        }\n    }\n    let result = [max_index]\n    for i in arr {\n        if i == max_index {\n            result.push(i)\n        } else {\n            result.push(0)\n        }\n    }\n    for i in range(k - 1) {\n        if result[i] == 0 {\n            result[i] = result[i + 1]\n        }\n    }\n    return result"
  ],
  "stop_tokens": [
    "\n}"
  ]
}
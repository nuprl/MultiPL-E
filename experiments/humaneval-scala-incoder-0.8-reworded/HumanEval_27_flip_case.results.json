{
  "language": "scala",
  "name": "HumanEval_27_flip_case",
  "results": [
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = string\n        for (i <- 0 to string.length-1) {\n            if(string(i) >= 'a' && string(i) <= 'z'){\n                result = result.swapCase()\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0_pcz0ee.scala:11:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                result = result.swapCase()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         value swapCase is not a member of String\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979090
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var str1 = string.map(_.toUpperCase).mkString(\"\")\n        var str2 = string.map(_.toLowerCase).mkString(\"\")\n        if(str1.isEmpty) str2\n        else str1 + str2\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmposhkrjph.scala:8:32 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mstr1\u001b[0m = string.map(_.toUpperCase).mkString(\u001b[31m\"\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                              ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                              value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmposhkrjph.scala:9:32 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mstr2\u001b[0m = string.map(_.toLowerCase).mkString(\u001b[31m\"\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                              ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                              value toLowerCase is not a member of Char\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979091
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string foreach {\n            char => if (char >= 'a' && char <= 'z') char - 'a' + 'A' else char\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvm40surq.scala:8:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m 8 |\u001b[0m        string foreach {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Unit\n\u001b[31m   |\u001b[0m        Required: String\n\u001b[31m 9 |\u001b[0m            \u001b[36mchar\u001b[0m => \u001b[33mif\u001b[0m (char >= \u001b[31m'a'\u001b[0m && char <= \u001b[31m'z'\u001b[0m) char - \u001b[31m'a'\u001b[0m + \u001b[31m'A'\u001b[0m \u001b[33melse\u001b[0m char\n\u001b[31m10 |\u001b[0m        }\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979091
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = string.copy() //create a copy so we don't modify the original string\n        var l = result.length()\n        for (i<- 0 to l){\n            if(result(i) == result(i).toLowerCase)\n                result(i) = result(i).toUpperCase\n            else if(result(i) == result(i).toUpperCase)\n                result(i) = result(i).toLowerCase\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpoyky1fki.scala:8:28 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mresult\u001b[0m = string.copy() \u001b[34m//create a copy so we don't modify the original string\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m         value copy is not a member of String - did you mean string.clone?\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979089
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val upperCasedString = string.toUpperCase\n        val lowerCasedString = upperCasedString.toLowerCase\n        upperCasedString + lowerCasedString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpnebyo6lz.scala:14)\n\tat Problem.main(tmpnebyo6lz.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659979091
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.map { c =>\n            c match {\n                case 'a' -> 'A'\n                case 'b' -> 'B'\n                case 'c' -> 'C'\n                case 'd' -> 'D'\n                case 'e' -> 'E'\n                case 'f' -> 'F'\n                case 'g' -> 'G'\n                case 'h' -> 'H'\n                case 'i' -> 'I'\n                case 'j' -> 'J'\n                case 'k' -> 'K'\n                case 'l' -> 'L'\n                case 'm' -> 'M'\n                case 'n' -> 'N'\n                case 'o' -> 'O'\n                case 'p' -> 'P'\n                case 'q' -> 'Q'\n                case 'r' -> 'R'\n                case 's' -> 'S'\n                case 't' -> 'T'\n                case 'u' -> 'U'\n                case 'v' -> 'V'\n                case 'w' -> 'W'\n                case 'x' -> 'X'\n                case 'y' -> 'Y'\n                case 'z' -> 'Z'\n                case 'A' -> 'a'\n                case 'B' -> 'b'\n                case 'C' -> 'c'\n                case 'D' -> 'd'\n                case 'E' -> 'e'\n                case 'F' -> 'f'\n                case 'G' -> 'g'\n                case 'H' -> 'h'\n                case 'I' -> 'i'\n                case 'J' -> 'j'\n                case 'K' -> 'k'\n                case 'L' -> 'l'\n                case 'M' -> 'm'\n                case 'N' -> 'n'\n                case 'O' -> 'o'\n                case 'P' -> 'p'\n                case 'Q' -> 'q'\n                case 'R' -> 'r'\n                case 'S' -> 's'\n                case 'T' -> 't'\n                case 'U' -> 'u'\n                case 'V' -> 'v'\n                case 'W' -> 'w'\n                case 'X' -> 'x'\n                case 'Y' -> 'y'\n                case 'Z' -> 'z'\n                case _ -> c\n            }\n        }.mkString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptfenlta0.scala:11:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                \u001b[33mcase\u001b[0m \u001b[31m'b'\u001b[0m -> \u001b[31m'B'\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                '=>' expected, but 'case' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptfenlta0.scala:13:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                \u001b[33mcase\u001b[0m \u001b[31m'd'\u001b[0m -> \u001b[31m'D'\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                '=>' expected, but 'case' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptfenlta0.scala:15:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                \u001b[33mcase\u001b[0m \u001b[31m'f'\u001b[0m -> \u001b[31m'F'\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                '=>' expected, but 'case' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptfenlta0.scala:17:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mcase\u001b[0m \u001b[31m'h'\u001b[0m -> \u001b[31m'H'\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                '=>' expected, but 'case' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptfenlta0.scala:19:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                \u001b[33mcase\u001b[0m \u001b[31m'j'\u001b[0m -> \u001b[31m'J'\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                '=>' expected, but 'case' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptfenlta0.scala:21:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                \u001b[33mcase\u001b[0m \u001b[31m'l'\u001b[0m -> \u001b[31m'L'\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                '=>' expected, but 'case' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptfenlta0.scala:23:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                \u001b[33mcase\u001b[0m \u001b[31m'n'\u001b[0m -> \u001b[31m'N'\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                '=>' expected, but 'case' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptfenlta0.scala:25:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m           ",
      "stdout": "",
      "timestamp": 1659979087
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val chars = string.chars\n        val flippedChars = mutable.ListBuffer[Char]()\n        for(i <- 0 until chars.length) {\n            if(chars(i).toLowerCase == chars(i)) {\n                flippedChars += chars(i).toUpperCase\n            }\n            else {\n                flippedChars += chars(i).toLowerCase\n            }\n        }\n        flippedChars.mkString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2fixcr_8.scala:9:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mflippedChars\u001b[0m = mutable.ListBuffer[\u001b[35mChar\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                           ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                           Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2fixcr_8.scala:10:31 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m(i <- \u001b[31m0\u001b[0m until chars.length) {\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value length is not a member of java.util.stream.IntStream\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp2fixcr_8.scala:11:15 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mif\u001b[0m(chars(i).toLowerCase == chars(i)) {\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mvalue\u001b[0m \u001b[35mchars\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659979091
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.foldLeft(string.head){(acc, c) => if(c.isUpper) acc.toLower else acc.toUpper}\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1xlgdl_m.scala:8:36 ---------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        string.foldLeft(string.head){(\u001b[36macc\u001b[0m, \u001b[36mc\u001b[0m) => \u001b[33mif\u001b[0m(c.isUpper) acc.toLower \u001b[33melse\u001b[0m acc.toUpper}\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Char\n\u001b[31m  |\u001b[0m        Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979090
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val charArray = string.split(\"\").toArray\n        charArray.map(x => if(x==x.toUpperCase) x.toLower else x.toUpper) mkString(\"\")\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1i5hslfu.scala:9:50 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        charArray.map(\u001b[36mx\u001b[0m => \u001b[33mif\u001b[0m(x==x.toUpperCase) x.toLower \u001b[33melse\u001b[0m x.toUpper) mkString(\u001b[31m\"\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                   value toLower is not a member of String\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1i5hslfu.scala:9:65 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        charArray.map(\u001b[36mx\u001b[0m => \u001b[33mif\u001b[0m(x==x.toUpperCase) x.toLower \u001b[33melse\u001b[0m x.toUpper) mkString(\u001b[31m\"\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                                                               ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                   value toUpper is not a member of String\n\u001b[31m\u001b[31m-- Error: /tmp/tmp1i5hslfu.scala:9:73 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        charArray.map(\u001b[36mx\u001b[0m => \u001b[33mif\u001b[0m(x==x.toUpperCase) x.toLower \u001b[33melse\u001b[0m x.toUpper) mkString(\u001b[31m\"\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                         ^\u001b[0m\n\u001b[31m  |\u001b[0m                                            No ClassTag available for B\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m                                            where:    B is a type variable\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659979091
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.map {\n            char =>\n                if (char.isLowerCase)\n                    char.toUpper\n                else\n                    char.toLower\n        }.mkString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpient_2ch.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                \u001b[33mif\u001b[0m (char.isLowerCase)\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value isLowerCase is not a member of Char\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979090
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = new StringBuilder\n        var i = 0\n        var c = string.charAt(i)\n        while (i < string.length){\n            result += (c == string.charAt(i+1)) ? c.toUpperCase : c.toLowerCase + c\n            i += 1\n            c = string.charAt(i)\n        }\n        result.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb8rpl4g5.scala:12:80 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            result += (c == string.charAt(i+\u001b[31m1\u001b[0m)) ? c.toUpperCase : c.toLowerCase \u001b[35m+\u001b[0m \u001b[35mc\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                       Not found: type +\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb8rpl4g5.scala:12:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            result += (c == string.charAt(i+\u001b[31m1\u001b[0m)) ? c.toUpperCase : c.toLowerCase \u001b[35m+\u001b[0m \u001b[35mc\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value ? is not a member of Boolean\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb8rpl4g5.scala:12:52 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            result += (c == string.charAt(i+\u001b[31m1\u001b[0m)) ? c.toUpperCase : c.toLowerCase \u001b[35m+\u001b[0m \u001b[35mc\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toUpperCase is not a member of Char\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659979091
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until string.length) {\n            if (string.charAt(i).toLowerCase == string.charAt(i).toUpperCase && string.charAt(i) != 'I') {\n                result += string.charAt(i).toUpperCase + string.charAt(i).toLowerCase\n            } else {\n                result += string.charAt(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7si_i8zr.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i).toLowerCase == string.charAt(i).toUpperCase && string.charAt(i) != \u001b[31m'I'\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7si_i8zr.scala:11:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                result += string.charAt(i).toUpperCase + string.charAt(i).toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7si_i8zr.scala:11:43 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                result += string.charAt(i).toUpperCase + string.charAt(i).toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659979091
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val charList = string.grouped(string.length).map( _.toUpper)\n        charList.mkString(\"\")\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5vaikm3z.scala:8:60 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcharList\u001b[0m = string.grouped(string.length).map( _.toUpper)\n\u001b[31m\u001b[31m  |\u001b[0m                                                          ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                   value toUpper is not a member of String\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979090
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var re = \"\";\n        for (i <- 0 until string.length) {\n            re = re+\n                ((if(string.charAt(i) >= 'a' && string.charAt(i) <= 'z') \n                        string.charAt(i)\n                    else\n                        (if(string.charAt(i) >= 'A' && string.charAt(i) <= 'Z') \n                            string.charAt(i)\n                        else\n                            string.charAt(i)))\n        }\n        return re\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphcgh752a.scala:18:8 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        }\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0m        ')' expected, but '}' found\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979087
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.map(ch => ch match {\n            case Character.isLower(ch) => Character.toUpper(ch)\n            case Character.isUpper(ch) => Character.toLower(ch)\n            case _ => ch\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvfl_6w8r.scala:9:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mcase\u001b[0m Character.isLower(ch) => Character.toUpper(ch)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mvalue isLower is not a member of object Character - did you mean Character.isLetter?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvfl_6w8r.scala:9:52 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mcase\u001b[0m Character.isLower(ch) => Character.toUpper(ch)\n\u001b[31m\u001b[31m  |\u001b[0m                                          ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         value toUpper is not a member of object Character\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvfl_6w8r.scala:10:27 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mcase\u001b[0m Character.isUpper(ch) => Character.toLower(ch)\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value isUpper is not a member of object Character\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvfl_6w8r.scala:10:52 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mcase\u001b[0m Character.isUpper(ch) => Character.toLower(ch)\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                       value toLower is not a member of object Character\n4 errors found\n",
      "stdout": "",
      "timestamp": 1659979091
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = string\n        for (i <- 0 to string.length-1) {\n            val ch = string.charAt(i)\n            if (Character.isLowerCase(ch)) {\n                result += Character.toUpperCase(ch)\n            }\n            else if (!Character.isLowerCase(ch)) {\n                result += Character.toLowerCase(ch)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp60ohx7sw.scala:22)\n\tat Problem.main(tmp60ohx7sw.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659979091
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.map(_.toLowerCase).map(_.toUpperCase).mkString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4hphthvp.scala:8:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        string.map(_.toLowerCase).map(_.toUpperCase).mkString\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   value toLowerCase is not a member of Char\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979090
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.foldLeft[String](\"\"){case (acc, elem) =>\n            if (elem.toUpperCase.isUpper)\n                acc + elem.toLowerCase\n            else\n                acc + elem.toUpperCase\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9gz17oxf.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (elem.toUpperCase.isUpper)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9gz17oxf.scala:10:27 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                acc + elem.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9gz17oxf.scala:12:27 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                acc + elem.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659979091
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var flippedString = string.toLowerCase\n        var flippedChar = \"\"\n        for (i <- 0 until flippedString.length)\n        {\n            flippedChar += flippedString.charAt(i).toUpperCase\n        }\n        return flippedChar\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7j8lk2sx.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            flippedChar += flippedString.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7j8lk2sx.scala:12:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            flippedChar += flippedString.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           value toUpperCase is not a member of Char\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979091
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val stringArray = string.split(\"\")\n        stringArray.map(s => s match {\n            case ('a'..'z') => s.toUpper\n            case ('A'..'Z') => s.toLowerCase\n            case _ => s\n        })\n        string.mkString(\"\")\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzhjbgueg.scala:10:21 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mcase\u001b[0m (\u001b[31m'a'\u001b[0m..\u001b[31m'z'\u001b[0m) => s.toUpper\n\u001b[31m\u001b[31m   |\u001b[0m                     ^\u001b[0m\n\u001b[31m   |\u001b[0m                     ')' expected, but '.' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzhjbgueg.scala:11:21 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mcase\u001b[0m (\u001b[31m'A'\u001b[0m..\u001b[31m'Z'\u001b[0m) => s.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                     ^\u001b[0m\n\u001b[31m   |\u001b[0m                     ')' expected, but '.' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzhjbgueg.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mcase\u001b[0m (\u001b[31m'a'\u001b[0m..\u001b[31m'z'\u001b[0m) => s.toUpper\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toUpper is not a member of String\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659979091
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.map(_.toUpperCase) ::: string.map(_.toLowerCase) ::: Nil\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw2wyt04r.scala:8:51 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        string.map(_.toUpperCase) ::: string.map(_.toLowerCase) ::: Nil\n\u001b[31m\u001b[31m  |\u001b[0m                                                 ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw2wyt04r.scala:8:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        string.map(_.toUpperCase) ::: string.map(_.toLowerCase) ::: Nil\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   value toUpperCase is not a member of Char\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979091
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.toList.reverse.foldLeft(new StringBuilder) {\n            case (sb, x) => (sb +: x.toUpperCase)\n        }.reverse\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8thx7ctb.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mcase\u001b[0m (sb, x) => (sb +: x.toUpperCase)\n\u001b[31m\u001b[31m  |\u001b[0m                                   ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 value toUpperCase is not a member of Char\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979091
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var res = \"\"\n        for(i <- string) {\n            if(i isLower) {\n                res += i.toUpper\n            } else if(i isUpper) {\n                res += i.toLower\n            } else {\n                res += i\n            }\n        }\n        res\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmph6g1fctx.scala:10:24 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m(i isLower) {\n\u001b[31m\u001b[31m   |\u001b[0m                        ^\u001b[0m\n\u001b[31m   |\u001b[0m                        expression expected but \u001b[31m')'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmph6g1fctx.scala:12:31 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            } \u001b[33melse\u001b[0m \u001b[33mif\u001b[0m(i isUpper) {\n\u001b[31m\u001b[31m   |\u001b[0m                               ^\u001b[0m\n\u001b[31m   |\u001b[0m                               expression expected but \u001b[31m')'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979087
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        def reverse(str: String) : String = {\n            str.foldLeft(str) {\n                case (str, x) =>\n                    if (x.isLowerCase)\n                        str + x.toUpperCase\n                    else\n                        str + x.toLowerCase\n            }\n        }\n        val strArray = string.split(\"\").toArray\n        strArray.foldLeft(\"\") {\n            case (str, x) => str + reverse(x)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyehong33.scala:11:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                    \u001b[33mif\u001b[0m (x.isLowerCase)\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        value isLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyehong33.scala:12:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                        str + x.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyehong33.scala:14:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                        str + x.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toLowerCase is not a member of Char\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659979100
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val result = mutable.MutableList[Char]()\n        for (letter <- string.toList) {\n            result += {\n                letter match {\n                    case ('a' | 'A') => 'A'\n                    case 'b' | 'B' => 'B'\n                    case 'c' | 'C' => 'C'\n                    case 'd' | 'D' => 'D'\n                    case 'e' | 'E' => 'E'\n                    case 'f' | 'F' => 'F'\n                    case 'g' | 'G' => 'G'\n                    case 'h' | 'H' => 'H'\n                    case 'i' | 'I' => 'I'\n                    case 'j' | 'J' => 'J'\n                    case 'k' | 'K' => 'K'\n                    case 'l' | 'L' => 'L'\n                    case 'm' | 'M' => 'M'\n                    case 'n' | 'N' => 'N'\n                    case 'o' | 'O' => 'O'\n                    case 'p' | 'P' => 'P'\n                    case 'q' | 'Q' => 'Q'\n                    case 'r' | 'R' => 'R'\n                    case 's' | 'S' => 'S'\n                    case 't' | 'T' => 'T'\n                    case 'u' | 'U' => 'U'\n                    case 'v' | 'V' => 'V'\n                    case 'w' | 'W' => 'W'\n                    case 'x' | 'X' => 'X'\n                    case 'y' | 'Y' => 'Y'\n                    case 'z' | 'Z' => 'Z'\n                    case 'A' | 'a' => 'a'\n                    case 'B' | 'b' => 'b'\n                    case 'C' | 'c' => 'c'\n                    case 'D' | 'd' => 'd'\n                    case 'E' | 'e' => 'e'\n                    case 'F' | 'f' => 'f'\n                    case 'G' | 'g' => 'g'\n                    case 'H' | 'h' => 'h'\n                    case 'I' | 'i' => 'i'\n                    case 'J' | 'j' => 'j'\n                    case 'K' | 'k' => 'k'\n                    case 'L' | 'l' => 'l'\n                    case 'M' | 'm' => 'm'\n                    case 'N' | 'n' => 'n'\n                    case 'O' | 'o' => 'o'\n                    case 'P' | 'p' => 'p'\n                    case 'Q' | 'q' => 'q'\n                    case 'R' | 'r' => 'r'\n                    case 'S' | 's' => 's';\n                    case 'T' => 't' => 't'\n                    case 'U' | 'u' => 'u'\n                    case 'V' | 'v' => 'v'\n                    case 'W' | 'w' => 'w'\n                    case 'X' | 'x' => \n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpfctpq7tm.scala:57:32 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m                    \u001b[33mcase\u001b[0m \u001b[31m'T'\u001b[0m => \u001b[31m't'\u001b[0m => \u001b[31m't'\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                not a legal formal parameter\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfctpq7tm.scala:70:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfctpq7tm.scala:8:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.MutableList[\u001b[35mChar\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpfctpq7tm.scala:63:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m63 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659979095
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val chars = string.characters\n        var flipped = \"\"\n        for (i <- 0 until chars.length) {\n            flipped += chars(i).swapCase.toString\n        }\n        flipped\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfggrrplz.scala:8:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mchars\u001b[0m = string.characters\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    value characters is not a member of String\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979098
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n      val list = string.toList\n      val result = new ListBuffer[String]()\n      for (x<-list.iterator) {\n        if (\"abcdefghijklmnopqrstuvwxyz\".contains(x)) {\n          result.appendCodePoint(x.toUpperCase)\n        } else {\n          result.appendCodePoint(x.toLowerCase)\n        }\n      }\n      result.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0222qf4g.scala:12:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m          result.appendCodePoint(x.toUpperCase)\n\u001b[31m\u001b[31m   |\u001b[0m          ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue appendCodePoint is not a member of scala.collection.mutable.ListBuffer[String]\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0222qf4g.scala:12:35 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m          result.appendCodePoint(x.toUpperCase)\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0222qf4g.scala:14:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m          result.appendCodePoint(x.toLowerCase)\n\u001b[31m\u001b[31m   |\u001b[0m          ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue appendCodePoint is not a member of scala.collection.mutable.ListBuffer[String]\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0222qf4g.scala:14:35 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m          result.appendCodePoint(x.toLowerCase)\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toLowerCase is not a member of Char\n4 errors found\n",
      "stdout": "",
      "timestamp": 1659979102
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val result = new StringBuilder\n        for (i <- 0 until string.length) {\n            val c = string.charAt(i)\n            if (Character.isLowerCase(c)) {\n                result += Character.toUpperCase(c)\n            } else {\n                result += Character.toLowerCase(c)\n            }\n        }\n        return result.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659979103
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val result = new StringBuilder\n        for (i <- 0 until string.length) {\n            val charToFlip = string.charAt(i)\n            if (Character.isLetter(charToFlip)) {\n                result.append(charToFlip.toUpper)\n            } else {\n                result.append(charToFlip)\n            }\n        }\n        result.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpktmhew5z.scala:21)\n\tat Problem.main(tmpktmhew5z.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659979102
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = new StringBuilder(string.length)\n        var i = 0\n        while (i < string.length) {\n            if (string.charAt(i) >= 'a' && string.charAt(i) <= 'z') {\n                result.append(string.charAt(i).toUpper)\n            } else if (string.charAt(i) >= 'A' && string.charAt(i) <= 'Z') {\n                result.append(string.charAt(i).toLower)\n            } else if (string.charAt(i) >= '0' && string.charAt(i) <= '9') {\n                result.append(string.charAt(i))\n            } else {\n                result.append(string.charAt(i))\n            }\n            i += 1\n        }\n        return result.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659979103
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var buffer = new StringBuffer\n        for(i <- 0 until string.length){\n            buffer += if(string.charAt(i) >= 'a' && string.charAt(i) <= 'z'){\n                string.charAt(i).toUpperCase\n            }\n            else string.charAt(i)\n        }\n        return buffer.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpymg3h6u7.scala:10:22 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            buffer += \u001b[33mif\u001b[0m(string.charAt(i) >= \u001b[31m'a'\u001b[0m && string.charAt(i) <= \u001b[31m'z'\u001b[0m){\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^\u001b[0m\n\u001b[31m   |\u001b[0m                      expression expected but \u001b[31mif\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpymg3h6u7.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            buffer += \u001b[33mif\u001b[0m(string.charAt(i) >= \u001b[31m'a'\u001b[0m && string.charAt(i) <= \u001b[31m'z'\u001b[0m){\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue += is not a member of StringBuffer - did you mean StringBuffer.!=?\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979102
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val stringBuilder = new StringBuilder\n        for (i <- string.length) {\n            stringBuilder.append((string.charAt(i) match {\n                case 'a' | \"A\" => ('A' + string.charAt(i).toUpper)\n                case 'b' | \"B\" => ('B' + string.charAt(i).toUpper)\n                case 'c' | \"C\" => ('C' + string.charAt(i).toUpper)\n                case 'd' | \"D\" => ('D' + string.charAt(i).toUpper)\n                case 'e' | \"E\" => ('E' + string.charAt(i).toUpper)\n                case 'f' | \"F\" => ('F' + string.charAt(i).toUpper)\n                case 'g' | \"G\" => ('G' + string.charAt(i).toUpper)\n                case 'h' | \"H\" => ('H' + string.charAt(i).toUpper)\n                case 'i' | \"I\" => ('I' + string.charAt(i).toUpper)\n                case 'j' | \"J\" => ('J' + string.charAt(i).toUpper)\n                case 'k' | \"K\" => ('K' + string.charAt(i).toUpper)\n                case 'l' | \"L\" => ('L' + string.charAt(i).toUpper)\n                case 'm' | \"M\" => ('M' + string.charAt(i).toUpper)\n                case 'n' | \"N\" => ('N' + string.charAt(i).toUpper)\n                case 'o' | \"O\" => ('O' + string.charAt(i).toUpper)\n                case 'p' | \"P\" => ('P' + string.charAt(i).toUpper)\n                case 'q' | \"Q\" => ('Q' + string.charAt(i).toUpper)\n                case 'r' | \"R\" => ('R' + string.charAt(i).toUpper)\n                case 's' | \"S\" => ('S' + string.charAt(i).toUpper)\n                case 't' | \"T\" => ('T' + string.charAt(i).toUpper)\n                case 'u' | \"U\" => ('U' + string.charAt(i).toUpper)\n                case 'v' | \"V\" => ('V' + string.charAt(i).toUpper)\n                case 'w' | \"W\" => ('W' + string.charAt(i).toUpper)\n                case 'x' | \"X\" => ('X' + string.charAt(i).toUpper)\n                case 'y' | \"Y\" => ('Y' + string.charAt(i).toUpper)\n                case 'z' | \"Z\" => ('Z' + string.charAt(i).toUpper)\n                default => string.charAt(i).toUpper\n            }))\n        }\n        stringBuilder.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkoylv09w.scala:9:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- string.length) {\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value foreach is not a member of Int\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979101
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result : String = \"\"\n        var currentChar : String = \"\"\n        for(char <- string.toCharArray) {\n            currentChar = Character.toUpperCase(char)\n            result += currentChar\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3q8xh2qm.scala:11:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            currentChar = Character.toUpperCase(char)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    Char\n\u001b[31m   |\u001b[0m                          Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979101
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val chars = string.filter(_.isLetter)\n        chars.map(_.toUpperCase).mkString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxkk0y4y9.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        chars.map(_.toUpperCase).mkString\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value toUpperCase is not a member of Char\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979100
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = new StringBuilder()\n        var isUpper = false\n\n        for (ch <- string.toCharArray()) {\n            isUpper match {\n                case true => {\n                    result ++= ch.toUpperCase()\n                    isUpper = false\n                }\n                case false => {\n                    result ++= ch.toLowerCase()\n                    isUpper = true\n                }\n            }\n        }\n\n        result.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptl3wg64d.scala:14:34 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                    result ++= ch.toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptl3wg64d.scala:18:34 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                    result ++= ch.toLowerCase()\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toLowerCase is not a member of Char\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979102
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.foldLeft[String](\"\") { (s, c) =>\n            if (c.toLowerCase >= 'a' && c.toLowerCase <= 'z')\n                s + \"A\" + c.toUpperCase\n            else if (c.toUpperCase >= 'A' && c.toUpperCase <= 'Z')\n                s + \"a\" + c.toLowerCase\n            else \n                s +  c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3ci6hkx0.scala:9:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (c.toLowerCase >= \u001b[31m'a'\u001b[0m && c.toLowerCase <= \u001b[31m'z'\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3ci6hkx0.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                s + \u001b[31m\"A\"\u001b[0m + c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3ci6hkx0.scala:11:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m \u001b[33mif\u001b[0m (c.toUpperCase >= \u001b[31m'A'\u001b[0m && c.toUpperCase <= \u001b[31m'Z'\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3ci6hkx0.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                s + \u001b[31m\"a\"\u001b[0m + c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n4 errors found\n",
      "stdout": "",
      "timestamp": 1659979102
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var flipped : String = \"\"\n        for(i <- 0 until string.length) flipped += scala.math.pow(2,i)*string.charAt(i).toLowerCase + string.charAt(i).toUpperCase\n        flipped\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpshjmxj1t.scala:9:48 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m(i <- \u001b[31m0\u001b[0m until string.length) flipped += scala.math.pow(\u001b[31m2\u001b[0m,i)*string.charAt(i).toLowerCase + string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m  |\u001b[0m                                        ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m              value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpshjmxj1t.scala:9:88 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m(i <- \u001b[31m0\u001b[0m until string.length) flipped += scala.math.pow(\u001b[31m2\u001b[0m,i)*string.charAt(i).toLowerCase + string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m  |\u001b[0m                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 value toLowerCase is not a member of Char\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979102
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val strArray = string.split(\"\")\n        strArray.foldRight(\"\")((current, char) => current + char.toUpperCase())\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpmbooq_0b.scala:13)\n\tat Problem.main(tmpmbooq_0b.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659979103
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for(i <- 0 to string.length - 1) {\n            if(string(i).toLowerCase == string(i)) {\n                result += string(i).toUpperCase\n            }\n            else {\n                result += string(i).toLowerCase\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_qs9d65z.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m(string(i).toLowerCase == string(i)) {\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_qs9d65z.scala:11:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                result += string(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_qs9d65z.scala:11:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                result += string(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_qs9d65z.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += string(i).toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_qs9d65z.scala:14:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += string(i).toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n5 errors found\n",
      "stdout": "",
      "timestamp": 1659979102
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var stringArray = string.toArray\n        var newString = stringArray.clone()\n        var upperCase = false\n        for(char <- stringArray) {\n            if(char == char.toLowerCase()) {\n                if(upperCase) {\n                    newString.remove(stringArray.indexOf(char))\n                }\n                else {\n                    newString.remove(stringArray.indexOf(char))\n                    newString.remove(stringArray.indexOf(char))\n                    newString.remove(stringArray.indexOf(char))\n                }\n                upperCase = !upperCase\n            }\n        }\n        return newString.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpho4ws0mh.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mif\u001b[0m(char == char.toLowerCase()) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                       value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpho4ws0mh.scala:14:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                    newString.remove(stringArray.indexOf(char))\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value remove is not a member of Array[Char]\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpho4ws0mh.scala:17:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                    newString.remove(stringArray.indexOf(char))\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value remove is not a member of Array[Char]\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpho4ws0mh.scala:18:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                    newString.remove(stringArray.indexOf(char))\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value remove is not a member of Array[Char]\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpho4ws0mh.scala:19:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                    newString.remove(stringArray.indexOf(char))\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value remove is not a member of Array[Char]\n5 errors found\n",
      "stdout": "",
      "timestamp": 1659979103
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val upper = string.map(_.toUpperCase)\n        val lower = string.map(_.toLowerCase)\n        val combined = upper ++ lower\n        combined.mkString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7w3lofo4.scala:8:33 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mupper\u001b[0m = string.map(_.toUpperCase)\n\u001b[31m\u001b[31m  |\u001b[0m                               ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                               value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7w3lofo4.scala:9:33 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mlower\u001b[0m = string.map(_.toLowerCase)\n\u001b[31m\u001b[31m  |\u001b[0m                               ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                               value toLowerCase is not a member of Char\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979102
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var res = \"\";\n        var strChars = new mutable.StringBuilder(string);\n\n        // For each character in the string, convert it to upper or lower.\n        // If it is a capital letter, add an uppercase letter, otherwise add lowercase letter.\n        strChars.foreach { char =>\n            if (char >= 'A' && char <= 'Z')\n                res += char.asInstanceOf[Char].toUpper\n            else\n                res += char.asInstanceOf[Char].toLower\n        }\n        res\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpw5t_47mv.scala:9:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mstrChars\u001b[0m = \u001b[33mnew\u001b[0m mutable.StringBuilder(string);\n\u001b[31m\u001b[31m  |\u001b[0m                           ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                           Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979097
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.map(_.toLowerCase).map(_.toUpperCase).mkString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4hphthvp.scala:8:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        string.map(_.toLowerCase).map(_.toUpperCase).mkString\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   value toLowerCase is not a member of Char\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979090
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var newString = string\n        newString.toLowerCase.zip(string.toLowerCase).foreach { case (s, u) => newString = newString.replaceAll(s.replaceAll(u), u)}\n        newString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz3s8bq53.scala:9:114 ------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        newString.toLowerCase.zip(string.toLowerCase).foreach { \u001b[33mcase\u001b[0m (s, u) => newString = newString.replaceAll(s.replaceAll(u), u)}\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                  value replaceAll is not a member of Char\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz3s8bq53.scala:9:129 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        newString.toLowerCase.zip(string.toLowerCase).foreach { \u001b[33mcase\u001b[0m (s, u) => newString = newString.replaceAll(s.replaceAll(u), u)}\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                                                      Found:    (u : Char)\n\u001b[31m  |\u001b[0m                                                      Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979102
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (letter <- string) {\n            if (letter.isUpper) {\n                result += letter.swapCase\n            } else {\n                result += letter\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpk63c1wvx.scala:11:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                result += letter.swapCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpk63c1wvx.scala:11:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                result += letter.swapCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value swapCase is not a member of Char\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979102
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- string.toCharArray) result = result + if(i.toLowerCase == i.toUpperCase ) i.toUpperCase else i.toLowerCase \n        result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpkiv81ccb.scala:9:56 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- string.toCharArray) result = result + \u001b[33mif\u001b[0m(i.toLowerCase == i.toUpperCase ) i.toUpperCase \u001b[33melse\u001b[0m i.toLowerCase \n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                          expression expected but \u001b[31mif\u001b[0m found\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979100
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string match {\n            case Nil => \"\"\n            case h::t => h match {\n                    case c => c -> flipCase(t)\n                    case _  => h\n                }\n            }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdhaknt3d.scala:9:17 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mcase\u001b[0m Nil => \u001b[31m\"\"\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m                 ^^^\u001b[0m\n\u001b[31m  |\u001b[0m          Found:    (Nil : => collection.immutable.Nil\u00b2.type)\n\u001b[31m  |\u001b[0m          Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m          where:    Nil  is a getter in \u001b[33mpackage object\u001b[0m \u001b[35mscala\u001b[0m\n\u001b[31m  |\u001b[0m                    Nil\u00b2 is a object in \u001b[33mpackage\u001b[0m \u001b[35mscala.collection.immutable\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m          pattern type is incompatible with expected type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdhaknt3d.scala:11:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                    \u001b[33mcase\u001b[0m c => c -> flipCase(t)\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (t : List[Any])\n\u001b[31m   |\u001b[0m                                            Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdhaknt3d.scala:12:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                    \u001b[33mcase\u001b[0m _  => h\n\u001b[31m\u001b[31m   |\u001b[0m                               ^\u001b[0m\n\u001b[31m   |\u001b[0m                               Found:    (h : Any)\n\u001b[31m   |\u001b[0m                               Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659979103
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val result = new mutable.StringBuilder\n        for(c <- string) {\n            result += if(c.toUpperCase == c) c.toLowerCase\n            else c.toUpperCase\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmphza1c680.scala:10:22 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += \u001b[33mif\u001b[0m(c.toUpperCase == c) c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^\u001b[0m\n\u001b[31m   |\u001b[0m                      expression expected but \u001b[31mif\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphza1c680.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = \u001b[33mnew\u001b[0m mutable.StringBuilder\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979103
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until string.length)\n            if(string(i).isUpper)\n                result += string(i).toLowerCase\n            else\n                result += string(i).toUpper\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpm0sfqa07.scala:11:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                result += string(i).toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpm0sfqa07.scala:11:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                result += string(i).toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979109
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val upperCaseChars = new mutable.HashSet[Char]()\n        val lowerCaseChars = new mutable.HashSet[Char]()\n\n        for(i <- 0 until string.length) {\n            val chr = string.charAt(i)\n            if(chr >= 'a' && chr <= 'z') {\n                upperCaseChars += chr\n            } else if(chr >= 'A' && chr <= 'Z') {\n                lowerCaseChars += chr\n            }\n        }\n\n        var output = new StringBuilder(string.length)\n        for(i <- 0 until string.length) {\n            val chr = string.charAt(i)\n            if(lowerCaseChars.contains(chr)) {\n                output.append(chr)\n            } else if(upperCaseChars.contains(chr)) {\n                output.append(chr.toUpperCase())\n            } else {\n                output.append(chr)\n            }\n        }\n\n        output.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6li2s83q.scala:8:33 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mupperCaseChars\u001b[0m = \u001b[33mnew\u001b[0m mutable.HashSet[\u001b[35mChar\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                                 ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6li2s83q.scala:9:33 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mlowerCaseChars\u001b[0m = \u001b[33mnew\u001b[0m mutable.HashSet[\u001b[35mChar\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                                 ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6li2s83q.scala:26:34 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m                output.append(chr.toUpperCase())\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toUpperCase is not a member of Char\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659979110
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        // Iterate over every character in string\n        for (char <- string) {\n            // If the character is a lowercase character, then flip it.\n            // Otherwise, do nothing (don't flip the character).\n            if (char >= 'a' && char <= 'z') {\n                char - 'a'\n            } else {\n                char\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvkwwhs5q.scala:9:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m 9 |\u001b[0m        \u001b[33mfor\u001b[0m (char <- string) {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Unit\n\u001b[31m   |\u001b[0m        Required: String\n\u001b[31m10 |\u001b[0m            \u001b[34m// If the character is a lowercase character, then flip it.\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[34m// Otherwise, do nothing (don't flip the character).\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mif\u001b[0m (char >= \u001b[31m'a'\u001b[0m && char <= \u001b[31m'z'\u001b[0m) {\n\u001b[31m13 |\u001b[0m                char - \u001b[31m'a'\u001b[0m\n\u001b[31m14 |\u001b[0m            } \u001b[33melse\u001b[0m {\n\u001b[31m15 |\u001b[0m                char\n\u001b[31m16 |\u001b[0m            }\n\u001b[31m17 |\u001b[0m        }\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979110
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n      var retStr = \"\";\n      for ( letter <- string.toCharArray ) {\n        if (letter == 'a' || letter == 'A') {\n          retStr += letter.toUpperCase();\n        } else if (letter == 'b' || letter == 'B') {\n          retStr += letter.toLowerCase();\n        }\n      }\n      return retStr;\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3mjvnrvb.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m          retStr += letter.toUpperCase();\n\u001b[31m\u001b[31m   |\u001b[0m          ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3mjvnrvb.scala:11:27 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m          retStr += letter.toUpperCase();\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3mjvnrvb.scala:13:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m          retStr += letter.toLowerCase();\n\u001b[31m\u001b[31m   |\u001b[0m          ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3mjvnrvb.scala:13:27 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m          retStr += letter.toLowerCase();\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value toLowerCase is not a member of Char\n4 errors found\n",
      "stdout": "",
      "timestamp": 1659979112
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val string2 = string.map {\n            x => if (x.isLowerCase) x.toUpper else x.toLowerCase\n        }\n        string.mkString(string2.toSeq)\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp111d7h40.scala:9:23 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[36mx\u001b[0m => \u001b[33mif\u001b[0m (x.isLowerCase) x.toUpper \u001b[33melse\u001b[0m x.toLowerCase\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     value isLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp111d7h40.scala:9:53 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[36mx\u001b[0m => \u001b[33mif\u001b[0m (x.isLowerCase) x.toUpper \u001b[33melse\u001b[0m x.toLowerCase\n\u001b[31m\u001b[31m  |\u001b[0m                                                   ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp111d7h40.scala:11:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        string.mkString(string2.toSeq)\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    scala.collection.immutable.WrappedString\n\u001b[31m   |\u001b[0m                      Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659979112
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        if (string.length <= 1) string\n        else string.map(_.toLowerCase).map(_.toUpperCase)\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpqwhzfp2s.scala:9:26 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m string.map(_.toLowerCase).map(_.toUpperCase)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        value toLowerCase is not a member of Char\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979112
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.foreach(charToUpper _)\n        string.foreach(upperToLower _)\n        string\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E099] Syntax Error: /tmp/tmpdyf8ox_i.scala:8:35 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        string.foreach(charToUpper _)\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mOnly function types can be followed by _ but the current expression has type <error Not found: charToUpper>\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdyf8ox_i.scala:9:23 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        string.foreach(upperToLower _)\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Not found: upperToLower\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979109
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val charList = string.split(\"\")\n        var flipped = \"\"\n        for(i <- 0 until charList.length){\n            flipped += if(charList(i).isUpper)\n                charList(i).toLowerCase\n            else\n                charList(i).toUpperCase\n        }\n        flipped\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpdg7z1uq0.scala:11:23 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            flipped += \u001b[33mif\u001b[0m(charList(i).isUpper)\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^\u001b[0m\n\u001b[31m   |\u001b[0m                       expression expected but \u001b[31mif\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpdg7z1uq0.scala:13:12 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            \u001b[33melse\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            end of statement expected but 'else' found\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979109
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var s = string.copy(0,string.length)\n        for( i <- 0 until s.length ) {\n            if( s.charAt(i) >= 'a' && s.charAt(i) <= 'z' ) {\n                s.charAt(i) = s.charAt(i).toUpperCase\n            }\n            if( s.charAt(i) >= 'A' && s.charAt(i) <= 'Z' ) {\n                s.charAt(i) = s.charAt(i).toLowerCase\n            }\n        }\n        return s\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp56ugjy0p.scala:8:23 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36ms\u001b[0m = string.copy(\u001b[31m0\u001b[0m,string.length)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m         value copy is not a member of String - did you mean string.clone?\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979112
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val flip = MutableList.empty[Char]\n        val result = MutableList.empty[Char]\n        string.foreach(c => {\n            if(c == 'a'){\n                flip += Char.lowercase\n            }else if(c == 'A'){\n                flip += Char.uppercase\n            }else{\n                flip += c\n            }\n        })\n        string.foreach(c => {\n            if(c == 'a'){\n                flip += Char.lowercase\n            }else if(c == 'A'){\n                flip += Char.uppercase\n            }else{\n                flip += c\n            }\n        })\n        string.foreach(c => {\n            if(c == 'a'){\n                flip += Char.lowercase\n            }else if(c == 'A'){\n                flip += Char.uppercase\n            }else{\n                flip += c\n            }\n        })\n        string.foreach(c => {\n            if(c == 'a'){\n                flip += Char.lowercase\n            }else if(c == 'A'){\n                flip += Char.uppercase\n            }else{\n                flip += c\n            }\n        })\n        string.foreach(c => {\n            if(c == 'a'){\n                flip += Char.lowercase\n            }else if(c == 'A'){\n                flip += Char.uppercase\n            }else{\n                flip += c\n            }\n        })\n        string.foreach(c => {\n            if(c == 'a'){\n                flip += Char.lowercase\n            }else if(c == 'A'){\n                flip += Char.uppercase\n            }else{\n                flip += c\n            }\n        })\n        string.foreach(c => {\n            if(c == 'a'){\n                flip += Char.lowercase\n            }else if(c == 'A'){\n                flip += Char.uppercase\n            }else{\n                flip += c\n            }\n        })\n        string.foreach(c => {\n            if(c == 'a'){\n                flip += Char.lowercase\n            }else if(c == 'A'){\n                flip += Char.uppercase\n            }else{\n                flip += c\n            }\n        })\n        string.foreach(c => {\n            if(c == 'a'){\n                flip += Char.lowercase\n            }else if(c == 'A'){\n                flip += Char.uppercase\n            }else{\n                flip += c\n            }\n        })\n        string.foreach(c => {\n            if(c == 'a'){\n                flip += Char.lowercase\n            }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyuflhwx2.scala:96:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m96 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but 'def' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyuflhwx2.scala:103:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m103 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyuflhwx2.scala:8:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mflip\u001b[0m = MutableList.empty[\u001b[35mChar\u001b[0m]\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: MutableList\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyuflhwx2.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = MutableList.empty[\u001b[35mChar\u001b[0m]\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: MutableList\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "stdout": "",
      "timestamp": 1659979109
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var ret = new StringBuilder()\n        for (i <- string.toLowerCase ; j <- string.toUpperCase ; j <- string.toLowerCase) {\n            ret.append(i).append(j)\n        }\n        return ret.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpr1oirue8.scala:16)\n\tat Problem.main(tmpr1oirue8.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659979114
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var output : StringBuilder = new StringBuilder\n        for(i <- string.length){\n            if(i.asInstanceOf[Char].isUpper){\n                output.append(i.asInstanceOf[Char]).append(i.asInstanceOf[Char].toLowerCase)\n            }else if(i.asInstanceOf[Char].isLower){\n                output.append(i.asInstanceOf[Char]).append(i.asInstanceOf[Char].toUpperCase)\n            }else{\n                output.append(i.asInstanceOf[Char])\n            }\n        }\n        return output.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp50wm6mic.scala:9:17 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m(i <- string.length){\n\u001b[31m\u001b[31m  |\u001b[0m                 ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                 value foreach is not a member of Int\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979113
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.map { c =>\n            if (c == c.toUpperCase())\n                c.toUpperCase()\n            else \n                c.toLowerCase()\n        }.mkString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5xw7xhbb.scala:9:23 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (c == c.toUpperCase())\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5xw7xhbb.scala:10:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                c.toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5xw7xhbb.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                c.toLowerCase()\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value toLowerCase is not a member of Char\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659979114
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (c: Char <- string.toCharArray) {\n            if (c.isLower && c.isUpper) {\n                result += c.toUpper\n            } else if (c.isUpper) {\n                result += c.toLower\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpjkc5ne6x.scala:20)\n\tat Problem.main(tmpjkc5ne6x.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659979114
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var str = \"\";\n        for(i <- 0 until string.length) {\n            str += if(string.charAt(i).toLower.equals(\"a\") && string.charAt(i).toUpper == \"A\") {\n                string.charAt(i).toUpper\n            } else if(string.charAt(i).toUpper == \"A\" && string.charAt(i).toLower.equals(\"a\")) {\n                string.charAt(i).toLower\n            } else {\n                string.charAt(i)\n            }\n        }\n        return str\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp7zmabzfv.scala:10:19 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            str += \u001b[33mif\u001b[0m(string.charAt(i).toLower.equals(\u001b[31m\"a\"\u001b[0m) && string.charAt(i).toUpper == \u001b[31m\"A\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^\u001b[0m\n\u001b[31m   |\u001b[0m                   expression expected but \u001b[31mif\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979110
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.foreach { char =>\n            if(char.isUpper) string.replace(char, char.toUpperCase)\n            if(char.isLower) string.replace(char, char.toLowerCase)\n        }\n        string\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw4a979ab.scala:9:55 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m(char.isUpper) string.replace(char, char.toUpperCase)\n\u001b[31m\u001b[31m  |\u001b[0m                                                  ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw4a979ab.scala:10:55 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m(char.isLower) string.replace(char, char.toLowerCase)\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toLowerCase is not a member of Char\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979113
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.foldLeft(\"\")((result, character) => {\n            val upperCase = character.toUpperCase //or toLowerCase\n            result + upperCase\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpptjxsjmp.scala:9:38 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mupperCase\u001b[0m = character.toUpperCase \u001b[34m//or toLowerCase\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            value toUpperCase is not a member of Char\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979113
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.foldLeft(\"\"){(temp,str) =>\n            if(str.equals(\"\")) temp\n            else (str.equals(\"\") ? temp.charAt(0).toUpperCase + temp.substring(1) : temp.charAt(0).toLowerCase + temp.substring(1))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu08xnt_l.scala:10:95 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33melse\u001b[0m (str.equals(\u001b[31m\"\"\u001b[0m) ? temp.charAt(\u001b[31m0\u001b[0m).toUpperCase + temp.substring(\u001b[31m1\u001b[0m) : temp.charAt(\u001b[31m0\u001b[0m).toLowerCase + temp.substring(\u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                               ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             ')' expected, but '(' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpu08xnt_l.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33melse\u001b[0m (str.equals(\u001b[31m\"\"\u001b[0m) ? temp.charAt(\u001b[31m0\u001b[0m).toUpperCase + temp.substring(\u001b[31m1\u001b[0m) : temp.charAt(\u001b[31m0\u001b[0m).toLowerCase + temp.substring(\u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value ? is not a member of Boolean\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpu08xnt_l.scala:10:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33melse\u001b[0m (str.equals(\u001b[31m\"\"\u001b[0m) ? temp.charAt(\u001b[31m0\u001b[0m).toUpperCase + temp.substring(\u001b[31m1\u001b[0m) : temp.charAt(\u001b[31m0\u001b[0m).toLowerCase + temp.substring(\u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toUpperCase is not a member of Char\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659979114
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val lc = string.map(_.toLower)\n        val uc = string.map(_.toUpperCase)\n        return lc + uc\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_91ve22_.scala:9:30 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36muc\u001b[0m = string.map(_.toUpperCase)\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            value toUpperCase is not a member of Char\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979113
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        // Initialize an empty mutable collection\n        val result = mutable.ListBuffer[String]()\n        // Convert the string into an array of characters.\n        val charArray = string.split(\"\")\n        // Convert each character to uppercase or lowercase and store in mutable collection.\n        for (i <- 0 until charArray.length) result += (charArray(i).toUpperCase + charArray(i).toLowerCase)\n        // Return the character array string with modified characters\n        result.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyipay71w.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.ListBuffer[\u001b[35mString\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979111
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val mutableString = mutable.ArrayBuffer.empty[Char]\n        for (letter <- string) {\n            if (letter.isUpper) {\n                mutableString.append(letter.toLower)\n            } else {\n                mutableString.append(letter.toUpper)\n            }\n        }\n        return new String(mutableString)\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpokm408ao.scala:8:28 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmutableString\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mChar\u001b[0m]\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979111
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.foldLeft(\"\")((acc, x) => x match {\n            case 'a' => acc + \"A\"\n            case 'b' => acc + \"B\"\n            case 'c' => acc + \"C\"\n            case 'd' => acc + \"D\"\n            case 'e' => acc + \"E\"\n            case 'f' => acc + \"F\"\n            case 'g' => acc + \"G\"\n            case 'h' => acc + \"H\"\n            case 'i' => acc + \"I\"\n            case 'j' => acc + \"J\"\n            case 'k' => acc + \"K\"\n            case 'l' => acc + \"L\"\n            case 'm' => acc + \"M\"\n            case 'n' => acc + \"N\"\n            case 'o' => acc + \"O\"\n            case 'p' => acc + \"P\"\n            case 'q' => acc + \"Q\"\n            case 'r' => acc + \"R\"\n            case 's' => acc + \"S\"\n            case 't' => acc + \"T\"\n            case 'u' => acc + \"U\"\n            case 'v' => acc + \"V\"\n            case 'w' => acc + \"W\"\n            case 'x' => acc + \"X\"\n            case 'y' => acc + \"Y\"\n            case 'z' => acc + \"Z\"\n            case x => acc + x\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp8xvhbbvc.scala:40)\n\tat Problem.main(tmp8xvhbbvc.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659979115
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var charList = new ListBuffer[Char]\n        for (i <- 0 until string.length) {\n            val oldChar = string(i)\n            val newChar = oldChar.toLowerCase\n            charList += newChar\n            string(i) = newChar\n        }\n        return string.mkString.toUpperCase\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6ew4gqkc.scala:11:34 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mnewChar\u001b[0m = oldChar.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6ew4gqkc.scala:13:12 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            string(i) = newChar\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value update is not a member of String\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979115
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string match {\n            case \"\" => string\n            case _ => string.map(_.toUpperCase).map(_.toLowerCase)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpr3tjvfdr.scala:10:35 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mcase\u001b[0m _ => string.map(_.toUpperCase).map(_.toLowerCase)\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toUpperCase is not a member of Char\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979119
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        // Use a mutable StringBuilder to flip case from the string.\n        val stringBuilder = new StringBuilder\n        for (i <- 0 until string.length)\n            if (string.charAt(i).toLowerCase == string.charAt(i).toUpperCase ) {\n                stringBuilder.append(string.charAt(i).toLowerCase)\n            }\n            else {\n                stringBuilder.append(string.charAt(i).toUpperCase)\n            }\n        stringBuilder.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_ztc6da8.scala:11:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i).toLowerCase == string.charAt(i).toUpperCase ) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_ztc6da8.scala:12:54 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                stringBuilder.append(string.charAt(i).toLowerCase)\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_ztc6da8.scala:15:54 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                stringBuilder.append(string.charAt(i).toUpperCase)\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toUpperCase is not a member of Char\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659979122
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val upper = string.map {c => if (c >= 'a' && c <= 'z') c else (char.ToUpper(c))}\n        val lower = string.map {c => if (c >= 'A' && c <= 'Z') c else (char.ToLower(c))}\n        upper.mkString.reverse + lower.mkString.reverse\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps1qy9rmb.scala:8:71 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mupper\u001b[0m = string.map {\u001b[36mc\u001b[0m => \u001b[33mif\u001b[0m (c >= \u001b[31m'a'\u001b[0m && c <= \u001b[31m'z'\u001b[0m) c \u001b[33melse\u001b[0m (char.ToUpper(c))}\n\u001b[31m\u001b[31m  |\u001b[0m                                                                       ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                           Not found: char\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps1qy9rmb.scala:9:71 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mlower\u001b[0m = string.map {\u001b[36mc\u001b[0m => \u001b[33mif\u001b[0m (c >= \u001b[31m'A'\u001b[0m && c <= \u001b[31m'Z'\u001b[0m) c \u001b[33melse\u001b[0m (char.ToLower(c))}\n\u001b[31m\u001b[31m  |\u001b[0m                                                                       ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                           Not found: char\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979117
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string match {\n            case \"\" => \"\"\n            case \"\" => \"\"\n            case x => x match {\n                case c.toUpper => c.toLower\n                case c.toLower => c.toUpper\n                case _ => x\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwhdo62yy.scala:12:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                \u001b[33mcase\u001b[0m c.toUpper => c.toLower\n\u001b[31m\u001b[31m   |\u001b[0m                     ^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwhdo62yy.scala:12:34 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                \u001b[33mcase\u001b[0m c.toUpper => c.toLower\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                  Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwhdo62yy.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                \u001b[33mcase\u001b[0m c.toLower => c.toUpper\n\u001b[31m\u001b[31m   |\u001b[0m                     ^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwhdo62yy.scala:13:34 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                \u001b[33mcase\u001b[0m c.toLower => c.toUpper\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                  Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "stdout": "",
      "timestamp": 1659979116
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string match {\n            case \"\" => \"\"\n            case s => s.zip(s.reverse).map { case (c,b) => b.toUpperCase + c }.mkString\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5ssnrc_a.scala:10:61 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mcase\u001b[0m s => s.zip(s.reverse).map { \u001b[33mcase\u001b[0m (c,b) => b.toUpperCase + c }.mkString\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toUpperCase is not a member of Char\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979121
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val upperCaseStrings = string.map(_.toUpperCase)\n        val upperCaseStringsReversed = upperCaseStrings.reverse\n        upperCaseStringsReversed.mkString(\"\")\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmxbjtfez.scala:8:44 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mupperCaseStrings\u001b[0m = string.map(_.toUpperCase)\n\u001b[31m\u001b[31m  |\u001b[0m                                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 value toUpperCase is not a member of Char\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979120
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.map {\n            case ('A' => \"a\", 'a' | \"A\") => Character.toLowerCase(it).getOrElse(it)\n            case ('Z' => \"z\", 'z' | \"Z\") => Character.toUpperCase(it).getOrElse(it)\n            case _ => it\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnj77f0nr.scala:9:22 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mcase\u001b[0m (\u001b[31m'A'\u001b[0m => \u001b[31m\"a\"\u001b[0m, \u001b[31m'a'\u001b[0m | \u001b[31m\"A\"\u001b[0m) => Character.toLowerCase(it).getOrElse(it)\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^\u001b[0m\n\u001b[31m  |\u001b[0m                      ')' expected, but '=>' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnj77f0nr.scala:10:22 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mcase\u001b[0m (\u001b[31m'Z'\u001b[0m => \u001b[31m\"z\"\u001b[0m, \u001b[31m'z'\u001b[0m | \u001b[31m\"Z\"\u001b[0m) => Character.toUpperCase(it).getOrElse(it)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^\u001b[0m\n\u001b[31m   |\u001b[0m                      ')' expected, but '=>' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnj77f0nr.scala:9:66 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mcase\u001b[0m (\u001b[31m'A'\u001b[0m => \u001b[31m\"a\"\u001b[0m, \u001b[31m'a'\u001b[0m | \u001b[31m\"A\"\u001b[0m) => Character.toLowerCase(it).getOrElse(it)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                  ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                             Not found: it\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnj77f0nr.scala:10:66 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mcase\u001b[0m (\u001b[31m'Z'\u001b[0m => \u001b[31m\"z\"\u001b[0m, \u001b[31m'z'\u001b[0m | \u001b[31m\"Z\"\u001b[0m) => Character.toUpperCase(it).getOrElse(it)\n\u001b[31m\u001b[31m   |\u001b[0m                                                                  ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                           Not found: it\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnj77f0nr.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mcase\u001b[0m _ => it\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: it\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors",
      "stdout": "",
      "timestamp": 1659979119
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = string.mkString\n        for(i <- 0 until string.length){\n            if(string(i).isLower) result = result + string(i).toUpper\n            else result = result + string(i).toLower\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp3wrzytfs.scala:17)\n\tat Problem.main(tmp3wrzytfs.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659979124
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var tempStr = \"\"\n        var toUpper = false\n        for (x <- string) {\n            if (toUpper) {\n                tempStr += x.toUpperCase\n                toUpper = false\n            } else {\n                tempStr += x.toLowerCase\n                toUpper = true\n            }\n        }\n        return tempStr\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvude_13e.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                tempStr += x.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvude_13e.scala:12:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                tempStr += x.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvude_13e.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                tempStr += x.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvude_13e.scala:15:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                tempStr += x.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           value toLowerCase is not a member of Char\n4 errors found\n",
      "stdout": "",
      "timestamp": 1659979122
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var output = string\n        for (i <- 0 until output.length)\n            if (output.charAt(i).toLowerCase == output.charAt(i))\n                output = output swap output.charAt(i) toUpperCase\n        output\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpa79_f2sz.scala:11:65 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                output = output swap output.charAt(i) toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                                                                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                                  expression expected but \u001b[31munindent\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa79_f2sz.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (output.charAt(i).toLowerCase == output.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa79_f2sz.scala:11:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                output = output swap output.charAt(i) toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m       value swap is not a member of String - did you mean String.strip?\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659979123
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string match {\n            case null => \"\"\n            case _ =>\n                val upper = string.uppercase\n                val lower = string.lowercase\n                val flipped = upper + lower\n                flipped\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp69y48m1z.scala:11:35 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                \u001b[33mval\u001b[0m \u001b[36mupper\u001b[0m = string.uppercase\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            value uppercase is not a member of String\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp69y48m1z.scala:12:35 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                \u001b[33mval\u001b[0m \u001b[36mlower\u001b[0m = string.lowercase\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            value lowercase is not a member of String\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979123
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = string\n        for (i <- string.indices) {\n            val lower = string(i)\n            val upper = string(i).swapCase()\n            result = result.substring(0, i) + upper + result.substring(i + 1)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsbf9e982.scala:11:34 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mupper\u001b[0m = string(i).swapCase()\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        value swapCase is not a member of Char\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979123
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string match {\n            case null => null\n            case x => x.map(x => if (x.toUpperCase == x) x.toUpperCase else x.toLowerCase).getOrElse(null)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbnabb7hf.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mcase\u001b[0m x => x.map(x => \u001b[33mif\u001b[0m (x.toUpperCase == x) x.toUpperCase \u001b[33melse\u001b[0m x.toLowerCase).getOrElse(\u001b[31mnull\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbnabb7hf.scala:10:59 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mcase\u001b[0m x => x.map(x => \u001b[33mif\u001b[0m (x.toUpperCase == x) x.toUpperCase \u001b[33melse\u001b[0m x.toLowerCase).getOrElse(\u001b[31mnull\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                                                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbnabb7hf.scala:10:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mcase\u001b[0m x => x.map(x => \u001b[33mif\u001b[0m (x.toUpperCase == x) x.toUpperCase \u001b[33melse\u001b[0m x.toLowerCase).getOrElse(\u001b[31mnull\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                                                                            ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toLowerCase is not a member of Char\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659979125
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val buffer = new StringBuilder()\n        for (i <- 0 to string.length)\n            if(string.charAt(i) ==='a')\n                buffer.append(string.charAt(string.length -1 -i))\n            else buffer.append(string.charAt(i))\n        buffer.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0jux4tgk.scala:10:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m(string.charAt(i) ===\u001b[31m'a'\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value === is not a member of Char - did you mean Char.==?\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979124
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val sb = new StringBuilder\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) >=('a'&& string.charAt(i) <= 'z')) {\n                sb.append(string.charAt(i).toChar.toUpperCase())\n            } \n            else {\n                sb.append(string.charAt(i).toChar.toLowerCase())\n            }\n        }\n        return sb.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpq0_vcmau.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i) >=(\u001b[31m'a'\u001b[0m&& string.charAt(i) <= \u001b[31m'z'\u001b[0m)) {\n\u001b[31m\u001b[31m   |\u001b[0m                                    ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                    value && is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpq0_vcmau.scala:11:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                sb.append(string.charAt(i).toChar.toUpperCase())\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpq0_vcmau.scala:14:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                sb.append(string.charAt(i).toChar.toLowerCase())\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659979125
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (letter in string){\n            result += if(letter > 'z') letter.toUpper else letter.toLower\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp60uu1tmt.scala:9:30 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (letter in string){\n\u001b[31m\u001b[31m  |\u001b[0m                              ^\u001b[0m\n\u001b[31m  |\u001b[0m                              '<-' expected, but '{' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp60uu1tmt.scala:11:9 -------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        }\n\u001b[31m\u001b[31m   |\u001b[0m         ^\u001b[0m\n\u001b[31m   |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import Option.option2Iterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.enumeration AsScalaIterator\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.iterator asScala\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.map AsScalaConcurrentMap\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.set asScala\n\u001b[31m   |\u001b[0m\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979126
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var upperCase = \"\"\n        var lowerCase = \"\"\n        var i = 0\n        for(letter <- string) {\n            if(i == 0) {\n                lowerCase += letter\n                upperCase += letter\n            }\n            else {\n                if(letter != string.charAt(i)) {\n                    upperCase += letter\n                    lowerCase += letter\n                }\n                else {\n                    upperCase += string.charAt(i)\n                    lowerCase += string.charAt(i)\n                }\n            }\n            i += 1\n        }\n        (upperCase, lowerCase)\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp59mq1ehh.scala:28:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m        (upperCase, lowerCase)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m        Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979125
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val array = string.split('')\n        var newString = \"\"\n        for(i <- 0 until array.length){\n            if(i % 2 == 0){\n                newString += Character.toUpperCase(array(i))\n            }else{\n                newString += Character.toLowerCase(array(i))\n            }\n        }\n        return newString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp7n17ezz6.scala:8:33 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36marray\u001b[0m = string.split('')\n\u001b[31m\u001b[31m  |\u001b[0m                                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                                 empty character literal\n\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp7n17ezz6.scala:9:22 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mnewString\u001b[0m = \u001b[31m\"\"\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m                      ^\u001b[0m\n\u001b[31m  |\u001b[0m                      expression expected but \u001b[31m=\u001b[0m found\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7n17ezz6.scala:9:8 --------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mnewString\u001b[0m = \u001b[31m\"\"\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Not found: 'var\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7n17ezz6.scala:12:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                newString += Character.toUpperCase(array(i))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Not found: newString\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7n17ezz6.scala:14:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                newString += Character.toLowerCase(array(i))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Not found: newString\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7n17ezz6.scala:17:15 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mreturn\u001b[0m newString\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Not found: newString\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n6 errors found\n",
      "stdout": "",
      "timestamp": 1659979122
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        if (string.length <= 1) string\n        else string.map(char => char.toLowerCase != char ? char.toUpperCase : char.toLowerCase ).mkString(\"\")\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpcqaobd9p.scala:9:83 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m string.map(char => char.toLowerCase != char ? char.toUpperCase : char.toLowerCase ).mkString(\u001b[31m\"\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                              ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                  type toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpcqaobd9p.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m string.map(char => char.toLowerCase != char ? char.toUpperCase : char.toLowerCase ).mkString(\u001b[31m\"\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                                ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                value toLowerCase is not a member of Char\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979125
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val chars = string.map(_.toUpperCase)\n        chars.reverse.foldLeft(string)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsze3od44.scala:8:33 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mchars\u001b[0m = string.map(_.toUpperCase)\n\u001b[31m\u001b[31m  |\u001b[0m                               ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                               value toUpperCase is not a member of Char\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979124
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until string.length) {\n            if(string(i) == \"a\") {\n                result = result + \"A\"\n            }\n            else {\n                result = result + string(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp94h1h2_4.scala:10:15 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m(string(i) == \u001b[31m\"a\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979126
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.toLowerCase match {\n            case letter if (letter != null) => letter match {\n                case 'a' => 'A'\n                case 'b' => 'B'\n                case 'c' => 'C'\n                case 'd' => 'D'\n                case 'e' => 'E'\n                case 'f' => 'F'\n                case 'g' => 'G'\n                case 'h' => 'H'\n                case 'i' => 'I'\n                case 'j' => 'J'\n                case 'k' => 'K'\n                case 'l' => 'L'\n                case 'm' => 'M'\n                case 'n' => 'N'\n                case 'o' => 'O'\n                case 'p' => 'P'\n                case 'q' => 'Q'\n                case 'r' => 'R'\n                case 's' => 'S'\n                case 't' => 'T'\n                case 'u' => 'U'\n                case 'v' => 'V'\n                case 'w' => 'W'\n                case 'x' => 'X'\n                case 'y' => 'Y'\n                case 'z' => 'Z'\n                case letter => letter\n            }\n            case letter => letter\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp3b9b3bw5.scala:10:21 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                \u001b[33mcase\u001b[0m \u001b[31m'a'\u001b[0m => \u001b[31m'A'\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3b9b3bw5.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                \u001b[33mcase\u001b[0m \u001b[31m'a'\u001b[0m => \u001b[31m'A'\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (\u001b[31m'A'\u001b[0m : Char)\n\u001b[31m   |\u001b[0m                            Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp3b9b3bw5.scala:11:21 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                \u001b[33mcase\u001b[0m \u001b[31m'b'\u001b[0m => \u001b[31m'B'\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3b9b3bw5.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                \u001b[33mcase\u001b[0m \u001b[31m'b'\u001b[0m => \u001b[31m'B'\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (\u001b[31m'B'\u001b[0m : Char)\n\u001b[31m   |\u001b[0m                            Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp3b9b3bw5.scala:12:21 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                \u001b[33mcase\u001b[0m \u001b[31m'c'\u001b[0m => \u001b[31m'C'\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3b9b3bw5.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                \u001b[33mcase\u001b[0m \u001b[31m'c'\u001b[0m => \u001b[31m'C'\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m          ",
      "stdout": "",
      "timestamp": 1659979131
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.foldLeft(\"\"){\n            case (acc, char) => acc + ((char.toUpperCase + char).toLowerCase)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfdrj5kwu.scala:9:45 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mcase\u001b[0m (acc, char) => acc + ((char.toUpperCase + char).toLowerCase)\n\u001b[31m\u001b[31m  |\u001b[0m                                        ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 value toUpperCase is not a member of Char\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979126
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.split(' ').map { word =>\n            word.foldLeft(word) { case (acc,c) => (acc.toLowerCase + c).toUpperCase }\n        }.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmps7871j42.scala:14)\n\tat Problem.main(tmps7871j42.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659979130
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.foldLeft(new StringBuilder)((builder, s) => {\n            builder.append(if (s.isUpper) s.toLower else s.toUpper)\n            builder.append(s)\n            builder.append\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpye6bi8va.scala:11:20 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            builder.append\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mappend\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mStringBuilder\u001b[0m with types\n\u001b[31m   |\u001b[0m (x: Char): StringBuilder\n\u001b[31m   |\u001b[0m (x: Double): StringBuilder\n\u001b[31m   |\u001b[0m (x: Float): StringBuilder\n\u001b[31m   |\u001b[0m (x: Long): StringBuilder\n\u001b[31m   |\u001b[0m (x: Int): StringBuilder\n\u001b[31m   |\u001b[0m (x: Short): StringBuilder\n\u001b[31m   |\u001b[0m (x: Byte): StringBuilder\n\u001b[31m   |\u001b[0m (x: Boolean): StringBuilder\n\u001b[31m   |\u001b[0m (s: StringBuilder): StringBuilder\n\u001b[31m   |\u001b[0m (cs: CharSequence): StringBuilder\n\u001b[31m   |\u001b[0m (s: String): StringBuilder\n\u001b[31m   |\u001b[0m (x: Any): StringBuilder\n\u001b[31m   |\u001b[0mmatch expected type StringBuilder\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979126
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.map(c => if (c >= 'a' && c <= 'z') c - 'a' + 'A' \n        else if (c >= 'A' && c <= 'Z') c - 'A' + 'a'\n        else c)\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbb6zefkc.scala:8:19 ---------------------\u001b[0m\u001b[0m\n\u001b[31m 8 |\u001b[0m        string.map(\u001b[36mc\u001b[0m => \u001b[33mif\u001b[0m (c >= \u001b[31m'a'\u001b[0m && c <= \u001b[31m'z'\u001b[0m) c - \u001b[31m'a'\u001b[0m + \u001b[31m'A'\u001b[0m \n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    Char => \u001b[1m\u001b[31mAnyVal\u001b[0m\n\u001b[31m   |\u001b[0m                   Required: Char => \u001b[1m\u001b[32mChar\u001b[0m\n\u001b[31m 9 |\u001b[0m        \u001b[33melse\u001b[0m \u001b[33mif\u001b[0m (c >= \u001b[31m'A'\u001b[0m && c <= \u001b[31m'Z'\u001b[0m) c - \u001b[31m'A'\u001b[0m + \u001b[31m'a'\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m c)\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979130
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n      string.map( _.toUpperCase ).toList\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6bm6ggl3.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m      string.map( _.toUpperCase ).toList\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value toUpperCase is not a member of Char\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979130
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val chars: mutable.Set[Char] = mutable.Set()\n        chars ++= string.toCharArray\n        chars.toList.foldLeft((\"\", \"\")){\n            case ((s, u), c) => (c + u, s)\n        }._2\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjx9xxjme.scala:8:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mchars\u001b[0m: mutable.Set[\u001b[35mChar\u001b[0m] = mutable.Set()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjx9xxjme.scala:8:39 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mchars\u001b[0m: mutable.Set[\u001b[35mChar\u001b[0m] = mutable.Set()\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                       Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979127
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.foldLeft(\"\"){\n        case (string, currentLetter) =>\n            string + currentLetter.toUpperCase()\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyjgh1wug.scala:10:35 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            string + currentLetter.toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     value toUpperCase is not a member of Char\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979132
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val newStringBuilder = new StringBuilder\n        for (character <- string.toCharArray) \n            if (character >= 'a' && character <= 'z') newStringBuilder.append((character - ('a' - 'A')).toString)\n            else if (character >= 'A' && character <= 'Z') newStringBuilder.append((character - ('A' - 'a')).toString)\n            else newStringBuilder += character\n        newStringBuilder.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpn64yjgtw.scala:17)\n\tat Problem.main(tmpn64yjgtw.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659979134
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result : String = \"\"\n        string.foreach { letter =>\n            if (letter.isUpper) {\n                result += \"_\" + letter.toLowerCase()\n            } else {\n                result += letter\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8g_1ni4b.scala:11:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                result += \u001b[31m\"_\"\u001b[0m + letter.toLowerCase()\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8g_1ni4b.scala:11:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                result += \u001b[31m\"_\"\u001b[0m + letter.toLowerCase()\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toLowerCase is not a member of Char\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979133
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val result = new StringBuilder\n        for (x <- string.toCharArray) {\n            if (x.toLowerCase == x)\n                result + x.toUpperCase\n            else\n                result += x.toLowerCase\n        }\n        result.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9s3tnvw2.scala:10:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (x.toLowerCase == x)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9s3tnvw2.scala:11:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                result + x.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue + is not a member of StringBuilder, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m   |\u001b[0m  import math.Integral.Implicits.infixIntegralOps\n\u001b[31m   |\u001b[0m  import math.Numeric.Implicits.infixNumericOps\n\u001b[31m   |\u001b[0m\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9s3tnvw2.scala:11:27 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                result + x.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9s3tnvw2.scala:13:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                result += x.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n4 errors found\n",
      "stdout": "",
      "timestamp": 1659979135
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var flipped = new StringBuilder()\n        var upperCaseCount = 0\n        var lowercaseCount = 0\n        for (c <- string) {\n            c match {\n                case 'A' =>\n                case 'a' =>\n                    flipped += c\n                    uppercaseCount += 1\n                    lowercaseCount -= 1\n                case 'B' =>\n                case 'b' =>\n                    flipped += c\n                    uppercaseCount -= 1\n                    lowercaseCount += 1\n                case 'C' =>\n                case 'c' =>\n                    flipped += c\n                    uppercaseCount += 1\n                    lowercaseCount += 1\n                case 'D' =>\n                case 'd' =>\n                    flipped += c\n                    lowercaseCount -= 1\n                    uppercaseCount += 1\n                case 'E' =>\n                case 'e' =>\n                    flipped += c\n                    lowercaseCount += 1\n                    uppercaseCount -= 1\n                case 'F' =>\n                case 'f' =>\n                    flipped += c\n                    lowercaseCount += 1\n                    uppercaseCount += 1\n                case 'G' =>\n                case 'g' =>\n                    flipped += c\n                    lowercaseCount += 1\n                    uppercaseCount += 1\n                case 'H' =>\n                case 'h' =>\n                    flipped += c\n                    lowercaseCount -= 1\n                    uppercaseCount += 1\n                case 'I' =>\n                case 'i' =>\n                    flipped += c\n                    lowercaseCount += 1\n                    uppercaseCount -= 1\n                case 'J' =>\n                case 'j' =>\n                    flipped += c\n                    lowercaseCount += 1\n                    uppercaseCount += 1\n                case 'K' =>\n                case 'k' =>\n                    flipped += c\n                    lowercaseCount += 1\n                    uppercaseCount += 1\n                case 'L' =>\n                case 'l' =>\n                    flipped += c\n                    lowercaseCount -= 1\n                    uppercaseCount += 1\n                case 'M' =>\n                case 'm' =>\n                    flipped += c\n                    lowercaseCount += 1\n                    uppercaseCount += 1\n                case 'N' =>\n                case 'n' =>\n                    flipped += c\n                    lowercaseCount += 1\n                    uppercaseCount -= 1\n                case 'O' =>\n                case 'o' =>\n                    flipped += c\n                    lowercaseCount += 1\n                    uppercaseCount += 1\n                case 'P' =>\n                case 'p' =>\n                    flipped += c\n                    lowercaseCount += 1\n                    uppercaseCount += 1\n                case 'Q' =>\n                case 'q' =>\n                    flipped += c\n                    lowercaseCount += 1\n                    uppercaseCount += 1\n                case 'R' =>\n                case 'r' =>\n                    flipped += c\n                    lowercaseCount -= 1\n                    uppercaseCount += 1\n                case 'S' =>\n                case 's' =>\n                    flipped += c\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp20wp9zmn.scala:114:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m114 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp20wp9zmn.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                    uppercaseCount += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: uppercaseCount\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp20wp9zmn.scala:21:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                    uppercaseCount -= \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: uppercaseCount\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp20wp9zmn.scala:26:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m                    uppercaseCount += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: uppercaseCount\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp20wp9zmn.scala:32:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m                    uppercaseCount += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: uppercaseCount\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp20wp9zmn.scala:37:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m                    uppercaseCount -= \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: uppercaseCount\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/",
      "stdout": "",
      "timestamp": 1659979131
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var res = \"\"\n        for(i <- string) {\n            res = res + charToUpperCase(i)\n            res = res + charToLowerCase(i - 1)\n        }\n        return res\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplv7ob_le.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            res = res + charToUpperCase(i)\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: charToUpperCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplv7ob_le.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            res = res + charToLowerCase(i - \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: charToLowerCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979131
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        // Store each letter in a Set\n        val letterSet = HashSet(string.split(\"\"))\n\n        // Iterate over the letters in the set and swap them\n        letterSet.foreach {\n            case letter if letter != letter => letterSet.remove(letter)\n            case letter => letter -> letterSet.take(letterSet.indexOf(letter)).mkString\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvem5lva9.scala:14:62 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            \u001b[33mcase\u001b[0m letter => letter -> letterSet.take(letterSet.indexOf(letter)).mkString\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue indexOf is not a member of scala.collection.mutable.HashSet[Array[String]]\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979134
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.map {\n            case c if c.isLowerCase => c.toUpperCase\n            case c if c.isUpperCase => c.toLowerCase\n            case x => x\n        }.mkString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwbf1inqj.scala:9:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mcase\u001b[0m c \u001b[33mif\u001b[0m c.isLowerCase => c.toUpperCase\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                      value isLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwbf1inqj.scala:9:41 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mcase\u001b[0m c \u001b[33mif\u001b[0m c.isLowerCase => c.toUpperCase\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwbf1inqj.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mcase\u001b[0m c \u001b[33mif\u001b[0m c.isUpperCase => c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value isUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwbf1inqj.scala:10:41 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mcase\u001b[0m c \u001b[33mif\u001b[0m c.isUpperCase => c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toLowerCase is not a member of Char\n4 errors found\n",
      "stdout": "",
      "timestamp": 1659979135
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.foldLeft((\"\", string)){case ((s1, s2), letter) => (letter.toUpperCase, letter.toLowerCase) }._2.reverse\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpqysf77pr.scala:8:73 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        string.foldLeft((\u001b[31m\"\"\u001b[0m, string)){\u001b[33mcase\u001b[0m ((s1, s2), letter) => (letter.toUpperCase, letter.toLowerCase) }._2.reverse\n\u001b[31m\u001b[31m  |\u001b[0m                                                                  ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpqysf77pr.scala:8:93 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        string.foldLeft((\u001b[31m\"\"\u001b[0m, string)){\u001b[33mcase\u001b[0m ((s1, s2), letter) => (letter.toUpperCase, letter.toLowerCase) }._2.reverse\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 value toLowerCase is not a member of Char\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979136
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        def toUpper(chr : Char) : Char = \n            (chr == ' ')\n                ? (chr)\n                : (chr == ch.toUpperCase)\n                    ? (chr.toLowerCase + chr.toUpperCase + \" \")\n                    : (chr)\n        string.foldLeft(string.charAt(0))((acc, x) => (toUpper(x) + acc))\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_inkxpe5.scala:13:20 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                    : (chr)\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    end of statement expected but ':' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_inkxpe5.scala:12:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                    ? (chr.toLowerCase + chr.toUpperCase + \u001b[31m\" \"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: type ?\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_inkxpe5.scala:10:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m 9 |\u001b[0m            (chr == \u001b[31m' '\u001b[0m)\n\u001b[31m10 |\u001b[0m                ? (chr)\n\u001b[31m\u001b[31m   |\u001b[0m            ^\u001b[0m\n\u001b[31m   |\u001b[0m            value ? is not a member of Boolean.\n\u001b[31m   |\u001b[0m            Note that `?` is treated as an infix operator in Scala 3.\n\u001b[31m   |\u001b[0m            If you do not want that, insert a `;` or empty line in front\n\u001b[31m   |\u001b[0m            or drop any spaces behind the operator.\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_inkxpe5.scala:14:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        string.foldLeft(string.charAt(\u001b[31m0\u001b[0m))((\u001b[36macc\u001b[0m, \u001b[36mx\u001b[0m) => (toUpper(x) + acc))\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                       Found:    Int\n\u001b[31m   |\u001b[0m                                                       Required: Char\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "stdout": "",
      "timestamp": 1659979136
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.toCharArray.foldLeft(\"\"){\n            case (acc, c) => (acc + (if (c == 'a'  || c == 'A') 'A' else if (c == 'b' || c == 'B') 'B' else if (c == 'c' || c == 'C') 'C' else if (c == 'd' || c == 'D') 'D' else if (c == 'e' || c == 'E') 'E' else if (c == 'f' || c == 'F') 'F' else if (c == 'g' || c == 'G') 'G' else if (c == 'h' || c == 'H') 'H' else if (c == 'i' || c == 'I') 'I' else if (c == 'j' || c == 'J') 'J' else if (c == 'k' || c == 'K') 'K' else if (c == 'l' || c == 'L') 'L' else if (c == 'm' || c == 'M') 'M' else if (c == 'n' || c == 'N') 'N' else if (c == 'o' || c == 'O') 'O' else if (c == 'p' || c == 'P') 'P' else if (c == 'q' || c == 'Q') 'Q' else if (c == 'r' || c == 'R') 'R' else if (c == 's' || c == 'S') 'S' else if (c == 't' || c == 'T') 'T' else if (c == 'u' || c == 'U') 'U' else if (c == 'v' || c == 'V') 'V' else if (c == 'w' || c == 'W') 'W' else if (c == 'x' || c == 'X') 'X' else if (c == 'y' || c == 'Y') 'Y' else if (c == 'z' || c == 'Z') 'Z' else c))}\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmph1zayzzn.scala:13)\n\tat Problem.main(tmph1zayzzn.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659979139
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.foldLeft(\"\")( (acc, letter) =>\n            if (letter < 'a' || letter > 'z') {\n                acc + letter.toUpperCase\n            } else if (letter < 'A' || letter > 'Z') {\n                acc + letter.toLowerCase\n            } else {\n                acc + letter\n            }\n        )\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzdk9fpvg.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                acc + letter.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzdk9fpvg.scala:12:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                acc + letter.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toLowerCase is not a member of Char\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979137
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.foldLeft(\"\")((s: String, ch: Char) => if (ch == 'a') (s + ch.toUpperCase) else s + ch.toLowerCase)\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmprwu3aadw.scala:8:76 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        string.foldLeft(\u001b[31m\"\"\u001b[0m)((\u001b[36ms\u001b[0m: \u001b[35mString\u001b[0m, \u001b[36mch\u001b[0m: \u001b[35mChar\u001b[0m) => \u001b[33mif\u001b[0m (ch == \u001b[31m'a'\u001b[0m) (s + ch.toUpperCase) \u001b[33melse\u001b[0m s + ch.toLowerCase)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmprwu3aadw.scala:8:101 ------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        string.foldLeft(\u001b[31m\"\"\u001b[0m)((\u001b[36ms\u001b[0m: \u001b[35mString\u001b[0m, \u001b[36mch\u001b[0m: \u001b[35mChar\u001b[0m) => \u001b[33mif\u001b[0m (ch == \u001b[31m'a'\u001b[0m) (s + ch.toUpperCase) \u001b[33melse\u001b[0m s + ch.toLowerCase)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 value toLowerCase is not a member of Char\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979137
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result: String = \"\"\n        for(i <- 0 until string.length){\n            result += if(string.charAt(i) >= 65 && string.charAt(i) <= 90)\n                string.charAt(i) + 32\n            else\n                string.charAt(i)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmptnqmzu0j.scala:10:22 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += \u001b[33mif\u001b[0m(string.charAt(i) >= \u001b[31m65\u001b[0m && string.charAt(i) <= \u001b[31m90\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^\u001b[0m\n\u001b[31m   |\u001b[0m                      expression expected but \u001b[31mif\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmptnqmzu0j.scala:12:12 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33melse\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            end of statement expected but 'else' found\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979133
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        if (string == null || string.isEmpty) string\n        else {\n            val lowerCaseChars = string.lowercase\n            val upperCaseChars = string.uppercase\n            val result = StringBuffer()\n            var index = 0\n            while (index < lowerCaseChars.length){\n                result += upperCaseChars(index)\n                index+=1\n            }\n            while (index < upperCaseChars.length){\n                result += lowerCaseChars(index)\n                index+=1\n            }\n            result.toString\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpm7lcnld2.scala:10:40 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mlowerCaseChars\u001b[0m = string.lowercase\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value lowercase is not a member of String\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpm7lcnld2.scala:11:40 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mupperCaseChars\u001b[0m = string.uppercase\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value uppercase is not a member of String\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpm7lcnld2.scala:15:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                result += upperCaseChars(index)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      value += is not a member of StringBuffer - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpm7lcnld2.scala:19:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                result += lowerCaseChars(index)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      value += is not a member of StringBuffer - did you mean result.!=?\n4 errors found\n",
      "stdout": "",
      "timestamp": 1659979138
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val charArray = string.toCharArray\n        val newString = new Array[Char](charArray.length)\n        for (i <- 0 until charArray.length)\n            newString(i) = charArray(i).toLowerCase\n        new String(newString)\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9l5q0ptk.scala:11:40 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            newString(i) = charArray(i).toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           value toLowerCase is not a member of Char\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979137
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val result = new StringBuilder()\n        for (i <- 0 until string.length) {\n            if (string.charAt(i).toLowerCase == string.charAt(i).toUpperCase && string.charAt(i) != 'A') {\n                result.append(string.charAt(i).toLowerCase)\n            } else {\n                result.append(string.charAt(i).toUpperCase)\n            }\n        }\n        return result.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpv815410z.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i).toLowerCase == string.charAt(i).toUpperCase && string.charAt(i) != \u001b[31m'A'\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpv815410z.scala:11:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                result.append(string.charAt(i).toLowerCase)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpv815410z.scala:13:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                result.append(string.charAt(i).toUpperCase)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toUpperCase is not a member of Char\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659979139
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.split(\"(?!^)\").map{_.map(_.toLowerCase).map{_.toUpperCase}}.mkString(\"\")\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6gzo6wls.scala:8:42 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        string.split(\u001b[31m\"(?!^)\"\u001b[0m).map{_.map(_.toLowerCase).map{_.toUpperCase}}.mkString(\u001b[31m\"\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                                        ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6gzo6wls.scala:8:74 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        string.split(\u001b[31m\"(?!^)\"\u001b[0m).map{_.map(_.toLowerCase).map{_.toUpperCase}}.mkString(\u001b[31m\"\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                          ^\u001b[0m\n\u001b[31m  |\u001b[0m                                            No ClassTag available for B\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m                                            where:    B is a type variable\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979138
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val stringBuilder = new StringBuilder\n        string.foreach{ c =>\n            if(c.isLower)\n                stringBuilder.append(c.toUpperCase)\n            else\n                stringBuilder.append(c.toLowerCase)\n        }\n        stringBuilder.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplrstprtk.scala:11:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                stringBuilder.append(c.toUpperCase)\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplrstprtk.scala:13:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                stringBuilder.append(c.toLowerCase)\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toLowerCase is not a member of Char\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979139
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n      var string1 = string\n      string1 = string1.replace(\"A\", \"B\")\n      string1 = string1.replace(\"B\", \"A\")\n      string1\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpub305u9e.scala:15)\n\tat Problem.main(tmpub305u9e.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659979141
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        if (string.length == 0) \"\"\n        else string.head.toUpper + flipCase(string.tail)\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpadl1kxs_.scala:13)\n\tat Problem.main(tmpadl1kxs_.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659979143
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.foldLeft(\"\"){case (acc, c) =>\n            if (c.isUpper)\n                acc+c.toLower\n            else\n                acc+c.toUpper\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659979143
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.toList.reverse.foldLeft(\"\") {\n          case (acc, c) => acc + c.toUpperCase()\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9ljherg2.scala:9:35 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m          \u001b[33mcase\u001b[0m (acc, c) => acc + c.toUpperCase()\n\u001b[31m\u001b[31m  |\u001b[0m                                 ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 value toUpperCase is not a member of Char\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979142
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n      var result : String = \"\"\n      for (i <- 0 until string.length)\n        if (string(i) =< 'a')\n          result += toUpperCase(string(i))\n          else\n            result += toLowerCase(string(i))\n      result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphh1vu227.scala:10:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mif\u001b[0m (string(i) =< \u001b[31m'a'\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value =< is not a member of Char - did you mean Char.<<?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphh1vu227.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m          result += toUpperCase(string(i))\n\u001b[31m\u001b[31m   |\u001b[0m          ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphh1vu227.scala:11:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m          result += toUpperCase(string(i))\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: toUpperCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphh1vu227.scala:13:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            result += toLowerCase(string(i))\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphh1vu227.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            result += toLowerCase(string(i))\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: toLowerCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "stdout": "",
      "timestamp": 1659979143
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val charList = string.flatMap(i => if(Character.isLowerCase(i)) i else Character.toUpperCase(i))\n        val newString = charList.toList\n        newString.mkString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp6vrz7upo.scala:8:30 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcharList\u001b[0m = string.flatMap(\u001b[36mi\u001b[0m => \u001b[33mif\u001b[0m(Character.isLowerCase(i)) i \u001b[33melse\u001b[0m Character.toUpperCase(i))\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mflatMap\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mStringOps\u001b[0m with types\n\u001b[31m  |\u001b[0m (f: Char => String): String\n\u001b[31m  |\u001b[0m [B](f: Char => IterableOnce[B]): IndexedSeq[B]\n\u001b[31m  |\u001b[0mmatch arguments (Char => Char)\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979140
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.foldLeft[String](\"\"){ (out, c) =>\n            if (c.isUpper) {\n                out += c.toLower\n            } else {\n                out += c.toUpper\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0186wzmm.scala:10:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                out += c.toLower\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of String - did you mean out.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0186wzmm.scala:12:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                out += c.toUpper\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of String - did you mean out.!=?\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979143
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        // Create a mutable string that will hold our output.\n        var output : StringBuilder = new StringBuilder()\n        // Iterate through the string. At each character, if we find a lowercase letter, append it\n        // to the output but if it is a capital letter, swap the cases.\n        for (char <- string) {\n            if (char.isLower) {\n                output.append(char.toUpper)\n            } else if (char.isUpper) {\n                output.append(char.toLower)\n            } else {\n                output.append(char)\n            }\n        }\n        // Return the contents of the mutable string\n        output.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659979144
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result: String = \"\"\n        var lastChar: Char = string.charAt(0)\n        var currentChar: Char\n        for( i <- 0 until string.length){\n            currentChar = string.charAt(i)\n            if(lastChar == 'A' && currentChar == 'a') {\n                result += \"A\"\n            }\n            else if(lastChar == 'a' && currentChar == 'A') {\n                result += \"a\"\n            }\n            else if(lastChar == 'B' && currentChar == 'b') {\n                result += \"B\"\n            }\n            else if(lastChar == 'b' && currentChar == 'B') {\n                result += \"b\"\n            }\n            else if(lastChar == 'C' && currentChar == 'c') {\n                result += \"C\"\n            }\n            else if(lastChar == 'c' && currentChar == 'C') {\n                result += \"c\"\n            }\n            else if(lastChar == 'D' && currentChar == 'd') {\n                result += \"D\"\n            }\n            else if(lastChar == 'd' && currentChar == 'D') {\n                result += \"d\"\n            }\n            else if(lastChar == 'E' && currentChar == 'e') {\n                result += \"E\"\n            }\n            else if(lastChar == 'e' && currentChar == 'E') {\n                result += \"e\"\n            }\n            else if(lastChar == 'F' && currentChar == 'f') {\n                result += \"F\"\n            }\n            else if(lastChar == 'f' && currentChar == 'F') {\n                result += \"f\"\n            }\n            else if(lastChar == 'G' && currentChar == 'g') {\n                result += \"G\"\n            }\n            else if(lastChar == 'g' && currentChar == 'G') {\n                result += \"g\"\n            }\n            else if(lastChar == 'H' && currentChar == 'h') {\n                result += \"H\"\n            }\n            else if(lastChar == 'h' && currentChar == 'H') {\n                result += \"h\"\n            }\n            else if(lastChar == 'I' && currentChar == 'I') {\n                result += \"I\"\n            }\n            else if(lastChar == 'I' && currentChar == 'I') {\n                result += \"i\"\n            }\n            else if(lastChar == 'J' && currentChar == 'j') {\n                result += \"J\"\n            }\n            else if(lastChar == 'j' && currentChar == 'J') {\n                result += \"j\"\n            }\n            else if(lastChar == 'K' && currentChar == 'k') {\n                result += \"K\"\n            }\n            else if(lastChar == 'k' && currentChar == 'K') {\n                result += \"k\"\n            }\n            else if(lastChar == 'L' && currentChar == 'l') {\n                result += \"L\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmph2mbgnle.scala:80:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m80 |\u001b[0m                result += \"L\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          unclosed string literal\n\u001b[31m\u001b[31m-- Error: /tmp/tmph2mbgnle.scala:82:34 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m82 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 end of statement expected but '=' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmph2mbgnle.scala:89:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m89 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E067] Syntax Error: /tmp/tmph2mbgnle.scala:10:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mcurrentChar\u001b[0m: \u001b[35mChar\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^\u001b[0m\n\u001b[31m   |\u001b[0mDeclaration of \u001b[33mvariable\u001b[0m \u001b[35mcurrentChar\u001b[0m not allowed here: only classes can have declared but undefined members\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph2mbgnle.scala:82:4 -------------------------\u001b[0m\u001b[0m\n\u001b[31m82 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Not found: Ldef\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "stdout": "",
      "timestamp": 1659979142
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val upperCaseString = string.map(c => if (c.isLower) c.toUpper else c.toLower)\n        val reversedUpperCaseString = upperCaseString.reverse\n        val lowerCaseString = reversedUpperCaseString.map(c => if (c.isUpper) c.toLower else c.toUpper)\n        lowerCaseString.mkString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpj1ta1do6.scala:15)\n\tat Problem.main(tmpj1ta1do6.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659979146
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string match {\n            case null => \"\"\n            case _ => string.foldLeft(\"\") { case (s,l) => if (l.isLower) s.toUpper else s.toLower + l}\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvlf35o4z.scala:10:75 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mcase\u001b[0m _ => string.foldLeft(\u001b[31m\"\"\u001b[0m) { \u001b[33mcase\u001b[0m (s,l) => \u001b[33mif\u001b[0m (l.isLower) s.toUpper \u001b[33melse\u001b[0m s.toLower + l}\n\u001b[31m\u001b[31m   |\u001b[0m                                                                         ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                 value toUpper is not a member of String\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvlf35o4z.scala:10:90 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mcase\u001b[0m _ => string.foldLeft(\u001b[31m\"\"\u001b[0m) { \u001b[33mcase\u001b[0m (s,l) => \u001b[33mif\u001b[0m (l.isLower) s.toUpper \u001b[33melse\u001b[0m s.toLower + l}\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                 value toLower is not a member of String\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979145
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n      val result = new StringBuilder\n      val iter = string.iterator\n      var currChar = iter.next()\n      while (currChar != null) {\n        if (currChar >= 'a' && currChar <= 'z') {\n          currChar = chr(currChar.toUpper - ('a' - 1))\n        }\n        result.append(currChar)\n        currChar = iter.next()\n      }\n      result.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9014wwt4.scala:11:13 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m      \u001b[33mwhile\u001b[0m (currChar != \u001b[31mnull\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          Values of types Char and Null cannot be compared with == or !=\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9014wwt4.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m          currChar = chr(currChar.toUpper - (\u001b[31m'a'\u001b[0m - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: chr\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979145
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            val character = string.charAt(i)\n            if (Character.isLower(character)) {\n                result += character.toUpperCase\n            } else {\n                result += character.toLowerCase\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3n1ww6n7.scala:11:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mif\u001b[0m (Character.isLower(character)) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue isLower is not a member of object Character - did you mean Character.isLetter?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3n1ww6n7.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += character.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3n1ww6n7.scala:12:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += character.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3n1ww6n7.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += character.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3n1ww6n7.scala:14:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += character.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n5 errors found\n",
      "stdout": "",
      "timestamp": 1659979148
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for(char <- string){\n            if(char >= 'A' && char <= 'Z'){\n                result += (char.toUpperCase + char)\n            } else {\n                result += char\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjhl03vyd.scala:11:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                result += (char.toUpperCase + char)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjhl03vyd.scala:11:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                result += (char.toUpperCase + char)\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           value toUpperCase is not a member of Char\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979147
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val ls = string.split('')\n        ls.foreach(x => if(x.toLowerCase==x.toUpperCase || x.toLowerCase==x.toLowerCase ){\n            x +=''\n        }else {\n            x +='.'\n        })\n        ls.mkString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp41px1ier.scala:8:30 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mls\u001b[0m = string.split('')\n\u001b[31m\u001b[31m  |\u001b[0m                              ^\u001b[0m\n\u001b[31m  |\u001b[0m                              empty character literal\n\u001b[31m\u001b[31m-- Error: /tmp/tmp41px1ier.scala:10:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            x +=''\n\u001b[31m\u001b[31m   |\u001b[0m                ^\u001b[0m\n\u001b[31m   |\u001b[0m                empty character literal\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp41px1ier.scala:9:8 --------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        ls.foreach(\u001b[36mx\u001b[0m => \u001b[33mif\u001b[0m(x.toLowerCase==x.toUpperCase || x.toLowerCase==x.toLowerCase ){\n\u001b[31m\u001b[31m  |\u001b[0m        ^^\u001b[0m\n\u001b[31m  |\u001b[0m        Not found: 'ls\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659979143
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        if (string.length==0) string\n        else {\n            var result : StringBuilder = new StringBuilder(string.length)\n            for (letter <- string) {\n                if (letter.isUpper) {\n                    result ++= letter.toUpperCase\n                }\n                else {\n                    result ++= letter\n                }\n            }\n            result.toString\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp892e4s7p.scala:13:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                    result ++= letter.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp892e4s7p.scala:16:27 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                    result ++= letter\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35m++=\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mStringBuilder\u001b[0m with types\n\u001b[31m   |\u001b[0m (s: String): StringBuilder\n\u001b[31m   |\u001b[0m (xs: IterableOnce[Char]): StringBuilder\n\u001b[31m   |\u001b[0mmatch arguments ((letter : Char))\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979148
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i<-0 to string.length-1) {\n          val char = string.charAt(i)\n          if (char.isLowerCase) {\n            result += char.toUpperCase\n          } else {\n            result += char.toLowerCase\n          }\n        }\n        return result\n      }\n    // Return the number of times the substring occurs within the string.\n    // >>> count(\"the\", \"the\")\n    // (1)\n    def count(string : String, substring : String) : Int = {\n      var count = 0\n      var index = 0\n      while (index < string.length) {\n        if (string.substring(index, index + substring.length) == substring) {\n          count += 1\n        }\n        index += 1\n      }\n      count\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7hgajhsq.scala:11:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m          \u001b[33mif\u001b[0m (char.isLowerCase) {\n\u001b[31m\u001b[31m   |\u001b[0m              ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value isLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7hgajhsq.scala:12:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            result += char.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7hgajhsq.scala:12:27 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            result += char.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7hgajhsq.scala:14:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            result += char.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7hgajhsq.scala:14:27 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            result += char.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toLowerCase is not a member of Char\n5 errors found\n",
      "stdout": "",
      "timestamp": 1659979148
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        for (i <- 0 to string.length() - 1) {\n            string swap i i \n        }\n        string\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpuvfhzwcc.scala:9:27 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            string swap i i \n\u001b[31m\u001b[31m  |\u001b[0m                           ^\u001b[0m\n\u001b[31m  |\u001b[0m                           expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpuvfhzwcc.scala:9:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            string swap i i \n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m         value swap is not a member of String - did you mean string.strip?\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979148
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.map { char =>\n            char match {\n                case c if c >= 'a' && c <= 'z' => ((char - 'a') + 26).toChar\n                case c if c >= 'A' && c <= 'Z' => ((char - 'A') + 26).toChar\n                case c => (char).toChar\n            }\n        }.mkString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpvh81ae6p.scala:18)\n\tat Problem.main(tmpvh81ae6p.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659979150
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n       val reversed = new ListBuffer[String]()\n       val length = string.length\n       val upperChars = string.filter(_ != 'a')\n       val lowerChars = string.filter(_ != 'A')\n\n       for (i <- 0 until length){\n         if (upperChars.contains(i)){\n           reversed.append(string.charAt(i))\n           reversed.append(string.charAt(i))\n         }\n         else if (lowerChars.contains(i)){\n           reversed.append(string.charAt(i))\n           reversed.append(string.charAt(i))\n         }\n         else{\n           reversed.append(string.charAt(i))\n         }\n       }\n       reversed.toString.toUpperCase\n     }\n}\n</code>\n<|/ a |>\n<| a tags=scala,java dscore=1 |>\n<code>\nval str = \"This is a string\"\nval chars = str.map(c => if(c =! ' ') c else c.toUpperCase)\nprintln(chars.mkString) //This Is A String\n</code>\n<|/ a |>\n<| c |>\nThis does not do what the question asked for: \"uppercase characters to lowercase\"\n<|/ c |>\n<| c |>\n: I believe that my approach does what the question asked for, as evidenced by the example given at the bottom.\n<|/ c |>\n<| a dscore=1 |>\nUsing Java 8 Streams:\n<code>\nString text = \"This Is A String\";\nString result = text.chars().map(c -> (char) (c == 'A' ? 'a' : c)).collect(Collectors.joining());\n</code>\n<|/ a tags=scala,java |>\n<| a dscore=0 |>\nIn Scala, we can simply use regex with case insensitive flag to convert all the characters to upper case. \n<code>\nval str = \"This is a string\"\nval replaced = str.replaceAll(\"(?i)\\\\w\", _.toUpperCase)\n//replaced: String = This Is A String\n</code>\n<|/ a tags=scala,java |>\n<| a dscore=0 tags=scala,java |>\nYou can use a combination of java.util.regex.Pattern and java.util.regex.Matcher to do the job\n<code>\npublic static void main(String[] args) {\n    String s = \"This is a String\";\n    Matcher m = Pattern.compile(\"\\\\b[A-Z]\").matcher(s);\n    while (m.find()) {\n        s = s.replaceFirst(m.group().toUpperCase());\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp5dvma1tb.scala:29:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m</code>\n\u001b[31m\u001b[31m   |\u001b[0m^^\u001b[0m\n\u001b[31m   |\u001b[0mIllegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp5dvma1tb.scala:35:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0mprintln(chars.mkString) \u001b[34m//This Is A String\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mIllegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp5dvma1tb.scala:48:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0mString result = text.chars().map(c -> (char) (c == \u001b[31m'A'\u001b[0m ? \u001b[31m'a'\u001b[0m : c)).collect(Collectors.joining());\n\u001b[31m\u001b[31m   |\u001b[0m^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mIllegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp5dvma1tb.scala:49:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m</code>\n\u001b[31m\u001b[31m   |\u001b[0m^^\u001b[0m\n\u001b[31m   |\u001b[0mIllegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp5dvma1tb.scala:57:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m</code>\n\u001b[31m\u001b[31m   |\u001b[0m^^\u001b[0m\n\u001b[31m   |\u001b[0mIllegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp5dvma1tb.scala:15:20 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m           reversed.append(string.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mappend\u001b[0m in \u001b[33mtrait\u001b[0m \u001b[35mBuffer\u001b[0m with types\n\u001b[31m   |\u001b[0m (elems: String*): (reversed : scala.collection.mutable.ListBuffer[String])\n\u001b[31m   |\u001b[0m (elem: String): (reversed : scala.",
      "stdout": "",
      "timestamp": 1659979149
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val upperString = string.map(_.toUpperCase)\n        val lowerString = string.map(_.toLowerCase)\n        upperString ++ lowerString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpttypf94g.scala:8:39 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mupperString\u001b[0m = string.map(_.toUpperCase)\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpttypf94g.scala:9:39 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mlowerString\u001b[0m = string.map(_.toLowerCase)\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 value toLowerCase is not a member of Char\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979149
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val newStr = new StringBuilder(string)\n        for (i <- 0 until string.length) {\n            if (string(i).isUpper) {\n                newStr(i) =\n                    if (!newStr(i).isUpper) newStr(i).toLower else newStr(i).toUpper\n            } else if (string(i).isLower) {\n                newStr(i) =\n                    if (!newStr(i).isUpper) newStr(i).toUpper else newStr(i).toLower\n            }\n        }\n        newStr.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp8rrgwyhf.scala:22)\n\tat Problem.main(tmp8rrgwyhf.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659979151
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        if (string.isEmpty) {\n            string\n        } else {\n            val lowerCase = string.split(\"\").filter(c => c.toLowerCase == c).toList\n            val upperCase = lowerCase.map(c => c.toUpperCase + c).toList\n            upperCase.foldLeft(string) {\n                case (acc, el) => el + acc\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpdu5ng6g2.scala:20)\n\tat Problem.main(tmpdu5ng6g2.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659979152
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.map { char => char.toUpperCase() match {\n            case 'a' => \"A\"\n            case 'b' => \"B\"\n            case 'c' => \"C\"\n            case 'd' => \"D\"\n            case 'e' => \"E\"\n            case 'f' => \"F\"\n            case 'g' => \"G\"\n            case 'h' => \"H\"\n            case 'i' => \"I\"\n            case 'j' => \"J\"\n            case 'k' => \"K\"\n            case 'l' => \"L\"\n            case 'm' => \"M\"\n            case 'n' => \"N\"\n            case 'o' => \"O\"\n            case 'p' => \"P\"\n            case 'q' => \"Q\"\n            case 'r' => \"R\"\n            case 's' => \"S\"\n            case 't' => \"T\"\n            case 'u' => \"U\"\n            case 'v' => \"V\"\n            case 'w' => \"W\"\n            case 'x' => \"X\"\n            case 'y' => \"Y\"\n            case 'z' => \"Z\"\n            default => char\n        }}.reverse\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpawjrg55a.scala:8:34 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        string.map { \u001b[36mchar\u001b[0m => char.toUpperCase() \u001b[33mmatch\u001b[0m {\n\u001b[31m\u001b[31m  |\u001b[0m                             ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                             value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmpawjrg55a.scala:35:12 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m            \u001b[36mdefault\u001b[0m => char\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Missing parameter type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m            I could not infer the type of the parameter default.\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmpawjrg55a.scala:34:24 ----------------\u001b[0m\u001b[0m\n\u001b[33m34 |\u001b[0m            \u001b[33mcase\u001b[0m \u001b[31m'z'\u001b[0m => \u001b[31m\"Z\"\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979150
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (ch <- string) {\n            if (ch.isLower) {\n                result += ch.toUpperCase\n            } else {\n                result += ch.toLowerCase\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbe395e03.scala:11:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                result += ch.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbe395e03.scala:11:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                result += ch.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbe395e03.scala:13:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                result += ch.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbe395e03.scala:13:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                result += ch.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n4 errors found\n",
      "stdout": "",
      "timestamp": 1659979153
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var buffer = new StringBuilder()\n        for(i <- 0 until string.length) {\n            val c = string.charAt(i)\n            if(Character.isLowerCase(c)) {\n                buffer += Character.toUpperCase(c)\n            } else {\n                buffer += Character.toLowerCase(c)\n            }\n        }\n        return buffer.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659979154
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var upperCaseString = \"\"\n        var lowerCaseString = \"\"\n        for (c <- string) {\n            c match {\n                case 'a' -> lowerCaseString = c.toUpperCase\n                'A' -> upperCaseString = c.toUpperCase\n                'A' -> lowerCaseString = c.toUpperCase\n                'a' -> upperCaseString = c.toUpperCase\n                'A' -> lowerCaseString = c.toUpperCase\n                else -> {\n                    upperCaseString += c.toUpperCase\n                    lowerCaseString += c.toUpperCase\n                }\n            }\n        }\n        (upperCaseString ++ lowerCaseString).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7ckotndn.scala:12:44 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                \u001b[33mcase\u001b[0m \u001b[31m'a'\u001b[0m -> lowerCaseString = c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '=>' expected, but '=' found\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7ckotndn.scala:13:39 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                \u001b[31m'A'\u001b[0m -> upperCaseString = c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 end of statement expected but '=' found\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7ckotndn.scala:14:39 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                \u001b[31m'A'\u001b[0m -> lowerCaseString = c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 end of statement expected but '=' found\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7ckotndn.scala:15:39 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                \u001b[31m'a'\u001b[0m -> upperCaseString = c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 end of statement expected but '=' found\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7ckotndn.scala:16:39 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                \u001b[31m'A'\u001b[0m -> lowerCaseString = c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 end of statement expected but '=' found\n5 errors found\n",
      "stdout": "",
      "timestamp": 1659979150
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n       if(string.isEmpty) return string\n       val chars = string.map(c => if (c == c.toLower) c.toUpper else c.toLowerCase)\n       chars.mkString.reverse.mkString(\"\")\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_2j0hipo.scala:9:72 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m       \u001b[33mval\u001b[0m \u001b[36mchars\u001b[0m = string.map(\u001b[36mc\u001b[0m => \u001b[33mif\u001b[0m (c == c.toLower) c.toUpper \u001b[33melse\u001b[0m c.toLowerCase)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 value toLowerCase is not a member of Char\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979153
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val newString = string ++ string.map(_.swapCase)\n        newString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp04pjf0o5.scala:8:47 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mnewString\u001b[0m = string ++ string.map(_.swapCase)\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                    value swapCase is not a member of Char\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979153
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n      var result = string\n      for (i <- 0 to string.length){\n        if (string(i).toLowerCase == string(i).toUpperCase){\n          result = result.subString(0, i) + result.subString(i+1).toLowerCase() + result.subString(i+2)\n        }\n      }\n      return result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp98o6pta3.scala:10:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mif\u001b[0m (string(i).toLowerCase == string(i).toUpperCase){\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp98o6pta3.scala:11:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m          result = result.subString(\u001b[31m0\u001b[0m, i) + result.subString(i+\u001b[31m1\u001b[0m).toLowerCase() + result.subString(i+\u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue subString is not a member of String - did you mean String.substring?\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979155
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = string\n        for(i <- 0 until string.length){\n            if(string.charAt(i) == string.charAt(i).toUpperCase){\n                result = result.substring(0, i) + result.substring(i + 1, result.length) + result.charAt(i).toLowerCase\n                i = i + 1\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_daup1sm.scala:10:52 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m(string.charAt(i) == string.charAt(i).toUpperCase){\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_daup1sm.scala:11:108 -----------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                result = result.substring(\u001b[31m0\u001b[0m, i) + result.substring(i + \u001b[31m1\u001b[0m, result.length) + result.charAt(i).toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmp_daup1sm.scala:12:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                i = i + \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659979155
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        def flip(x: Char): Char = {\n            x match {\n                case 'a' => 'A'\n                case 'b' => 'B'\n                case 'c' => 'C'\n                case 'd' => 'D'\n                case 'e' => 'E'\n                case 'f' => 'F'\n                case 'g' => 'G'\n                case 'h' => 'H'\n                case 'i' => 'I'\n                case 'j' => 'J'\n                case 'k' => 'K'\n                case 'l' => 'L'\n                case 'm' => 'M'\n                case 'n' => 'N'\n                case 'o' => 'O'\n                case 'p' => 'P'\n                case 'q' => 'Q'\n                case 'r' => 'R'\n                case 's' => 'S'\n                case 't' => 'T'\n                case 'u' => 'U'\n                case 'v' => 'V'\n                case 'w' => 'W'\n                case 'x' => 'X'\n                case 'y' => 'Y'\n                case 'z' => 'Z'\n                case 'A' => 'a'\n                case 'B' => 'b'\n                case 'C' => 'c'\n                case 'D' => 'd'\n                case 'E' => 'e'\n                case 'F' => 'f'\n                case 'G' => 'g'\n                case 'H' => 'h'\n                case 'I' => 'i'\n                case 'J' => 'j'\n                case 'K' => 'k'\n                case 'L' => 'l'\n                case 'M' => 'm'\n                case 'N' => 'n'\n                case 'O' => 'o'\n                case 'P' => 'p'\n                case 'Q' => 'q'\n                case 'R' => 'r'\n                case 'S' => 's+'\n                case 'T' => 't'\n                case 'U' => 'u'\n                case 'V' => 'v'\n                case 'W' => 'w'\n                case 'X' => 'x'\n                case 'Y' => 'y'\n                case 'Z' => 'z'\n                x else throw new Exception(\"Invalid input character \" + x)\n            }\n        }\n        val newString = string.toList\n        newString.reverse.map { x => flip(x) }.mkString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp6us8tgdg.scala:54:28 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m                \u001b[33mcase\u001b[0m \u001b[31m'S'\u001b[0m => \u001b[31m's\u001b[0m+'\n\u001b[31m\u001b[31m   |\u001b[0m                            ^\u001b[0m\n\u001b[31m   |\u001b[0msymbol literal 's is no longer supported,\n\u001b[31m   |\u001b[0muse a string literal \"s\" or an application Symbol(\"s\") instead,\n\u001b[31m   |\u001b[0mor enclose in braces '{s} if you want a quoted expression.\n\u001b[31m   |\u001b[0mFor now, you can also `import language.deprecated.symbolLiterals` to accept\n\u001b[31m   |\u001b[0mthe idiom, but this possibility might no longer be available in the future.\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6us8tgdg.scala:54:31 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m                \u001b[33mcase\u001b[0m \u001b[31m'S'\u001b[0m => \u001b[31m's\u001b[0m+'\n\u001b[31m\u001b[31m   |\u001b[0m                               ^\u001b[0m\n\u001b[31m   |\u001b[0m                               unclosed character literal\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6us8tgdg.scala:62:18 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m                x \u001b[33melse\u001b[0m \u001b[33mthrow\u001b[0m \u001b[33mnew\u001b[0m Exception(\u001b[31m\"Invalid input character \"\u001b[0m + x)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  end of statement expected but 'else' found\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmp6us8tgdg.scala:61:28 ----------------\u001b[0m\u001b[0m\n\u001b[33m61 |\u001b[0m                \u001b[33mcase\u001b[0m \u001b[31m'Z'\u001b[0m => \u001b[31m'z'\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659979152
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val chars = string.asInstanceOf[mutable.Seq[Char]]\n        chars.map(_.toUpper).toSeq.mkString(\"\")\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzxv2esk1.scala:8:40 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mchars\u001b[0m = string.asInstanceOf[mutable.Seq[\u001b[35mChar\u001b[0m]]\n\u001b[31m\u001b[31m  |\u001b[0m                                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979151
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val result = new StringBuilder()\n        for(char <- string.toCharArray) result += char.toUpper\n        result.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpjy1ws78i.scala:14)\n\tat Problem.main(tmpjy1ws78i.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659979157
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val charList = (string.split(\"\")).map(_.toLowerCase).toList\n        val charList2 = charList.map(_.toUpperCase)\n        charList.zip(charList2).mkString(\"\")\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpg0_a7bwo.scala:13)\n\tat Problem.main(tmpg0_a7bwo.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659979159
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val newString = \"\"\n        for (char <- string) {\n            val upper = char.toUpper // convert to uppercase\n            val lower = upper.toLower\n            newString += lower // append lowercase\n        }\n        newString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpveovwrpm.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            newString += lower \u001b[34m// append lowercase\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m         value += is not a member of String - did you mean newString.!=?\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979157
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        // Make a new StringBuilder that has the original string but with uppercase characters.\n        val sb = new StringBuilder\n        sb.append(string.head.toUpperCase)\n        for(i <- 1 until string.length)\n            sb.append(string.charAt(i).toLowerCase)\n        sb.append(string.last.toLowerCase)\n        sb.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppritjwuf.scala:10:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sb.append(string.head.toUpperCase)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppritjwuf.scala:12:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            sb.append(string.charAt(i).toLowerCase)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppritjwuf.scala:13:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        sb.append(string.last.toLowerCase)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value toLowerCase is not a member of Char\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659979158
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val lwrStr = new StringBuilder\n        var lastChar = string.charAt(string.length - 1)\n        string.foreach{x => if (x == lastChar) lwrStr += lastChar.toUpperCase else lwrStr += x.toLowerCase}\n        lwrStr.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb50czlys.scala:10:66 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        string.foreach{\u001b[36mx\u001b[0m => \u001b[33mif\u001b[0m (x == lastChar) lwrStr += lastChar.toUpperCase \u001b[33melse\u001b[0m lwrStr += x.toLowerCase}\n\u001b[31m\u001b[31m   |\u001b[0m                                                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb50czlys.scala:10:95 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        string.foreach{\u001b[36mx\u001b[0m => \u001b[33mif\u001b[0m (x == lastChar) lwrStr += lastChar.toUpperCase \u001b[33melse\u001b[0m lwrStr += x.toLowerCase}\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toLowerCase is not a member of Char\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979159
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.split(\"\").map {\n            x => if (x.isUpper) x.toLowerCase else x.toUpperCase\n        }.mkString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpl26soi8o.scala:9:23 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[36mx\u001b[0m => \u001b[33mif\u001b[0m (x.isUpper) x.toLowerCase \u001b[33melse\u001b[0m x.toUpperCase\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     value isUpper is not a member of String\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979158
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.foldLeft( \"\" ){\n            case ( s, c ) => if ( c.isUpperCase ) s\"${c}${s}\" else s\"${c}${s.toLowerCase}\"\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpl7t_0q4y.scala:9:36 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mcase\u001b[0m ( s, c ) => \u001b[33mif\u001b[0m ( c.isUpperCase ) \u001b[31ms\"\u001b[0m${c}${s}\u001b[31m\"\u001b[0m \u001b[33melse\u001b[0m \u001b[31ms\"\u001b[0m${c}${s.toLowerCase}\u001b[31m\"\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 value isUpperCase is not a member of Char\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979159
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result : String = \"\"\n        for(i <- string.length - 1){\n            result += string(i).toUpperCase\n        }\n        result += string(string.length - 1).toUpperCase\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6r_a_i96.scala:9:17 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m(i <- string.length - \u001b[31m1\u001b[0m){\n\u001b[31m\u001b[31m  |\u001b[0m                 ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                 value foreach is not a member of Int\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6r_a_i96.scala:12:15 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        result += string(string.length - \u001b[31m1\u001b[0m).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6r_a_i96.scala:12:44 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        result += string(string.length - \u001b[31m1\u001b[0m).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value toUpperCase is not a member of Char\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659979160
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val newString = \"\"\n        string.foreach( char => newString += char.toUpperCase.toUpperCase)\n        newString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwlfiwf9n.scala:9:42 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        string.foreach( \u001b[36mchar\u001b[0m => newString += char.toUpperCase.toUpperCase)\n\u001b[31m\u001b[31m  |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m           value += is not a member of String - did you mean newString.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwlfiwf9n.scala:9:50 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        string.foreach( \u001b[36mchar\u001b[0m => newString += char.toUpperCase.toUpperCase)\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 value toUpperCase is not a member of Char\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979160
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var charArray = string.split(\"\").toArray\n        var newString = \"\"\n        for( i <- 0 until charArray.length )\n            newString += if(charArray(i) >= 65 && charArray(i) <= 90)\n                charArray(i) - 32\n            else charArray(i)\n        return newString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpappv_twg.scala:11:25 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            newString += \u001b[33mif\u001b[0m(charArray(i) >= \u001b[31m65\u001b[0m && charArray(i) <= \u001b[31m90\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^\u001b[0m\n\u001b[31m   |\u001b[0m                         expression expected but \u001b[31mif\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpappv_twg.scala:13:12 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            \u001b[33melse\u001b[0m charArray(i)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            end of statement expected but 'else' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpappv_twg.scala:12:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                charArray(i) - \u001b[31m32\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue - is not a member of String, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m   |\u001b[0m  import math.Integral.Implicits.infixIntegralOps\n\u001b[31m   |\u001b[0m  import math.Numeric.Implicits.infixNumericOps\n\u001b[31m   |\u001b[0m\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659979161
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val reversed = string.foldLeft(\"\")((reversed, letter) => {\n            reversed + if(letter.toLowerCase == letter) letter.toUpperCase else letter.toLowerCase \n        })\n        val reversedAgain = reversed.reverse\n        reversedAgain + reversedAgain.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmplr40lo7s.scala:9:23 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            reversed + \u001b[33mif\u001b[0m(letter.toLowerCase == letter) letter.toUpperCase \u001b[33melse\u001b[0m letter.toLowerCase \n\u001b[31m\u001b[31m  |\u001b[0m                       ^^\u001b[0m\n\u001b[31m  |\u001b[0m                       expression expected but \u001b[31mif\u001b[0m found\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979158
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var newString = \"\"\n        for(i <- 0 to string.length - 1) {\n            if(string.charAt(i) >= 'a' && string.charAt(i) <= 'z') {\n                string += string.charAt(i).toChar.toUpperCase\n            } else if(string.charAt(i) >= 'A' && string.charAt(i) <= 'Z') {\n                string += string.charAt(i).toChar.toLowerCase\n            } else {\n                string += string.charAt(i)\n            }\n        }\n        return string\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpefy2zgvx.scala:11:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                string += string.charAt(i).toChar.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean string.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpefy2zgvx.scala:11:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                string += string.charAt(i).toChar.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpefy2zgvx.scala:13:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                string += string.charAt(i).toChar.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean string.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpefy2zgvx.scala:13:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                string += string.charAt(i).toChar.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpefy2zgvx.scala:15:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                string += string.charAt(i)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean string.!=?\n5 errors found\n",
      "stdout": "",
      "timestamp": 1659979162
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val output = string.map(x => x.toUpperCase)\n        val output2 = output.map(x => x.toLowerCase)\n        val output3 = output2.map(x => x.toUpperCase)\n        val output4 = output3.map(x => x.toUpperCase)\n        val output5 = output4.map(x => x.toUpperCase)\n        val output6 = output5.map(x => x.toUpperCase)\n        val output7 = output6.map(x => x.toUpperCase)\n        output7.mkString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_tql8yxd.scala:8:39 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36moutput\u001b[0m = string.map(\u001b[36mx\u001b[0m => x.toUpperCase)\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 value toUpperCase is not a member of Char\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979162
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val upperCaseArray = string.split(\"\").map(x => if (x.isUpper) x.toUpper else x.toLower).toArray\n        val lowerCaseArray = string.split(\"\").map(x => if (x.isUpper) x.toLower else x.toUpper).toArray\n        string.zip(upperCaseArray).map(x => x._1 + x._2).mkString(\"\")\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgzabssbz.scala:8:61 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mupperCaseArray\u001b[0m = string.split(\u001b[31m\"\"\u001b[0m).map(\u001b[36mx\u001b[0m => \u001b[33mif\u001b[0m (x.isUpper) x.toUpper \u001b[33melse\u001b[0m x.toLower).toArray\n\u001b[31m\u001b[31m  |\u001b[0m                                                           ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                   value isUpper is not a member of String\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgzabssbz.scala:8:72 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mupperCaseArray\u001b[0m = string.split(\u001b[31m\"\"\u001b[0m).map(\u001b[36mx\u001b[0m => \u001b[33mif\u001b[0m (x.isUpper) x.toUpper \u001b[33melse\u001b[0m x.toLower).toArray\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                   value toUpper is not a member of String\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgzabssbz.scala:8:87 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mupperCaseArray\u001b[0m = string.split(\u001b[31m\"\"\u001b[0m).map(\u001b[36mx\u001b[0m => \u001b[33mif\u001b[0m (x.isUpper) x.toUpper \u001b[33melse\u001b[0m x.toLower).toArray\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                     ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                   value toLower is not a member of String\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgzabssbz.scala:8:95 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mupperCaseArray\u001b[0m = string.split(\u001b[31m\"\"\u001b[0m).map(\u001b[36mx\u001b[0m => \u001b[33mif\u001b[0m (x.isUpper) x.toUpper \u001b[33melse\u001b[0m x.toLower).toArray\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                               ^\u001b[0m\n\u001b[31m  |\u001b[0m                                            No ClassTag available for B\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m                                            where:    B is a type variable\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgzabssbz.scala:9:61 -------------------------\u001b[0m\u001b[0m\n\u001b[3",
      "stdout": "",
      "timestamp": 1659979164
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result : String = \"\"\n        var index = 0\n        while (index < string.length) {\n            if (string.charAt(index).toUpperCase != string.charAt(index)) {\n                result += string.charAt(index).toLowerCase\n            }\n            index += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp58deszgy.scala:11:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(index).toUpperCase != string.charAt(index)) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp58deszgy.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += string.charAt(index).toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp58deszgy.scala:12:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += string.charAt(index).toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659979162
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string match {\n            case x if !x.isEmpty => x.map(_.toLowerCase).map(_.toUpperCase)\n            case _ => \"\"\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0txg9zx1.scala:9:44 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mcase\u001b[0m x \u001b[33mif\u001b[0m !x.isEmpty => x.map(_.toLowerCase).map(_.toUpperCase)\n\u001b[31m\u001b[31m  |\u001b[0m                                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 value toLowerCase is not a member of Char\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979163
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val result = string.map(c => if (c.isLower) c.toUpper else c.toLower)\n        \n        // Return empty string if string contains no lowercase characters.\n        if (string.isEmpty || result.isEmpty) \"\" else result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659979166
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string match {\n            case a if a.isUppercase => a.toLowerCase + a.toUpperCase\n            case b => b.toLowerCase\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwoxodsrm.scala:9:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mcase\u001b[0m a \u001b[33mif\u001b[0m a.isUppercase => a.toLowerCase + a.toUpperCase\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m value isUppercase is not a member of String - did you mean a.toUpperCase?\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979164
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val buffer = new StringBuilder\n        val newString = for (char <- string) yield {\n            if (char.isUpper) {\n                char.swapCase\n            } else {\n                char\n            }\n        }\n        val result = newString.mkString\n        buffer.append(result)\n        return buffer.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgow02g1p.scala:11:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                char.swapCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value swapCase is not a member of Char\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979164
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var flippedString : String = \"\"\n        for (character <- string) flippedString += (character == character.toLowerCase ? character.toUpperCase : character)\n        return flippedString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsa9jw174.scala:9:48 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (character <- string) flippedString += (character == character.toLowerCase ? character.toUpperCase : \u001b[35mcharacter\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m              value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsa9jw174.scala:9:113 ------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (character <- string) flippedString += (character == character.toLowerCase ? character.toUpperCase : \u001b[35mcharacter\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                 ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                 Not found: type character\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsa9jw174.scala:9:75 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (character <- string) flippedString += (character == character.toLowerCase ? character.toUpperCase : \u001b[35mcharacter\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                 ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 value toLowerCase is not a member of Char\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659979166
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val result = new StringBuilder\n        var currentChar = string(0)\n        var upperCase = false\n        string.foreach { s =>\n            currentChar = s\n            if(currentChar.isUpper) upperCase = !upperCase\n            if(upperCase) result += currentChar.swapCase\n            currentChar = s\n        }\n        result.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpn5d328kr.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            \u001b[33mif\u001b[0m(upperCase) result += currentChar.swapCase\n\u001b[31m\u001b[31m   |\u001b[0m                                    ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                  value swapCase is not a member of Char\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979166
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val result = new StringBuilder\n        string.foreach {\n            char => char.toUpperCase +: result.append(char.toLowerCase)\n        }\n        result.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpknh9f_kt.scala:10:59 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[36mchar\u001b[0m => char.toUpperCase +: result.append(char.toLowerCase)\n\u001b[31m\u001b[31m   |\u001b[0m                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toLowerCase is not a member of Char\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979167
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.map(x => x.toUpperCase) ++ (string.toUpperCase.map(_.toLowerCase)) map (x => x.toUpperCase)\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6_nr8m5o.scala:8:26 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        string.map(\u001b[36mx\u001b[0m => x.toUpperCase) ++ (string.toUpperCase.map(_.toLowerCase)) map (\u001b[36mx\u001b[0m => x.toUpperCase)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        value toUpperCase is not a member of Char\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979167
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string match {\n            case \"\" => \"\"\n            case chars: List[Char] => chars.foldRight(List[Char]())((acc, x) => {\n                acc + if (x.isUpper) x.toLower else x.toUpper\n            })\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmphgxho68y.scala:11:22 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                acc + \u001b[33mif\u001b[0m (x.isUpper) x.toLower \u001b[33melse\u001b[0m x.toUpper\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^\u001b[0m\n\u001b[31m   |\u001b[0m                      expression expected but \u001b[31mif\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979165
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val charArray = string.toCharArray\n        val flipCharArray = charArray.map {\n            case c if (c.isLetter) =>\n                val upperCase = c.toUpper\n                upperCase\n            case c =>\n                val lowerCase = c.toLower\n                lowerCase\n        }\n        flipCharArray.toList.mkString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpkadaqo2q.scala:21)\n\tat Problem.main(tmpkadaqo2q.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659979171
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var newString = \"\"\n        for (char <- string.toCharArray)\n        {\n            if (char >= 'a' && char <= 'z')\n            {\n                newString += char.toLower\n            }\n            else if (char >= 'A' && char <= 'Z')\n            {\n                newString += char.toUpper\n            }\n            else\n            {\n                newString += char\n            }\n        }\n        newString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpa8v50ty3.scala:28)\n\tat Problem.main(tmpa8v50ty3.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659979170
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        for (i <- 0 until string.length) {\n            if (string(i).toLowerCase == string(i)) {\n                string(i) = string(i).toUpperCase\n            }\n            if (string(i).toUpperCase.contains(string(i))) {\n                string(i) = string(i).toLowerCase\n            }\n        }\n        string\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdit0kkuv.scala:9:26 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (string(i).toLowerCase == string(i)) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdit0kkuv.scala:10:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                string(i) = string(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value update is not a member of String\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdit0kkuv.scala:10:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                string(i) = string(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdit0kkuv.scala:12:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mif\u001b[0m (string(i).toUpperCase.contains(string(i))) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdit0kkuv.scala:13:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                string(i) = string(i).toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value update is not a member of String\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdit0kkuv.scala:13:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                string(i) = string(i).toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            value toLowerCase is not a member of Char\n6 errors found\n",
      "stdout": "",
      "timestamp": 1659979172
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n      var result = \"\"\n      for(i <- 0 until string.length) {\n        result += string(i).swapcase()\n      }\n      result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppa6ej6cz.scala:10:15 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        result += string(i).swapcase()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppa6ej6cz.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        result += string(i).swapcase()\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value swapcase is not a member of Char\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979171
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n      string.foldLeft(\"\")(\n        (acc, char) => char == char.toLowerCase() ? char.toUpperCase() : acc + (char.toLowerCase()))\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4v85cwrh.scala:9:96 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        (\u001b[36macc\u001b[0m, \u001b[36mchar\u001b[0m) => char == char.toLowerCase() ? char.toUpperCase() : \u001b[35macc\u001b[0m \u001b[35m+\u001b[0m (char.toLowerCase()))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                ^\u001b[0m\n\u001b[31m  |\u001b[0m                                               ')' expected, but '(' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4v85cwrh.scala:9:77 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        (\u001b[36macc\u001b[0m, \u001b[36mchar\u001b[0m) => char == char.toLowerCase() ? char.toUpperCase() : \u001b[35macc\u001b[0m \u001b[35m+\u001b[0m (char.toLowerCase()))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                             ^\u001b[0m\n\u001b[31m  |\u001b[0m                                                         Not found: type +\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4v85cwrh.scala:9:36 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        (\u001b[36macc\u001b[0m, \u001b[36mchar\u001b[0m) => char == char.toLowerCase() ? char.toUpperCase() : \u001b[35macc\u001b[0m \u001b[35m+\u001b[0m (char.toLowerCase()))\n\u001b[31m\u001b[31m  |\u001b[0m                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                               value toLowerCase is not a member of Char\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659979171
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (string(i) >=  'a' && string(i) <='z') {\n                result += string(i) - 'a'\n            } else if (string(i) >=  'A' && string(i) <='Z') {\n                result += string(i) - 'A'\n            } else if (string(i) >=  '0' && string(i) <='9') {\n                result += string(i) - '0'\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpquv4cm3d.scala:22)\n\tat Problem.main(tmpquv4cm3d.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659979172
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val mutableString = string.toMutable\n        mutableString.init\n        mutableString.forEach { x =>\n            if (x.isLower) x.toUpper else x.toLower\n        }\n        mutableString.toString.trim\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_bwc7vio.scala:8:35 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmutableString\u001b[0m = string.toMutable\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            value toMutable is not a member of String\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979170
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val chars = string.split(\"\")\n        chars.map(x => if (x.isUpper) x.toLowerCase else x.toUpperCase)\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsp6_4ly6.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        chars.map(\u001b[36mx\u001b[0m => \u001b[33mif\u001b[0m (x.isUpper) x.toLowerCase \u001b[33melse\u001b[0m x.toUpperCase)\n\u001b[31m\u001b[31m  |\u001b[0m                           ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                           value isUpper is not a member of String\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979171
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val uppercaseMap = new mutable.HashMap[Char, Char]()\n        val lowercaseMap = new mutable.HashMap[Char, Char]()\n        for(i <- 0 until string.length){\n            val c = string.charAt(i)\n            if (lowercaseMap.contains(c))\n                lowercaseMap(c) = uppercaseMap(c)\n            else lowercaseMap(c) = c\n            if (uppercaseMap.contains(c))\n                uppercaseMap(c) = lowercaseMap(c)\n            else uppercaseMap(c) = c\n        }\n        return new String(lowercaseMap.toList)\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyk2q6ndp.scala:8:31 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36muppercaseMap\u001b[0m = \u001b[33mnew\u001b[0m mutable.HashMap[\u001b[35mChar\u001b[0m, \u001b[35mChar\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                               ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                               Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyk2q6ndp.scala:9:31 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mlowercaseMap\u001b[0m = \u001b[33mnew\u001b[0m mutable.HashMap[\u001b[35mChar\u001b[0m, \u001b[35mChar\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                               ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                               Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979168
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for(i <- 0 until string.length){\n            if (string.charAt(i).toLowerCase == string.charAt(i).toUpperCase)\n                result ++= string.charAt(i).toLowerCase\n            else result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmpugvyrn.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i).toLowerCase == string.charAt(i).toUpperCase)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmpugvyrn.scala:11:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                result ++= string.charAt(i).toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value ++= is not a member of String\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmpugvyrn.scala:11:44 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                result ++= string.charAt(i).toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmpugvyrn.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33melse\u001b[0m result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmpugvyrn.scala:12:44 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33melse\u001b[0m result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           value toUpperCase is not a member of Char\n5 errors found\n",
      "stdout": "",
      "timestamp": 1659979174
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n      val strs = string.split(\"\")\n      val res = mutable.Buffer.empty[String]\n      for ( i <- 0 until strs.length ) {\n        if ( strs(i).toLower.toUpper == strs(i) ) {\n          res ++= strs(i).toUpper\n        } else {\n          res ++= strs(i).toLower\n        }\n      }\n      res.mkString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxbllcxyg.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m      \u001b[33mval\u001b[0m \u001b[36mres\u001b[0m = mutable.Buffer.empty[\u001b[35mString\u001b[0m]\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxbllcxyg.scala:11:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mif\u001b[0m ( strs(i).toLower.toUpper == strs(i) ) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m             value toLower is not a member of String\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979172
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- string.toLowerCase.toCharArray) {\n            result += i.isLowerCase ? i.toUpperCase : i.toLowerCase\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpov2j2prs.scala:10:56 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += i.isLowerCase ? i.toUpperCase : i.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                                                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                type toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpov2j2prs.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += i.isLowerCase ? i.toUpperCase : i.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpov2j2prs.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += i.isLowerCase ? i.toUpperCase : i.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value isLowerCase is not a member of Char\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659979173
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var newStr = \"\"\n        for(letter <- string){\n            if(letter.isLower) newStr += letter.toUpperCase\n            else newStr += letter.toLowerCase\n        }\n        newStr\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpupdqx3aj.scala:10:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m(letter.isLower) newStr += letter.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpupdqx3aj.scala:10:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m(letter.isLower) newStr += letter.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpupdqx3aj.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m newStr += letter.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpupdqx3aj.scala:11:34 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m newStr += letter.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           value toLowerCase is not a member of Char\n4 errors found\n",
      "stdout": "",
      "timestamp": 1659979174
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var flippedString = \"\"\n        for( char <- string.toCharArray) {\n            flippedString += if (char.isLower) char.toUpper else char.toLower\n        }\n        flippedString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmplofy08ss.scala:10:29 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            flippedString += \u001b[33mif\u001b[0m (char.isLower) char.toUpper \u001b[33melse\u001b[0m char.toLower\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^\u001b[0m\n\u001b[31m   |\u001b[0m                             expression expected but \u001b[31mif\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979171
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val chars = string.map(c => if(c.toLowerCase == c.toUpperCase) c.toUpperCase else c.toLowerCase)\n        return new String(chars)\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmph11byx8m.scala:8:41 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mchars\u001b[0m = string.map(\u001b[36mc\u001b[0m => \u001b[33mif\u001b[0m(c.toLowerCase == c.toUpperCase) c.toUpperCase \u001b[33melse\u001b[0m c.toLowerCase)\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmph11byx8m.scala:8:73 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mchars\u001b[0m = string.map(\u001b[36mc\u001b[0m => \u001b[33mif\u001b[0m(c.toLowerCase == c.toUpperCase) c.toUpperCase \u001b[33melse\u001b[0m c.toLowerCase)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                       ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmph11byx8m.scala:8:92 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mchars\u001b[0m = string.map(\u001b[36mc\u001b[0m => \u001b[33mif\u001b[0m(c.toLowerCase == c.toUpperCase) c.toUpperCase \u001b[33melse\u001b[0m c.toLowerCase)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 value toLowerCase is not a member of Char\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659979175
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = string\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) == string.charAt(i).toLower) {\n                result += string.charAt(i).toUpper\n            } else {\n                result += string.charAt(i).toLower\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpp5g3xj2f.scala:20)\n\tat Problem.main(tmpp5g3xj2f.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659979175
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.map(x => (x.toUpperCase , x.toLowerCase))\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpct3su2g_.scala:8:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        string.map(\u001b[36mx\u001b[0m => (x.toUpperCase , x.toLowerCase))\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpct3su2g_.scala:8:43 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        string.map(\u001b[36mx\u001b[0m => (x.toUpperCase , x.toLowerCase))\n\u001b[31m\u001b[31m  |\u001b[0m                                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 value toLowerCase is not a member of Char\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979175
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string match {\n            case empty | null => empty\n            case char if char.isLowerCase => char.toUpperCase\n            case char if char.isUpperCase => char.toLowerCase\n            case _ => empty\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E024] Syntax Error: /tmp/tmp3293nn1f.scala:9:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mcase\u001b[0m empty | \u001b[31mnull\u001b[0m => empty\n\u001b[31m\u001b[31m  |\u001b[0m                 ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                 Illegal variable empty in pattern alternative\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3293nn1f.scala:10:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mcase\u001b[0m char \u001b[33mif\u001b[0m char.isLowerCase => char.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue isLowerCase is not a member of String - did you mean char.toLowerCase?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3293nn1f.scala:11:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mcase\u001b[0m char \u001b[33mif\u001b[0m char.isUpperCase => char.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue isUpperCase is not a member of String - did you mean char.toUpperCase?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3293nn1f.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mcase\u001b[0m _ => empty\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: empty\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "stdout": "",
      "timestamp": 1659979175
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.foldLeft(\"\")(\n            (acc, c) => acc + (if(c.isUpper) c.toUpperCase else c.toLowerCase )\n        )\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpib6qcwlx.scala:9:47 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            (\u001b[36macc\u001b[0m, \u001b[36mc\u001b[0m) => acc + (\u001b[33mif\u001b[0m(c.isUpper) c.toUpperCase \u001b[33melse\u001b[0m c.toLowerCase )\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpib6qcwlx.scala:9:66 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            (\u001b[36macc\u001b[0m, \u001b[36mc\u001b[0m) => acc + (\u001b[33mif\u001b[0m(c.isUpper) c.toUpperCase \u001b[33melse\u001b[0m c.toLowerCase )\n\u001b[31m\u001b[31m  |\u001b[0m                                                                ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 value toLowerCase is not a member of Char\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979175
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.map(_.toUpperCase)\n            .reduceLeft((string1, string2) => string1 + string2)\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzze3qz0u.scala:8:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        string.map(_.toUpperCase)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   value toUpperCase is not a member of Char\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979175
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.map { c =>\n          if (c.toLowerCase < c.toUpperCase) {\n            c.toUpperCase + c.toLowerCase\n          } else {\n            c.toLowerCase\n          }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppsbramtf.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m          \u001b[33mif\u001b[0m (c.toLowerCase < c.toUpperCase) {\n\u001b[31m\u001b[31m  |\u001b[0m              ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m              value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppsbramtf.scala:10:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            c.toUpperCase + c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppsbramtf.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value toLowerCase is not a member of Char\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659979176
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        val result = new StringBuilder()\n        for (c <- string) {\n            val isLowercase = c.isLowercase\n            val isUppercase = c.isUppercase\n            if (isLowercase && isUppercase) {\n                result.append((c - 32).toString)\n            } else {\n                result.append(c)\n            }\n        }\n        return result.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwa50qpqn.scala:10:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36misLowercase\u001b[0m = c.isLowercase\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value isLowercase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwa50qpqn.scala:11:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36misUppercase\u001b[0m = c.isUppercase\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value isUppercase is not a member of Char\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659979176
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n      def toUpper(i : Int) : String = i.toString().toUpperCase\n      def toLower(i : Int) : String = i.toString().toLowerCase\n      val newString = mutable.ListBuffer.empty[String]\n      for (i <- 0 until string.length) {\n        newString += toLower(string(i))\n      }\n      newString.toString.mkString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo7ovmfc1.scala:10:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m      \u001b[33mval\u001b[0m \u001b[36mnewString\u001b[0m = mutable.ListBuffer.empty[\u001b[35mString\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659979175
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string.map { c => if (c.isLower) c.toUpper else c.toLower }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659979176
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        string match {\n            case \"a\" => \"b\"\n            case \"b\" => \"a\"\n            case \"A\" => \"B\"\n            case \"B\" => \"A\"\n            case x => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpvre862f5.scala:18)\n\tat Problem.main(tmpvre862f5.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659979177
    }
  ]
}
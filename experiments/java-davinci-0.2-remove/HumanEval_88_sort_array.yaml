name: HumanEval_88_sort_array
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given an array of non-negative integers, return a copy of\
  \ the given array after sorting,\n    // you will sort the given array in ascending\
  \ order if the sum( first index value, last index value) is odd,\n    // or sort\
  \ it in descending order if the sum( first index value, last index value) is even.\n\
  \    // Note:\n    // * don't change the given array.\n    // Examples:\n    public\
  \ static ArrayList<Integer> sortArray(ArrayList<Integer> array) {\n"
tests: "return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static\
  \ void main(String[] args) {\n    assert(sortArray((new ArrayList<Integer>(Arrays.asList()))).equals((new\
  \ ArrayList<Integer>(Arrays.asList()))));\n    assert(sortArray((new ArrayList<Integer>(Arrays.asList((int)5)))).equals((new\
  \ ArrayList<Integer>(Arrays.asList((int)5)))));\n    assert(sortArray((new ArrayList<Integer>(Arrays.asList((int)2,\
  \ (int)4, (int)3, (int)0, (int)1, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
  \ (int)1, (int)2, (int)3, (int)4, (int)5)))));\n    assert(sortArray((new ArrayList<Integer>(Arrays.asList((int)2,\
  \ (int)4, (int)3, (int)0, (int)1, (int)5, (int)6)))).equals((new ArrayList<Integer>(Arrays.asList((int)6,\
  \ (int)5, (int)4, (int)3, (int)2, (int)1, (int)0)))));\n    assert(sortArray((new\
  \ ArrayList<Integer>(Arrays.asList((int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
  \ (int)2)))));\n    assert(sortArray((new ArrayList<Integer>(Arrays.asList((int)15,\
  \ (int)42, (int)87, (int)32, (int)11, (int)0)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
  \ (int)11, (int)15, (int)32, (int)42, (int)87)))));\n    assert(sortArray((new ArrayList<Integer>(Arrays.asList((int)21,\
  \ (int)14, (int)23, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)23,\
  \ (int)21, (int)14, (int)11)))));\n    }\n\n}\n"
completions: ["        int sum = array.get(0) + array.get(array.size() - 1);\n   \
    \     ArrayList<Integer> result = new ArrayList<Integer>();\n        if (sum %\
    \ 2 == 0) {\n            for (int i = array.size() - 1; i >= 0; i--) {\n     \
    \           result.add(array.get(i));\n            }\n        } else {\n     \
    \       for (int i = 0; i < array.size(); i++) {\n                result.add(array.get(i));\n\
    \            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int sum = array.get(0) + array.get(array.size()\
    \ - 1);\n        if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      if (array.size() == 0) {\n            return result;\n        }\n     \
    \   int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum % 2\
    \ == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      for (int i = 0; i < array.size(); i++) {\n            result.add(array.get(i));\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(result, Collections.reverseOrder());\n     \
    \   } else {\n            Collections.sort(result);\n        }\n        return\
    \ result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n \
    \       int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int first = array.get(0);\n        int last = array.get(array.size()\
    \ - 1);\n        int sum = first + last;\n        if (sum % 2 == 0) {\n      \
    \      Collections.sort(array, Collections.reverseOrder());\n        } else {\n\
    \            Collections.sort(array);\n        }\n        return array;", "  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<>();\n        int\
    \ sum = array.get(0) + array.get(array.size() - 1);\n        if (sum % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \  } else {\n            Collections.sort(array);\n        }\n        return array;",
  "        int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      ArrayList<Integer> copy = new ArrayList<Integer>(array);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(copy, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(copy);\n        }\n        return\
    \ copy;", "        int sum = array.get(0) + array.get(array.size() - 1);\n   \
    \     if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      ArrayList<Integer> result = new ArrayList<Integer>();\n        if (sum\
    \ % 2 == 0) {\n            for (int i = array.size() - 1; i >= 0; i--) {\n   \
    \             result.add(array.get(i));\n            }\n        } else {\n   \
    \         for (int i = 0; i < array.size(); i++) {\n                result.add(array.get(i));\n\
    \            }\n        }\n        return result;", "        int sum = array.get(0)\
    \ + array.get(array.size() - 1);\n        ArrayList<Integer> result = new ArrayList<>();\n\
    \        if (sum % 2 == 0) {\n            for (int i = array.size() - 1; i >=\
    \ 0; i--) {\n                result.add(array.get(i));\n            }\n      \
    \  } else {\n            for (int i = 0; i < array.size(); i++) {\n          \
    \      result.add(array.get(i));\n            }\n        }\n        return result;",
  "        int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int first = array.get(0);\n        int last = array.get(array.size()\
    \ - 1);\n        int sum = first + last;\n        if (sum % 2 == 0) {\n      \
    \      Collections.sort(array, Collections.reverseOrder());\n        } else {\n\
    \            Collections.sort(array);\n        }\n        return array;", "  \
    \      ArrayList<Integer> copy = new ArrayList<Integer>(array);\n        if ((copy.get(0)\
    \ + copy.get(copy.size() - 1)) % 2 == 0) {\n            Collections.sort(copy,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(copy);\n\
    \        }\n        return copy;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int first = array.get(0);\n        int last = array.get(array.size()\
    \ - 1);\n        int sum = first + last;\n        if (sum % 2 == 0) {\n      \
    \      Collections.sort(array, Collections.reverseOrder());\n        } else {\n\
    \            Collections.sort(array);\n        }\n        return array;", "  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        ArrayList<Integer>\
    \ copy = new ArrayList<Integer>(array);\n        if (sum % 2 == 0) {\n       \
    \     Collections.sort(copy, Collections.reverseOrder());\n        } else {\n\
    \            Collections.sort(copy);\n        }\n        return copy;", "    \
    \    int sum = array.get(0) + array.get(array.size() - 1);\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        if (sum % 2 == 0) {\n          \
    \  for (int i = array.size() - 1; i >= 0; i--) {\n                result.add(array.get(i));\n\
    \            }\n        } else {\n            for (int i = 0; i < array.size();\
    \ i++) {\n                result.add(array.get(i));\n            }\n        }\n\
    \        return result;", "        int first = array.get(0);\n        int last\
    \ = array.get(array.size() - 1);\n        int sum = first + last;\n        if\
    \ (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int firstIndex = array.get(0);\n        int lastIndex = array.get(array.size()\
    \ - 1);\n        int sum = firstIndex + lastIndex;\n        if (sum % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \  } else {\n            Collections.sort(array);\n        }\n        return array;",
  "        int sum = array.get(0) + array.get(array.size() - 1);\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        if (sum % 2 == 0) {\n          \
    \  result = array.stream().sorted(Comparator.reverseOrder()).collect(Collectors.toCollection(ArrayList::new));\n\
    \        } else {\n            result = array.stream().sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    \        }\n        return result;", "        if (array == null || array.size()\
    \ == 0) return array;\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int first = array.get(0);\n        int last = array.get(array.size()\
    \ - 1);\n        int sum = first + last;\n        if (sum % 2 == 0) {\n      \
    \      Collections.sort(array, Collections.reverseOrder());\n        } else {\n\
    \            Collections.sort(array);\n        }\n        return array;", "  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      ArrayList<Integer> sorted = new ArrayList<Integer>(array);\n        if\
    \ (sum % 2 == 0) {\n            Collections.sort(sorted, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(sorted);\n        }\n        return\
    \ sorted;", "        int sum = array.get(0) + array.get(array.size() - 1);\n \
    \       if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      if (array.size() == 0) {\n            return result;\n        }\n     \
    \   int first = array.get(0);\n        int last = array.get(array.size() - 1);\n\
    \        int sum = first + last;\n        if (sum % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        int sum = array.get(0) + array.get(array.size()\
    \ - 1);\n        ArrayList<Integer> result = new ArrayList<>();\n        if (sum\
    \ % 2 == 0) {\n            for (int i = array.size() - 1; i >= 0; i--) {\n   \
    \             result.add(array.get(i));\n            }\n        } else {\n   \
    \         for (int i = 0; i < array.size(); i++) {\n                result.add(array.get(i));\n\
    \            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int sum = array.get(0) + array.get(array.size()\
    \ - 1);\n        if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      if (array.size() == 0) {\n            return result;\n        }\n     \
    \   int first = array.get(0);\n        int last = array.get(array.size() - 1);\n\
    \        if ((first + last) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      ArrayList<Integer> result = new ArrayList<Integer>();\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        for\
    \ (int i = 0; i < array.size(); i++) {\n            result.add(array.get(i));\n\
    \        }\n        return result;", "        ArrayList<Integer> result = new\
    \ ArrayList<Integer>();\n        if (array.size() == 0) {\n            return\
    \ result;\n        }\n        int sum = array.get(0) + array.get(array.size()\
    \ - 1);\n        if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> copy = new ArrayList<Integer>(array);\n\
    \        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n      \
    \      Collections.sort(copy, Collections.reverseOrder());\n        } else {\n\
    \            Collections.sort(copy);\n        }\n        return copy;", "    \
    \    int sum = array.get(0) + array.get(array.size() - 1);\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        if (sum % 2 == 0) {\n          \
    \  for (int i = array.size() - 1; i >= 0; i--) {\n                result.add(array.get(i));\n\
    \            }\n        } else {\n            for (int i = 0; i < array.size();\
    \ i++) {\n                result.add(array.get(i));\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      int first = array.get(0);\n        int last = array.get(array.size() -\
    \ 1);\n        int sum = first + last;\n        if (sum % 2 == 0) {\n        \
    \    Collections.sort(array, Collections.reverseOrder());\n        } else {\n\
    \            Collections.sort(array);\n        }\n        return array;", "  \
    \      int first = array.get(0);\n        int last = array.get(array.size() -\
    \ 1);\n        int sum = first + last;\n        if (sum % 2 == 0) {\n        \
    \    Collections.sort(array, Collections.reverseOrder());\n        } else {\n\
    \            Collections.sort(array);\n        }\n        return array;", "  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        if (sum % 2 == 0) {\n          \
    \  for (int i = array.size() - 1; i >= 0; i--) {\n                result.add(array.get(i));\n\
    \            }\n        } else {\n            for (int i = 0; i < array.size();\
    \ i++) {\n                result.add(array.get(i));\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     int first = array.get(0);\n        int last = array.get(array.size() - 1);\n\
    \        int sum = first + last;\n        if (sum % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      ArrayList<Integer> result = new ArrayList<Integer>();\n        if (sum\
    \ % 2 == 0) {\n            for (int i = array.size() - 1; i >= 0; i--) {\n   \
    \             result.add(array.get(i));\n            }\n        } else {\n   \
    \         for (int i = 0; i < array.size(); i++) {\n                result.add(array.get(i));\n\
    \            }\n        }\n        return result;", "        int sum = array.get(0)\
    \ + array.get(array.size() - 1);\n        if (sum % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        int sum = array.get(0) + array.get(array.size()\
    \ - 1);\n        ArrayList<Integer> result = new ArrayList<Integer>();\n     \
    \   if (sum % 2 == 0) {\n            for (int i = array.size() - 1; i >= 0; i--)\
    \ {\n                result.add(array.get(i));\n            }\n        } else\
    \ {\n            for (int i = 0; i < array.size(); i++) {\n                result.add(array.get(i));\n\
    \            }\n        }\n        return result;", "        int sum = array.get(0)\
    \ + array.get(array.size() - 1);\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        if (sum % 2 == 0) {\n            result = array.stream().sorted(Comparator.reverseOrder()).collect(Collectors.toCollection(ArrayList::new));\n\
    \        } else {\n            result = array.stream().sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    \        }\n        return result;", "        int sum = array.get(0) + array.get(array.size()\
    \ - 1);\n        if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      ArrayList<Integer> result = new ArrayList<Integer>();\n        if (sum\
    \ % 2 == 0) {\n            for (int i = array.size() - 1; i >= 0; i--) {\n   \
    \             result.add(array.get(i));\n            }\n        } else {\n   \
    \         for (int i = 0; i < array.size(); i++) {\n                result.add(array.get(i));\n\
    \            }\n        }\n        return result;", "        int sum = array.get(0)\
    \ + array.get(array.size() - 1);\n        if (sum % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        int sum = array.get(0) + array.get(array.size()\
    \ - 1);\n        ArrayList<Integer> result = new ArrayList<Integer>();\n     \
    \   if (sum % 2 == 0) {\n            for (int i = array.size() - 1; i >= 0; i--)\
    \ {\n                result.add(array.get(i));\n            }\n        } else\
    \ {\n            for (int i = 0; i < array.size(); i++) {\n                result.add(array.get(i));\n\
    \            }\n        }\n        return result;", "        int sum = array.get(0)\
    \ + array.get(array.size() - 1);\n        if (sum % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        int sum = array.get(0) + array.get(array.size()\
    \ - 1);\n        if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        // Write your code here.\n        int sum = array.get(0) +\
    \ array.get(array.size() - 1);\n        if (sum % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        // Write your code here\n       \
    \ int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum % 2 ==\
    \ 0) {\n            Collections.sort(array, Collections.reverseOrder());\n   \
    \     } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        // Write your code here\n        return array;", "       \
    \ int sum = array.get(0) + array.get(array.size() - 1);\n        ArrayList<Integer>\
    \ result = new ArrayList<>();\n        if (sum % 2 == 0) {\n            for (int\
    \ i = array.size() - 1; i >= 0; i--) {\n                result.add(array.get(i));\n\
    \            }\n        } else {\n            for (int i = 0; i < array.size();\
    \ i++) {\n                result.add(array.get(i));\n            }\n        }\n\
    \        return result;", "        int sum = array.get(0) + array.get(array.size()\
    \ - 1);\n        ArrayList<Integer> sorted = new ArrayList<Integer>(array);\n\
    \        if (sum % 2 == 0) {\n            Collections.sort(sorted, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(sorted);\n        }\n        return\
    \ sorted;", "        ArrayList<Integer> result = new ArrayList<>();\n        int\
    \ first = array.get(0);\n        int last = array.get(array.size() - 1);\n   \
    \     int sum = first + last;\n        if (sum % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        // Write your code here.\n      \
    \  int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum % 2\
    \ == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      ArrayList<Integer> result = new ArrayList<Integer>();\n        if (sum\
    \ % 2 == 0) {\n            for (int i = array.size() - 1; i >= 0; i--) {\n   \
    \             result.add(array.get(i));\n            }\n        } else {\n   \
    \         for (int i = 0; i < array.size(); i++) {\n                result.add(array.get(i));\n\
    \            }\n        }\n        return result;", "        // Write your code\
    \ here\n        int first = array.get(0);\n        int last = array.get(array.size()\
    \ - 1);\n        if ((first + last) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        int sum = array.get(0) + array.get(array.size()\
    \ - 1);\n        if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> sortedArray = new ArrayList<Integer>();\n\
    \        int first = array.get(0);\n        int last = array.get(array.size()\
    \ - 1);\n        if ((first + last) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        // Write your code here.\n        ArrayList<Integer> result\
    \ = new ArrayList<Integer>();\n        int sum = array.get(0) + array.get(array.size()\
    \ - 1);\n        if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      if (array.size() == 0) {\n            return result;\n        }\n     \
    \   int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum % 2\
    \ == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<>();\n        int\
    \ sum = array.get(0) + array.get(array.size() - 1);\n        if (sum % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \  } else {\n            Collections.sort(array);\n        }\n        return array;",
  "        int sum = array.get(0) + array.get(array.size() - 1);\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        if (sum % 2 == 0) {\n          \
    \  Collections.sort(array, Collections.reverseOrder());\n        } else {\n  \
    \          Collections.sort(array);\n        }\n        return array;", "    \
    \    ArrayList<Integer> result = new ArrayList<Integer>();\n        int sum =\
    \ array.get(0) + array.get(array.size() - 1);\n        if (sum % 2 == 0) {\n \
    \           Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;",
  "        ArrayList<Integer> result = new ArrayList<>();\n        int sum = array.get(0)\
    \ + array.get(array.size() - 1);\n        if (sum % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        for (int i = 0; i < array.size(); i++) {\n            result.add(array.get(i));\n\
    \        }\n        return result;", "        int sum = array.get(0) + array.get(array.size()\
    \ - 1);\n        ArrayList<Integer> result = new ArrayList<Integer>();\n     \
    \   if (sum % 2 == 0) {\n            for (int i = array.size() - 1; i >= 0; i--)\
    \ {\n                result.add(array.get(i));\n            }\n        } else\
    \ {\n            for (int i = 0; i < array.size(); i++) {\n                result.add(array.get(i));\n\
    \            }\n        }\n        return result;", "        int sum = array.get(0)\
    \ + array.get(array.size() - 1);\n        if (sum % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        int sum = array.get(0) + array.get(array.size()\
    \ - 1);\n        if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      ArrayList<Integer> copy = new ArrayList<Integer>(array);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(copy, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(copy);\n        }\n        return\
    \ copy;", "        int sum = array.get(0) + array.get(array.size() - 1);\n   \
    \     if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      ArrayList<Integer> result = new ArrayList<Integer>();\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      ArrayList<Integer> result = new ArrayList<Integer>();\n        if (sum\
    \ % 2 == 0) {\n            for (int i = array.size() - 1; i >= 0; i--) {\n   \
    \             result.add(array.get(i));\n            }\n        } else {\n   \
    \         for (int i = 0; i < array.size(); i++) {\n                result.add(array.get(i));\n\
    \            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int sum = array.get(0) + array.get(array.size()\
    \ - 1);\n        if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        // Write your code here\n        int sum = array.get(0) +\
    \ array.get(array.size() - 1);\n        if (sum % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        int sum = array.get(0) + array.get(array.size()\
    \ - 1);\n        if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      ArrayList<Integer> result = new ArrayList<Integer>();\n        if (sum\
    \ % 2 == 0) {\n            for (int i = array.size() - 1; i >= 0; i--) {\n   \
    \             result.add(array.get(i));\n            }\n        } else {\n   \
    \         for (int i = 0; i < array.size(); i++) {\n                result.add(array.get(i));\n\
    \            }\n        }\n        return result;", "        int sum = array.get(0)\
    \ + array.get(array.size() - 1);\n        if (sum % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        int sum = array.get(0) + array.get(array.size()\
    \ - 1);\n        ArrayList<Integer> result = new ArrayList<Integer>();\n     \
    \   if (sum % 2 == 0) {\n            for (int i = array.size() - 1; i >= 0; i--)\
    \ {\n                result.add(array.get(i));\n            }\n        } else\
    \ {\n            for (int i = 0; i < array.size(); i++) {\n                result.add(array.get(i));\n\
    \            }\n        }\n        return result;", "        int sum = array.get(0)\
    \ + array.get(array.size() - 1);\n        if (sum % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        int sum = array.get(0) + array.get(array.size()\
    \ - 1);\n        if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> sortedArray = new ArrayList<Integer>();\n\
    \        int firstIndex = array.get(0);\n        int lastIndex = array.get(array.size()\
    \ - 1);\n        int sum = firstIndex + lastIndex;\n        if (sum % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \  } else {\n            Collections.sort(array);\n        }\n        return array;",
  "        if (array == null || array.size() == 0) {\n            return array;\n\
    \        }\n        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      ArrayList<Integer> sorted = new ArrayList<>(array);\n        if (sum %\
    \ 2 == 0) {\n            Collections.sort(sorted, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(sorted);\n        }\n        return\
    \ sorted;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n \
    \       if (array.size() == 0) {\n            return result;\n        }\n    \
    \    int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum %\
    \ 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      if (array.size() == 0) {\n            return result;\n        }\n     \
    \   int first = array.get(0);\n        int last = array.get(array.size() - 1);\n\
    \        if ((first + last) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      int first = array.get(0);\n        int last = array.get(array.size() -\
    \ 1);\n        int sum = first + last;\n        if (sum % 2 == 0) {\n        \
    \    Collections.sort(array, Collections.reverseOrder());\n        } else {\n\
    \            Collections.sort(array);\n        }\n        return array;", "  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        // Write your code here\n        return array;", "       \
    \ int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum % 2 ==\
    \ 0) {\n            Collections.sort(array, Collections.reverseOrder());\n   \
    \     } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        // Write your code here\n        int sum = array.get(0) +\
    \ array.get(array.size() - 1);\n        if (sum % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        int sum = array.get(0) + array.get(array.size()\
    \ - 1);\n        ArrayList<Integer> result = new ArrayList<Integer>();\n     \
    \   if (sum % 2 == 0) {\n            for (int i = array.size() - 1; i >= 0; i--)\
    \ {\n                result.add(array.get(i));\n            }\n        } else\
    \ {\n            for (int i = 0; i < array.size(); i++) {\n                result.add(array.get(i));\n\
    \            }\n        }\n        return result;", "        int sum = array.get(0)\
    \ + array.get(array.size() - 1);\n        if (sum % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<>();\n        int\
    \ sum = array.get(0) + array.get(array.size() - 1);\n        if (sum % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \  } else {\n            Collections.sort(array);\n        }\n        return array;",
  "        int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      if (array.size() == 0) {\n            return result;\n        }\n     \
    \   int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum % 2\
    \ == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      if (array.size() == 0) {\n            return result;\n        }\n     \
    \   if (array.size() == 1) {\n            result.add(array.get(0));\n        \
    \    return result;\n        }\n        if (array.size() == 2) {\n           \
    \ if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            result.add(array.get(array.size() - 1));\n            result.addAll(sortArray(new\
    \ ArrayList<Integer>(array.subList(1, array.size() - 1))));\n            result.add(array.get(0));\n\
    \        } else {\n            result.add(array.get(0));\n            result.addAll(sortArray(new\
    \ ArrayList<Integer>(array.subList(1, array.size() - 1))));\n            result.add(array.get(array.size()\
    \ - 1));\n        }\n        return result;", "        int sum = array.get(0)\
    \ + array.get(array.size() - 1);\n        if (sum % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<>();\n        int\
    \ first = array.get(0);\n        int last = array.get(array.size() - 1);\n   \
    \     if ((first + last) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<>();\n        int\
    \ sum = array.get(0) + array.get(array.size() - 1);\n        if (sum % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \  } else {\n            Collections.sort(array);\n        }\n        return array;",
  "        ArrayList<Integer> result = new ArrayList<Integer>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        int first = array.get(0);\n\
    \        int last = array.get(array.size() - 1);\n        int sum = first + last;\n\
    \        if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      int firstIndex = array.get(0);\n        int lastIndex = array.get(array.size()\
    \ - 1);\n        int sum = firstIndex + lastIndex;\n        if (sum % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \  } else {\n            Collections.sort(array);\n        }\n        return array;",
  "        ArrayList<Integer> result = new ArrayList<Integer>();\n        int sum\
    \ = array.get(0) + array.get(array.size() - 1);\n        if (sum % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;",
  "        int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      if (array.size() == 0) {\n            return result;\n        }\n     \
    \   int first = array.get(0);\n        int last = array.get(array.size() - 1);\n\
    \        if ((first + last) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      ArrayList<Integer> copy = new ArrayList<>(array);\n        if (sum % 2\
    \ == 0) {\n            Collections.sort(copy, Collections.reverseOrder());\n \
    \       } else {\n            Collections.sort(copy);\n        }\n        return\
    \ copy;", "        int sum = array.get(0) + array.get(array.size() - 1);\n   \
    \     ArrayList<Integer> result = new ArrayList<Integer>();\n        if (sum %\
    \ 2 == 0) {\n            result = array.stream().sorted(Comparator.reverseOrder()).collect(Collectors.toCollection(ArrayList::new));\n\
    \        } else {\n            result = array.stream().sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    \        }\n        return result;", "        // Write your code here\n      \
    \  return array;", "        int first = array.get(0);\n        int last = array.get(array.size()\
    \ - 1);\n        int sum = first + last;\n        if (sum % 2 == 0) {\n      \
    \      Collections.sort(array, Collections.reverseOrder());\n        } else {\n\
    \            Collections.sort(array);\n        }\n        return array;", "  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      if (array.size() == 0) {\n            return result;\n        }\n     \
    \   int first = array.get(0);\n        int last = array.get(array.size() - 1);\n\
    \        if ((first + last) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<>();\n        int\
    \ first = array.get(0);\n        int last = array.get(array.size() - 1);\n   \
    \     int sum = first + last;\n        if (sum % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        // Write your code here\n       \
    \ int sum = array.get(0) + array.get(array.size() - 1);\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        if (sum % 2 == 0) {\n          \
    \  Collections.sort(array, Collections.reverseOrder());\n        } else {\n  \
    \          Collections.sort(array);\n        }\n        return array;", "    \
    \    int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum %\
    \ 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      ArrayList<Integer> result = new ArrayList<Integer>();\n        if (sum\
    \ % 2 == 0) {\n            for (int i = array.size() - 1; i >= 0; i--) {\n   \
    \             result.add(array.get(i));\n            }\n        } else {\n   \
    \         for (int i = 0; i < array.size(); i++) {\n                result.add(array.get(i));\n\
    \            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<>();\n        int first = array.get(0);\n        int\
    \ last = array.get(array.size() - 1);\n        int sum = first + last;\n     \
    \   if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<>();\n        int\
    \ sum = array.get(0) + array.get(array.size() - 1);\n        if (sum % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \  } else {\n            Collections.sort(array);\n        }\n        return array;",
  "        ArrayList<Integer> result = new ArrayList<Integer>();\n        int sum\
    \ = array.get(0) + array.get(array.size() - 1);\n        if (sum % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;",
  "        int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      if (array.size() == 0) {\n            return result;\n        }\n     \
    \   int first = array.get(0);\n        int last = array.get(array.size() - 1);\n\
    \        int sum = first + last;\n        if (sum % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int first = array.get(0);\n        int last = array.get(array.size()\
    \ - 1);\n        int sum = first + last;\n        if (sum % 2 == 0) {\n      \
    \      Collections.sort(array, Collections.reverseOrder());\n        } else {\n\
    \            Collections.sort(array);\n        }\n        return array;", "  \
    \      ArrayList<Integer> result = new ArrayList<Integer>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        int first = array.get(0);\n\
    \        int last = array.get(array.size() - 1);\n        int sum = first + last;\n\
    \        if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      if (array.size() == 0) {\n            return result;\n        }\n     \
    \   int first = array.get(0);\n        int last = array.get(array.size() - 1);\n\
    \        if ((first + last) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      if (array.size() == 0) {\n            return result;\n        }\n     \
    \   if (array.size() == 1) {\n            result.add(array.get(0));\n        \
    \    return result;\n        }\n        int first = array.get(0);\n        int\
    \ last = array.get(array.size() - 1);\n        if ((first + last) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;",
  "        int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      ArrayList<Integer> result = new ArrayList<Integer>();\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      ArrayList<Integer> result = new ArrayList<Integer>();\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      if (array.size() == 0) {\n            return result;\n        }\n     \
    \   int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum % 2\
    \ == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<>();\n        int\
    \ first = array.get(0);\n        int last = array.get(array.size() - 1);\n   \
    \     int sum = first + last;\n        if (sum % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      if (array.size() == 0) {\n            return result;\n        }\n     \
    \   int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum % 2\
    \ == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> sortedArray = new ArrayList<Integer>();\n\
    \        int firstIndex = array.get(0);\n        int lastIndex = array.get(array.size()\
    \ - 1);\n        int sum = firstIndex + lastIndex;\n        if (sum % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \  } else {\n            Collections.sort(array);\n        }\n        return array;",
  "        int sum = array.get(0) + array.get(array.size() - 1);\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        if (sum % 2 == 0) {\n          \
    \  for (int i = array.size() - 1; i >= 0; i--) {\n                result.add(array.get(i));\n\
    \            }\n        } else {\n            for (int i = 0; i < array.size();\
    \ i++) {\n                result.add(array.get(i));\n            }\n        }\n\
    \        return result;", "        int sum = array.get(0) + array.get(array.size()\
    \ - 1);\n        if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        int sum = array.get(0) + array.get(array.size() - 1);\n  \
    \      ArrayList<Integer> result = new ArrayList<Integer>();\n        if (sum\
    \ % 2 == 0) {\n            for (int i = array.size() - 1; i >= 0; i--) {\n   \
    \             result.add(array.get(i));\n            }\n        } else {\n   \
    \         for (int i = 0; i < array.size(); i++) {\n                result.add(array.get(i));\n\
    \            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int sum = array.get(0) + array.get(array.size()\
    \ - 1);\n        if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;"]
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"

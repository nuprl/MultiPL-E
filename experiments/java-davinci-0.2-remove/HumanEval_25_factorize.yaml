name: HumanEval_25_factorize
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Return list of prime factors of given integer in the order\
  \ from smallest to largest.\n    // Each of the factors should be listed number\
  \ of times corresponding to how many times it appeares in factorization.\n    //\
  \ Input number should be equal to the product of all factors\n    public static\
  \ ArrayList<Integer> factorize(int n) {\n"
tests: "return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static\
  \ void main(String[] args) {\n    assert(factorize((2)).equals((new ArrayList<Integer>(Arrays.asList((int)2)))));\n\
  \    assert(factorize((4)).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
  \ (int)2)))));\n    assert(factorize((8)).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
  \ (int)2, (int)2)))));\n    assert(factorize((57)).equals((new ArrayList<Integer>(Arrays.asList((int)3,\
  \ (int)19)))));\n    assert(factorize((3249)).equals((new ArrayList<Integer>(Arrays.asList((int)3,\
  \ (int)3, (int)19, (int)19)))));\n    assert(factorize((185193)).equals((new ArrayList<Integer>(Arrays.asList((int)3,\
  \ (int)3, (int)3, (int)19, (int)19, (int)19)))));\n    assert(factorize((20577)).equals((new\
  \ ArrayList<Integer>(Arrays.asList((int)3, (int)19, (int)19, (int)19)))));\n   \
  \ assert(factorize((18)).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
  \ (int)3)))));\n    }\n\n}\n"
completions: []
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"

completions:
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int d = 2;\n \
  \       while (n > 1) {\n            while (n % d == 0) {\n                factors.add(d);\n\
  \                n /= d;\n            }\n            d++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int d = 2;\n \
  \       while (n > 1) {\n            while (n % d == 0) {\n                factors.add(d);\n\
  \                n /= d;\n            }\n            d++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        while (n % 2 ==\
  \ 0) {\n            factors.add(2);\n            n /= 2;\n        }\n        for\
  \ (int i = 3; i * i <= n; i += 2) {\n            while (n % i == 0) {\n        \
  \        factors.add(i);\n                n /= i;\n            }\n        }\n  \
  \      if (n > 2) {\n            factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int d = 2;\n \
  \       while (n > 1) {\n            while (n % d == 0) {\n                factors.add(d);\n\
  \                n /= d;\n            }\n            d++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        if (n == 1) {\n\
  \            factors.add(1);\n            return factors;\n        }\n        int\
  \ i = 2;\n        while (n > 1) {\n            if (n % i == 0) {\n             \
  \   factors.add(i);\n                n /= i;\n            } else {\n           \
  \     i++;\n            }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            if (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            } else {\n                i++;\n         \
  \   }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> res = new ArrayList<>();\n        for (int i = 2; i\
  \ * i <= n; i++) {\n            while (n % i == 0) {\n                res.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       res.add(n);\n        }\n        return res;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n != 1) {\n            if (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            } else {\n                i++;\n         \
  \   }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int d = 2;\n \
  \       while (n > 1) {\n            while (n % d == 0) {\n                factors.add(d);\n\
  \                n /= d;\n            }\n            d++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int d = 2;\n \
  \       while (n > 1) {\n            while (n % d == 0) {\n                factors.add(d);\n\
  \                n /= d;\n            }\n            d++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int d = 2;\n \
  \       while (n > 1) {\n            while (n % d == 0) {\n                factors.add(d);\n\
  \                n /= d;\n            }\n            d++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int d = 2;\n \
  \       while (n > 1) {\n            while (n % d == 0) {\n                factors.add(d);\n\
  \                n /= d;\n            }\n            d++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> res = new ArrayList<>();\n        for (int i = 2; i\
  \ * i <= n; i++) {\n            while (n % i == 0) {\n                res.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       res.add(n);\n        }\n        return res;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int d = 2;\n \
  \       while (n > 1) {\n            while (n % d == 0) {\n                factors.add(d);\n\
  \                n /= d;\n            }\n            d++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int d = 2;\n \
  \       while (n > 1) {\n            while (n % d == 0) {\n                factors.add(d);\n\
  \                n /= d;\n            }\n            d++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            if (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            } else {\n                i++;\n         \
  \   }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int d = 2;\n \
  \       while (n > 1) {\n            while (n % d == 0) {\n                factors.add(d);\n\
  \                n /= d;\n            }\n            d++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i <= n; i++) {\n            if (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n                i--;\n            }\n        }\n     \
  \   return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> res = new ArrayList<>();\n        for (int i = 2; i\
  \ * i <= n; i++) {\n            while (n % i == 0) {\n                res.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       res.add(n);\n        }\n        return res;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            if (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            } else {\n                i++;\n         \
  \   }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> result = new ArrayList<>();\n        int i = 2;\n  \
  \      while (n > 1) {\n            while (n % i == 0) {\n                result.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ result;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int d = 2;\n \
  \       while (n > 1) {\n            while (n % d == 0) {\n                factors.add(d);\n\
  \                n /= d;\n            }\n            d += 1;\n        }\n      \
  \  return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int d = 2;\n \
  \       while (n > 1) {\n            while (n % d == 0) {\n                factors.add(d);\n\
  \                n /= d;\n            }\n            d += 1;\n        }\n      \
  \  return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> result = new ArrayList<>();\n        int i = 2;\n  \
  \      while (n > 1) {\n            while (n % i == 0) {\n                result.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ result;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int d = 2;\n \
  \       while (n > 1) {\n            while (n % d == 0) {\n                factors.add(d);\n\
  \                n /= d;\n            }\n            d++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            if (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            } else {\n                i++;\n         \
  \   }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> result = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                result.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       result.add(n);\n        }\n        return result;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> result = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                result.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       result.add(n);\n        }\n        return result;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> res = new ArrayList<>();\n        for (int i = 2; i\
  \ * i <= n; i++) {\n            while (n % i == 0) {\n                res.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       res.add(n);\n        }\n        return res;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int d = 2;\n \
  \       while (n > 1) {\n            while (n % d == 0) {\n                factors.add(d);\n\
  \                n /= d;\n            }\n            d++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int d = 2;\n \
  \       while (n > 1) {\n            while (n % d == 0) {\n                factors.add(d);\n\
  \                n /= d;\n            }\n            d++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int d = 2;\n \
  \       while (n > 1) {\n            while (n % d == 0) {\n                factors.add(d);\n\
  \                n /= d;\n            }\n            d++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int d = 2;\n \
  \       while (n > 1) {\n            while (n % d == 0) {\n                factors.add(d);\n\
  \                n /= d;\n            }\n            d++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int i = 2;\n \
  \       while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n            i++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        for (int i = 2;\
  \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
  \                n /= i;\n            }\n        }\n        if (n > 1) {\n     \
  \       factors.add(n);\n        }\n        return factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int d = 2;\n \
  \       while (n > 1) {\n            while (n % d == 0) {\n                factors.add(d);\n\
  \                n /= d;\n            }\n            d++;\n        }\n        return\
  \ factors;"
- "        ArrayList<Integer> factors = new ArrayList<>();\n        int d = 2;\n \
  \       while (n > 1) {\n            while (n % d == 0) {\n                factors.add(d);\n\
  \                n /= d;\n            }\n            d++;\n        }\n        return\
  \ factors;"
language: java
name: HumanEval_25_factorize
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Return list of prime factors of given integer in the order\
  \ from smallest to largest.\n    // Each of the factors should be listed number\
  \ of times corresponding to how many times it appeares in factorization.\n    //\
  \ Input number should be equal to the product of all factors\n    public static\
  \ ArrayList<Integer> factorize(int n) {\n"
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- '    }

  }'
- "\n    }\n"
tests: "}\n    public static void main(String[] args) {\n    assert(factorize((2)).equals((new\
  \ ArrayList<Integer>(Arrays.asList((int)2)))));\n    assert(factorize((4)).equals((new\
  \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(factorize((8)).equals((new\
  \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)2)))));\n    assert(factorize((57)).equals((new\
  \ ArrayList<Integer>(Arrays.asList((int)3, (int)19)))));\n    assert(factorize((3249)).equals((new\
  \ ArrayList<Integer>(Arrays.asList((int)3, (int)3, (int)19, (int)19)))));\n    assert(factorize((185193)).equals((new\
  \ ArrayList<Integer>(Arrays.asList((int)3, (int)3, (int)3, (int)19, (int)19, (int)19)))));\n\
  \    assert(factorize((20577)).equals((new ArrayList<Integer>(Arrays.asList((int)3,\
  \ (int)19, (int)19, (int)19)))));\n    assert(factorize((18)).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
  \ (int)3, (int)3)))));\n    }\n\n}\n"

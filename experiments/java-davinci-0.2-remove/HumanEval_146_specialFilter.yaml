name: HumanEval_146_specialFilter
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Write a function that takes an array of numbers as input\
  \ and returns \n    // the number of elements in the array that are greater than\
  \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n\
  \    // For example:\n    public static int specialFilter(ArrayList<Integer> nums)\
  \ {\n"
tests: "return 0;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
  \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
  \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
  \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
  \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
  \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
  \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
  \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
  \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
  \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
completions: ["        int count = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            if (nums.get(i) > 10) {\n                String num = Integer.toString(nums.get(i));\n\
    \                if (num.charAt(0) % 2 != 0 && num.charAt(num.length() - 1) %\
    \ 2 != 0) {\n                    count++;\n                }\n            }\n\
    \        }\n        return count;", "        // your code here\n        return\
    \ 0;", "        int count = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            if (nums.get(i) > 10) {\n                String num = Integer.toString(nums.get(i));\n\
    \                if (num.charAt(0) % 2 != 0 && num.charAt(num.length() - 1) %\
    \ 2 != 0) {\n                    count++;\n                }\n            }\n\
    \        }\n        return count;", '        return (int) nums.stream().filter(n
    -> n > 10 && isFirstAndLastDigitOdd(n)).count();', "        return nums.stream()\n\
    \            .filter(n -> n > 10)\n            .filter(n -> n % 2 == 1)\n    \
    \        .filter(n -> n / 10 % 2 == 1)\n            .filter(n -> n % 10 % 2 ==\
    \ 1)\n            .collect(Collectors.toList())\n            .size();", "    \
    \    return nums.stream()\n            .filter(x -> x > 10)\n            .filter(x\
    \ -> x % 2 == 1)\n            .filter(x -> x / 10 % 2 == 1)\n            .filter(x\
    \ -> x % 10 % 2 == 1)\n            .collect(Collectors.toList())\n           \
    \ .size();", "        // TODO: Implement this function\n        return 0;", '        return
    0;', "        return nums.stream()\n            .filter(n -> n > 10)\n       \
    \     .filter(n -> n % 2 == 1)\n            .filter(n -> n / 10 % 2 == 1)\n  \
    \          .filter(n -> n % 10 % 2 == 1)\n            .collect(Collectors.toList())\n\
    \            .size();", "        return nums.stream()\n            .filter(n ->\
    \ n > 10)\n            .filter(n -> n % 2 == 1)\n            .filter(n -> n /\
    \ 10 % 2 == 1)\n            .filter(n -> n % 10 % 2 == 1)\n            .collect(Collectors.toList())\n\
    \            .size();", "        int count = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            int num = nums.get(i);\n            if (num > 10) {\n  \
    \              int first = num / 10;\n                int last = num % 10;\n \
    \               if (first % 2 != 0 && last % 2 != 0) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  int count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n         \
    \   if (nums.get(i) > 10) {\n                int first = nums.get(i) / 10;\n \
    \               int last = nums.get(i) % 10;\n                if (first % 2 !=\
    \ 0 && last % 2 != 0) {\n                    count++;\n                }\n   \
    \         }\n        }\n        return count;", "        int count = 0;\n    \
    \    for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) > 10)\
    \ {\n                String num = Integer.toString(nums.get(i));\n           \
    \     if (num.charAt(0) % 2 != 0 && num.charAt(num.length() - 1) % 2 != 0) {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \       return count;", "        return nums.stream()\n            .filter(x ->\
    \ x > 10)\n            .filter(x -> x % 2 == 1)\n            .filter(x -> x %\
    \ 10 == 1 || x % 10 == 3 || x % 10 == 5 || x % 10 == 7 || x % 10 == 9)\n     \
    \       .mapToInt(x -> 1)\n            .sum();", "        return nums.stream()\n\
    \            .filter(n -> n > 10)\n            .filter(n -> n % 2 == 1)\n    \
    \        .filter(n -> n / 10 % 2 == 1)\n            .filter(n -> n % 10 % 2 ==\
    \ 1)\n            .collect(Collectors.toList())\n            .size();", "    \
    \    int count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n       \
    \     int num = nums.get(i);\n            if (num > 10) {\n                int\
    \ firstDigit = num % 10;\n                int lastDigit = num / 10;\n        \
    \        if (firstDigit % 2 != 0 && lastDigit % 2 != 0) {\n                  \
    \  count++;\n                }\n            }\n        }\n        return count;",
  "        // Write your code here\n        return 0;", "        int count = 0;\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            int num = nums.get(i);\n\
    \            if (num > 10) {\n                int first = num % 10;\n        \
    \        int last = num / 10;\n                if (first % 2 != 0 && last % 2\
    \ != 0) {\n                    count++;\n                }\n            }\n  \
    \      }\n        return count;", "        // Write your code here\n        int\
    \ count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            if\
    \ (nums.get(i) > 10) {\n                String num = Integer.toString(nums.get(i));\n\
    \                if (num.length() > 1) {\n                    if (num.charAt(0)\
    \ % 2 != 0 && num.charAt(num.length() - 1) % 2 != 0) {\n                     \
    \   count++;\n                    }\n                }\n            }\n      \
    \  }\n        return count;", "        int count = 0;\n        for (int i = 0;\
    \ i < nums.size(); i++) {\n            if (nums.get(i) > 10) {\n             \
    \   String num = Integer.toString(nums.get(i));\n                if (num.charAt(0)\
    \ % 2 != 0 && num.charAt(num.length() - 1) % 2 != 0) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  return nums.stream()\n            .filter(n -> n > 10)\n            .filter(n\
    \ -> n % 2 == 1)\n            .filter(n -> {\n                int first = n;\n\
    \                while (first >= 10) {\n                    first /= 10;\n   \
    \             }\n                return first % 2 == 1;\n            })\n    \
    \        .collect(Collectors.toList())\n            .size();", "        int count\
    \ = 0;\n        for (int num : nums) {\n            if (num > 10 && isFirstAndLastDigitOdd(num))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        int count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n     \
    \       int num = nums.get(i);\n            if (num > 10) {\n                int\
    \ first = num / 10;\n                int last = num % 10;\n                if\
    \ (first % 2 != 0 && last % 2 != 0) {\n                    count++;\n        \
    \        }\n            }\n        }\n        return count;", '        return
    0;', "        // TODO: Implement this function\n        return 0;", "        int\
    \ count = 0;\n        for (int num : nums) {\n            if (num > 10 && num\
    \ % 2 == 1 && (num / 10) % 2 == 1) {\n                count++;\n            }\n\
    \        }\n        return count;", "        return nums.stream()\n          \
    \  .filter(n -> n > 10)\n            .filter(n -> n % 2 == 1)\n            .filter(n\
    \ -> n / 10 % 2 == 1)\n            .filter(n -> n % 10 == 1 || n % 10 == 3 ||\
    \ n % 10 == 5 || n % 10 == 7 || n % 10 == 9)\n            .collect(Collectors.toList())\n\
    \            .size();", "        return (int) nums.stream().filter(x -> x > 10).filter(x\
    \ -> {\n            int first = x / 10;\n            int last = x % 10;\n    \
    \        return first % 2 == 1 && last % 2 == 1;\n        }).count();", "    \
    \    int count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n       \
    \     int num = nums.get(i);\n            if (num > 10) {\n                int\
    \ firstDigit = num % 10;\n                int lastDigit = num / 10;\n        \
    \        if (firstDigit % 2 != 0 && lastDigit % 2 != 0) {\n                  \
    \  count++;\n                }\n            }\n        }\n        return count;",
  "        int count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n     \
    \       if (nums.get(i) > 10) {\n                int first = nums.get(i) / 10;\n\
    \                int last = nums.get(i) % 10;\n                if (first % 2 !=\
    \ 0 && last % 2 != 0) {\n                    count++;\n                }\n   \
    \         }\n        }\n        return count;", "        int count = 0;\n    \
    \    for (int num : nums) {\n            if (num > 10 && num % 2 == 1 && num /\
    \ 10 % 2 == 1) {\n                count++;\n            }\n        }\n       \
    \ return count;", "        return nums.stream()\n            .filter(n -> n >\
    \ 10)\n            .filter(n -> n % 2 == 1)\n            .filter(n -> n / 10 %\
    \ 2 == 1)\n            .filter(n -> n % 10 % 2 == 1)\n            .collect(Collectors.toList())\n\
    \            .size();", '        return (int) nums.stream().filter(x -> x > 10
    && x % 2 == 1 && x % 10 == 1).count();', "        int count = 0;\n        for\
    \ (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) > 10) {\n \
    \               int firstDigit = nums.get(i) / 10;\n                int lastDigit\
    \ = nums.get(i) % 10;\n                if (firstDigit % 2 != 0 && lastDigit %\
    \ 2 != 0) {\n                    count++;\n                }\n            }\n\
    \        }\n        return count;", '        return (int) nums.stream().filter(x
    -> x > 10 && x % 2 == 1 && (x % 10) % 2 == 1).count();', "        return nums.stream()\n\
    \            .filter(n -> n > 10)\n            .filter(n -> n % 2 == 1)\n    \
    \        .filter(n -> n / 10 % 2 == 1)\n            .filter(n -> n % 10 % 2 ==\
    \ 1)\n            .collect(Collectors.toList())\n            .size();", "    \
    \    // Write your code here\n        int count = 0;\n        for (int i = 0;\
    \ i < nums.size(); i++) {\n            if (nums.get(i) > 10) {\n             \
    \   int first = nums.get(i) / 10;\n                int last = nums.get(i) % 10;\n\
    \                if (first % 2 != 0 && last % 2 != 0) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  return nums.stream()\n            .filter(n -> n > 10)\n            .filter(n\
    \ -> n % 2 == 1)\n            .filter(n -> n % 10 == 1 || n % 10 == 3 || n % 10\
    \ == 5 || n % 10 == 7 || n % 10 == 9)\n            .collect(Collectors.toList())\n\
    \            .size();", "        int count = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            if (nums.get(i) > 10) {\n                int first = nums.get(i)\
    \ / 10;\n                int last = nums.get(i) % 10;\n                if (first\
    \ % 2 != 0 && last % 2 != 0) {\n                    count++;\n               \
    \ }\n            }\n        }\n        return count;", "        // TODO: Write\
    \ - Your - Code\n        int count = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            if (nums.get(i) > 10) {\n                int first = nums.get(i)\
    \ / 10;\n                int last = nums.get(i) % 10;\n                if (first\
    \ % 2 != 0 && last % 2 != 0) {\n                    count++;\n               \
    \ }\n            }\n        }\n        return count;", "        int count = 0;\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i)\
    \ > 10) {\n                int firstDigit = nums.get(i) / 10;\n              \
    \  int lastDigit = nums.get(i) % 10;\n                if (firstDigit % 2 != 0\
    \ && lastDigit % 2 != 0) {\n                    count++;\n                }\n\
    \            }\n        }\n        return count;", "        int count = 0;\n \
    \       for (int num : nums) {\n            if (num > 10 && num % 2 == 1 && num\
    \ % 10 == 1) {\n                count++;\n            }\n        }\n        return\
    \ count;", "        return nums.stream()\n            .filter(n -> n > 10)\n \
    \           .filter(n -> {\n                String s = Integer.toString(n);\n\
    \                return (s.charAt(0) - '0') % 2 == 1 && (s.charAt(s.length() -\
    \ 1) - '0') % 2 == 1;\n            })\n            .collect(Collectors.toList())\n\
    \            .size();", "        int count = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            if (nums.get(i) > 10) {\n                String s = Integer.toString(nums.get(i));\n\
    \                if (s.charAt(0) % 2 != 0 && s.charAt(s.length() - 1) % 2 != 0)\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        int count = 0;\n        for (int num : nums)\
    \ {\n            if (num > 10 && num % 2 == 1 && num / 10 % 2 == 1) {\n      \
    \          count++;\n            }\n        }\n        return count;", "     \
    \   // Write your code here\n        return 0;", "        return nums.stream()\n\
    \            .filter(x -> x > 10)\n            .filter(x -> x % 2 == 1)\n    \
    \        .filter(x -> (x / 10) % 2 == 1)\n            .filter(x -> x % 10 == 1\
    \ || x % 10 == 3 || x % 10 == 5 || x % 10 == 7 || x % 10 == 9)\n            .collect(Collectors.toList())\n\
    \            .size();", '        return 0;', '        return (int) nums.stream().filter(x
    -> x > 10 && (x % 10) % 2 != 0 && (x / 10) % 2 != 0).count();', "        return\
    \ (int) nums.stream().filter(n -> n > 10).filter(n -> {\n            int firstDigit\
    \ = n % 10;\n            int lastDigit = n / (int) Math.pow(10, Math.floor(Math.log10(n)));\n\
    \            return firstDigit % 2 == 1 && lastDigit % 2 == 1;\n        }).count();",
  "        int count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n     \
    \       int num = nums.get(i);\n            if (num > 10) {\n                int\
    \ firstDigit = num % 10;\n                int lastDigit = num / 10;\n        \
    \        if (firstDigit % 2 != 0 && lastDigit % 2 != 0) {\n                  \
    \  count++;\n                }\n            }\n        }\n        return count;",
  "        int count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n     \
    \       if (nums.get(i) > 10) {\n                int firstDigit = nums.get(i)\
    \ / 10;\n                int lastDigit = nums.get(i) % 10;\n                if\
    \ (firstDigit % 2 != 0 && lastDigit % 2 != 0) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", '        return
    (int) nums.stream().filter(n -> n > 10 && n % 2 == 1 && n / 10 % 2 == 1).count();',
  "        return nums.stream()\n            .filter(n -> n > 10)\n            .filter(n\
    \ -> {\n                int first = n / 10;\n                int last = n % 10;\n\
    \                return first % 2 == 1 && last % 2 == 1;\n            })\n   \
    \         .collect(Collectors.toList())\n            .size();", "        return\
    \ nums.stream()\n            .filter(n -> n > 10)\n            .filter(n -> n\
    \ % 2 == 1)\n            .filter(n -> n / 10 % 2 == 1)\n            .filter(n\
    \ -> n % 10 % 2 == 1)\n            .collect(Collectors.toList())\n           \
    \ .size();", "        int count = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            int num = nums.get(i);\n            if (num > 10) {\n  \
    \              int firstDigit = num % 10;\n                int lastDigit = num\
    \ / 10;\n                if (firstDigit % 2 != 0 && lastDigit % 2 != 0) {\n  \
    \                  count++;\n                }\n            }\n        }\n   \
    \     return count;", "        int count = 0;\n        for (int num : nums) {\n\
    \            if (num > 10 && num % 2 == 1 && num % 10 == 1) {\n              \
    \  count++;\n            }\n        }\n        return count;", "        int count\
    \ = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i)\
    \ > 10) {\n                int firstDigit = nums.get(i) / 10;\n              \
    \  int lastDigit = nums.get(i) % 10;\n                if (firstDigit % 2 != 0\
    \ && lastDigit % 2 != 0) {\n                    count++;\n                }\n\
    \            }\n        }\n        return count;", "        return nums.stream()\n\
    \            .filter(n -> n > 10)\n            .filter(n -> n % 2 == 1)\n    \
    \        .filter(n -> n % 10 == 1 || n % 10 == 3 || n % 10 == 5 || n % 10 == 7\
    \ || n % 10 == 9)\n            .collect(Collectors.toList())\n            .size();",
  "        return nums.stream()\n            .filter(x -> x > 10)\n            .filter(x\
    \ -> x % 2 == 1)\n            .filter(x -> x / 10 % 2 == 1)\n            .filter(x\
    \ -> x % 10 % 2 == 1)\n            .collect(Collectors.toList())\n           \
    \ .size();", '        return (int) nums.stream().filter(x -> x > 10 && x % 2 ==
    1 && x / 10 % 2 == 1).count();', "        // TODO: implement this function\n \
    \       return 0;", "        return nums.stream()\n            .filter(n -> n\
    \ > 10)\n            .filter(n -> isOdd(n % 10))\n            .filter(n -> isOdd(n\
    \ / (int)Math.pow(10, (int)Math.log10(n))))\n            .collect(Collectors.toList())\n\
    \            .size();", "        return nums.stream()\n            .filter(n ->\
    \ n > 10)\n            .filter(n -> n % 2 == 1)\n            .filter(n -> n /\
    \ 10 % 2 == 1)\n            .filter(n -> n % 10 == 1 || n % 10 == 3 || n % 10\
    \ == 5 || n % 10 == 7 || n % 10 == 9)\n            .collect(Collectors.toList())\n\
    \            .size();", "        int count = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            int num = nums.get(i);\n            if (num > 10) {\n  \
    \              int firstDigit = num % 10;\n                int lastDigit = num\
    \ / 10;\n                if (firstDigit % 2 != 0 && lastDigit % 2 != 0) {\n  \
    \                  count++;\n                }\n            }\n        }\n   \
    \     return count;", "        int count = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            int num = nums.get(i);\n            if (num > 10) {\n  \
    \              int first = num / 10;\n                int last = num % 10;\n \
    \               if (first % 2 != 0 && last % 2 != 0) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  // your code here\n        int count = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            int num = nums.get(i);\n            if (num > 10) {\n  \
    \              int first = num / 10;\n                int last = num % 10;\n \
    \               if (first % 2 != 0 && last % 2 != 0) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  // Write your code here\n        return 0;", "        int count = 0;\n    \
    \    for (int i = 0; i < nums.size(); i++) {\n            int num = nums.get(i);\n\
    \            if (num > 10) {\n                int first = num % 10;\n        \
    \        int last = num / 10;\n                if (first % 2 != 0 && last % 2\
    \ != 0) {\n                    count++;\n                }\n            }\n  \
    \      }\n        return count;", "        int count = 0;\n        for (int i\
    \ = 0; i < nums.size(); i++) {\n            int num = nums.get(i);\n         \
    \   if (num > 10) {\n                int first = num % 10;\n                int\
    \ last = num / 10;\n                if (first % 2 != 0 && last % 2 != 0) {\n \
    \                   count++;\n                }\n            }\n        }\n  \
    \      return count;", "        // Write your code here\n        return 0;", " \
    \       int count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        if (nums.get(i) > 10) {\n                int first = nums.get(i) / 10;\n\
    \                int last = nums.get(i) % 10;\n                if (first % 2 !=\
    \ 0 && last % 2 != 0) {\n                    count++;\n                }\n   \
    \         }\n        }\n        return count;", "        int count = 0;\n    \
    \    for (int i = 0; i < nums.size(); i++) {\n            int num = nums.get(i);\n\
    \            if (num > 10) {\n                int firstDigit = num % 10;\n   \
    \             int lastDigit = num / 10;\n                if (firstDigit % 2 !=\
    \ 0 && lastDigit % 2 != 0) {\n                    count++;\n                }\n\
    \            }\n        }\n        return count;", "        return nums.stream()\n\
    \            .filter(n -> n > 10)\n            .filter(n -> n % 2 == 1)\n    \
    \        .filter(n -> n % 10 == 1 || n % 10 == 3 || n % 10 == 5 || n % 10 == 7\
    \ || n % 10 == 9)\n            .collect(Collectors.toList())\n            .size();",
  '        return (int) nums.stream().filter(n -> n > 10 && isFirstAndLastDigitOdd(n)).count();',
  "        int count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n     \
    \       int num = nums.get(i);\n            if (num > 10) {\n                int\
    \ firstDigit = num % 10;\n                int lastDigit = num / 10;\n        \
    \        if (firstDigit % 2 != 0 && lastDigit % 2 != 0) {\n                  \
    \  count++;\n                }\n            }\n        }\n        return count;",
  '        return (int) nums.stream().filter(x -> x > 10 && x % 2 == 1 && x / 10 %
    2 == 1).count();', "        // TODO: implement this function\n        return 0;",
  "        int count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n     \
    \       if (nums.get(i) > 10) {\n                int first = nums.get(i) / 10;\n\
    \                int last = nums.get(i) % 10;\n                if (first % 2 !=\
    \ 0 && last % 2 != 0) {\n                    count++;\n                }\n   \
    \         }\n        }\n        return count;", "        // TODO: Implement this\
    \ function\n        return 0;", "        // TODO: Implement this function\n  \
    \      return 0;", "        // Write your code here\n        return 0;", "   \
    \     int count = 0;\n        for (int num : nums) {\n            if (num > 10\
    \ && isFirstDigitOdd(num) && isLastDigitOdd(num)) {\n                count++;\n\
    \            }\n        }\n        return count;", "        return nums.stream()\n\
    \            .filter(n -> n > 10)\n            .filter(n -> n % 2 == 1)\n    \
    \        .filter(n -> n / 10 % 2 == 1)\n            .filter(n -> n % 10 % 2 ==\
    \ 1)\n            .collect(Collectors.toList())\n            .size();", "    \
    \    int count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n       \
    \     int num = nums.get(i);\n            if (num > 10) {\n                String\
    \ s = Integer.toString(num);\n                if (s.length() > 1) {\n        \
    \            int first = Integer.parseInt(s.substring(0, 1));\n              \
    \      int last = Integer.parseInt(s.substring(s.length() - 1));\n           \
    \         if (first % 2 != 0 && last % 2 != 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;", '        return (int) nums.stream().filter(x -> x > 10 && x % 2 ==
    1 && x % 10 == 1).count();', "        // TODO: Write your code here\n        return\
    \ 0;", "        int count = 0;\n        for (int num : nums) {\n            if\
    \ (num > 10 && isFirstAndLastDigitOdd(num)) {\n                count++;\n    \
    \        }\n        }\n        return count;", '        return (int) nums.stream().filter(n
    -> n > 10 && isFirstAndLastDigitOdd(n)).count();', "        int count = 0;\n \
    \       for (int num : nums) {\n            if (num > 10 && isFirstAndLastDigitOdd(num))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        int count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n     \
    \       if (nums.get(i) > 10) {\n                int firstDigit = nums.get(i)\
    \ / 10;\n                int lastDigit = nums.get(i) % 10;\n                if\
    \ (firstDigit % 2 != 0 && lastDigit % 2 != 0) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", '        return
    (int) nums.stream().filter(x -> x > 10 && x % 2 == 1 && x % 10 == 1).count();',
  "        int count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n     \
    \       int num = nums.get(i);\n            if (num > 10) {\n                int\
    \ firstDigit = num % 10;\n                int lastDigit = num / 10;\n        \
    \        if (firstDigit % 2 != 0 && lastDigit % 2 != 0) {\n                  \
    \  count++;\n                }\n            }\n        }\n        return count;",
  "        int count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n     \
    \       int num = nums.get(i);\n            if (num > 10) {\n                int\
    \ first = num % 10;\n                int last = num / 10;\n                if\
    \ (first % 2 != 0 && last % 2 != 0) {\n                    count++;\n        \
    \        }\n            }\n        }\n        return count;", '        return
    (int) nums.stream().filter(x -> x > 10 && isFirstAndLastDigitOdd(x)).count();',
  "        // Your code here\n        return 0;", "        return nums.stream()\n\
    \            .filter(n -> n > 10)\n            .filter(n -> n % 2 == 1)\n    \
    \        .filter(n -> n % 10 == 1 || n % 10 == 3 || n % 10 == 5 || n % 10 == 7\
    \ || n % 10 == 9)\n            .collect(Collectors.toList())\n            .size();",
  "        return nums.stream()\n            .filter(n -> n > 10)\n            .filter(n\
    \ -> n % 2 == 1)\n            .filter(n -> n / 10 % 2 == 1)\n            .filter(n\
    \ -> n % 10 % 2 == 1)\n            .collect(Collectors.toList())\n           \
    \ .size();", "        int count = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            int num = nums.get(i);\n            if (num > 10) {\n  \
    \              int firstDigit = num % 10;\n                int lastDigit = num\
    \ / 10;\n                if (firstDigit % 2 != 0 && lastDigit % 2 != 0) {\n  \
    \                  count++;\n                }\n            }\n        }\n   \
    \     return count;", "        return nums.stream()\n            .filter(n ->\
    \ n > 10)\n            .filter(n -> {\n                int first = n % 10;\n \
    \               int last = n / 10;\n                return first % 2 == 1 && last\
    \ % 2 == 1;\n            })\n            .collect(Collectors.toList())\n     \
    \       .size();", "        return nums.stream()\n            .filter(n -> n >\
    \ 10)\n            .filter(n -> n % 2 == 1)\n            .filter(n -> n / 10 %\
    \ 2 == 1)\n            .filter(n -> n % 10 % 2 == 1)\n            .collect(Collectors.toList())\n\
    \            .size();", "        // TODO: Write - Your - Code\n        return\
    \ 0;", "        return nums.stream()\n            .filter(n -> n > 10)\n     \
    \       .filter(n -> n % 2 == 1)\n            .filter(n -> n % 10 == 1 || n %\
    \ 10 == 3 || n % 10 == 5 || n % 10 == 7 || n % 10 == 9)\n            .collect(Collectors.toList())\n\
    \            .size();", "        // TODO: implement this function\n        return\
    \ 0;", "        return nums.stream()\n            .filter(n -> n > 10)\n     \
    \       .filter(n -> n % 2 == 1)\n            .filter(n -> n / 10 % 2 == 1)\n\
    \            .filter(n -> n % 10 % 2 == 1)\n            .collect(Collectors.toList())\n\
    \            .size();", "        return nums.stream()\n            .filter(n ->\
    \ n > 10)\n            .filter(n -> n % 2 == 1)\n            .filter(n -> n %\
    \ 10 == 1 || n % 10 == 3 || n % 10 == 5 || n % 10 == 7 || n % 10 == 9)\n     \
    \       .collect(Collectors.toList())\n            .size();", "        int count\
    \ = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            int num =\
    \ nums.get(i);\n            if (num > 10) {\n                int first = num /\
    \ 10;\n                int last = num % 10;\n                if (first % 2 !=\
    \ 0 && last % 2 != 0) {\n                    count++;\n                }\n   \
    \         }\n        }\n        return count;", "        int count = 0;\n    \
    \    for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) > 10)\
    \ {\n                int firstDigit = nums.get(i) / 10;\n                int lastDigit\
    \ = nums.get(i) % 10;\n                if (firstDigit % 2 != 0 && lastDigit %\
    \ 2 != 0) {\n                    count++;\n                }\n            }\n\
    \        }\n        return count;", "        return nums.stream()\n          \
    \  .filter(n -> n > 10)\n            .filter(n -> n % 2 == 1)\n            .filter(n\
    \ -> n / 10 % 2 == 1)\n            .filter(n -> n % 10 % 2 == 1)\n           \
    \ .collect(Collectors.toList())\n            .size();", "        // your code\
    \ here\n        return 0;", '        return (int) nums.stream().filter(n -> n
    > 10 && n % 2 == 1 && n % 10 == 1).count();', "        // Write your code here\n\
    \        return 0;", "        int count = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            int num = nums.get(i);\n            if (num > 10) {\n  \
    \              int firstDigit = num % 10;\n                int lastDigit = num\
    \ / 10;\n                if (firstDigit % 2 != 0 && lastDigit % 2 != 0) {\n  \
    \                  count++;\n                }\n            }\n        }\n   \
    \     return count;", "        // Your code here\n        return 0;", "      \
    \  int count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n         \
    \   int num = nums.get(i);\n            if (num > 10) {\n                int firstDigit\
    \ = num % 10;\n                int lastDigit = num / 10;\n                if (firstDigit\
    \ % 2 != 0 && lastDigit % 2 != 0) {\n                    count++;\n          \
    \      }\n            }\n        }\n        return count;", '        return (int)
    nums.stream().filter(x -> x > 10 && x % 2 == 1 && x % 10 == 1).count();', "  \
    \      int count = 0;\n        for (int num : nums) {\n            if (num > 10\
    \ && isFirstAndLastDigitOdd(num)) {\n                count++;\n            }\n\
    \        }\n        return count;", "        int count = 0;\n        for (int\
    \ i = 0; i < nums.size(); i++) {\n            if (nums.get(i) > 10) {\n      \
    \          String num = Integer.toString(nums.get(i));\n                if (num.charAt(0)\
    \ % 2 != 0 && num.charAt(num.length() - 1) % 2 != 0) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  // your code here\n        int count = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            if (nums.get(i) > 10) {\n                String s = Integer.toString(nums.get(i));\n\
    \                if (s.length() > 1) {\n                    if (s.charAt(0) %\
    \ 2 != 0 && s.charAt(s.length() - 1) % 2 != 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;", "        return nums.stream()\n            .filter(n -> n > 10)\n \
    \           .filter(n -> n % 2 == 1)\n            .filter(n -> n / 10 % 2 == 1)\n\
    \            .filter(n -> n % 10 == 1 || n % 10 == 3 || n % 10 == 5 || n % 10\
    \ == 7 || n % 10 == 9)\n            .collect(Collectors.toList())\n          \
    \  .size();", "        return (int) nums.stream().filter(num -> num > 10).filter(num\
    \ -> {\n            int firstDigit = num % 10;\n            int lastDigit = num\
    \ / 10;\n            return firstDigit % 2 == 1 && lastDigit % 2 == 1;\n     \
    \   }).count();", "        return nums.stream()\n            .filter(n -> n >\
    \ 10)\n            .filter(n -> n % 2 == 1)\n            .filter(n -> n / 10 %\
    \ 2 == 1)\n            .filter(n -> n % 10 % 2 == 1)\n            .collect(Collectors.toList())\n\
    \            .size();", '        return (int) nums.stream().filter(n -> n > 10
    && isOdd(n) && isOdd(n % 10)).count();', '        return (int) nums.stream().filter(n
    -> n > 10 && n % 2 == 1 && n / 10 % 2 == 1).count();', "        int count = 0;\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            int num = nums.get(i);\n\
    \            if (num > 10) {\n                int first = num % 10;\n        \
    \        int last = num / 10;\n                if (first % 2 != 0 && last % 2\
    \ != 0) {\n                    count++;\n                }\n            }\n  \
    \      }\n        return count;", '        return (int) nums.stream().filter(x
    -> x > 10 && x % 2 == 1 && (x / 10) % 2 == 1 && x % 10 == 1).count();', "    \
    \    int count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n       \
    \     int num = nums.get(i);\n            if (num > 10) {\n                int\
    \ firstDigit = num % 10;\n                int lastDigit = num / 10;\n        \
    \        if (firstDigit % 2 != 0 && lastDigit % 2 != 0) {\n                  \
    \  count++;\n                }\n            }\n        }\n        return count;",
  "        int count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n     \
    \       if (nums.get(i) > 10) {\n                int first = nums.get(i) / 10;\n\
    \                int last = nums.get(i) % 10;\n                if (first % 2 !=\
    \ 0 && last % 2 != 0) {\n                    count++;\n                }\n   \
    \         }\n        }\n        return count;", "        int count = 0;\n    \
    \    for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) > 10)\
    \ {\n                String s = Integer.toString(nums.get(i));\n             \
    \   if (s.length() > 1) {\n                    if (Character.getNumericValue(s.charAt(0))\
    \ % 2 != 0 && Character.getNumericValue(s.charAt(s.length() - 1)) % 2 != 0) {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;", "        return nums.stream()\n\
    \            .filter(n -> n > 10)\n            .filter(n -> n % 2 == 1)\n    \
    \        .filter(n -> n / 10 % 2 == 1)\n            .filter(n -> n % 10 % 2 ==\
    \ 1)\n            .collect(Collectors.toList())\n            .size();", "    \
    \    // Write your code here\n        int count = 0;\n        for (int i = 0;\
    \ i < nums.size(); i++) {\n            if (nums.get(i) > 10) {\n             \
    \   String s = nums.get(i).toString();\n                if (s.charAt(0) % 2 !=\
    \ 0 && s.charAt(s.length() - 1) % 2 != 0) {\n                    count++;\n  \
    \              }\n            }\n        }\n        return count;", "        int\
    \ count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            int\
    \ num = nums.get(i);\n            if (num > 10) {\n                int first =\
    \ num % 10;\n                int last = num / 10;\n                if (first %\
    \ 2 != 0 && last % 2 != 0) {\n                    count++;\n                }\n\
    \            }\n        }\n        return count;", "        int count = 0;\n \
    \       for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) >\
    \ 10) {\n                String num = Integer.toString(nums.get(i));\n       \
    \         if (num.length() > 1) {\n                    int first = Character.getNumericValue(num.charAt(0));\n\
    \                    int last = Character.getNumericValue(num.charAt(num.length()\
    \ - 1));\n                    if (first % 2 != 0 && last % 2 != 0) {\n       \
    \                 count++;\n                    }\n                }\n       \
    \     }\n        }\n        return count;", "        // Write your code here\n\
    \        return 0;", '        return (int) nums.stream().filter(n -> n > 10 &&
    n % 2 == 1 && n / 10 % 2 == 1).count();', "        int count = 0;\n        for\
    \ (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) > 10) {\n \
    \               String num = nums.get(i).toString();\n                if (num.charAt(0)\
    \ % 2 != 0 && num.charAt(num.length() - 1) % 2 != 0) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  int count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n         \
    \   int num = nums.get(i);\n            if (num > 10) {\n                int first\
    \ = num % 10;\n                int last = num / 10;\n                if (first\
    \ % 2 != 0 && last % 2 != 0) {\n                    count++;\n               \
    \ }\n            }\n        }\n        return count;", "        return nums.stream()\n\
    \            .filter(x -> x > 10)\n            .filter(x -> x % 2 == 1)\n    \
    \        .filter(x -> x / 10 % 2 == 1)\n            .filter(x -> x % 10 % 2 ==\
    \ 1)\n            .collect(Collectors.toList())\n            .size();", "    \
    \    int count = 0;\n        for (int num : nums) {\n            if (num > 10\
    \ && isFirstAndLastDigitOdd(num)) {\n                count++;\n            }\n\
    \        }\n        return count;", "        return nums.stream()\n          \
    \  .filter(i -> i > 10)\n            .filter(i -> i % 2 == 1)\n            .filter(i\
    \ -> i / 10 % 2 == 1)\n            .filter(i -> i % 10 % 2 == 1)\n           \
    \ .collect(Collectors.toList())\n            .size();", "        return nums.stream()\n\
    \            .filter(x -> x > 10)\n            .filter(x -> x % 2 == 1)\n    \
    \        .filter(x -> x / 10 % 2 == 1)\n            .filter(x -> x % 10 % 2 ==\
    \ 1)\n            .collect(Collectors.toList())\n            .size();", "    \
    \    int count = 0;\n        for (int num : nums) {\n            if (num > 10\
    \ && (num % 10) % 2 != 0 && num / 10 % 2 != 0) {\n                count++;\n \
    \           }\n        }\n        return count;", "        // TODO: Implement\
    \ this function\n        return 0;", "        int count = 0;\n        for (int\
    \ num : nums) {\n            if (num > 10 && isFirstAndLastDigitOdd(num)) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       int count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        int num = nums.get(i);\n            if (num > 10) {\n               \
    \ int firstDigit = num % 10;\n                int lastDigit = num / 10;\n    \
    \            if (firstDigit % 2 != 0 && lastDigit % 2 != 0) {\n              \
    \      count++;\n                }\n            }\n        }\n        return count;",
  "        return nums.stream()\n            .filter(n -> n > 10)\n            .filter(n\
    \ -> n % 2 == 1)\n            .filter(n -> {\n                int lastDigit =\
    \ n % 10;\n                int firstDigit = n;\n                while (firstDigit\
    \ > 9) {\n                    firstDigit /= 10;\n                }\n         \
    \       return lastDigit % 2 == 1 && firstDigit % 2 == 1;\n            })\n  \
    \          .collect(Collectors.toList())\n            .size();", "        int\
    \ count = 0;\n        for (int num : nums) {\n            if (num > 10 && num\
    \ % 2 == 1 && num / 10 % 2 == 1) {\n                count++;\n            }\n\
    \        }\n        return count;", "        int count = 0;\n        for (int\
    \ i = 0; i < nums.size(); i++) {\n            if (nums.get(i) > 10) {\n      \
    \          int first = nums.get(i) / 10;\n                int last = nums.get(i)\
    \ % 10;\n                if (first % 2 != 0 && last % 2 != 0) {\n            \
    \        count++;\n                }\n            }\n        }\n        return\
    \ count;", "        // TODO: Write - Your - Code\n        return 0;", '        return
    (int) nums.stream().filter(num -> num > 10 && isFirstAndLastDigitOdd(num)).count();',
  "        int count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n     \
    \       int num = nums.get(i);\n            if (num > 10) {\n                int\
    \ first = num % 10;\n                int last = num / 10;\n                if\
    \ (first % 2 != 0 && last % 2 != 0) {\n                    count++;\n        \
    \        }\n            }\n        }\n        return count;", "        // your\
    \ code here\n        return 0;", "        int count = 0;\n        for (int i =\
    \ 0; i < nums.size(); i++) {\n            if (nums.get(i) > 10) {\n          \
    \      if (nums.get(i) % 2 == 1) {\n                    if (nums.get(i) / 10 %\
    \ 2 == 1) {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;", "        int count\
    \ = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            int num =\
    \ nums.get(i);\n            if (num > 10) {\n                int first = num /\
    \ 10;\n                int last = num % 10;\n                if (first % 2 !=\
    \ 0 && last % 2 != 0) {\n                    count++;\n                }\n   \
    \         }\n        }\n        return count;", "        return nums.stream()\n\
    \            .filter(n -> n > 10)\n            .filter(n -> n % 2 == 1)\n    \
    \        .filter(n -> n / 10 % 2 == 1)\n            .filter(n -> n % 10 % 2 ==\
    \ 1)\n            .collect(Collectors.toList())\n            .size();", "    \
    \    // Write your code here\n        return 0;", '        return (int) nums.stream().filter(n
    -> n > 10 && n % 2 == 1 && n % 10 == 1).count();', "        return nums.stream()\n\
    \            .filter(n -> n > 10)\n            .filter(n -> n % 2 == 1)\n    \
    \        .filter(n -> n / 10 % 2 == 1)\n            .filter(n -> n % 10 == 1 ||\
    \ n % 10 == 3 || n % 10 == 5 || n % 10 == 7 || n % 10 == 9)\n            .collect(Collectors.toList())\n\
    \            .size();", "        int count = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            if (nums.get(i) > 10) {\n                int first = nums.get(i)\
    \ / 10;\n                int last = nums.get(i) % 10;\n                if (first\
    \ % 2 != 0 && last % 2 != 0) {\n                    count++;\n               \
    \ }\n            }\n        }\n        return count;", "        return nums.stream()\n\
    \            .filter(n -> n > 10)\n            .filter(n -> n % 2 == 1)\n    \
    \        .filter(n -> n / 10 % 2 == 1)\n            .filter(n -> n % 10 % 2 ==\
    \ 1)\n            .collect(Collectors.toList())\n            .size();", "    \
    \    int count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n       \
    \     if (nums.get(i) > 10) {\n                String s = Integer.toString(nums.get(i));\n\
    \                if (s.length() > 1) {\n                    if (s.charAt(0) %\
    \ 2 != 0 && s.charAt(s.length() - 1) % 2 != 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;", "        return nums.stream()\n            .filter(i -> i > 10)\n \
    \           .filter(i -> i % 2 == 1)\n            .filter(i -> {\n           \
    \     String s = Integer.toString(i);\n                return s.charAt(0) % 2\
    \ == 1 && s.charAt(s.length() - 1) % 2 == 1;\n            })\n            .collect(Collectors.toList())\n\
    \            .size();", "        // your code here\n        return 0;", "    \
    \    int count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n       \
    \     if (nums.get(i) > 10) {\n                int first = nums.get(i) / 10;\n\
    \                int last = nums.get(i) % 10;\n                if (first % 2 !=\
    \ 0 && last % 2 != 0) {\n                    count++;\n                }\n   \
    \         }\n        }\n        return count;", "        // your code here\n \
    \       return 0;", "        int count = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            int num = nums.get(i);\n            if (num > 10) {\n  \
    \              int firstDigit = num % 10;\n                int lastDigit = num\
    \ / 10;\n                if (firstDigit % 2 != 0 && lastDigit % 2 != 0) {\n  \
    \                  count++;\n                }\n            }\n        }\n   \
    \     return count;", "        int count = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            int num = nums.get(i);\n            if (num > 10) {\n  \
    \              int first = num / 10;\n                int last = num % 10;\n \
    \               if (first % 2 != 0 && last % 2 != 0) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  int count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n         \
    \   if (nums.get(i) > 10) {\n                String s = Integer.toString(nums.get(i));\n\
    \                if (s.charAt(0) % 2 != 0 && s.charAt(s.length() - 1) % 2 != 0)\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", '        return (int) nums.stream().filter(x -> x > 10
    && x % 2 == 1 && x / 10 % 2 == 1).count();', "        int count = 0;\n       \
    \ for (int i = 0; i < nums.size(); i++) {\n            int num = nums.get(i);\n\
    \            if (num > 10) {\n                int firstDigit = num % 10;\n   \
    \             int lastDigit = num / 10;\n                if (firstDigit % 2 !=\
    \ 0 && lastDigit % 2 != 0) {\n                    count++;\n                }\n\
    \            }\n        }\n        return count;", "        int count = 0;\n \
    \       for (int num : nums) {\n            if (num > 10 && isFirstAndLastDigitOdd(num))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  '        return (int) nums.stream().filter(n -> n > 10 && n % 2 == 1 && n / 10 %
    2 == 1).count();', "        // TODO: Implement this function.\n        return\
    \ 0;", "        return nums.stream()\n            .filter(n -> n > 10)\n     \
    \       .filter(n -> n % 2 == 1)\n            .filter(n -> n / 10 % 2 == 1)\n\
    \            .filter(n -> n % 10 % 2 == 1)\n            .collect(Collectors.toList())\n\
    \            .size();", "        return nums.stream()\n            .filter(n ->\
    \ n > 10)\n            .filter(n -> n % 2 == 1)\n            .filter(n -> n /\
    \ 10 % 2 == 1)\n            .filter(n -> n % 10 == 1 || n % 10 == 3 || n % 10\
    \ == 5 || n % 10 == 7 || n % 10 == 9)\n            .collect(Collectors.toList())\n\
    \            .size();", '        return (int) nums.stream().filter(x -> x > 10
    && x % 2 == 1 && x / 10 % 2 == 1).count();', "        // TODO: Implement this\
    \ function\n        return 0;", "        int count = 0;\n        for (int i =\
    \ 0; i < nums.size(); i++) {\n            int num = nums.get(i);\n           \
    \ if (num > 10) {\n                int firstDigit = num % 10;\n              \
    \  int lastDigit = num / 10;\n                if (firstDigit % 2 != 0 && lastDigit\
    \ % 2 != 0) {\n                    count++;\n                }\n            }\n\
    \        }\n        return count;", "        int count = 0;\n        for (int\
    \ i = 0; i < nums.size(); i++) {\n            if (nums.get(i) > 10) {\n      \
    \          String num = nums.get(i).toString();\n                if (num.charAt(0)\
    \ % 2 != 0 && num.charAt(num.length() - 1) % 2 != 0) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", '        return
    (int) nums.stream().filter(x -> x > 10 && x % 2 == 1 && x / 10 % 2 == 1).count();',
  "        return (int) nums.stream().filter(n -> n > 10).filter(n -> {\n        \
    \    int firstDigit = n % 10;\n            int lastDigit = n / 10;\n         \
    \   return firstDigit % 2 == 1 && lastDigit % 2 == 1;\n        }).count();", " \
    \       // your code here\n        return 0;", "        int count = 0;\n     \
    \   for (int i = 0; i < nums.size(); i++) {\n            int num = nums.get(i);\n\
    \            if (num > 10) {\n                int firstDigit = num % 10;\n   \
    \             int lastDigit = num / 10;\n                if (firstDigit % 2 !=\
    \ 0 && lastDigit % 2 != 0) {\n                    count++;\n                }\n\
    \            }\n        }\n        return count;", "        int count = 0;\n \
    \       for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) >\
    \ 10) {\n                int first = nums.get(i) / 10;\n                int last\
    \ = nums.get(i) % 10;\n                if (first % 2 != 0 && last % 2 != 0) {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \       return count;", '        return (int) nums.stream().filter(n -> n > 10
    && (n % 10) % 2 != 0 && (n / 10) % 2 != 0).count();', "        // Write your code\
    \ here\n        int count = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            if (nums.get(i) > 10) {\n                String num = Integer.toString(nums.get(i));\n\
    \                if (num.length() > 1) {\n                    if (num.charAt(0)\
    \ % 2 != 0 && num.charAt(num.length() - 1) % 2 != 0) {\n                     \
    \   count++;\n                    }\n                }\n            }\n      \
    \  }\n        return count;", "        // TODO: Implement this function.\n   \
    \     int count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n      \
    \      if (nums.get(i) > 10) {\n                String num = nums.get(i).toString();\n\
    \                if (num.charAt(0) % 2 != 0 && num.charAt(num.length() - 1) %\
    \ 2 != 0) {\n                    count++;\n                }\n            }\n\
    \        }\n        return count;", "        return nums.stream()\n          \
    \  .filter(n -> n > 10)\n            .filter(n -> n % 2 == 1)\n            .filter(n\
    \ -> {\n                String s = String.valueOf(n);\n                return\
    \ s.charAt(0) % 2 == 1 && s.charAt(s.length() - 1) % 2 == 1;\n            })\n\
    \            .collect(Collectors.toList())\n            .size();", "        int\
    \ count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            int\
    \ num = nums.get(i);\n            if (num > 10) {\n                int first =\
    \ num / 10;\n                int last = num % 10;\n                if (first %\
    \ 2 != 0 && last % 2 != 0) {\n                    count++;\n                }\n\
    \            }\n        }\n        return count;", "        return nums.stream()\n\
    \            .filter(n -> n > 10)\n            .filter(n -> n % 2 == 1)\n    \
    \        .filter(n -> n % 10 == 1 || n % 10 == 3 || n % 10 == 5 || n % 10 == 7\
    \ || n % 10 == 9)\n            .collect(Collectors.toList())\n            .size();",
  "        int count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n     \
    \       int num = nums.get(i);\n            if (num > 10) {\n                int\
    \ first = num / 10;\n                int last = num % 10;\n                if\
    \ (first % 2 != 0 && last % 2 != 0) {\n                    count++;\n        \
    \        }\n            }\n        }\n        return count;", '        return
    (int) nums.stream().filter(n -> n > 10 && (n % 10) % 2 != 0 && (n / 10) % 2 !=
    0).count();', "        // TODO: Write - Your - Code\n        return 0;", "   \
    \     int count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n      \
    \      int num = nums.get(i);\n            if (num > 10) {\n                int\
    \ firstDigit = num % 10;\n                int lastDigit = num / 10;\n        \
    \        if (firstDigit % 2 != 0 && lastDigit % 2 != 0) {\n                  \
    \  count++;\n                }\n            }\n        }\n        return count;",
  "        return nums.stream()\n            .filter(x -> x > 10)\n            .filter(x\
    \ -> x % 2 == 1)\n            .filter(x -> x % 10 == 1 || x % 10 == 3 || x % 10\
    \ == 5 || x % 10 == 7 || x % 10 == 9)\n            .collect(Collectors.toList())\n\
    \            .size();", "        // Write your code here\n        return 0;",
  '        return (int) nums.stream().filter(n -> n > 10 && n % 2 == 1 && n % 10 ==
    1).count();', "        // Write your code here.\n        return 0;", "       \
    \ // Your code here\n        return 0;", "        int count = 0;\n        for\
    \ (int i = 0; i < nums.size(); i++) {\n            int num = nums.get(i);\n  \
    \          if (num > 10) {\n                int firstDigit = num % 10;\n     \
    \           int lastDigit = num / 10;\n                if (firstDigit % 2 != 0\
    \ && lastDigit % 2 != 0) {\n                    count++;\n                }\n\
    \            }\n        }\n        return count;"]
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"

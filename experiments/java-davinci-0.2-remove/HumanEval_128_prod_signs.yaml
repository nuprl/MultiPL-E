name: HumanEval_128_prod_signs
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // You are given an array arr of integers and you need to return\n\
  \    // sum of magnitudes of integers multiplied by product of all signs\n    //\
  \ of each number in the array, represented by 1, -1 or 0.\n    // Note: return None\
  \ for empty arr.\n    // Example:\n    public static Optional<Long> prodSigns(ArrayList<Long>\
  \ arr) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(prodSigns((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)-4l)))).equals(-9l));\n\
  \    assert(prodSigns((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))).equals(0l));\n\
  \    assert(prodSigns((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l,\
  \ (long)2l, (long)3l, (long)-1l, (long)1l)))).equals(-10l));\n    assert(prodSigns((new\
  \ ArrayList<Long>(Arrays.asList()))).equals(Optional.empty()));\n    assert(prodSigns((new\
  \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)2l, (long)-1l,\
  \ (long)-1l, (long)9l)))).equals(20l));\n    assert(prodSigns((new ArrayList<Long>(Arrays.asList((long)-1l,\
  \ (long)1l, (long)-1l, (long)1l)))).equals(4l));\n    assert(prodSigns((new ArrayList<Long>(Arrays.asList((long)-1l,\
  \ (long)1l, (long)1l, (long)1l)))).equals(-4l));\n    assert(prodSigns((new ArrayList<Long>(Arrays.asList((long)-1l,\
  \ (long)1l, (long)1l, (long)0l)))).equals(0l));\n    }\n\n}\n"
completions: ["        // Write your code here\n        return Optional.empty();",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        long sum = 0;\n        long prod = 1;\n        for (Long i : arr) {\n\
    \            long sign = i < 0 ? -1 : i > 0 ? 1 : 0;\n            sum += Math.abs(i);\n\
    \            prod *= sign;\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        long sum = 0;\n        long prod = 1;\n        for (Long x : arr) {\n\
    \            sum += Math.abs(x);\n            prod *= Math.signum(x);\n      \
    \  }\n        return Optional.of(sum * prod);", "        // >>> prodSigns([-1,\
    \ 2, -3, 4, -5])\n        // -120\n        // >>> prodSigns([])\n        // None\n\
    \        // >>> prodSigns([0, 0, 0, 0, 0])\n        // 0\n        // >>> prodSigns([-1,\
    \ -2, -3, -4, -5])\n        // 120\n        // >>> prodSigns([1, 2, 3, 4, 5])\n\
    \        // 120\n        // >>> prodSigns([-1, 2, -3, 4, 0])\n        // 0\n \
    \       // >>> prodSigns([-1, 2, -3, 4, 0, 0, 0, 0, 0])\n        // 0\n      \
    \  // >>> prodSigns([-1, 2, -3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,", "        // Write\
    \ your code here\n        return Optional.empty();", "        // Your code here\n\
    \        return Optional.empty();", "        if (arr.size() == 0) {\n        \
    \    return Optional.empty();\n        }\n        long sum = 0;\n        long\
    \ prod = 1;\n        for (Long l : arr) {\n            sum += Math.abs(l);\n \
    \           prod *= Math.signum(l);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        long prod = 1;\n        long sum = 0;\n        for (Long l\
    \ : arr) {\n            if (l < 0) {\n                prod *= -1;\n          \
    \  } else if (l == 0) {\n                prod = 0;\n                break;\n \
    \           }\n            sum += Math.abs(l);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        for (long i\
    \ : arr) {\n            sum += Math.abs(i);\n            prod *= Math.signum(i);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        long prod\
    \ = 1;\n        long sum = 0;\n        for (long i : arr) {\n            if (i\
    \ == 0) {\n                continue;\n            }\n            prod *= Math.signum(i);\n\
    \            sum += Math.abs(i);\n        }\n        return Optional.of(sum *\
    \ prod);", "        if (arr.size() == 0) return Optional.empty();\n        long\
    \ prod = 1;\n        long sum = 0;\n        for (long i : arr) {\n           \
    \ if (i > 0) {\n                prod *= 1;\n                sum += i;\n      \
    \      } else if (i < 0) {\n                prod *= -1;\n                sum +=\
    \ -i;\n            } else {\n                prod *= 0;\n            }\n     \
    \   }\n        return Optional.of(sum * prod);", "        if (arr.size() == 0)\
    \ {\n            return Optional.empty();\n        }\n        long prod = 1;\n\
    \        long sum = 0;\n        for (Long i : arr) {\n            if (i == 0)\
    \ {\n                prod *= 0;\n            } else if (i < 0) {\n           \
    \     prod *= -1;\n            }\n            sum += Math.abs(i);\n        }\n\
    \        return Optional.of(sum * prod);", "        // >>> prodSigns([1, -2, 3,\
    \ -4, 5])\n        // -120\n        // >>> prodSigns([])\n        // None\n  \
    \      // >>> prodSigns([0, 0, 0, 0, 0])\n        // 0\n        // >>> prodSigns([-1,\
    \ -1, -1, -1, -1])\n        // 1\n        // >>> prodSigns([1, 1, 1, 1, 1])\n\
    \        // 1\n        // >>> prodSigns([-1, -1, -1, -1, 1])\n        // -1\n\
    \        // >>> prodSigns([1, 1, 1, 1, -1])\n        // -1\n        // >>> prodSigns([-1,\
    \ -1, -1, 1, 1])\n        // 1\n        // >>> prodSigns([1, 1, 1, -1, -1])\n\
    \        // 1\n        // >>> prodSigns([-1, -1, 1, 1, 1])\n        // -1\n  \
    \      // >>> prodSigns([1, 1, -1, -1, -1])\n        // -1\n        // >>> prodSigns([-1,\
    \ 1, 1, 1, 1])\n        // 1\n        // >>> prodSigns([1, -1, -1, -1, -1])\n\
    \        // 1\n        // >>> prodSigns([-1, 1, -1, 1, -1])\n        // -1\n \
    \       // >>> prodSigns([1, -1, 1, -1, 1])\n        // 1\n        // >>> prodSigns([-1,\
    \ 1, -1, 1, 1])\n        // -1\n        // >>> prodSigns([1, -1, 1, 1, -1])\n\
    \        // -1\n        // >>> prodSigns([-1, 1, 1, -1, 1])\n        // 1\n  \
    \      // >>> prodSigns([1, -1, 1, -1, -1])\n        // 1\n        // >>> prodSigns([-1,\
    \ 1, 1, 1, -1])\n        // -1\n        // >>> prodSigns([1, -1, -1, 1, 1])\n\
    \        // -1\n        // >>>", "        // Your code here\n        return Optional.empty();",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        long sum = 0;\n        long prod = 1;\n        for (Long i : arr) {\n\
    \            sum += Math.abs(i);\n            prod *= Math.signum(i);\n      \
    \  }\n        return Optional.of(sum * prod);", "        // Your code here\n \
    \       if (arr.size() == 0) {\n            return Optional.empty();\n       \
    \ }\n        long sum = 0;\n        long prod = 1;\n        for (long num : arr)\
    \ {\n            if (num == 0) {\n                continue;\n            }\n \
    \           sum += Math.abs(num);\n            prod *= Math.signum(num);\n   \
    \     }\n        return Optional.of(sum * prod);", "        // Write your code\
    \ here\n        return Optional.empty();", "        if (arr.size() == 0) {\n \
    \           return Optional.empty();\n        }\n        long prod = 1;\n    \
    \    long sum = 0;\n        for (long i : arr) {\n            if (i > 0) {\n \
    \               prod *= 1;\n            } else if (i < 0) {\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \          sum += Math.abs(i);\n        }\n        return Optional.of(sum * prod);",
  "        // Write your code here\n        return Optional.empty();", "        if\
    \ (arr.size() == 0) {\n            return Optional.empty();\n        }\n     \
    \   long prod = 1;\n        long sum = 0;\n        for (long i : arr) {\n    \
    \        if (i > 0) {\n                prod *= 1;\n            } else if (i <\
    \ 0) {\n                prod *= -1;\n            } else {\n                prod\
    \ *= 0;\n            }\n            sum += Math.abs(i);\n        }\n        return\
    \ Optional.of(sum * prod);", "        if (arr.size() == 0) {\n            return\
    \ Optional.empty();\n        }\n        long prod = 1;\n        long sum = 0;\n\
    \        for (long l : arr) {\n            if (l > 0) {\n                prod\
    \ *= 1;\n            } else if (l < 0) {\n                prod *= -1;\n      \
    \      } else {\n                prod *= 0;\n            }\n            sum +=\
    \ Math.abs(l);\n        }\n        return Optional.of(sum * prod);", "       \
    \ if (arr.size() == 0) {\n            return Optional.empty();\n        }\n  \
    \      long sum = 0;\n        long prod = 1;\n        for (Long i : arr) {\n \
    \           sum += Math.abs(i);\n            prod *= Math.signum(i);\n       \
    \ }\n        return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n\
    \            return Optional.empty();\n        }\n        long sum = 0;\n    \
    \    long product = 1;\n        for (long i : arr) {\n            if (i > 0) {\n\
    \                product *= 1;\n            } else if (i < 0) {\n            \
    \    product *= -1;\n            } else {\n                product *= 0;\n   \
    \         }\n            sum += Math.abs(i);\n        }\n        return Optional.of(sum\
    \ * product);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        for (Long i\
    \ : arr) {\n            sum += Math.abs(i);\n            prod *= Math.signum(i);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        long sum =\
    \ 0;\n        long prod = 1;\n        for (long x : arr) {\n            sum +=\
    \ Math.abs(x);\n            prod *= Math.signum(x);\n        }\n        return\
    \ Optional.of(sum * prod);", "        if (arr.size() == 0) {\n            return\
    \ Optional.empty();\n        }\n        long sum = 0;\n        long prod = 1;\n\
    \        for (long i : arr) {\n            if (i > 0) {\n                sum +=\
    \ i;\n                prod *= 1;\n            } else if (i < 0) {\n          \
    \      sum += -i;\n                prod *= -1;\n            } else {\n       \
    \         prod *= 0;\n            }\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        for (long i\
    \ : arr) {\n            sum += Math.abs(i);\n            if (i != 0) {\n     \
    \           prod *= Math.signum(i);\n            }\n        }\n        return\
    \ Optional.of(sum * prod);", "        if (arr.size() == 0) {\n            return\
    \ Optional.empty();\n        }\n        long prod = 1;\n        long sum = 0;\n\
    \        for (Long i : arr) {\n            if (i > 0) {\n                prod\
    \ *= 1;\n            } else if (i < 0) {\n                prod *= -1;\n      \
    \      } else {\n                prod *= 0;\n            }\n            sum +=\
    \ Math.abs(i);\n        }\n        return Optional.of(sum * prod);", "       \
    \ if (arr.size() == 0) {\n            return Optional.empty();\n        }\n  \
    \      long sum = 0;\n        long prod = 1;\n        for (Long i : arr) {\n \
    \           sum += Math.abs(i);\n            prod *= Math.signum(i);\n       \
    \ }\n        return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n\
    \            return Optional.empty();\n        }\n        long sum = 0;\n    \
    \    long prod = 1;\n        for (long num : arr) {\n            sum += Math.abs(num);\n\
    \            prod *= Math.signum(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        long prod = 1;\n        long sum = 0;\n        for (long num\
    \ : arr) {\n            if (num > 0) {\n                prod *= 1;\n         \
    \   } else if (num < 0) {\n                prod *= -1;\n            } else {\n\
    \                prod *= 0;\n            }\n            sum += Math.abs(num);\n\
    \        }\n        return Optional.of(sum * prod);", "        // >>> prodSigns([-1,\
    \ -2, -3, -4, -5])\n        // -120\n        // >>> prodSigns([-1, -2, -3, -4,\
    \ 0])\n        // 0\n        // >>> prodSigns([-1, -2, -3, -4, 5])\n        //\
    \ 120\n        // >>> prodSigns([-1, -2, -3, 0, 5])\n        // 0\n        //\
    \ >>> prodSigns([-1, -2, -3, 4, 5])\n        // 120\n        // >>> prodSigns([-1,\
    \ -2, 0, 4, 5])\n        // 0\n        // >>> prodSigns([-1, -2, 3, 4, 5])\n \
    \       // 120\n        // >>> prodSigns([-1, 0, 3, 4, 5])\n        // 0\n   \
    \     // >>> prodSigns([-1, 2, 3, 4, 5])\n        // 120\n        // >>> prodSigns([0,\
    \ 2, 3, 4, 5])\n        // 0\n        // >>> prodSigns([1, 2, 3, 4, 5])\n    \
    \    // 120\n        // >>> prodSigns([1, 2, 3, 4, 0])\n        // 0\n       \
    \ // >>> prodSigns([1, 2, 3, 0, 0])\n        // 0\n        // >>> prodSigns([1,\
    \ 2, 0, 0, 0])\n        // 0\n        // >>> prodSigns([1, 0, 0, 0, 0])\n    \
    \    // 0\n        // >>> prodSigns([0, 0, 0, 0, 0])\n        // 0\n        //\
    \ >>> prodSigns([])\n        // None\n        // >>> prodSigns([-1, -2, -3, -4,\
    \ -5, -6, -7, -8, -9, -10])\n        // -3628800\n        // >>> prodSigns([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, 0])\n        // 0\n        // >>> prodSigns([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, 9, 10", "        if (arr.size() == 0) {\n      \
    \      return Optional.empty();\n        }\n        long sum = 0;\n        long\
    \ prod = 1;\n        for (long i : arr) {\n            sum += Math.abs(i);\n \
    \           prod *= Math.signum(i);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        long prod = 1;\n        long sum = 0;\n        for (Long num\
    \ : arr) {\n            if (num > 0) {\n                prod *= 1;\n         \
    \   } else if (num < 0) {\n                prod *= -1;\n            } else {\n\
    \                prod *= 0;\n            }\n            sum += Math.abs(num);\n\
    \        }\n        return Optional.of(sum * prod);", "        // Your code here\n\
    \        if (arr.size() == 0) {\n            return Optional.empty();\n      \
    \  }\n        long sum = 0;\n        long product = 1;\n        for (long i :\
    \ arr) {\n            sum += Math.abs(i);\n            if (i > 0) {\n        \
    \        product *= 1;\n            } else if (i < 0) {\n                product\
    \ *= -1;\n            } else {\n                product *= 0;\n            }\n\
    \        }\n        return Optional.of(sum * product);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        long prod\
    \ = 1;\n        long sum = 0;\n        for (Long i : arr) {\n            if (i\
    \ > 0) {\n                prod *= 1;\n            } else if (i < 0) {\n      \
    \          prod *= -1;\n            } else {\n                prod *= 0;\n   \
    \         }\n            sum += Math.abs(i);\n        }\n        return Optional.of(sum\
    \ * prod);", "        // Write your code here\n        return Optional.empty();",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        long sum = 0;\n        long prod = 1;\n        for (Long i : arr) {\n\
    \            if (i > 0) {\n                sum += i;\n                prod *=\
    \ 1;\n            } else if (i < 0) {\n                sum += -i;\n          \
    \      prod *= -1;\n            } else {\n                prod *= 0;\n       \
    \     }\n        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        long sum =\
    \ 0;\n        long prod = 1;\n        for (long i : arr) {\n            sum +=\
    \ Math.abs(i);\n            if (i > 0) {\n                prod *= 1;\n       \
    \     } else if (i < 0) {\n                prod *= -1;\n            } else {\n\
    \                prod *= 0;\n            }\n        }\n        return Optional.of(sum\
    \ * prod);", "        // Write your code here\n        return Optional.empty();",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        long sum = 0;\n        long prod = 1;\n        for (long num : arr) {\n\
    \            sum += Math.abs(num);\n            if (num > 0) {\n             \
    \   prod *= 1;\n            } else if (num < 0) {\n                prod *= -1;\n\
    \            } else {\n                prod *= 0;\n            }\n        }\n\
    \        return Optional.of(sum * prod);", "        // Your code here\n      \
    \  return Optional.empty();", "        // your code here\n        return null;",
  "        // Your code here\n        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        for (long i\
    \ : arr) {\n            sum += Math.abs(i);\n            if (i > 0) {\n      \
    \          prod *= 1;\n            } else if (i < 0) {\n                prod *=\
    \ -1;\n            } else {\n                prod *= 0;\n            }\n     \
    \   }\n        return Optional.of(sum * prod);", "        // Your code here\n\
    \        return Optional.empty();", "        if (arr.size() == 0) {\n        \
    \    return Optional.empty();\n        }\n        long prod = 1;\n        long\
    \ sum = 0;\n        for (long x : arr) {\n            if (x > 0) {\n         \
    \       prod *= 1;\n            } else if (x < 0) {\n                prod *= -1;\n\
    \            } else {\n                prod *= 0;\n            }\n           \
    \ sum += Math.abs(x);\n        }\n        return Optional.of(sum * prod);", " \
    \       if (arr.size() == 0) {\n            return Optional.empty();\n       \
    \ }\n        long sum = 0;\n        long prod = 1;\n        for (long i : arr)\
    \ {\n            sum += Math.abs(i);\n            prod *= Math.signum(i);\n  \
    \      }\n        return Optional.of(sum * prod);", "        if (arr.size() ==\
    \ 0) {\n            return Optional.empty();\n        }\n        long sum = 0;\n\
    \        long prod = 1;\n        for (Long i : arr) {\n            sum += Math.abs(i);\n\
    \            prod *= Math.signum(i);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) return Optional.empty();\n        long\
    \ sum = 0;\n        long prod = 1;\n        for (long x : arr) {\n           \
    \ sum += Math.abs(x);\n            prod *= Math.signum(x);\n        }\n      \
    \  return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n       \
    \     return Optional.empty();\n        }\n        long prodSigns = 1;\n     \
    \   long sumMagnitudes = 0;\n        for (Long num : arr) {\n            if (num\
    \ == 0) {\n                prodSigns = 0;\n                break;\n          \
    \  }\n            prodSigns *= Math.signum(num);\n            sumMagnitudes +=\
    \ Math.abs(num);\n        }\n        return Optional.of(sumMagnitudes * prodSigns);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        long sum = 0;\n        long prod = 1;\n        for (long i : arr) {\n\
    \            sum += Math.abs(i);\n            prod *= Math.signum(i);\n      \
    \  }\n        return Optional.of(sum * prod);", "        // Your code here\n \
    \       return Optional.empty();", "        // >>> prodSigns([-1, -2, 3, 4, 5])\n\
    \        // -1\n        // >>> prodSigns([-1, 2, -3, 4, 5])\n        // 1\n  \
    \      // >>> prodSigns([-1, -2, -3, 4, 5])\n        // -1\n        // >>> prodSigns([-1,\
    \ -2, -3, -4, 5])\n        // 1\n        // >>> prodSigns([-1, -2, -3, -4, -5])\n\
    \        // -1\n        // >>> prodSigns([1, 2, 3, 4, 5])\n        // 1\n    \
    \    // >>> prodSigns([0, 0, 0, 0, 0])\n        // 0\n        // >>> prodSigns([])\n\
    \        // None\n        // >>> prodSigns([-1, -2, -3, -4, -5, 0, 1, 2, 3, 4,\
    \ 5])\n        // -1\n        // >>> prodSigns([-1, -2, -3, -4, -5, 0, 1, 2, 3,\
    \ 4, 5, 0])\n        // 0\n        // >>> prodSigns([-1, -2, -3, -4, -5, 0, 1,\
    \ 2, 3, 4, 5, 0, 0])\n        // 0\n        // >>> prodSigns([-1, -2, -3, -4,\
    \ -5, 0, 1, 2, 3, 4, 5, 0, 0, 0])\n        // 0\n        // >>> prodSigns([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, 0, 0, 0, 0])\n        // 0\n        // >>>\
    \ prodSigns([-1, -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, 0, 0, 0, 0, 0])\n        //\
    \ 0\n        // >>> prodSigns([-1, -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, 0, 0, 0,\
    \ 0, 0, 0])\n        // 0\n        // >>> prodSigns([-1", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        long prod\
    \ = 1;\n        long sum = 0;\n        for (long i : arr) {\n            if (i\
    \ < 0) {\n                prod *= -1;\n            } else if (i == 0) {\n    \
    \            prod = 0;\n                sum = 0;\n                break;\n   \
    \         }\n            sum += Math.abs(i);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        for (long x\
    \ : arr) {\n            sum += Math.abs(x);\n            prod *= Math.signum(x);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        long sum =\
    \ 0;\n        long prod = 1;\n        for (long num : arr) {\n            if (num\
    \ < 0) {\n                prod *= -1;\n            } else if (num == 0) {\n  \
    \              prod = 0;\n                break;\n            }\n            sum\
    \ += Math.abs(num);\n        }\n        return Optional.of(sum * prod);", "  \
    \      // Your code here\n        return Optional.empty();", "        // Your\
    \ code here\n        return Optional.empty();", "        if (arr.size() == 0)\
    \ {\n            return Optional.empty();\n        }\n        long sum = 0;\n\
    \        long prod = 1;\n        for (long x : arr) {\n            sum += Math.abs(x);\n\
    \            prod *= Math.signum(x);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        for (long i\
    \ : arr) {\n            if (i > 0) {\n                sum += i;\n            \
    \    prod *= 1;\n            } else if (i < 0) {\n                sum += -i;\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n        }\n        return Optional.of(sum * prod);", "       \
    \ if (arr.size() == 0) {\n            return Optional.empty();\n        }\n  \
    \      long sum = 0;\n        long prod = 1;\n        for (long i : arr) {\n \
    \           if (i == 0) {\n                continue;\n            }\n        \
    \    sum += Math.abs(i);\n            prod *= Math.signum(i);\n        }\n   \
    \     return Optional.of(sum * prod);", "        // Your code here\n        return\
    \ Optional.empty();", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        for (long i\
    \ : arr) {\n            sum += Math.abs(i);\n            if (i > 0) {\n      \
    \          prod *= 1;\n            } else if (i < 0) {\n                prod *=\
    \ -1;\n            } else {\n                prod *= 0;\n            }\n     \
    \   }\n        return Optional.of(sum * prod);", "        // Write your code here\n\
    \        return Optional.empty();", "        if (arr.size() == 0) {\n        \
    \    return Optional.empty();\n        }\n        long sum = 0;\n        long\
    \ prod = 1;\n        for (Long i : arr) {\n            sum += Math.abs(i);\n \
    \           if (i > 0) {\n                prod *= 1;\n            } else if (i\
    \ < 0) {\n                prod *= -1;\n            } else {\n                prod\
    \ *= 0;\n            }\n        }\n        return Optional.of(sum * prod);", " \
    \       // Write your code here\n        return Optional.empty();", "        if\
    \ (arr.size() == 0) {\n            return Optional.empty();\n        }\n     \
    \   long sum = 0;\n        long prod = 1;\n        for (long i : arr) {\n    \
    \        sum += Math.abs(i);\n            prod *= Math.signum(i);\n        }\n\
    \        return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n \
    \           return Optional.empty();\n        }\n        long sum = 0;\n     \
    \   long prod = 1;\n        for (Long i : arr) {\n            sum += Math.abs(i);\n\
    \            if (i > 0) {\n                prod *= 1;\n            } else if (i\
    \ < 0) {\n                prod *= -1;\n            } else {\n                prod\
    \ *= 0;\n            }\n        }\n        return Optional.of(sum * prod);", " \
    \       // your code here\n        return Optional.empty();", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        long sum =\
    \ 0;\n        long prod = 1;\n        for (long x : arr) {\n            if (x\
    \ < 0) {\n                prod *= -1;\n            }\n            sum += Math.abs(x);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        long sum =\
    \ 0;\n        long prod = 1;\n        for (Long i : arr) {\n            sum +=\
    \ Math.abs(i);\n            if (i > 0) {\n                prod *= 1;\n       \
    \     } else if (i < 0) {\n                prod *= -1;\n            } else {\n\
    \                prod *= 0;\n            }\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        for (long x\
    \ : arr) {\n            sum += Math.abs(x);\n            prod *= Math.signum(x);\n\
    \        }\n        return Optional.of(sum * prod);", "        // Write your code\
    \ here\n        return Optional.empty();", "        // Your code here\n      \
    \  return Optional.empty();", "        // Write your code here\n        return\
    \ Optional.empty();", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        for (long x\
    \ : arr) {\n            sum += Math.abs(x);\n            prod *= Math.signum(x);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        long prod\
    \ = 1;\n        long sum = 0;\n        for (long i : arr) {\n            if (i\
    \ > 0) {\n                prod *= 1;\n            } else if (i < 0) {\n      \
    \          prod *= -1;\n            } else {\n                prod *= 0;\n   \
    \         }\n            sum += Math.abs(i);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        long sum = 0;\n        long product = 1;\n        for (long\
    \ i : arr) {\n            long sign = Math.signum(i);\n            sum += Math.abs(i);\n\
    \            product *= sign;\n        }\n        return Optional.of(sum * product);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        long prod = 1;\n        long sum = 0;\n        for (Long i : arr) {\n\
    \            if (i > 0) {\n                prod *= 1;\n            } else if (i\
    \ < 0) {\n                prod *= -1;\n            } else {\n                prod\
    \ *= 0;\n            }\n            sum += Math.abs(i);\n        }\n        return\
    \ Optional.of(sum * prod);", "        // Write your code here\n        return\
    \ Optional.empty();", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        for (Long x\
    \ : arr) {\n            sum += Math.abs(x);\n            prod *= Math.signum(x);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        long sum =\
    \ 0;\n        long prod = 1;\n        for (long i : arr) {\n            if (i\
    \ > 0) {\n                sum += i;\n                prod *= 1;\n            }\
    \ else if (i < 0) {\n                sum += -i;\n                prod *= -1;\n\
    \            } else {\n                prod *= 0;\n            }\n        }\n\
    \        return Optional.of(sum * prod);", "        // Your code here\n      \
    \  return Optional.empty();", "        // Write your code here\n        return\
    \ Optional.empty();", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        for (long n\
    \ : arr) {\n            if (n > 0) {\n                sum += n;\n            \
    \    prod *= 1;\n            } else if (n < 0) {\n                sum += -n;\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n        }\n        return Optional.of(sum * prod);", "       \
    \ if (arr.size() == 0) {\n            return Optional.empty();\n        }\n  \
    \      long sum = 0;\n        long prod = 1;\n        for (Long i : arr) {\n \
    \           if (i > 0) {\n                sum += i;\n                prod *= 1;\n\
    \            } else if (i < 0) {\n                sum += -i;\n               \
    \ prod *= -1;\n            } else {\n                prod *= 0;\n            }\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        long prod\
    \ = 1;\n        long sum = 0;\n        for (long num : arr) {\n            if\
    \ (num > 0) {\n                prod *= 1;\n            } else if (num < 0) {\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n            sum += Math.abs(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        for (long i\
    \ : arr) {\n            if (i > 0) {\n                sum += i;\n            \
    \    prod *= 1;\n            } else if (i < 0) {\n                sum += -i;\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n        }\n        return Optional.of(sum * prod);", "       \
    \ if (arr.size() == 0) {\n            return Optional.empty();\n        }\n  \
    \      long sum = 0;\n        long prod = 1;\n        for (Long l : arr) {\n \
    \           sum += Math.abs(l);\n            if (l > 0) {\n                prod\
    \ *= 1;\n            } else if (l < 0) {\n                prod *= -1;\n      \
    \      } else {\n                prod *= 0;\n            }\n        }\n      \
    \  return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n       \
    \     return Optional.empty();\n        }\n        long sum = 0;\n        long\
    \ prod = 1;\n        for (long num : arr) {\n            sum += Math.abs(num);\n\
    \            if (num > 0) {\n                prod *= 1;\n            } else if\
    \ (num < 0) {\n                prod *= -1;\n            } else {\n           \
    \     prod *= 0;\n            }\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        long sum = 0;\n        long prod = 1;\n        for (long i : arr) {\n\
    \            sum += Math.abs(i);\n            if (i > 0) {\n                prod\
    \ *= 1;\n            } else if (i < 0) {\n                prod *= -1;\n      \
    \      } else {\n                prod *= 0;\n            }\n        }\n      \
    \  return Optional.of(sum * prod);", "        // Your code here\n        return\
    \ Optional.empty();", "        // Write your code here\n        return Optional.empty();",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        long sum = 0;\n        long prod = 1;\n        for (Long x : arr) {\n\
    \            sum += Math.abs(x);\n            prod *= Math.signum(x);\n      \
    \  }\n        return Optional.of(sum * prod);", "        if (arr.size() == 0)\
    \ {\n            return Optional.empty();\n        }\n        long prod = 1;\n\
    \        long sum = 0;\n        for (long i : arr) {\n            if (i > 0) {\n\
    \                prod *= 1;\n            } else if (i < 0) {\n               \
    \ prod *= -1;\n            } else {\n                prod *= 0;\n            }\n\
    \            sum += Math.abs(i);\n        }\n        return Optional.of(sum *\
    \ prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        for (long i\
    \ : arr) {\n            sum += Math.abs(i);\n            if (i != 0) {\n     \
    \           prod *= Math.signum(i);\n            }\n        }\n        return\
    \ Optional.of(sum * prod);", "        if (arr.size() == 0) {\n            return\
    \ Optional.empty();\n        }\n        long sum = 0;\n        long prod = 1;\n\
    \        for (Long i : arr) {\n            if (i == 0) {\n                continue;\n\
    \            }\n            sum += Math.abs(i);\n            prod *= Math.signum(i);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        long sum =\
    \ 0;\n        long prod = 1;\n        for (long x : arr) {\n            sum +=\
    \ Math.abs(x);\n            prod *= Math.signum(x);\n        }\n        return\
    \ Optional.of(sum * prod);", "        if (arr.size() == 0) {\n            return\
    \ Optional.empty();\n        }\n        long sum = 0;\n        long prod = 1;\n\
    \        for (Long x : arr) {\n            sum += Math.abs(x);\n            prod\
    \ *= Math.signum(x);\n        }\n        return Optional.of(sum * prod);", " \
    \       if (arr.size() == 0) {\n            return Optional.empty();\n       \
    \ }\n        long sum = 0;\n        long prod = 1;\n        for (Long i : arr)\
    \ {\n            if (i == 0) {\n                continue;\n            }\n   \
    \         sum += Math.abs(i);\n            prod *= Math.signum(i);\n        }\n\
    \        return Optional.of(sum * prod);", "        // Your code here\n      \
    \  return Optional.empty();", "        // Your code here\n        return Optional.empty();",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        long sum = 0;\n        long prod = 1;\n        for (Long x : arr) {\n\
    \            if (x == 0) {\n                continue;\n            }\n       \
    \     long sign = x / Math.abs(x);\n            prod *= sign;\n            sum\
    \ += Math.abs(x);\n        }\n        return Optional.of(sum * prod);", "    \
    \    if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        long prod = 1;\n        long sum = 0;\n        for (long i : arr) {\n\
    \            if (i > 0) {\n                prod *= 1;\n            } else if (i\
    \ < 0) {\n                prod *= -1;\n            } else {\n                prod\
    \ *= 0;\n            }\n            sum += Math.abs(i);\n        }\n        return\
    \ Optional.of(sum * prod);", "        if (arr.size() == 0) {\n            return\
    \ Optional.empty();\n        }\n        long sum = 0;\n        long prod = 1;\n\
    \        for (long i : arr) {\n            sum += Math.abs(i);\n            prod\
    \ *= Math.signum(i);\n        }\n        return Optional.of(sum * prod);", " \
    \       if (arr.size() == 0) {\n            return Optional.empty();\n       \
    \ }\n        long sum = 0;\n        long prod = 1;\n        for (long i : arr)\
    \ {\n            sum += Math.abs(i);\n            prod *= Math.signum(i);\n  \
    \      }\n        return Optional.of(sum * prod);", "        if (arr.size() ==\
    \ 0) {\n            return Optional.empty();\n        }\n        long sum = 0;\n\
    \        long prod = 1;\n        for (long i : arr) {\n            sum += Math.abs(i);\n\
    \            prod *= Math.signum(i);\n        }\n        return Optional.of(sum\
    \ * prod);", "        // Your code here\n        return Optional.empty();", " \
    \       if (arr.size() == 0) {\n            return Optional.empty();\n       \
    \ }\n        long sum = 0;\n        long prod = 1;\n        for (long i : arr)\
    \ {\n            if (i == 0) {\n                continue;\n            }\n   \
    \         sum += Math.abs(i);\n            prod *= Math.signum(i);\n        }\n\
    \        return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n \
    \           return Optional.empty();\n        }\n        long sum = 0;\n     \
    \   long prod = 1;\n        for (long el : arr) {\n            sum += Math.abs(el);\n\
    \            if (el < 0) {\n                prod *= -1;\n            } else if\
    \ (el > 0) {\n                prod *= 1;\n            }\n        }\n        return\
    \ Optional.of(sum * prod);", "        // Write your code here\n        return\
    \ Optional.empty();", "        // Write your code here\n        return Optional.empty();",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        long sum = 0;\n        long prod = 1;\n        for (long i : arr) {\n\
    \            sum += Math.abs(i);\n            if (i > 0) {\n                prod\
    \ *= 1;\n            } else if (i < 0) {\n                prod *= -1;\n      \
    \      } else {\n                prod *= 0;\n            }\n        }\n      \
    \  return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n       \
    \     return Optional.empty();\n        }\n        long sum = 0;\n        long\
    \ prod = 1;\n        for (Long i : arr) {\n            if (i < 0) {\n        \
    \        prod *= -1;\n            } else if (i == 0) {\n                prod =\
    \ 0;\n                break;\n            }\n            sum += Math.abs(i);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        long sum =\
    \ 0;\n        long prod = 1;\n        for (long i : arr) {\n            sum +=\
    \ Math.abs(i);\n            prod *= Math.signum(i);\n        }\n        return\
    \ Optional.of(sum * prod);", "        // Your code here\n        return Optional.empty();",
  "        // >>> prodSigns([-1, 0, 1])\n        // 0\n        // >>> prodSigns([1,\
    \ 2, 3])\n        // -36\n        // >>> prodSigns([-1, -2, -3])\n        // 36\n\
    \        // >>> prodSigns([])\n        // None\n        // >>> prodSigns([-1,\
    \ -2, -3, 0, 1, 2, 3])\n        // 0\n        // >>> prodSigns([-1, -2, -3, 0,\
    \ 1, 2, 3, 0])\n        // 0\n        // >>> prodSigns([-1, -2, -3, 0, 1, 2, 3,\
    \ 0, 0])\n        // 0\n        // >>> prodSigns([-1, -2, -3, 0, 1, 2, 3, 0, 0,\
    \ 0])\n        // 0\n        // >>> prodSigns([-1, -2, -3, 0, 1, 2, 3, 0, 0, 0,\
    \ 0])\n        // 0\n        // >>> prodSigns([-1, -2, -3, 0, 1, 2, 3, 0, 0, 0,\
    \ 0, 0])\n        // 0\n        // >>> prodSigns([-1, -2, -3, 0, 1, 2, 3, 0, 0,\
    \ 0, 0, 0, 0])\n        // 0\n        // >>> prodSigns([-1, -2, -3, 0, 1, 2, 3,\
    \ 0, 0, 0, 0, 0, 0, 0])\n        // 0\n        // >>> prodSigns([-1, -2, -3, 0,\
    \ 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0])\n        // 0\n        // >>> prodSigns([-1,\
    \ -2, -3, 0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n        // 0\n        // >>>\
    \ prodSigns([-1, -2, -3, 0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n        //\
    \ 0\n        // >>> prodSigns([-1,", "        // Write your code here\n      \
    \  return Optional.empty();", "        // Your code here\n        return Optional.empty();",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        long prod = 1;\n        long sum = 0;\n        for (long num : arr) {\n\
    \            if (num > 0) {\n                prod *= 1;\n            } else if\
    \ (num < 0) {\n                prod *= -1;\n            } else {\n           \
    \     prod *= 0;\n            }\n            sum += Math.abs(num);\n        }\n\
    \        return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n \
    \           return Optional.empty();\n        }\n        long prod = 1;\n    \
    \    long sum = 0;\n        for (Long l : arr) {\n            if (l > 0) {\n \
    \               prod *= 1;\n            } else if (l < 0) {\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \          sum += Math.abs(l);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        long sum = 0;\n        long prod = 1;\n        for (long x : arr) {\n\
    \            sum += Math.abs(x);\n            prod *= Math.signum(x);\n      \
    \  }\n        return Optional.of(sum * prod);", "        if (arr.size() == 0)\
    \ {\n            return Optional.empty();\n        }\n        long sum = 0;\n\
    \        long prod = 1;\n        for (long i : arr) {\n            if (i > 0)\
    \ {\n                sum += i;\n                prod *= 1;\n            } else\
    \ if (i < 0) {\n                sum += -i;\n                prod *= -1;\n    \
    \        } else {\n                prod *= 0;\n            }\n        }\n    \
    \    return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n     \
    \       return Optional.empty();\n        }\n        long sum = 0;\n        long\
    \ prod = 1;\n        for (long l : arr) {\n            if (l > 0) {\n        \
    \        sum += l;\n                prod *= 1;\n            } else if (l < 0)\
    \ {\n                sum += -l;\n                prod *= -1;\n            } else\
    \ {\n                prod *= 0;\n            }\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        for (long x\
    \ : arr) {\n            sum += Math.abs(x);\n            prod *= Math.signum(x);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        long prod\
    \ = 1;\n        long sum = 0;\n        for (Long n : arr) {\n            if (n\
    \ > 0) {\n                prod *= 1;\n            } else if (n < 0) {\n      \
    \          prod *= -1;\n            } else {\n                prod *= 0;\n   \
    \         }\n            sum += Math.abs(n);\n        }\n        return Optional.of(sum\
    \ * prod);", "        // Write your code here\n        return Optional.empty();",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        long prod = 1;\n        long sum = 0;\n        for (Long n : arr) {\n\
    \            if (n > 0) {\n                prod *= 1;\n            } else if (n\
    \ < 0) {\n                prod *= -1;\n            } else {\n                prod\
    \ *= 0;\n            }\n            sum += Math.abs(n);\n        }\n        return\
    \ Optional.of(sum * prod);", "        if (arr.size() == 0) {\n            return\
    \ Optional.empty();\n        }\n        long sum = 0;\n        long prod = 1;\n\
    \        for (long i : arr) {\n            sum += Math.abs(i);\n            if\
    \ (i > 0) {\n                prod *= 1;\n            } else if (i < 0) {\n   \
    \             prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n        }\n        return Optional.of(sum * prod);", "       \
    \ if (arr.size() == 0) {\n            return Optional.empty();\n        }\n  \
    \      long sum = 0;\n        long prod = 1;\n        for (Long l : arr) {\n \
    \           if (l > 0) {\n                sum += l;\n                prod *= 1;\n\
    \            } else if (l < 0) {\n                sum += -l;\n               \
    \ prod *= -1;\n            } else {\n                prod *= 0;\n            }\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        long sum =\
    \ 0;\n        long prod = 1;\n        for (Long i : arr) {\n            sum +=\
    \ Math.abs(i);\n            if (i > 0) {\n                prod *= 1;\n       \
    \     } else if (i < 0) {\n                prod *= -1;\n            } else {\n\
    \                prod *= 0;\n            }\n        }\n        return Optional.of(sum\
    \ * prod);", "        // >>> prodSigns([-1, -2, -3, -4, -5])\n        // -120\n\
    \        // >>> prodSigns([-1, -2, -3, -4, -5, 0])\n        // 0\n        // >>>\
    \ prodSigns([-1, -2, -3, -4, -5, 0, 1, 2, 3, 4, 5])\n        // 120\n        //\
    \ >>> prodSigns([])\n        // None\n        // >>> prodSigns([-1, -2, -3, -4,\
    \ -5, 0, 1, 2, 3, 4, 5, 0])\n        // 0\n        // >>> prodSigns([-1, -2, -3,\
    \ -4, -5, 0, 1, 2, 3, 4, 5, 0, 0])\n        // 0\n        // >>> prodSigns([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, 0, 0, 0])\n        // 0\n        // >>> prodSigns([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, 0, 0, 0, 0])\n        // 0\n        // >>>\
    \ prodSigns([-1, -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, 0, 0, 0, 0, 0])\n        //\
    \ 0\n        // >>> prodSigns([-1, -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, 0, 0, 0,\
    \ 0, 0, 0])\n        // 0\n        // >>> prodSigns([-1, -2, -3, -4, -5, 0, 1,\
    \ 2, 3, 4, 5, 0, 0, 0, 0, 0, 0, 0])\n        // 0\n        // >>> prodSigns([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, 0, 0, 0, 0, 0, 0, 0, 0])\n        // 0\n \
    \       // >>> prodSigns([-1, -2, -3, -4", "        // your code here\n      \
    \  return Optional.empty();", "        if (arr.size() == 0) {\n            return\
    \ Optional.empty();\n        }\n        long sum = 0;\n        long prod = 1;\n\
    \        for (Long l : arr) {\n            sum += Math.abs(l);\n            if\
    \ (l > 0) {\n                prod *= 1;\n            } else if (l < 0) {\n   \
    \             prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n        }\n        return Optional.of(sum * prod);", "       \
    \ if (arr.size() == 0) {\n            return Optional.empty();\n        }\n  \
    \      long sum = 0;\n        long prod = 1;\n        for (Long i : arr) {\n \
    \           sum += Math.abs(i);\n            prod *= Math.signum(i);\n       \
    \ }\n        return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n\
    \            return Optional.empty();\n        }\n        long sum = 0;\n    \
    \    long prod = 1;\n        for (long i : arr) {\n            sum += Math.abs(i);\n\
    \            prod *= Math.signum(i);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        for (long x\
    \ : arr) {\n            if (x > 0) {\n                sum += x;\n            \
    \    prod *= 1;\n            } else if (x < 0) {\n                sum += -x;\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n        }\n        return Optional.of(sum * prod);", "       \
    \ // Your code here\n        return Optional.empty();", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        long sum =\
    \ 0;\n        long product = 1;\n        for (Long num : arr) {\n            if\
    \ (num == 0) {\n                continue;\n            }\n            sum += Math.abs(num);\n\
    \            product *= Math.signum(num);\n        }\n        return Optional.of(sum\
    \ * product);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        long sum = 0;\n        long product = 1;\n        for (Long\
    \ i : arr) {\n            sum += Math.abs(i);\n            product *= Math.signum(i);\n\
    \        }\n        return Optional.of(sum * product);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        long sum =\
    \ 0;\n        long prod = 1;\n        for (long i : arr) {\n            sum +=\
    \ Math.abs(i);\n            if (i > 0) {\n                prod *= 1;\n       \
    \     } else if (i < 0) {\n                prod *= -1;\n            } else {\n\
    \                prod *= 0;\n            }\n        }\n        return Optional.of(sum\
    \ * prod);", "        // Write your code here\n        return Optional.empty();",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        long sum = 0;\n        long prod = 1;\n        for (long i : arr) {\n\
    \            if (i > 0) {\n                sum += i;\n                prod *=\
    \ 1;\n            } else if (i < 0) {\n                sum += -i;\n          \
    \      prod *= -1;\n            } else {\n                prod *= 0;\n       \
    \     }\n        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        long sum =\
    \ 0;\n        long prod = 1;\n        for (Long x : arr) {\n            if (x\
    \ > 0) {\n                sum += x;\n                prod *= 1;\n            }\
    \ else if (x < 0) {\n                sum += -x;\n                prod *= -1;\n\
    \            } else {\n                prod *= 0;\n            }\n        }\n\
    \        return Optional.of(sum * prod);", "        if (arr.size() == 0) return\
    \ Optional.empty();\n        long prod = 1;\n        long sum = 0;\n        for\
    \ (long i : arr) {\n            if (i > 0) {\n                prod *= 1;\n   \
    \             sum += i;\n            } else if (i < 0) {\n                prod\
    \ *= -1;\n                sum += -i;\n            } else {\n                prod\
    \ *= 0;\n            }\n        }\n        return Optional.of(sum * prod);", " \
    \       // Write your code here\n        return Optional.empty();", "        if\
    \ (arr.size() == 0) {\n            return Optional.empty();\n        }\n     \
    \   long sum = 0;\n        long prod = 1;\n        for (long x : arr) {\n    \
    \        sum += Math.abs(x);\n            prod *= Math.signum(x);\n        }\n\
    \        return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n \
    \           return Optional.empty();\n        }\n        long sum = 0;\n     \
    \   long prod = 1;\n        for (long x : arr) {\n            sum += Math.abs(x);\n\
    \            if (x > 0) {\n                prod *= 1;\n            } else if (x\
    \ < 0) {\n                prod *= -1;\n            } else {\n                prod\
    \ *= 0;\n            }\n        }\n        return Optional.of(sum * prod);", " \
    \       if (arr.size() == 0) {\n            return Optional.empty();\n       \
    \ }\n        long sum = 0;\n        long prod = 1;\n        for (Long i : arr)\
    \ {\n            sum += Math.abs(i);\n            prod *= Math.signum(i);\n  \
    \      }\n        return Optional.of(sum * prod);", "        // your code here\n\
    \        return Optional.empty();", "        if (arr.size() == 0) {\n        \
    \    return Optional.empty();\n        }\n        long sum = 0;\n        long\
    \ prod = 1;\n        for (Long i : arr) {\n            if (i == 0) {\n       \
    \         continue;\n            }\n            sum += Math.abs(i);\n        \
    \    prod *= i / Math.abs(i);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        long sum = 0;\n        long prod = 1;\n        for (long i : arr) {\n\
    \            sum += Math.abs(i);\n            prod *= Math.signum(i);\n      \
    \  }\n        return Optional.of(sum * prod);", "        // >>> prodSigns([-1,\
    \ -2, -3, -4, -5])\n        // -120\n        // >>> prodSigns([-1, -2, -3, -4,\
    \ -5, 0])\n        // 0\n        // >>> prodSigns([-1, -2, -3, -4, -5, 0, 1, 2,\
    \ 3, 4, 5])\n        // 120\n        // >>> prodSigns([-1, -2, -3, -4, -5, 0,\
    \ 1, 2, 3, 4, 5, 0])\n        // 0\n        // >>> prodSigns([])\n        // None\n\
    \        // >>> prodSigns([0])\n        // 0\n        // >>> prodSigns([1])\n\
    \        // 1\n        // >>> prodSigns([-1])\n        // -1\n        // >>> prodSigns([0,\
    \ 0, 0, 0, 0])\n        // 0\n        // >>> prodSigns([1, 1, 1, 1, 1])\n    \
    \    // 1\n        // >>> prodSigns([-1, -1, -1, -1, -1])\n        // -1\n   \
    \     // >>> prodSigns([1, -1, 1, -1, 1])\n        // -1\n        // >>> prodSigns([1,\
    \ -1, 1, -1, 1, 0])\n        // 0\n        // >>> prodSigns([1, -1, 1, -1, 1,\
    \ 0, 1, -1, 1, -1, 1])\n        // 1\n        // >>> prodSigns([1, -1, 1, -1,\
    \ 1, 0, 1, -1, 1, -1, 1, 0])\n        // 0\n        // >>> prodSigns([1, -1, 1,\
    \ -1, 1, 0, 1, -1, 1, -1, 1, 0, 1, -1, 1, -1, 1])\n        // 1\n        // >>>\
    \ prodSigns([1, -1, 1, -1, 1, 0, 1, -1, 1, -1, 1, 0, 1, -1, 1, -1, 1, 0])\n  \
    \      // 0\n        // >>> prodSigns([1, -", "        if (arr.size() == 0) {\n\
    \            return Optional.empty();\n        }\n        long sum = 0;\n    \
    \    long prod = 1;\n        for (Long i : arr) {\n            if (i > 0) {\n\
    \                sum += i;\n                prod *= 1;\n            } else if\
    \ (i < 0) {\n                sum += -i;\n                prod *= -1;\n       \
    \     } else {\n                prod *= 0;\n            }\n        }\n       \
    \ return Optional.of(sum * prod);", "        // >>> prodSigns([1, -1, 0, 2, -3])\n\
    \        // -12\n        // >>> prodSigns([])\n        // None\n        // >>>\
    \ prodSigns([-1, -1, -1, -1, -1])\n        // -1\n        // >>> prodSigns([1,\
    \ 1, 1, 1, 1])\n        // 1\n        // >>> prodSigns([-1, 1, -1, 1, -1])\n \
    \       // 0\n        // >>> prodSigns([-1, 1, -1, 1, 1])\n        // -2\n   \
    \     // >>> prodSigns([-1, 1, -1, 1, 0])\n        // 0\n        // >>> prodSigns([-1,\
    \ 1, -1, 0, 0])\n        // 0\n        // >>> prodSigns([-1, 1, 0, 0, 0])\n  \
    \      // 0\n        // >>> prodSigns([-1, 0, 0, 0, 0])\n        // 0\n      \
    \  // >>> prodSigns([0, 0, 0, 0, 0])\n        // 0\n        // >>> prodSigns([0,\
    \ 0, 0, 0, 1])\n        // 0\n        // >>> prodSigns([0, 0, 0, 1, 1])\n    \
    \    // 0\n        // >>> prodSigns([0, 0, 1, 1, 1])\n        // 0\n        //\
    \ >>> prodSigns([0, 1, 1, 1, 1])\n        // 0\n        // >>> prodSigns([1, 1,\
    \ 1, 1, 1])\n        // 1\n        // >>> prodSigns([1, 1, 1, 1, 0])\n       \
    \ // 0\n        // >>> prodSigns([1, 1, 1, 0, 0])\n        // 0\n        // >>>\
    \ prodSigns([1, 1, 0, 0, 0])\n        // 0\n        // >>> prodSigns([1, 0, 0,\
    \ 0, 0])\n        // 0\n        // >>> prodSigns([0, 0, 0, 0, -1])\n        //\
    \ 0\n        // >>> prodSigns([0, 0, 0, -1, -1])\n        // 0\n        // >>>\
    \ prodSigns([0, 0, -", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        for (long x\
    \ : arr) {\n            sum += Math.abs(x);\n            if (x > 0) {\n      \
    \          prod *= 1;\n            } else if (x < 0) {\n                prod *=\
    \ -1;\n            } else {\n                prod *= 0;\n            }\n     \
    \   }\n        return Optional.of(sum * prod);", "        if (arr.size() == 0)\
    \ {\n            return Optional.empty();\n        }\n        long prod = 1;\n\
    \        long sum = 0;\n        for (long num : arr) {\n            if (num ==\
    \ 0) {\n                continue;\n            }\n            prod *= Math.signum(num);\n\
    \            sum += Math.abs(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        for (Long i\
    \ : arr) {\n            sum += Math.abs(i);\n            prod *= Math.signum(i);\n\
    \        }\n        return Optional.of(sum * prod);", '        // Your code here',
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        long prod = 1;\n        long sum = 0;\n        for (long i : arr) {\n\
    \            if (i > 0) {\n                prod *= 1;\n            } else if (i\
    \ < 0) {\n                prod *= -1;\n            } else {\n                prod\
    \ *= 0;\n            }\n            sum += Math.abs(i);\n        }\n        return\
    \ Optional.of(sum * prod);", "        if (arr.size() == 0) {\n            return\
    \ Optional.empty();\n        }\n        long prod = 1;\n        long sum = 0;\n\
    \        for (Long num : arr) {\n            if (num > 0) {\n                prod\
    \ *= 1;\n            } else if (num < 0) {\n                prod *= -1;\n    \
    \        } else {\n                prod *= 0;\n            }\n            sum\
    \ += Math.abs(num);\n        }\n        return Optional.of(sum * prod);", "  \
    \      if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        long sum = 0;\n        long prod = 1;\n        for (long x : arr) {\n\
    \            if (x > 0) {\n                sum += x;\n                prod *=\
    \ 1;\n            } else if (x < 0) {\n                sum += -x;\n          \
    \      prod *= -1;\n            } else {\n                prod *= 0;\n       \
    \     }\n        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        long sum =\
    \ 0;\n        long prod = 1;\n        for (long num : arr) {\n            if (num\
    \ == 0) {\n                continue;\n            }\n            sum += Math.abs(num);\n\
    \            prod *= Math.signum(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        // Write your code here\n        return Optional.empty();",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        long sum = 0;\n        long prod = 1;\n        for (Long x : arr) {\n\
    \            if (x > 0) {\n                sum += x;\n                prod *=\
    \ 1;\n            } else if (x < 0) {\n                sum += -x;\n          \
    \      prod *= -1;\n            } else {\n                prod *= 0;\n       \
    \     }\n        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        long sum =\
    \ 0;\n        long prod = 1;\n        for (Long i : arr) {\n            if (i\
    \ > 0) {\n                sum += i;\n                prod *= 1;\n            }\
    \ else if (i < 0) {\n                sum += -i;\n                prod *= -1;\n\
    \            } else {\n                prod *= 0;\n            }\n        }\n\
    \        return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n \
    \           return Optional.empty();\n        }\n        long prod = 1;\n    \
    \    long sum = 0;\n        for (Long num : arr) {\n            if (num > 0) {\n\
    \                prod *= 1;\n            } else if (num < 0) {\n             \
    \   prod *= -1;\n            } else {\n                prod *= 0;\n          \
    \  }\n            sum += Math.abs(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        for (long l\
    \ : arr) {\n            if (l > 0) {\n                sum += l;\n            \
    \    prod *= 1;\n            } else if (l < 0) {\n                sum += -l;\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n        }\n        return Optional.of(sum * prod);", "       \
    \ if (arr.size() == 0) {\n            return Optional.empty();\n        }\n  \
    \      long sum = 0;\n        long prod = 1;\n        for (long n : arr) {\n \
    \           sum += Math.abs(n);\n            prod *= Math.signum(n);\n       \
    \ }\n        return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n\
    \            return Optional.empty();\n        }\n        long sum = 0;\n    \
    \    long prod = 1;\n        for (long x : arr) {\n            sum += Math.abs(x);\n\
    \            if (x > 0) {\n                prod *= 1;\n            } else if (x\
    \ < 0) {\n                prod *= -1;\n            } else {\n                prod\
    \ *= 0;\n            }\n        }\n        return Optional.of(sum * prod);", " \
    \       if (arr.size() == 0) {\n            return Optional.empty();\n       \
    \ }\n        long sum = 0;\n        long prod = 1;\n        for (long i : arr)\
    \ {\n            sum += Math.abs(i);\n            prod *= Math.signum(i);\n  \
    \      }\n        return Optional.of(sum * prod);", "        if (arr.size() ==\
    \ 0) {\n            return Optional.empty();\n        }\n        long sum = 0;\n\
    \        long prod = 1;\n        for (Long i : arr) {\n            if (i == 0)\
    \ {\n                continue;\n            }\n            sum += Math.abs(i);\n\
    \            prod *= Math.signum(i);\n        }\n        return Optional.of(sum\
    \ * prod);", '        return arr.stream().map(x -> x * Math.signum(x)).reduce((x,
    y) -> x * y);', "        // your code here\n        return Optional.empty();",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        long prod = 1;\n        long sum = 0;\n        for (long i : arr) {\n\
    \            if (i > 0) {\n                prod *= 1;\n            } else if (i\
    \ < 0) {\n                prod *= -1;\n            } else {\n                prod\
    \ *= 0;\n            }\n            sum += Math.abs(i);\n        }\n        return\
    \ Optional.of(sum * prod);", "        // Write your code here\n        return\
    \ Optional.empty();", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        for (Long x\
    \ : arr) {\n            if (x == 0) {\n                continue;\n           \
    \ }\n            sum += Math.abs(x);\n            if (x > 0) {\n             \
    \   prod *= 1;\n            } else {\n                prod *= -1;\n          \
    \  }\n        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        long prod\
    \ = 1;\n        long sum = 0;\n        for (long i : arr) {\n            if (i\
    \ > 0) {\n                prod *= 1;\n            } else if (i < 0) {\n      \
    \          prod *= -1;\n            } else {\n                prod *= 0;\n   \
    \         }\n            sum += Math.abs(i);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        for (long i:\
    \ arr) {\n            sum += Math.abs(i);\n            if (i > 0) {\n        \
    \        prod *= 1;\n            } else if (i < 0) {\n                prod *=\
    \ -1;\n            } else {\n                prod *= 0;\n            }\n     \
    \   }\n        return Optional.of(sum * prod);", "        if (arr.size() == 0)\
    \ {\n            return Optional.empty();\n        }\n        long sum = 0;\n\
    \        long prod = 1;\n        for (long i : arr) {\n            if (i > 0)\
    \ {\n                sum += i;\n                prod *= 1;\n            } else\
    \ if (i < 0) {\n                sum += -i;\n                prod *= -1;\n    \
    \        } else {\n                prod *= 0;\n            }\n        }\n    \
    \    return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n     \
    \       return Optional.empty();\n        }\n        long sum = 0;\n        long\
    \ prod = 1;\n        for (Long l : arr) {\n            sum += Math.abs(l);\n \
    \           if (l > 0) {\n                prod *= 1;\n            } else if (l\
    \ < 0) {\n                prod *= -1;\n            } else {\n                prod\
    \ *= 0;\n            }\n        }\n        return Optional.of(sum * prod);", " \
    \       if (arr.size() == 0) {\n            return Optional.empty();\n       \
    \ }\n        long prod = 1;\n        long sum = 0;\n        for (long i : arr)\
    \ {\n            if (i > 0) {\n                prod *= 1;\n            } else\
    \ if (i < 0) {\n                prod *= -1;\n            } else {\n          \
    \      prod *= 0;\n            }\n            sum += Math.abs(i);\n        }\n\
    \        return Optional.of(sum * prod);", "        // >>> prodSigns([-1, -2,\
    \ -3, 4, 5])\n        // -1\n        // >>> prodSigns([-1, -2, -3, 0, 5])\n  \
    \      // 0\n        // >>> prodSigns([-1, -2, -3, 0, 0])\n        // 0\n    \
    \    // >>> prodSigns([])\n        // None\n        // >>> prodSigns([-1, -2,\
    \ -3, 4, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,", "   \
    \     // >>> prodSigns([-1, -2, 3, 4, 5])\n        // -1\n        // >>> prodSigns([-1,\
    \ -2, 3, 4, 5, 0])\n        // 0\n        // >>> prodSigns([])\n        // None\n\
    \        // >>> prodSigns([-1, -2, 3, 4, 5, 0, 0])\n        // 0\n        // >>>\
    \ prodSigns([-1, -2, 3, 4, 5, 0, 0, 0])\n        // 0\n        // >>> prodSigns([-1,\
    \ -2, 3, 4, 5, 0, 0, 0, 0])\n        // 0\n        // >>> prodSigns([-1, -2, 3,\
    \ 4, 5, 0, 0, 0, 0, 0])\n        // 0\n        // >>> prodSigns([-1, -2, 3, 4,\
    \ 5, 0, 0, 0, 0, 0, 0])\n        // 0\n        // >>> prodSigns([-1, -2, 3, 4,\
    \ 5, 0, 0, 0, 0, 0, 0, 0])\n        // 0\n        // >>> prodSigns([-1, -2, 3,\
    \ 4, 5, 0, 0, 0, 0, 0, 0, 0, 0])\n        // 0\n        // >>> prodSigns([-1,\
    \ -2, 3, 4, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n        // 0\n        // >>> prodSigns([-1,\
    \ -2, 3, 4, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n        // 0\n        // >>> prodSigns([-1,\
    \ -2, 3, 4, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n        // 0\n        // >>>\
    \ prodSigns([-1, -2, 3, 4, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n        //\
    \ 0\n        // >>> prodSigns([-1, -2, 3, 4, 5, 0, 0, 0, 0, 0,", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        long sum =\
    \ 0;\n        long product = 1;\n        for (long i : arr) {\n            if\
    \ (i > 0) {\n                product *= 1;\n            } else if (i < 0) {\n\
    \                product *= -1;\n            } else {\n                product\
    \ *= 0;\n            }\n            sum += Math.abs(i);\n        }\n        return\
    \ Optional.of(sum * product);", "        if (arr.size() == 0) {\n            return\
    \ Optional.empty();\n        }\n        long sum = 0;\n        long prod = 1;\n\
    \        for (long x : arr) {\n            if (x > 0) {\n                sum +=\
    \ x;\n                prod *= 1;\n            } else if (x < 0) {\n          \
    \      sum += -x;\n                prod *= -1;\n            } else {\n       \
    \         prod *= 0;\n            }\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        for (long l\
    \ : arr) {\n            sum += Math.abs(l);\n            prod *= Math.signum(l);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        long sum =\
    \ 0;\n        long prod = 1;\n        for (long n : arr) {\n            sum +=\
    \ Math.abs(n);\n            prod *= Math.signum(n);\n        }\n        return\
    \ Optional.of(sum * prod);", "        // Write your code here\n        return\
    \ Optional.empty();", "        // Write your code here\n        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        long sum =\
    \ 0;\n        long prod = 1;\n        for (long i : arr) {\n            sum +=\
    \ Math.abs(i);\n            prod *= Math.signum(i);\n        }\n        return\
    \ Optional.of(sum * prod);", "        // Your code here\n        return Optional.empty();",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        long sum = 0;\n        long prod = 1;\n        for (long x : arr) {\n\
    \            sum += Math.abs(x);\n            prod *= Math.signum(x);\n      \
    \  }\n        return Optional.of(sum * prod);", "        if (arr.size() == 0)\
    \ {\n            return Optional.empty();\n        }\n        long sum = 0;\n\
    \        long prod = 1;\n        for (Long l : arr) {\n            sum += Math.abs(l);\n\
    \            prod *= l > 0 ? 1 : l < 0 ? -1 : 0;\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        for (long x\
    \ : arr) {\n            sum += Math.abs(x);\n            prod *= Math.signum(x);\n\
    \        }\n        return Optional.of(sum * prod);", "        // Your code here\n\
    \        return Optional.empty();", "        if (arr.size() == 0) {\n        \
    \    return Optional.empty();\n        }\n        long sum = 0;\n        long\
    \ prod = 1;\n        for (long n : arr) {\n            sum += Math.abs(n);\n \
    \           if (n > 0) {\n                prod *= 1;\n            } else if (n\
    \ < 0) {\n                prod *= -1;\n            } else {\n                prod\
    \ *= 0;\n            }\n        }\n        return Optional.of(sum * prod);", " \
    \       if (arr.size() == 0) return Optional.empty();\n        long sum = 0;\n\
    \        long prod = 1;\n        for (long n : arr) {\n            sum += Math.abs(n);\n\
    \            prod *= Math.signum(n);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        for (Long el\
    \ : arr) {\n            sum += Math.abs(el);\n            prod *= Math.signum(el);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        long sum =\
    \ 0;\n        long prod = 1;\n        for (long i : arr) {\n            sum +=\
    \ Math.abs(i);\n            prod *= Math.signum(i);\n        }\n        return\
    \ Optional.of(sum * prod);", "        if (arr.size() == 0) {\n            return\
    \ Optional.empty();\n        }\n        long sum = 0;\n        long prod = 1;\n\
    \        for (long x : arr) {\n            sum += Math.abs(x);\n            prod\
    \ *= Math.signum(x);\n        }\n        return Optional.of(sum * prod);"]
stop_tokens:
- "\n    }\n"

name: HumanEval_128_prod_signs
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // You are given an array arr of integers and you need to return\n\
  \    // sum of magnitudes of integers multiplied by product of all signs\n    //\
  \ of each number in the array, represented by 1, -1 or 0.\n    // Note: return None\
  \ for empty arr.\n    // >>> prod_signs([1, 2, 2, -4]) \n    // 9\n    public static\
  \ Optional<Integer> prodSigns(ArrayList<Integer> arr) {\n"
tests: "return Optional.empty();\n    }\n    public static void main(String[] args)\
  \ {\n    assert(prodSigns((new ArrayList<Integer>(Arrays.asList((int)1, (int)2,\
  \ (int)2, (int)-4)))).equals(-9));\n    assert(prodSigns((new ArrayList<Integer>(Arrays.asList((int)0,\
  \ (int)1)))).equals(0));\n    assert(prodSigns((new ArrayList<Integer>(Arrays.asList((int)1,\
  \ (int)1, (int)1, (int)2, (int)3, (int)-1, (int)1)))).equals(-10));\n    assert(prodSigns((new\
  \ ArrayList<Integer>(Arrays.asList()))).equals(Optional.empty()));\n    assert(prodSigns((new\
  \ ArrayList<Integer>(Arrays.asList((int)2, (int)4, (int)1, (int)2, (int)-1, (int)-1,\
  \ (int)9)))).equals(20));\n    assert(prodSigns((new ArrayList<Integer>(Arrays.asList((int)-1,\
  \ (int)1, (int)-1, (int)1)))).equals(4));\n    assert(prodSigns((new ArrayList<Integer>(Arrays.asList((int)-1,\
  \ (int)1, (int)1, (int)1)))).equals(-4));\n    assert(prodSigns((new ArrayList<Integer>(Arrays.asList((int)-1,\
  \ (int)1, (int)1, (int)0)))).equals(0));\n    }\n\n}\n"
completions: ["        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num > 0) {\n                prod *= 1;\n            } else if (num < 0) {\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n            sum += Math.abs(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num == 0) {\n                continue;\n            }\n            prod *=\
    \ num / Math.abs(num);\n            sum += Math.abs(num);\n        }\n       \
    \ return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n        \
    \    return Optional.empty();\n        }\n        int prod = 1;\n        int sum\
    \ = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int num =\
    \ arr.get(i);\n            if (num == 0) {\n                continue;\n      \
    \      }\n            prod *= num > 0 ? 1 : -1;\n            sum += Math.abs(num);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int sum =\
    \ 0;\n        int prod = 1;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            int num = arr.get(i);\n            if (num > 0) {\n             \
    \   sum += num;\n                prod *= 1;\n            } else if (num < 0) {\n\
    \                sum += Math.abs(num);\n                prod *= -1;\n        \
    \    } else {\n                prod *= 0;\n            }\n        }\n        return\
    \ Optional.of(sum * prod);", "        if (arr.size() == 0) {\n            return\
    \ Optional.empty();\n        }\n        int prod = 1;\n        int sum = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n\
    \            if (num == 0) {\n                continue;\n            }\n     \
    \       prod *= num / Math.abs(num);\n            sum += Math.abs(num);\n    \
    \    }\n        return Optional.of(sum * prod);", "        if (arr.size() == 0)\
    \ {\n            return Optional.empty();\n        }\n        int prod = 1;\n\
    \        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n      \
    \      int sign = arr.get(i) > 0 ? 1 : arr.get(i) < 0 ? -1 : 0;\n            prod\
    \ *= sign;\n            sum += Math.abs(arr.get(i));\n        }\n        return\
    \ Optional.of(sum * prod);", "        if (arr.size() == 0) {\n            return\
    \ Optional.empty();\n        }\n        int prod = 1;\n        int sum = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n\
    \            if (num > 0) {\n                prod *= 1;\n            } else if\
    \ (num < 0) {\n                prod *= -1;\n            } else {\n           \
    \     prod *= 0;\n            }\n            sum += Math.abs(num);\n        }\n\
    \        return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n \
    \           return Optional.empty();\n        }\n        int prod = 1;\n     \
    \   int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n           \
    \ int num = arr.get(i);\n            if (num == 0) {\n                continue;\n\
    \            }\n            prod *= num > 0 ? 1 : -1;\n            sum += Math.abs(num);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int num = arr.get(i);\n            if (num > 0) {\n              \
    \  prod *= 1;\n            } else if (num < 0) {\n                prod *= -1;\n\
    \            } else {\n                prod *= 0;\n            }\n           \
    \ sum += Math.abs(num);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int prod = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num == 0) {\n   \
    \             continue;\n            }\n            prod *= num / Math.abs(num);\n\
    \            sum += Math.abs(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num < 0) {\n                prod *= -1;\n            } else if (num == 0) {\n\
    \                prod = 0;\n                break;\n            }\n          \
    \  sum += Math.abs(num);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int prod = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num > 0) {\n    \
    \            prod *= 1;\n            } else if (num < 0) {\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \          sum += Math.abs(num);\n        }\n        return Optional.of(sum *\
    \ prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num == 0) {\n                continue;\n            }\n            prod *=\
    \ num / Math.abs(num);\n            sum += Math.abs(num);\n        }\n       \
    \ return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n        \
    \    return Optional.empty();\n        }\n        Integer prod = 1;\n        Integer\
    \ sum = 0;\n        for (Integer i : arr) {\n            if (i > 0) {\n      \
    \          prod *= 1;\n            } else if (i < 0) {\n                prod *=\
    \ -1;\n            } else {\n                prod *= 0;\n            }\n     \
    \       sum += Math.abs(i);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int prod = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num > 0) {\n    \
    \            prod *= 1;\n            } else if (num < 0) {\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \          sum += Math.abs(num);\n        }\n        return Optional.of(sum *\
    \ prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int val = arr.get(i);\n            if\
    \ (val == 0) {\n                continue;\n            }\n            if (val\
    \ < 0) {\n                prod *= -1;\n            }\n            sum += Math.abs(val);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int num = arr.get(i);\n            if (num == 0) {\n             \
    \   continue;\n            }\n            prod *= Math.signum(num);\n        \
    \    sum += Math.abs(num);\n        }\n        return Optional.of(sum * (int)\
    \ prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num == 0) {\n                continue;\n            }\n            prod *=\
    \ Math.signum(num);\n            sum += Math.abs(num);\n        }\n        return\
    \ Optional.of(sum * prod);", "        if (arr.size() == 0) {\n            return\
    \ Optional.empty();\n        }\n        int prod = 1;\n        int sum = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n\
    \            if (num == 0) {\n                continue;\n            }\n     \
    \       prod *= num / Math.abs(num);\n            sum += Math.abs(num);\n    \
    \    }\n        return Optional.of(sum * prod);", "        if (arr.size() == 0)\
    \ {\n            return Optional.empty();\n        }\n        int prod = 1;\n\
    \        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n      \
    \      if (arr.get(i) > 0) {\n                prod *= 1;\n            } else if\
    \ (arr.get(i) < 0) {\n                prod *= -1;\n            } else {\n    \
    \            prod *= 0;\n            }\n            sum += Math.abs(arr.get(i));\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int num = arr.get(i);\n            if (num > 0) {\n              \
    \  prod *= 1;\n            } else if (num < 0) {\n                prod *= -1;\n\
    \            } else {\n                prod *= 0;\n            }\n           \
    \ sum += Math.abs(num);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int prod = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num > 0) {\n    \
    \            prod *= 1;\n            } else if (num < 0) {\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \          sum += Math.abs(num);\n        }\n        return Optional.of(sum *\
    \ prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int sum = 0;\n        int prod = 1;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num > 0) {\n                sum += num;\n                prod *= 1;\n     \
    \       } else if (num < 0) {\n                sum += num * -1;\n            \
    \    prod *= -1;\n            } else {\n                prod *= 0;\n         \
    \   }\n        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int num = arr.get(i);\n            if (num > 0) {\n              \
    \  prod *= 1;\n            } else if (num < 0) {\n                prod *= -1;\n\
    \            } else {\n                prod *= 0;\n            }\n           \
    \ sum += Math.abs(num);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int sum = 0;\n        int prod = 1;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num > 0) {\n    \
    \            sum += num;\n                prod *= 1;\n            } else if (num\
    \ < 0) {\n                sum += Math.abs(num);\n                prod *= -1;\n\
    \            } else {\n                prod *= 0;\n            }\n        }\n\
    \        return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n \
    \           return Optional.empty();\n        }\n        int prod = 1;\n     \
    \   int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n           \
    \ int num = arr.get(i);\n            if (num == 0) {\n                continue;\n\
    \            }\n            prod *= num > 0 ? 1 : -1;\n            sum += Math.abs(num);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int num = arr.get(i);\n            if (num > 0) {\n              \
    \  prod *= 1;\n            } else if (num < 0) {\n                prod *= -1;\n\
    \            } else {\n                prod *= 0;\n            }\n           \
    \ sum += Math.abs(num);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int sum = 0;\n        int prod = 1;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int sign = arr.get(i) >= 0 ? 1 : -1;\n            int mag\
    \ = Math.abs(arr.get(i));\n            sum += mag;\n            prod *= sign;\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i : arr) {\n            if (i > 0)\
    \ {\n                prod *= 1;\n            } else if (i < 0) {\n           \
    \     prod *= -1;\n            } else {\n                prod *= 0;\n        \
    \    }\n            sum += Math.abs(i);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int sum = 0;\n        int prod = 1;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num > 0) {\n                sum += num;\n                prod *= 1;\n     \
    \       } else if (num < 0) {\n                sum += Math.abs(num);\n       \
    \         prod *= -1;\n            } else {\n                prod *= 0;\n    \
    \        }\n        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int num = arr.get(i);\n            if (num == 0) {\n             \
    \   continue;\n            }\n            prod *= Math.signum(num);\n        \
    \    sum += Math.abs(num);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int prod = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num == 0) {\n   \
    \             continue;\n            }\n            prod *= num / Math.abs(num);\n\
    \            sum += Math.abs(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num == 0) {\n                continue;\n            }\n            prod *=\
    \ num / Math.abs(num);\n            sum += Math.abs(num);\n        }\n       \
    \ return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n        \
    \    return Optional.empty();\n        }\n        int prod = 1;\n        int sum\
    \ = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int num =\
    \ arr.get(i);\n            if (num == 0) {\n                continue;\n      \
    \      }\n            prod *= Math.signum(num);\n            sum += Math.abs(num);\n\
    \        }\n        return Optional.of(sum * (int) prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int num = arr.get(i);\n            if (num == 0) {\n             \
    \   continue;\n            }\n            prod *= num < 0 ? -1 : 1;\n        \
    \    sum += Math.abs(num);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int sum = 0;\n        int prod = 1;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num < 0) {\n    \
    \            prod *= -1;\n            } else if (num == 0) {\n               \
    \ prod = 0;\n                break;\n            }\n            sum += Math.abs(num);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int sign = arr.get(i) > 0 ? 1 : arr.get(i) < 0 ? -1 : 0;\n       \
    \     prod *= sign;\n            sum += Math.abs(arr.get(i));\n        }\n   \
    \     return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n    \
    \        return Optional.empty();\n        }\n        int sum = 0;\n        int\
    \ prod = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            int num\
    \ = arr.get(i);\n            if (num == 0) {\n                continue;\n    \
    \        }\n            sum += Math.abs(num);\n            prod *= num / Math.abs(num);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int num = arr.get(i);\n            if (num == 0) {\n             \
    \   continue;\n            }\n            if (num < 0) {\n                prod\
    \ *= -1;\n            }\n            sum += Math.abs(num);\n        }\n      \
    \  return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n       \
    \     return Optional.empty();\n        }\n        int sum = 0;\n        int prod\
    \ = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            int num =\
    \ arr.get(i);\n            if (num > 0) {\n                sum += num;\n     \
    \           prod *= 1;\n            } else if (num < 0) {\n                sum\
    \ += Math.abs(num);\n                prod *= -1;\n            } else {\n     \
    \           prod *= 0;\n            }\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) return Optional.empty();\n        int\
    \ sum = 0;\n        int prod = 1;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int num = arr.get(i);\n            if (num == 0) continue;\n\
    \            sum += Math.abs(num);\n            prod *= Math.signum(num);\n  \
    \      }\n        return Optional.of(sum * prod);", "        if (arr.size() ==\
    \ 0) {\n            return Optional.empty();\n        }\n        int prod = 1;\n\
    \        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n      \
    \      int num = arr.get(i);\n            if (num == 0) {\n                continue;\n\
    \            }\n            prod *= num / Math.abs(num);\n            sum += Math.abs(num);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int num = arr.get(i);\n            if (num > 0) {\n              \
    \  prod *= 1;\n            } else if (num < 0) {\n                prod *= -1;\n\
    \            } else {\n                prod *= 0;\n            }\n           \
    \ sum += Math.abs(num);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int sum = 0;\n        int prod = 1;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num == 0) {\n   \
    \             continue;\n            }\n            sum += Math.abs(num);\n  \
    \          prod *= Math.signum(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num > 0) {\n                prod *= 1;\n            } else if (num < 0) {\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n            sum += Math.abs(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num == 0) {\n                continue;\n            }\n            prod *=\
    \ num < 0 ? -1 : 1;\n            sum += Math.abs(num);\n        }\n        return\
    \ Optional.of(sum * prod);", "        if (arr.size() == 0) {\n            return\
    \ Optional.empty();\n        }\n        int prod = 1;\n        int sum = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n\
    \            if (num > 0) {\n                prod *= 1;\n            } else if\
    \ (num < 0) {\n                prod *= -1;\n            } else {\n           \
    \     prod *= 0;\n            }\n            sum += Math.abs(num);\n        }\n\
    \        return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n \
    \           return Optional.empty();\n        }\n        int prod = 1;\n     \
    \   int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n           \
    \ int num = arr.get(i);\n            if (num > 0) {\n                prod *= 1;\n\
    \            } else if (num < 0) {\n                prod *= -1;\n            }\
    \ else {\n                prod *= 0;\n            }\n            sum += Math.abs(num);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int num = arr.get(i);\n            if (num < 0) {\n              \
    \  prod *= -1;\n            } else if (num == 0) {\n                prod = 0;\n\
    \                sum = 0;\n                break;\n            }\n           \
    \ sum += Math.abs(num);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) return Optional.empty();\n        int prod = 1;\n\
    \        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n      \
    \      int num = arr.get(i);\n            if (num == 0) continue;\n          \
    \  prod *= num > 0 ? 1 : -1;\n            sum += Math.abs(num);\n        }\n \
    \       return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n  \
    \          return Optional.empty();\n        }\n        int sum = 0;\n       \
    \ int prod = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            int\
    \ num = arr.get(i);\n            if (num > 0) {\n                sum += num;\n\
    \                prod *= 1;\n            } else if (num < 0) {\n             \
    \   sum += Math.abs(num);\n                prod *= -1;\n            } else {\n\
    \                prod *= 0;\n            }\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int sum = 0;\n        int prod = 1;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num > 0) {\n                sum += num;\n                prod *= 1;\n     \
    \       } else if (num < 0) {\n                sum += Math.abs(num);\n       \
    \         prod *= -1;\n            } else {\n                prod *= 0;\n    \
    \        }\n        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int num = arr.get(i);\n            if (num == 0) {\n             \
    \   continue;\n            }\n            prod *= num > 0 ? 1 : -1;\n        \
    \    sum += Math.abs(num);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int prod = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num > 0) {\n    \
    \            prod *= 1;\n            } else if (num < 0) {\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \          sum += Math.abs(num);\n        }\n        return Optional.of(sum *\
    \ prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            if (arr.get(i) > 0) {\n             \
    \   prod *= 1;\n            } else if (arr.get(i) < 0) {\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \          sum += Math.abs(arr.get(i));\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int sum = 0;\n        int prod = 1;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num > 0) {\n                sum += num;\n                prod *= 1;\n     \
    \       } else if (num < 0) {\n                sum += Math.abs(num);\n       \
    \         prod *= -1;\n            } else {\n                prod *= 0;\n    \
    \        }\n        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int num = arr.get(i);\n            if (num == 0) {\n             \
    \   continue;\n            }\n            prod *= num > 0 ? 1 : -1;\n        \
    \    sum += Math.abs(num);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int prod = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int x = arr.get(i);\n            if (x == 0) {\n       \
    \         continue;\n            }\n            prod *= Math.signum(x);\n    \
    \        sum += Math.abs(x);\n        }\n        return Optional.of(sum * (int)prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int prod = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num > 0) {\n    \
    \            prod *= 1;\n            } else if (num < 0) {\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \          sum += Math.abs(num);\n        }\n        return Optional.of(sum *\
    \ prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num > 0) {\n                prod *= 1;\n            } else if (num < 0) {\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n            sum += Math.abs(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int sum = 0;\n        int prod = 1;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            sum += Math.abs(arr.get(i));\n      \
    \      prod *= Math.signum(arr.get(i));\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num > 0) {\n                prod *= 1;\n            } else if (num < 0) {\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n            sum += Math.abs(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num == 0) {\n                continue;\n            }\n            sum += Math.abs(num);\n\
    \            prod *= Math.signum(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        // Your code here\n        return Optional.empty();", " \
    \       if (arr.size() == 0) {\n            return Optional.empty();\n       \
    \ }\n        int prod = 1;\n        int sum = 0;\n        for (int i = 0; i <\
    \ arr.size(); i++) {\n            int num = arr.get(i);\n            if (num ==\
    \ 0) {\n                continue;\n            }\n            prod *= num > 0\
    \ ? 1 : -1;\n            sum += Math.abs(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num == 0) {\n                continue;\n            }\n            prod *=\
    \ num / Math.abs(num);\n            sum += Math.abs(num);\n        }\n       \
    \ return Optional.of(sum * prod);", "        if (arr.size() == 0) return Optional.empty();\n\
    \        int prod = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num == 0) continue;\n\
    \            prod *= Math.signum(num);\n            sum += Math.abs(num);\n  \
    \      }\n        return Optional.of(sum * (int) prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int num = arr.get(i);\n            if (num > 0) {\n              \
    \  prod *= 1;\n            } else if (num < 0) {\n                prod *= -1;\n\
    \            } else {\n                prod *= 0;\n            }\n           \
    \ sum += Math.abs(num);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int prod = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num > 0) {\n    \
    \            prod *= 1;\n            } else if (num < 0) {\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \          sum += Math.abs(num);\n        }\n        return Optional.of(sum *\
    \ prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int sum = 0;\n        int prod = 1;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num > 0) {\n                sum += num;\n                prod *= 1;\n     \
    \       } else if (num < 0) {\n                sum += Math.abs(num);\n       \
    \         prod *= -1;\n            } else {\n                prod *= 0;\n    \
    \        }\n        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int num = arr.get(i);\n            if (num == 0) {\n             \
    \   continue;\n            }\n            prod *= Math.signum(num);\n        \
    \    sum += Math.abs(num);\n        }\n        return Optional.of(sum * (int)\
    \ prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num == 0) {\n                continue;\n            }\n            if (num\
    \ < 0) {\n                prod *= -1;\n            }\n            sum += Math.abs(num);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int num = arr.get(i);\n            if (num == 0) {\n             \
    \   continue;\n            }\n            prod *= num / Math.abs(num);\n     \
    \       sum += Math.abs(num);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int prod = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num == 0) {\n   \
    \             continue;\n            }\n            if (num < 0) {\n         \
    \       prod *= -1;\n            }\n            sum += Math.abs(num);\n      \
    \  }\n        return Optional.of(sum * prod);", "        if (arr.size() == 0)\
    \ {\n            return Optional.empty();\n        }\n        int prod = 1;\n\
    \        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n      \
    \      int num = arr.get(i);\n            if (num > 0) {\n                prod\
    \ *= 1;\n            } else if (num < 0) {\n                prod *= -1;\n    \
    \        } else {\n                prod *= 0;\n            }\n            sum\
    \ += Math.abs(num);\n        }\n        return Optional.of(sum * prod);", "  \
    \      if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int prod = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num > 0) {\n    \
    \            prod *= 1;\n            } else if (num < 0) {\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \          sum += Math.abs(num);\n        }\n        return Optional.of(sum *\
    \ prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int sum = 0;\n        int prod = 1;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num > 0) {\n                sum += num;\n                prod *= 1;\n     \
    \       } else if (num < 0) {\n                sum += Math.abs(num);\n       \
    \         prod *= -1;\n            } else {\n                prod *= 0;\n    \
    \        }\n        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int sum =\
    \ 0;\n        int prod = 1;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            int x = arr.get(i);\n            if (x > 0) {\n                sum\
    \ += x;\n                prod *= 1;\n            } else if (x < 0) {\n       \
    \         sum += -x;\n                prod *= -1;\n            } else {\n    \
    \            prod *= 0;\n            }\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int sum = 0;\n        int prod = 1;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num > 0) {\n                sum += num;\n                prod *= 1;\n     \
    \       } else if (num < 0) {\n                sum += -num;\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \      }\n        return Optional.of(sum * prod);", "        if (arr.size() ==\
    \ 0) {\n            return Optional.empty();\n        }\n        int sum = 0;\n\
    \        int prod = 1;\n        for (int i = 0; i < arr.size(); i++) {\n     \
    \       int num = arr.get(i);\n            if (num > 0) {\n                sum\
    \ += num;\n                prod *= 1;\n            } else if (num < 0) {\n   \
    \             sum += num * -1;\n                prod *= -1;\n            } else\
    \ {\n                prod *= 0;\n            }\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int sum = 0;\n        int prod = 1;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num == 0) {\n                continue;\n            }\n            sum += Math.abs(num);\n\
    \            if (num > 0) {\n                prod *= 1;\n            } else {\n\
    \                prod *= -1;\n            }\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num > 0) {\n                prod *= 1;\n            } else if (num < 0) {\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n            sum += Math.abs(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num == 0) {\n                continue;\n            }\n            prod *=\
    \ num / Math.abs(num);\n            sum += Math.abs(num);\n        }\n       \
    \ return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n        \
    \    return Optional.empty();\n        }\n        int prod = 1;\n        int sum\
    \ = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int num =\
    \ arr.get(i);\n            if (num == 0) {\n                continue;\n      \
    \      }\n            prod *= num / Math.abs(num);\n            sum += Math.abs(num);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           if (arr.get(i) == 0) {\n                continue;\n            }\n\
    \            prod *= arr.get(i) > 0 ? 1 : -1;\n            sum += Math.abs(arr.get(i));\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int sum =\
    \ 0;\n        int prod = 1;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            int num = arr.get(i);\n            if (num < 0) {\n             \
    \   prod *= -1;\n            } else if (num == 0) {\n                prod = 0;\n\
    \                break;\n            }\n            sum += Math.abs(num);\n  \
    \      }\n        return Optional.of(sum * prod);", "        if (arr.size() ==\
    \ 0) return Optional.empty();\n        int sum = 0;\n        int prod = 1;\n \
    \       for (int i = 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n\
    \            if (num > 0) {\n                sum += num;\n                prod\
    \ *= 1;\n            } else if (num < 0) {\n                sum += Math.abs(num);\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n        }\n        return Optional.of(sum * prod);", "       \
    \ if (arr.size() == 0) {\n            return Optional.empty();\n        }\n  \
    \      int sum = 0;\n        int prod = 1;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num == 0) {\n   \
    \             continue;\n            }\n            sum += Math.abs(num);\n  \
    \          prod *= Math.signum(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num > 0) {\n                prod *= 1;\n            } else if (num < 0) {\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n            sum += Math.abs(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num == 0) {\n                continue;\n            }\n            prod *=\
    \ num / Math.abs(num);\n            sum += Math.abs(num);\n        }\n       \
    \ return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n        \
    \    return Optional.empty();\n        }\n        int sum = 0;\n        int prod\
    \ = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            int num =\
    \ arr.get(i);\n            if (num == 0) {\n                continue;\n      \
    \      }\n            sum += Math.abs(num);\n            prod *= num / Math.abs(num);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int n = arr.get(i);\n            if (n > 0) {\n                prod\
    \ *= 1;\n            } else if (n < 0) {\n                prod *= -1;\n      \
    \      } else {\n                prod *= 0;\n            }\n            sum +=\
    \ Math.abs(n);\n        }\n        return Optional.of(sum * prod);", "       \
    \ if (arr.size() == 0) {\n            return Optional.empty();\n        }\n  \
    \      int prod = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num == 0) {\n   \
    \             continue;\n            }\n            prod *= num > 0 ? 1 : -1;\n\
    \            sum += Math.abs(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int sign = Integer.signum(arr.get(i));\n\
    \            prod *= sign;\n            sum += Math.abs(arr.get(i));\n       \
    \ }\n        return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n\
    \            return Optional.empty();\n        }\n        int prod = 1;\n    \
    \    int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n          \
    \  int x = arr.get(i);\n            if (x > 0) {\n                prod *= 1;\n\
    \            } else if (x < 0) {\n                prod *= -1;\n            } else\
    \ {\n                prod *= 0;\n            }\n            sum += Math.abs(x);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int num = arr.get(i);\n            if (num > 0) {\n              \
    \  prod *= 1;\n            } else if (num < 0) {\n                prod *= -1;\n\
    \            } else {\n                prod *= 0;\n            }\n           \
    \ sum += Math.abs(num);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int prod = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num == 0) {\n   \
    \             continue;\n            }\n            if (num < 0) {\n         \
    \       prod *= -1;\n            }\n            sum += Math.abs(num);\n      \
    \  }\n        return Optional.of(sum * prod);", "        if (arr.size() == 0)\
    \ {\n            return Optional.empty();\n        }\n        int prod = 1;\n\
    \        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n      \
    \      int num = arr.get(i);\n            if (num == 0) {\n                continue;\n\
    \            }\n            prod *= num / Math.abs(num);\n            sum += Math.abs(num);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int num = arr.get(i);\n            if (num == 0) {\n             \
    \   continue;\n            }\n            prod *= num / Math.abs(num);\n     \
    \       sum += Math.abs(num);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int sum = 0;\n        int prod = 1;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num == 0) {\n   \
    \             continue;\n            }\n            sum += Math.abs(num);\n  \
    \          prod *= (num > 0) ? 1 : -1;\n        }\n        return Optional.of(sum\
    \ * prod);", "        // Your code here\n        return Optional.empty();", " \
    \       if (arr.size() == 0) {\n            return Optional.empty();\n       \
    \ }\n        int prod = 1;\n        int sum = 0;\n        for (int i = 0; i <\
    \ arr.size(); i++) {\n            int num = arr.get(i);\n            if (num >\
    \ 0) {\n                prod *= 1;\n            } else if (num < 0) {\n      \
    \          prod *= -1;\n            } else {\n                prod *= 0;\n   \
    \         }\n            sum += Math.abs(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num > 0) {\n                prod *= 1;\n            } else if (num < 0) {\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n            sum += Math.abs(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num > 0) {\n                prod *= 1;\n            } else if (num < 0) {\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n            sum += Math.abs(num);\n        }\n        return Optional.of(sum\
    \ * prod);", '        return arr.stream().reduce((x, y) -> Math.abs(x) * Math.abs(y)
    * (x > 0 ? 1 : x < 0 ? -1 : 0) * (y > 0 ? 1 : y < 0 ? -1 : 0));', "        if\
    \ (arr.size() == 0) {\n            return Optional.empty();\n        }\n     \
    \   int prod = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num < 0) {\n    \
    \            prod *= -1;\n            } else if (num == 0) {\n               \
    \ prod = 0;\n                sum = 0;\n                break;\n            }\n\
    \            sum += Math.abs(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int sum = 0;\n        int prod = 1;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num == 0) {\n                continue;\n            }\n            sum += Math.abs(num);\n\
    \            prod *= Math.signum(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int x :\
    \ arr) {\n            prod *= Math.signum(x);\n            sum += Math.abs(x);\n\
    \        }\n        return Optional.of(sum * (int)prod);", '        return arr.stream().reduce((a,
    b) -> a * Math.abs(b) * Math.signum(b));', "        if (arr.size() == 0) {\n \
    \           return Optional.empty();\n        }\n        int sum = 0;\n      \
    \  int prod = 1;\n        for (int i = 0; i < arr.size(); i++) {\n           \
    \ int x = arr.get(i);\n            if (x == 0) {\n                continue;\n\
    \            }\n            sum += Math.abs(x);\n            prod *= Math.signum(x);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int num = arr.get(i);\n            if (num > 0) {\n              \
    \  prod *= 1;\n            } else if (num < 0) {\n                prod *= -1;\n\
    \            } else {\n                prod *= 0;\n            }\n           \
    \ sum += Math.abs(num);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int prod = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int sign = arr.get(i) >= 0 ? 1 : -1;\n            prod *=\
    \ sign;\n            sum += Math.abs(arr.get(i));\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num == 0) {\n                continue;\n            }\n            prod *=\
    \ num > 0 ? 1 : -1;\n            sum += Math.abs(num);\n        }\n        return\
    \ Optional.of(sum * prod);", "        if (arr.size() == 0) {\n            return\
    \ Optional.empty();\n        }\n        int prod = 1;\n        int sum = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n\
    \            if (num > 0) {\n                prod *= 1;\n            } else if\
    \ (num < 0) {\n                prod *= -1;\n            } else {\n           \
    \     prod *= 0;\n            }\n            sum += Math.abs(num);\n        }\n\
    \        return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n \
    \           return Optional.empty();\n        }\n        int prod = 1;\n     \
    \   int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n           \
    \ if (arr.get(i) == 0) {\n                continue;\n            }\n         \
    \   prod *= arr.get(i) > 0 ? 1 : -1;\n            sum += Math.abs(arr.get(i));\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int num = arr.get(i);\n            if (num == 0) {\n             \
    \   continue;\n            }\n            prod *= num / Math.abs(num);\n     \
    \       sum += Math.abs(num);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int prod = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num > 0) {\n    \
    \            prod *= 1;\n            } else if (num < 0) {\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \          sum += Math.abs(num);\n        }\n        return Optional.of(sum *\
    \ prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num > 0) {\n                prod *= 1;\n            } else if (num < 0) {\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n            sum += Math.abs(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        // Your code here\n        return Optional.empty();", " \
    \       if (arr.size() == 0) {\n            return Optional.empty();\n       \
    \ }\n        int sum = 0;\n        int prod = 1;\n        for (int i = 0; i <\
    \ arr.size(); i++) {\n            int num = arr.get(i);\n            if (num >\
    \ 0) {\n                sum += num;\n                prod *= 1;\n            }\
    \ else if (num < 0) {\n                sum += -num;\n                prod *= -1;\n\
    \            } else {\n                prod *= 0;\n            }\n        }\n\
    \        return Optional.of(sum * prod);", "        if (arr.size() == 0) return\
    \ Optional.empty();\n        int prod = 1;\n        int sum = 0;\n        for\
    \ (int i = 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n    \
    \        if (num < 0) prod *= -1;\n            else if (num > 0) prod *= 1;\n\
    \            else prod *= 0;\n            sum += Math.abs(num);\n        }\n \
    \       return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n  \
    \          return Optional.empty();\n        }\n        int prod = 1;\n      \
    \  int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int\
    \ num = arr.get(i);\n            if (num > 0) {\n                prod *= 1;\n\
    \            } else if (num < 0) {\n                prod *= -1;\n            }\
    \ else {\n                prod *= 0;\n            }\n            sum += Math.abs(num);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int num = arr.get(i);\n            if (num > 0) {\n              \
    \  prod *= 1;\n            } else if (num < 0) {\n                prod *= -1;\n\
    \            } else {\n                prod *= 0;\n            }\n           \
    \ sum += Math.abs(num);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int prod = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int sign = arr.get(i) > 0 ? 1 : arr.get(i) < 0 ? -1 : 0;\n\
    \            prod *= sign;\n            sum += Math.abs(arr.get(i));\n       \
    \ }\n        return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n\
    \            return Optional.empty();\n        }\n        int prod = 1;\n    \
    \    int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n          \
    \  int num = arr.get(i);\n            if (num > 0) {\n                prod *=\
    \ 1;\n            } else if (num < 0) {\n                prod *= -1;\n       \
    \     } else {\n                prod *= 0;\n            }\n            sum +=\
    \ Math.abs(num);\n        }\n        return Optional.of(sum * prod);", "     \
    \   if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int sum = 0;\n        int prod = 1;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num > 0) {\n    \
    \            sum += num;\n                prod *= 1;\n            } else if (num\
    \ < 0) {\n                sum += num * -1;\n                prod *= -1;\n    \
    \        } else {\n                prod *= 0;\n            }\n        }\n    \
    \    return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n     \
    \       return Optional.empty();\n        }\n        int prod = 1;\n        int\
    \ sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int num\
    \ = arr.get(i);\n            if (num > 0) {\n                prod *= 1;\n    \
    \        } else if (num < 0) {\n                prod *= -1;\n            } else\
    \ {\n                prod *= 0;\n            }\n            sum += Math.abs(num);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int sum =\
    \ 0;\n        int prod = 1;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            int num = arr.get(i);\n            if (num > 0) {\n             \
    \   sum += num;\n                prod *= 1;\n            } else if (num < 0) {\n\
    \                sum += -num;\n                prod *= -1;\n            } else\
    \ {\n                prod *= 0;\n            }\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num > 0) {\n                prod *= 1;\n            } else if (num < 0) {\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n            sum += Math.abs(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num > 0) {\n                prod *= 1;\n            } else if (num < 0) {\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n            sum += Math.abs(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            if (arr.get(i) > 0) {\n             \
    \   prod *= 1;\n            } else if (arr.get(i) < 0) {\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \          sum += Math.abs(arr.get(i));\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num == 0) {\n                continue;\n            }\n            prod *=\
    \ Math.signum(num);\n            sum += Math.abs(num);\n        }\n        return\
    \ Optional.of(sum * prod);", "        if (arr.size() == 0) {\n            return\
    \ Optional.empty();\n        }\n        int prod = 1;\n        int sum = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n\
    \            if (num == 0) {\n                continue;\n            }\n     \
    \       prod *= num < 0 ? -1 : 1;\n            sum += Math.abs(num);\n       \
    \ }\n        return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n\
    \            return Optional.empty();\n        }\n        int prod = 1;\n    \
    \    int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n          \
    \  int num = arr.get(i);\n            if (num == 0) {\n                continue;\n\
    \            }\n            prod *= num > 0 ? 1 : -1;\n            sum += Math.abs(num);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int sum =\
    \ 0;\n        int prod = 1;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            int num = arr.get(i);\n            if (num > 0) {\n             \
    \   sum += num;\n                prod *= 1;\n            } else if (num < 0) {\n\
    \                sum += -num;\n                prod *= -1;\n            } else\
    \ {\n                prod *= 0;\n            }\n        }\n        return Optional.of(sum\
    \ * prod);", "        // Your code here\n        return Optional.empty();", " \
    \       if (arr.size() == 0) {\n            return Optional.empty();\n       \
    \ }\n        int prod = 1;\n        int sum = 0;\n        for (int i = 0; i <\
    \ arr.size(); i++) {\n            int num = arr.get(i);\n            if (num >\
    \ 0) {\n                prod *= 1;\n            } else if (num < 0) {\n      \
    \          prod *= -1;\n            } else {\n                prod *= 0;\n   \
    \         }\n            sum += Math.abs(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int sum = 0;\n        int prod = 1;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num > 0) {\n                sum += num;\n                prod *= 1;\n     \
    \       } else if (num < 0) {\n                sum += Math.abs(num);\n       \
    \         prod *= -1;\n            } else {\n                prod *= 0;\n    \
    \        }\n        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int num = arr.get(i);\n            if (num > 0) {\n              \
    \  prod *= 1;\n            } else if (num < 0) {\n                prod *= -1;\n\
    \            } else {\n                prod *= 0;\n            }\n           \
    \ sum += Math.abs(num);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int prod = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num == 0) {\n   \
    \             continue;\n            }\n            prod *= num / Math.abs(num);\n\
    \            sum += Math.abs(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int sum = 0;\n        int prod = 1;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num > 0) {\n                sum += num;\n                prod *= 1;\n     \
    \       } else if (num < 0) {\n                sum += -num;\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \      }\n        return Optional.of(sum * prod);", "        if (arr.size() ==\
    \ 0) {\n            return Optional.empty();\n        }\n        int prod = 1;\n\
    \        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n      \
    \      int num = arr.get(i);\n            if (num == 0) {\n                continue;\n\
    \            }\n            prod *= Math.signum(num);\n            sum += Math.abs(num);\n\
    \        }\n        return Optional.of(sum * (int) prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int num = arr.get(i);\n            if (num < 0) {\n              \
    \  prod *= -1;\n            } else if (num == 0) {\n                prod = 0;\n\
    \                sum = 0;\n                break;\n            }\n           \
    \ sum += Math.abs(num);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int prod = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num == 0) {\n   \
    \             continue;\n            }\n            prod *= num / Math.abs(num);\n\
    \            sum += Math.abs(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int sign = arr.get(i) >= 0 ? 1 : -1;\n\
    \            prod *= sign;\n            sum += Math.abs(arr.get(i));\n       \
    \ }\n        return Optional.of(sum * prod);", "        if (arr.size() == 0) return\
    \ Optional.empty();\n        int sum = 0;\n        int prod = 1;\n        for\
    \ (int i = 0; i < arr.size(); i++) {\n            int n = arr.get(i);\n      \
    \      if (n == 0) continue;\n            sum += Math.abs(n);\n            prod\
    \ *= Math.signum(n);\n        }\n        return Optional.of(sum * prod);", " \
    \       if (arr.size() == 0) {\n            return Optional.empty();\n       \
    \ }\n        Integer prod = 1;\n        Integer sum = 0;\n        for (Integer\
    \ i : arr) {\n            if (i > 0) {\n                prod *= 1;\n         \
    \   } else if (i < 0) {\n                prod *= -1;\n            } else {\n \
    \               prod *= 0;\n            }\n            sum += Math.abs(i);\n \
    \       }\n        return Optional.of(sum * prod);", "        if (arr.size() ==\
    \ 0) {\n            return Optional.empty();\n        }\n        int prod = 1;\n\
    \        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n      \
    \      int num = arr.get(i);\n            if (num > 0) {\n                prod\
    \ *= 1;\n            } else if (num < 0) {\n                prod *= -1;\n    \
    \        } else {\n                prod *= 0;\n            }\n            sum\
    \ += Math.abs(num);\n        }\n        return Optional.of(sum * prod);", "  \
    \      if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int prod = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num > 0) {\n    \
    \            prod *= 1;\n            } else if (num < 0) {\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \          sum += Math.abs(num);\n        }\n        return Optional.of(sum *\
    \ prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int sum = 0;\n        int prod = 1;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num > 0) {\n                sum += num;\n                prod *= 1;\n     \
    \       } else if (num < 0) {\n                sum += Math.abs(num);\n       \
    \         prod *= -1;\n            } else {\n                prod *= 0;\n    \
    \        }\n        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int num = arr.get(i);\n            if (num > 0) {\n              \
    \  prod *= 1;\n            } else if (num < 0) {\n                prod *= -1;\n\
    \            } else {\n                prod *= 0;\n            }\n           \
    \ sum += Math.abs(num);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int prod = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num == 0) {\n   \
    \             continue;\n            }\n            prod *= num / Math.abs(num);\n\
    \            sum += Math.abs(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num == 0) {\n                continue;\n            }\n            prod *=\
    \ num / Math.abs(num);\n            sum += Math.abs(num);\n        }\n       \
    \ return Optional.of(sum * prod);", "        // write your code here\n       \
    \ return Optional.empty();", "        if (arr.size() == 0) {\n            return\
    \ Optional.empty();\n        }\n        int prod = 1;\n        int sum = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n\
    \            if (num == 0) {\n                continue;\n            }\n     \
    \       if (num < 0) {\n                prod *= -1;\n            }\n         \
    \   sum += Math.abs(num);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int prod = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num > 0) {\n    \
    \            prod *= 1;\n            } else if (num < 0) {\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \          sum += Math.abs(num);\n        }\n        return Optional.of(sum *\
    \ prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num < 0) {\n                prod *= -1;\n            } else if (num == 0) {\n\
    \                prod = 0;\n                sum = 0;\n                break;\n\
    \            }\n            sum += Math.abs(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int sum = 0;\n        int prod = 1;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num > 0) {\n                sum += num;\n                prod *= 1;\n     \
    \       } else if (num < 0) {\n                sum += Math.abs(num);\n       \
    \         prod *= -1;\n            } else {\n                prod *= 0;\n    \
    \        }\n        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int num = arr.get(i);\n            if (num == 0) {\n             \
    \   continue;\n            }\n            prod *= Math.signum(num);\n        \
    \    sum += Math.abs(num);\n        }\n        return Optional.of(sum * (int)\
    \ prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num == 0) {\n                continue;\n            }\n            prod *=\
    \ Math.signum(num);\n            sum += Math.abs(num);\n        }\n        return\
    \ Optional.of(sum * (int) prod);", "        if (arr.size() == 0) {\n         \
    \   return Optional.empty();\n        }\n        int prod = 1;\n        int sum\
    \ = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int num =\
    \ arr.get(i);\n            if (num == 0) {\n                continue;\n      \
    \      }\n            prod *= num > 0 ? 1 : -1;\n            sum += Math.abs(num);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int sum =\
    \ 0;\n        int prod = 1;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            int num = arr.get(i);\n            if (num > 0) {\n             \
    \   sum += num;\n                prod *= 1;\n            } else if (num < 0) {\n\
    \                sum += Math.abs(num);\n                prod *= -1;\n        \
    \    } else {\n                prod *= 0;\n            }\n        }\n        return\
    \ Optional.of(sum * prod);", "        if (arr.size() == 0) {\n            return\
    \ Optional.empty();\n        }\n        int prod = 1;\n        int sum = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n\
    \            if (num == 0) {\n                continue;\n            }\n     \
    \       prod *= Math.signum(num);\n            sum += Math.abs(num);\n       \
    \ }\n        return Optional.of(sum * (int) prod);", "        if (arr.size() ==\
    \ 0) {\n            return Optional.empty();\n        }\n        int prod = 1;\n\
    \        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n      \
    \      int sign = arr.get(i) > 0 ? 1 : arr.get(i) < 0 ? -1 : 0;\n            prod\
    \ *= sign;\n            sum += Math.abs(arr.get(i));\n        }\n        return\
    \ Optional.of(sum * prod);", "        if (arr.size() == 0) {\n            return\
    \ Optional.empty();\n        }\n        int prod = 1;\n        int sum = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n\
    \            if (num == 0) {\n                continue;\n            }\n     \
    \       if (num < 0) {\n                prod *= -1;\n            }\n         \
    \   sum += Math.abs(num);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int prod = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int sign = arr.get(i) < 0 ? -1 : arr.get(i) > 0 ? 1 : 0;\n\
    \            prod *= sign;\n            sum += Math.abs(arr.get(i));\n       \
    \ }\n        return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n\
    \            return Optional.empty();\n        }\n        int sum = 0;\n     \
    \   int prod = 1;\n        for (int i = 0; i < arr.size(); i++) {\n          \
    \  int num = arr.get(i);\n            if (num > 0) {\n                sum += num;\n\
    \                prod *= 1;\n            } else if (num < 0) {\n             \
    \   sum += num * -1;\n                prod *= -1;\n            } else {\n    \
    \            prod *= 0;\n            }\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int sum = 0;\n        int prod = 1;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num > 0) {\n                sum += num;\n                prod *= 1;\n     \
    \       } else if (num < 0) {\n                sum += -num;\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \      }\n        return Optional.of(sum * prod);", "        if (arr.size() ==\
    \ 0) {\n            return Optional.empty();\n        }\n        int prod = 1;\n\
    \        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n      \
    \      int num = arr.get(i);\n            if (num == 0) {\n                continue;\n\
    \            }\n            prod *= num / Math.abs(num);\n            sum += Math.abs(num);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int num = arr.get(i);\n            if (num > 0) {\n              \
    \  prod *= 1;\n            } else if (num < 0) {\n                prod *= -1;\n\
    \            } else {\n                prod *= 0;\n            }\n           \
    \ sum += Math.abs(num);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int prod = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num > 0) {\n    \
    \            prod *= 1;\n            } else if (num < 0) {\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \          sum += Math.abs(num);\n        }\n        return Optional.of(sum *\
    \ prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num > 0) {\n                prod *= 1;\n            } else if (num < 0) {\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n            sum += Math.abs(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num == 0) {\n                continue;\n            }\n            prod *=\
    \ Math.signum(num);\n            sum += Math.abs(num);\n        }\n        return\
    \ Optional.of(sum * prod);", "        if (arr.size() == 0) {\n            return\
    \ Optional.empty();\n        }\n        int prod = 1;\n        int sum = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            int x = arr.get(i);\n\
    \            if (x > 0) {\n                prod *= 1;\n            } else if (x\
    \ < 0) {\n                prod *= -1;\n            } else {\n                prod\
    \ *= 0;\n            }\n            sum += Math.abs(x);\n        }\n        return\
    \ Optional.of(sum * prod);", "        if (arr.size() == 0) {\n            return\
    \ Optional.empty();\n        }\n        int prod = 1;\n        int sum = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n\
    \            if (num > 0) {\n                prod *= 1;\n            } else if\
    \ (num < 0) {\n                prod *= -1;\n            } else {\n           \
    \     prod *= 0;\n            }\n            sum += Math.abs(num);\n        }\n\
    \        return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n \
    \           return Optional.empty();\n        }\n        int prod = 1;\n     \
    \   int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n           \
    \ int n = arr.get(i);\n            if (n > 0) {\n                prod *= 1;\n\
    \            } else if (n < 0) {\n                prod *= -1;\n            } else\
    \ {\n                prod *= 0;\n            }\n            sum += Math.abs(n);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int x = arr.get(i);\n            if (x == 0) {\n                continue;\n\
    \            }\n            prod *= Math.signum(x);\n            sum += Math.abs(x);\n\
    \        }\n        return Optional.of(sum * (int) prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int num = arr.get(i);\n            if (num > 0) {\n              \
    \  prod *= 1;\n            } else if (num < 0) {\n                prod *= -1;\n\
    \            } else {\n                prod *= 0;\n            }\n           \
    \ sum += Math.abs(num);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int prod = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num > 0) {\n    \
    \            prod *= 1;\n            } else if (num < 0) {\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \          sum += Math.abs(num);\n        }\n        return Optional.of(sum *\
    \ prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num > 0) {\n                prod *= 1;\n            } else if (num < 0) {\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n            sum += Math.abs(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num == 0) {\n                continue;\n            }\n            prod *=\
    \ Math.signum(num);\n            sum += Math.abs(num);\n        }\n        return\
    \ Optional.of(sum * (int) prod);", "        if (arr.size() == 0) {\n         \
    \   return Optional.empty();\n        }\n        int prod = 1;\n        int sum\
    \ = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int num =\
    \ arr.get(i);\n            if (num > 0) {\n                prod *= 1;\n      \
    \      } else if (num < 0) {\n                prod *= -1;\n            } else\
    \ {\n                prod *= 0;\n            }\n            sum += Math.abs(num);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int num = arr.get(i);\n            if (num > 0) {\n              \
    \  prod *= 1;\n            } else if (num < 0) {\n                prod *= -1;\n\
    \            } else {\n                prod *= 0;\n            }\n           \
    \ sum += Math.abs(num);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int prod = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num > 0) {\n    \
    \            prod *= 1;\n            } else if (num < 0) {\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \          sum += Math.abs(num);\n        }\n        return Optional.of(sum *\
    \ prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num == 0) {\n                continue;\n            }\n            if (num\
    \ < 0) {\n                prod *= -1;\n            }\n            sum += Math.abs(num);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i : arr) {\n            prod *= Math.signum(i);\n\
    \            sum += Math.abs(i);\n        }\n        return Optional.of(sum *\
    \ (int) prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num == 0) {\n                continue;\n            }\n            prod *=\
    \ num > 0 ? 1 : -1;\n            sum += Math.abs(num);\n        }\n        return\
    \ Optional.of(sum * prod);", "        if (arr.size() == 0) {\n            return\
    \ Optional.empty();\n        }\n        int prod = 1;\n        int sum = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n\
    \            if (num > 0) {\n                prod *= 1;\n            } else if\
    \ (num < 0) {\n                prod *= -1;\n            } else {\n           \
    \     prod *= 0;\n            }\n            sum += Math.abs(num);\n        }\n\
    \        return Optional.of(sum * prod);", "        if (arr.size() == 0) {\n \
    \           return Optional.empty();\n        }\n        int prod = 1;\n     \
    \   int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n           \
    \ int num = arr.get(i);\n            if (num > 0) {\n                prod *= 1;\n\
    \            } else if (num < 0) {\n                prod *= -1;\n            }\
    \ else {\n                prod *= 0;\n            }\n            sum += Math.abs(num);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int num = arr.get(i);\n            if (num > 0) {\n              \
    \  prod *= 1;\n            } else if (num < 0) {\n                prod *= -1;\n\
    \            } else {\n                prod *= 0;\n            }\n           \
    \ sum += Math.abs(num);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) return Optional.empty();\n        int prod = 1;\n\
    \        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n      \
    \      int num = arr.get(i);\n            if (num > 0) {\n                prod\
    \ *= 1;\n            } else if (num < 0) {\n                prod *= -1;\n    \
    \        } else {\n                prod *= 0;\n            }\n            sum\
    \ += Math.abs(num);\n        }\n        return Optional.of(sum * prod);", "  \
    \      if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int prod = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num > 0) {\n    \
    \            prod *= 1;\n            } else if (num < 0) {\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \          sum += Math.abs(num);\n        }\n        return Optional.of(sum *\
    \ prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            if (arr.get(i) == 0) {\n            \
    \    continue;\n            }\n            prod *= Math.signum(arr.get(i));\n\
    \            sum += Math.abs(arr.get(i));\n        }\n        return Optional.of(sum\
    \ * (int) prod);", "        if (arr.size() == 0) return Optional.empty();\n  \
    \      int prod = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num == 0) continue;\n\
    \            if (num < 0) prod *= -1;\n            sum += Math.abs(num);\n   \
    \     }\n        return Optional.of(sum * prod);", "        // your code here\n\
    \        return Optional.empty();", "        if (arr.size() == 0) {\n        \
    \    return Optional.empty();\n        }\n        int prod = 1;\n        int sum\
    \ = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int num =\
    \ arr.get(i);\n            if (num == 0) {\n                continue;\n      \
    \      }\n            prod *= num / Math.abs(num);\n            sum += Math.abs(num);\n\
    \        }\n        return Optional.of(sum * prod);", "        if (arr.size()\
    \ == 0) {\n            return Optional.empty();\n        }\n        int prod =\
    \ 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int num = arr.get(i);\n            if (num < 0) {\n              \
    \  prod *= -1;\n            } else if (num == 0) {\n                prod = 0;\n\
    \                sum = 0;\n                break;\n            }\n           \
    \ sum += Math.abs(num);\n        }\n        return Optional.of(sum * prod);",
  "        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n\
    \        int prod = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            if (num < 0) {\n    \
    \            prod *= -1;\n            } else if (num == 0) {\n               \
    \ prod = 0;\n                sum = 0;\n                break;\n            }\n\
    \            sum += Math.abs(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num > 0) {\n                prod *= 1;\n            } else if (num < 0) {\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n            sum += Math.abs(num);\n        }\n        return Optional.of(sum\
    \ * prod);", "        if (arr.size() == 0) {\n            return Optional.empty();\n\
    \        }\n        int prod = 1;\n        int sum = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if\
    \ (num == 0) {\n                continue;\n            }\n            prod *=\
    \ num / Math.abs(num);\n            sum += Math.abs(num);\n        }\n       \
    \ return Optional.of(sum * prod);"]
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"

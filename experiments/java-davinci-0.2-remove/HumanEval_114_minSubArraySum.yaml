name: HumanEval_114_minSubArraySum
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given an array of integers nums, find the minimum sum of\
  \ any non-empty sub-array\n    // of nums.\n    // Example\n    public static int\
  \ minSubArraySum(ArrayList<Integer> nums) {\n"
tests: "return 0;\n    }\n    public static void main(String[] args) {\n    assert(minSubArraySum((new\
  \ ArrayList<Integer>(Arrays.asList((int)2, (int)3, (int)4, (int)1, (int)2, (int)4))))\
  \ == (1));\n    assert(minSubArraySum((new ArrayList<Integer>(Arrays.asList((int)-1,\
  \ (int)-2, (int)-3)))) == (-6));\n    assert(minSubArraySum((new ArrayList<Integer>(Arrays.asList((int)-1,\
  \ (int)-2, (int)-3, (int)2, (int)-10)))) == (-14));\n    assert(minSubArraySum((new\
  \ ArrayList<Integer>(Arrays.asList((int)-9999999999999999)))) == (-9999999999999999));\n\
  \    assert(minSubArraySum((new ArrayList<Integer>(Arrays.asList((int)0, (int)10,\
  \ (int)20, (int)1000000)))) == (0));\n    assert(minSubArraySum((new ArrayList<Integer>(Arrays.asList((int)-1,\
  \ (int)-2, (int)-3, (int)10, (int)-5)))) == (-6));\n    assert(minSubArraySum((new\
  \ ArrayList<Integer>(Arrays.asList((int)100, (int)-1, (int)-2, (int)-3, (int)10,\
  \ (int)-5)))) == (-6));\n    assert(minSubArraySum((new ArrayList<Integer>(Arrays.asList((int)10,\
  \ (int)11, (int)13, (int)8, (int)3, (int)4)))) == (3));\n    assert(minSubArraySum((new\
  \ ArrayList<Integer>(Arrays.asList((int)100, (int)-33, (int)32, (int)-1, (int)0,\
  \ (int)-2)))) == (-33));\n    assert(minSubArraySum((new ArrayList<Integer>(Arrays.asList((int)-10))))\
  \ == (-10));\n    assert(minSubArraySum((new ArrayList<Integer>(Arrays.asList((int)7))))\
  \ == (7));\n    assert(minSubArraySum((new ArrayList<Integer>(Arrays.asList((int)1,\
  \ (int)-1)))) == (-1));\n    }\n\n}\n"
completions: []
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"

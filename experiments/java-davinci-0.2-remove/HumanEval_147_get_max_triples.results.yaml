language: java
name: HumanEval_147_get_max_triples
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long count = 0;\n        for(int i = 1; i < n -\
    \ 1; i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k <= n; k++) {\n                    if((i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n       \
    \             }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n - 2; i++) {\n            for(int j\
    \ = i + 1; j < n - 1; j++) {\n                for(int k = j + 1; k < n; k++) {\n\
    \                    if((a[i] + a[j] + a[k]) % 3 == 0) {\n                   \
    \     count++;\n                    }\n                }\n            }\n    \
    \    }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1irew95h.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long result = 0;\n        for(long i = 1; i < n;\
    \ i++) {\n            for(long j = i + 1; j < n; j++) {\n                for(long\
    \ k = j + 1; k < n; k++) {\n                    if((i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0) {\n                        result++;\n      \
    \              }\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4qvdl_xn.java:34)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long count = 0;\n        for(int i = 1; i < n;\
    \ i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    if((i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n       \
    \             }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeaepaxvt.java:34)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long count = 0;\n        for(int i = 1; i < n;\
    \ i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    if((i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n       \
    \             }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeaepaxvt.java:34)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        int\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc_9yrern.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j <\
    \ n - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n         \
    \           if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8wsrwjwx.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long sum = 0;\n        for(int i = 1; i <= n; i++)\
    \ {\n            for(int j = i + 1; j <= n; j++) {\n                for(int k\
    \ = j + 1; k <= n; k++) {\n                    if((i * i - i + 1 + j * j - j +\
    \ 1 + k * k - k + 1) % 3 == 0) {\n                        sum++;\n           \
    \         }\n                }\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n - 2; i++) {\n            for(int j\
    \ = i + 1; j < n - 1; j++) {\n                for(int k = j + 1; k < n; k++) {\n\
    \                    if((a[i] + a[j] + a[k]) % 3 == 0) {\n                   \
    \     count++;\n                    }\n                }\n            }\n    \
    \    }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1irew95h.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long count = 0;\n        for(int i = 1; i < n;\
    \ i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    if((i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n       \
    \             }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeaepaxvt.java:34)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        long total = 0;\n        for(long\
    \ i = 1; i < n; i++) {\n            for(long j = i + 1; j < n; j++) {\n      \
    \          for(long k = j + 1; k < n; k++) {\n                    if((i * i -\
    \ i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n                       \
    \ total++;\n                    }\n                }\n            }\n        }\n\
    \        return total;\n    }\n    public static void main(String[] args) {\n\
    \    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjq2p5pr3.java:33)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j <\
    \ n - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n         \
    \           if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8wsrwjwx.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long count = 0;\n        for (long i = 1; i < n; i++) {\n    \
    \        for (long j = i + 1; j < n; j++) {\n                for (long k = j +\
    \ 1; k < n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k\
    \ * k - k + 1) % 3 == 0) {\n                        count++;\n               \
    \     }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjihxrmcz.java:32)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long count = 0;\n        for (long i = 1; i < n; i++) {\n    \
    \        for (long j = i + 1; j < n; j++) {\n                for (long k = j +\
    \ 1; k < n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k\
    \ * k - k + 1) % 3 == 0) {\n                        count++;\n               \
    \     }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjihxrmcz.java:32)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n - 2; i++) {\n            for(int j\
    \ = i + 1; j < n - 1; j++) {\n                for(int k = j + 1; k < n; k++) {\n\
    \                    if((a[i] + a[j] + a[k]) % 3 == 0) {\n                   \
    \     count++;\n                    }\n                }\n            }\n    \
    \    }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1irew95h.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        int\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc_9yrern.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprhiu0p97.java:21)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] arr = new long[(int)n];\n        for(int\
    \ i = 0; i < n; i++) {\n            arr[i] = i * i - i + 1;\n        }\n     \
    \   long count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int\
    \ j = i + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n\
    \                    if((arr[i] + arr[j] + arr[k]) % 3 == 0) {\n             \
    \           count++;\n                    }\n                }\n            }\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_uqxvak8.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long maxTriples = 0;\n        for (long i = 1; i < n; i++) {\n\
    \            for (long j = i + 1; j < n; j++) {\n                for (long k =\
    \ j + 1; k < n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1\
    \ + k * k - k + 1) % 3 == 0) {\n                        maxTriples++;\n      \
    \              }\n                }\n            }\n        }\n        return\
    \ maxTriples;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt2ospeaa.java:32)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long sum = 0;\n        for (long i = 1; i < n; i++) {\n      \
    \      sum += i * i - i + 1;\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpij6q5fzx.java:25)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j <\
    \ n - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n         \
    \           if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8wsrwjwx.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long count = 0;\n        for(int i = 1; i < n;\
    \ i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    if((i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n       \
    \             }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeaepaxvt.java:34)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long sum = 0;\n        for (long i = 1; i < n; i++) {\n      \
    \      for (long j = i + 1; j < n; j++) {\n                for (long k = j + 1;\
    \ k < n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k *\
    \ k - k + 1) % 3 == 0) {\n                        sum++;\n                   \
    \ }\n                }\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpff1_w5k4.java:32)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprhiu0p97.java:21)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long count = 0;\n        long[] a = new long[(int)n];\n\
    \        for(int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n   \
    \     }\n        for(int i = 0; i < n; i++) {\n            for(int j = i + 1;\
    \ j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n          \
    \          if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpywg6oidz.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long count = 0;\n        for(int i = 1; i < n;\
    \ i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    if((i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n       \
    \             }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeaepaxvt.java:34)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long count = 0;\n        for(int i = 1; i < n;\
    \ i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    if((i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n       \
    \             }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeaepaxvt.java:34)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] arr = new long[(int)n];\n        for(int\
    \ i = 0; i < n; i++) {\n            arr[i] = i * i - i + 1;\n        }\n     \
    \   long count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int\
    \ j = i + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n\
    \                    if((arr[i] + arr[j] + arr[k]) % 3 == 0) {\n             \
    \           count++;\n                    }\n                }\n            }\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_uqxvak8.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = (i + 1) * (i + 1) - (i + 1) + 1;\n  \
    \      }\n        long count = 0;\n        for(int i = 0; i < n; i++) {\n    \
    \        for(int j = i + 1; j < n; j++) {\n                for(int k = j + 1;\
    \ k < n; k++) {\n                    if((a[i] + a[j] + a[k]) % 3 == 0) {\n   \
    \                     count++;\n                    }\n                }\n   \
    \         }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976138
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        long[] a = new long[(int)n];\n\
    \        for(int i = 0; i < n; i++) {\n            a[i] = (i+1) * (i+1) - (i+1)\
    \ + 1;\n        }\n        long count = 0;\n        for(int i = 0; i < n; i++)\
    \ {\n            for(int j = i+1; j < n; j++) {\n                for(int k = j+1;\
    \ k < n; k++) {\n                    if((a[i] + a[j] + a[k]) % 3 == 0) {\n   \
    \                     count++;\n                    }\n                }\n   \
    \         }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976138
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long count = 0;\n        for(int i = 1; i <= n;\
    \ i++) {\n            for(int j = i + 1; j <= n; j++) {\n                for(int\
    \ k = j + 1; k <= n; k++) {\n                    if((i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n       \
    \             }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long sum = 0;\n        for(int i = 1; i < n; i++)\
    \ {\n            sum += i * (i + 1) / 2;\n        }\n        return sum;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvjryjxi3.java:27)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n - 2; i++) {\n            for(int j\
    \ = i + 1; j < n - 1; j++) {\n                for(int k = j + 1; k < n; k++) {\n\
    \                    if((a[i] + a[j] + a[k]) % 3 == 0) {\n                   \
    \     count++;\n                    }\n                }\n            }\n    \
    \    }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1irew95h.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long result = 0;\n        for (long i = 1; i < n; i++) {\n   \
    \         for (long j = i + 1; j < n; j++) {\n                for (long k = j\
    \ + 1; k < n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 +\
    \ k * k - k + 1) % 3 == 0) {\n                        result++;\n            \
    \        }\n                }\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp35o_ai50.java:32)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long sum = 0;\n        for (long i = 1; i < n; i++) {\n      \
    \      for (long j = i + 1; j < n; j++) {\n                for (long k = j + 1;\
    \ k < n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k *\
    \ k - k + 1) % 3 == 0) {\n                        sum++;\n                   \
    \ }\n                }\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpff1_w5k4.java:32)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = (i+1) * (i+1) - (i+1) + 1;\n        }\n\
    \        long count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int\
    \ j = i+1; j < n; j++) {\n                for(int k = j+1; k < n; k++) {\n   \
    \                 if((a[i] + a[j] + a[k]) % 3 == 0) {\n                      \
    \  count++;\n                    }\n                }\n            }\n       \
    \ }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long count = 0;\n        long[] a = new long[(int)n];\n\
    \        for(int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n   \
    \     }\n        for(int i = 0; i < n - 2; i++) {\n            for(int j = i +\
    \ 1; j < n - 1; j++) {\n                for(int k = j + 1; k < n; k++) {\n   \
    \                 if((a[i] + a[j] + a[k]) % 3 == 0) {\n                      \
    \  count++;\n                    }\n                }\n            }\n       \
    \ }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuip493g5.java:37)\n"
  stdout: ''
  timestamp: 1659976139
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long sum = 0;\n        for (long i = 1; i < n; i++) {\n      \
    \      sum += i * (i - 1) / 2;\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe5nqyfye.java:25)\n"
  stdout: ''
  timestamp: 1659976139
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j <\
    \ n - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n         \
    \           if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8wsrwjwx.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n - 2; i++) {\n            for(int j\
    \ = i + 1; j < n - 1; j++) {\n                for(int k = j + 1; k < n; k++) {\n\
    \                    if((a[i] + a[j] + a[k]) % 3 == 0) {\n                   \
    \     count++;\n                    }\n                }\n            }\n    \
    \    }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1irew95h.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long count = 0;\n        for (long i = 1; i < n; i++) {\n    \
    \        for (long j = i + 1; j < n; j++) {\n                for (long k = j +\
    \ 1; k < n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k\
    \ * k - k + 1) % 3 == 0) {\n                        count++;\n               \
    \     }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjihxrmcz.java:32)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long count = 0;\n        for(int i = 1; i < n;\
    \ i++) {\n            for(int j = i+1; j < n; j++) {\n                for(int\
    \ k = j+1; k < n; k++) {\n                    if((i*i - i + 1 + j*j - j + 1 +\
    \ k*k - k + 1) % 3 == 0) {\n                        count++;\n               \
    \     }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwp2tuz9.java:34)\n"
  stdout: ''
  timestamp: 1659976139
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = (i+1) * (i+1) - (i+1) + 1;\n        }\n\
    \        long count = 0;\n        for(int i = 0; i < n-2; i++) {\n           \
    \ for(int j = i+1; j < n-1; j++) {\n                for(int k = j+1; k < n; k++)\
    \ {\n                    if((a[i] + a[j] + a[k]) % 3 == 0) {\n               \
    \         count++;\n                    }\n                }\n            }\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976139
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long count = 0;\n        for (long i = 1; i < n; i++) {\n    \
    \        for (long j = i + 1; j < n; j++) {\n                for (long k = j +\
    \ 1; k < n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k\
    \ * k - k + 1) % 3 == 0) {\n                        count++;\n               \
    \     }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjihxrmcz.java:32)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long result = 0;\n        for (long i = 1; i < n; i++) {\n   \
    \         for (long j = i + 1; j < n; j++) {\n                for (long k = j\
    \ + 1; k < n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 +\
    \ k * k - k + 1) % 3 == 0) {\n                        result++;\n            \
    \        }\n                }\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp35o_ai50.java:32)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        return 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgmfuat4c.java:22)\n"
  stdout: ''
  timestamp: 1659976139
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long ans = 0;\n        long[] a = new long[(int)n];\n        for\
    \ (int i = 1; i <= n; i++) {\n            a[i-1] = i * i - i + 1;\n        }\n\
    \        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        ans++;\n  \
    \                  }\n                }\n            }\n        }\n        return\
    \ ans;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976139
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j <\
    \ n - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n         \
    \           if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8wsrwjwx.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long count = 0;\n        for(int i = 1; i < n;\
    \ i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    if((i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n       \
    \             }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeaepaxvt.java:34)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = (i+1) * (i+1) - (i+1) + 1;\n        }\n\
    \        long count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int\
    \ j = i+1; j < n; j++) {\n                for(int k = j+1; k < n; k++) {\n   \
    \                 if((a[i] + a[j] + a[k]) % 3 == 0) {\n                      \
    \  count++;\n                    }\n                }\n            }\n       \
    \ }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n - 2; i++) {\n            for(int j\
    \ = i + 1; j < n - 1; j++) {\n                for(int k = j + 1; k < n; k++) {\n\
    \                    if((a[i] + a[j] + a[k]) % 3 == 0) {\n                   \
    \     count++;\n                    }\n                }\n            }\n    \
    \    }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1irew95h.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long result = 0;\n        for(long i = 1; i < n;\
    \ i++) {\n            for(long j = i + 1; j < n; j++) {\n                for(long\
    \ k = j + 1; k < n; k++) {\n                    if((i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0) {\n                        result++;\n      \
    \              }\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4qvdl_xn.java:34)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long count = 0;\n        for(int i = 1; i < n;\
    \ i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    if((i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n       \
    \             }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeaepaxvt.java:34)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long count = 0;\n        for (long i = 1; i < n; i++) {\n    \
    \        for (long j = i + 1; j < n; j++) {\n                for (long k = j +\
    \ 1; k < n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k\
    \ * k - k + 1) % 3 == 0) {\n                        count++;\n               \
    \     }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjihxrmcz.java:32)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long count = 0;\n        for(int i = 1; i < n -\
    \ 1; i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k <= n; k++) {\n                    if((i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n       \
    \             }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long count = 0;\n        long[] a = new long[(int)n];\n      \
    \  for (int i = 1; i <= n; i++) {\n            a[i-1] = i * i - i + 1;\n     \
    \   }\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1;\
    \ j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n         \
    \           if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976139
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long count = 0;\n        for(int i = 1; i < n;\
    \ i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    if((i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n       \
    \             }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeaepaxvt.java:34)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long count = 0;\n        for(int i = 1; i < n;\
    \ i++) {\n            for(int j = i+1; j < n; j++) {\n                for(int\
    \ k = j+1; k < n; k++) {\n                    if((i*i - i + 1 + j*j - j + 1 +\
    \ k*k - k + 1) % 3 == 0) {\n                        count++;\n               \
    \     }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwp2tuz9.java:34)\n"
  stdout: ''
  timestamp: 1659976139
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long count = 0;\n        for(int i = 1; i < n;\
    \ i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    if((i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n       \
    \             }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeaepaxvt.java:34)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n - 2; i++) {\n            for(int j\
    \ = i + 1; j < n - 1; j++) {\n                for(int k = j + 1; k < n; k++) {\n\
    \                    if((a[i] + a[j] + a[k]) % 3 == 0) {\n                   \
    \     count++;\n                    }\n                }\n            }\n    \
    \    }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1irew95h.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long count = 0;\n        for(int i = 1; i < n;\
    \ i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    if((i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n       \
    \             }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeaepaxvt.java:34)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j <\
    \ n - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n         \
    \           if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8wsrwjwx.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        long[] a = new long[(int)n];\n\
    \        for(int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n   \
    \     }\n        long count = 0;\n        for(int i = 0; i < n - 2; i++) {\n \
    \           for(int j = i + 1; j < n - 1; j++) {\n                for(int k =\
    \ j + 1; k < n; k++) {\n                    if((a[i] + a[j] + a[k]) % 3 == 0)\
    \ {\n                        count++;\n                    }\n               \
    \ }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5zdkwh5x.java:36)\n"
  stdout: ''
  timestamp: 1659976139
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j <\
    \ n - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n         \
    \           if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8wsrwjwx.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        return 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgmfuat4c.java:22)\n"
  stdout: ''
  timestamp: 1659976139
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j <\
    \ n - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n         \
    \           if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8wsrwjwx.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j <\
    \ n - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n         \
    \           if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8wsrwjwx.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long sum = 0;\n        for (long i = 1; i < n; i++) {\n      \
    \      sum += i * (i - 1) / 2;\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe5nqyfye.java:25)\n"
  stdout: ''
  timestamp: 1659976139
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n - 2; i++) {\n            for(int j\
    \ = i + 1; j < n - 1; j++) {\n                for(int k = j + 1; k < n; k++) {\n\
    \                    if((a[i] + a[j] + a[k]) % 3 == 0) {\n                   \
    \     count++;\n                    }\n                }\n            }\n    \
    \    }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1irew95h.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long count = 0;\n        long[] a = new long[(int)n];\n      \
    \  for (int i = 1; i <= n; i++) {\n            a[i-1] = i * i - i + 1;\n     \
    \   }\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1;\
    \ j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n         \
    \           if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976139
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long count = 0;\n        for(int i = 1; i < n;\
    \ i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    if((i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n       \
    \             }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeaepaxvt.java:34)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long sum = 0;\n        for(int i = 1; i < n; i++)\
    \ {\n            for(int j = i + 1; j < n; j++) {\n                for(int k =\
    \ j + 1; k < n; k++) {\n                    if((i * i - i + 1 + j * j - j + 1\
    \ + k * k - k + 1) % 3 == 0) {\n                        sum++;\n             \
    \       }\n                }\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgitg08ua.java:34)\n"
  stdout: ''
  timestamp: 1659976139
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long sum = 0;\n        for(int i = 1; i <= n; i++)\
    \ {\n            for(int j = i + 1; j <= n; j++) {\n                for(int k\
    \ = j + 1; k <= n; k++) {\n                    if((i * i - i + 1 + j * j - j +\
    \ 1 + k * k - k + 1) % 3 == 0) {\n                        sum++;\n           \
    \         }\n                }\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976138
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long count = 0;\n        long[] a = new long[(int)n];\n      \
    \  for (int i = 1; i <= n; i++) {\n            a[i-1] = i * i - i + 1;\n     \
    \   }\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1;\
    \ j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n         \
    \           if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976139
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long count = 0;\n        for (long i = 1; i < n - 1; i++) {\n\
    \            for (long j = i + 1; j < n; j++) {\n                for (long k =\
    \ j + 1; k <= n; k++) {\n                    long sum = i * i - i + 1 + j * j\
    \ - j + 1 + k * k - k + 1;\n                    if (sum % 3 == 0) {\n        \
    \                count++;\n                    }\n                }\n        \
    \    }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976139
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long count = 0;\n        for(int i = 1; i < n;\
    \ i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    long a = i * i - i + 1;\n    \
    \                long b = j * j - j + 1;\n                    long c = k * k -\
    \ k + 1;\n                    if((a + b + c) % 3 == 0) {\n                   \
    \     count++;\n                    }\n                }\n            }\n    \
    \    }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplwmjcfed.java:37)\n"
  stdout: ''
  timestamp: 1659976139
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long sum = 0;\n        for (long i = 1; i < n; i++) {\n      \
    \      sum += (i * i - i + 1) * (n - i);\n        }\n        return sum / 3;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5vq6qa2r.java:25)\n"
  stdout: ''
  timestamp: 1659976139
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n - 2; i++) {\n            for(int j\
    \ = i + 1; j < n - 1; j++) {\n                for(int k = j + 1; k < n; k++) {\n\
    \                    if((a[i] + a[j] + a[k]) % 3 == 0) {\n                   \
    \     count++;\n                    }\n                }\n            }\n    \
    \    }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1irew95h.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long maxTriples = 0;\n        for(long i = 1; i\
    \ < n; i++) {\n            for(long j = i+1; j < n; j++) {\n                for(long\
    \ k = j+1; k < n; k++) {\n                    if((i*i - i + 1 + j*j - j + 1 +\
    \ k*k - k + 1) % 3 == 0) {\n                        maxTriples++;\n          \
    \          }\n                }\n            }\n        }\n        return maxTriples;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphknsmjyt.java:34)\n"
  stdout: ''
  timestamp: 1659976139
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j <\
    \ n - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n         \
    \           if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8wsrwjwx.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n - 2; i++) {\n            for(int j\
    \ = i + 1; j < n - 1; j++) {\n                for(int k = j + 1; k < n; k++) {\n\
    \                    if((a[i] + a[j] + a[k]) % 3 == 0) {\n                   \
    \     count++;\n                    }\n                }\n            }\n    \
    \    }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1irew95h.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        long[] a = new long[(int)n];\n\
    \        for(int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n   \
    \     }\n        long count = 0;\n        for(int i = 0; i < n - 2; i++) {\n \
    \           for(int j = i + 1; j < n - 1; j++) {\n                for(int k =\
    \ j + 1; k < n; k++) {\n                    if((a[i] + a[j] + a[k]) % 3 == 0)\
    \ {\n                        count++;\n                    }\n               \
    \ }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5zdkwh5x.java:36)\n"
  stdout: ''
  timestamp: 1659976139
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long count = 0;\n        for(int i = 1; i < n;\
    \ i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    if((i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n       \
    \             }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeaepaxvt.java:34)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long count = 0;\n        for(int i = 1; i < n;\
    \ i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    if((i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n       \
    \             }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeaepaxvt.java:34)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long count = 0;\n        for(int i = 1; i < n;\
    \ i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    if((i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n       \
    \             }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeaepaxvt.java:34)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long count = 0;\n        for (long i = 1; i < n - 1; i++) {\n\
    \            for (long j = i + 1; j < n; j++) {\n                for (long k =\
    \ j + 1; k <= n; k++) {\n                    if ((i * i - i + 1 + j * j - j +\
    \ 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n         \
    \           }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976139
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n - 2; i++) {\n            for(int j\
    \ = i + 1; j < n - 1; j++) {\n                for(int k = j + 1; k < n; k++) {\n\
    \                    if((a[i] + a[j] + a[k]) % 3 == 0) {\n                   \
    \     count++;\n                    }\n                }\n            }\n    \
    \    }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1irew95h.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long result = 0;\n\
    \        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        result++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc9cqz77_.java:35)\n"
  stdout: ''
  timestamp: 1659976139
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n - 2; i++) {\n            for(int j\
    \ = i + 1; j < n - 1; j++) {\n                for(int k = j + 1; k < n; k++) {\n\
    \                    if((a[i] + a[j] + a[k]) % 3 == 0) {\n                   \
    \     count++;\n                    }\n                }\n            }\n    \
    \    }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1irew95h.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n - 2; i++) {\n            for(int j\
    \ = i + 1; j < n - 1; j++) {\n                for(int k = j + 1; k < n; k++) {\n\
    \                    if((a[i] + a[j] + a[k]) % 3 == 0) {\n                   \
    \     count++;\n                    }\n                }\n            }\n    \
    \    }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1irew95h.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long result = 0;\n        for(long i = 1; i < n;\
    \ i++) {\n            for(long j = i + 1; j < n; j++) {\n                for(long\
    \ k = j + 1; k < n; k++) {\n                    if((i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0) {\n                        result++;\n      \
    \              }\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4qvdl_xn.java:34)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long count = 0;\n        for(int i = 1; i < n;\
    \ i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    if((i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n       \
    \             }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeaepaxvt.java:34)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long count = 0;\n        for (long i = 1; i < n - 1; i++) {\n\
    \            for (long j = i + 1; j < n; j++) {\n                for (long k =\
    \ j + 1; k <= n; k++) {\n                    if ((i * i - i + 1 + j * j - j +\
    \ 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n         \
    \           }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976139
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long maxTriples = 0;\n        // Write your code here\n      \
    \  return maxTriples;\n    }\n    public static void main(String[] args) {\n \
    \   assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0o8fe_oi.java:23)\n"
  stdout: ''
  timestamp: 1659976139
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long count = 0;\n        long[] a = new long[(int)n];\n      \
    \  for (int i = 1; i <= n; i++) {\n            a[i-1] = i * i - i + 1;\n     \
    \   }\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1;\
    \ j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n         \
    \           if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976139
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long count = 0;\n        for (long i = 1; i < n; i++) {\n    \
    \        for (long j = i + 1; j < n; j++) {\n                for (long k = j +\
    \ 1; k < n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k\
    \ * k - k + 1) % 3 == 0) {\n                        count++;\n               \
    \     }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjihxrmcz.java:32)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        return 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgmfuat4c.java:22)\n"
  stdout: ''
  timestamp: 1659976139
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long count = 0;\n        for (long i = 1; i < n; i++) {\n    \
    \        for (long j = i + 1; j < n; j++) {\n                for (long k = j +\
    \ 1; k < n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k\
    \ * k - k + 1) % 3 == 0) {\n                        count++;\n               \
    \     }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjihxrmcz.java:32)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        return 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgmfuat4c.java:22)\n"
  stdout: ''
  timestamp: 1659976139
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long count = 0;\n        for(int i = 1; i < n;\
    \ i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    if((i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n       \
    \             }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeaepaxvt.java:34)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long result = 0;\n        // Write your code here.\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd9u8pd0e.java:23)\n"
  stdout: ''
  timestamp: 1659976139
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long count = 0;\n        for(int i = 1; i < n;\
    \ i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    if((i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n       \
    \             }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeaepaxvt.java:34)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long count = 0;\n        for(int i = 1; i <= n;\
    \ i++) {\n            for(int j = i + 1; j <= n; j++) {\n                for(int\
    \ k = j + 1; k <= n; k++) {\n                    if((i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n       \
    \             }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long count = 0;\n        for(int i = 1; i < n;\
    \ i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    long a = i * i - i + 1;\n    \
    \                long b = j * j - j + 1;\n                    long c = k * k -\
    \ k + 1;\n                    if((a + b + c) % 3 == 0) {\n                   \
    \     count++;\n                    }\n                }\n            }\n    \
    \    }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplwmjcfed.java:37)\n"
  stdout: ''
  timestamp: 1659976139
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long count = 0;\n        for(int i = 1; i < n;\
    \ i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    if((i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n       \
    \             }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeaepaxvt.java:34)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long count = 0;\n        for(int i = 1; i <= n;\
    \ i++) {\n            for(int j = i + 1; j <= n; j++) {\n                for(int\
    \ k = j + 1; k <= n; k++) {\n                    if((i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n       \
    \             }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n - 2; i++) {\n            for(int j\
    \ = i + 1; j < n - 1; j++) {\n                for(int k = j + 1; k < n; k++) {\n\
    \                    if((a[i] + a[j] + a[k]) % 3 == 0) {\n                   \
    \     count++;\n                    }\n                }\n            }\n    \
    \    }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1irew95h.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j <\
    \ n - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n         \
    \           if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8wsrwjwx.java:35)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long[] a = new long[(int)n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8lwafyh.java:37)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long count = 0;\n        for (long i = 1; i < n; i++) {\n    \
    \        for (long j = i + 1; j < n; j++) {\n                for (long k = j +\
    \ 1; k < n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k\
    \ * k - k + 1) % 3 == 0) {\n                        count++;\n               \
    \     }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjihxrmcz.java:32)\n"
  stdout: ''
  timestamp: 1659976138
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        // Write your code here\n        // To debug: System.err.println(\"\
    Debug messages...\");\n        long ans = 0;\n        long[] a = new long[(int)n];\n\
    \        for(int i = 1; i <= n; i++) {\n            a[i-1] = i * i - i + 1;\n\
    \        }\n        for(int i = 0; i < n; i++) {\n            for(int j = i+1;\
    \ j < n; j++) {\n                for(int k = j+1; k < n; k++) {\n            \
    \        if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        ans++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ ans;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976139
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    // Example :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n \
    \   // The only valid triple is (1, 7, 13).\n    public static long getMaxTriples(long\
    \ n) {\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8chwv2.java:35)\n"
  stdout: ''
  timestamp: 1659976138

name: HumanEval_117_select_words
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given a string s and a natural number n, you have been tasked\
  \ to implement \n    // a function that returns a list of all words from string\
  \ s that contain exactly \n    // n consonants, in order these words appear in the\
  \ string s.\n    // If the string s is empty then the function should return an\
  \ empty list.\n    // Note: you may assume the input string contains only letters\
  \ and spaces.\n    // Examples:\n    public static String selectWords(String s,\
  \ int n) {\n"
tests: "return \"\";\n    }\n    public static void main(String[] args) {\n    assert(selectWords((\"\
  Mary had a little lamb\"), (4)).equals((new String(Arrays.asList((String)\"little\"\
  )))));\n    assert(selectWords((\"Mary had a little lamb\"), (3)).equals((new String(Arrays.asList((String)\"\
  Mary\", (String)\"lamb\")))));\n    assert(selectWords((\"simple white space\"),\
  \ (2)).equals((new String(Arrays.asList()))));\n    assert(selectWords((\"Hello\
  \ world\"), (4)).equals((new String(Arrays.asList((String)\"world\")))));\n    assert(selectWords((\"\
  Uncle sam\"), (3)).equals((new String(Arrays.asList((String)\"Uncle\")))));\n  \
  \  assert(selectWords((\"\"), (4)).equals((new String(Arrays.asList()))));\n   \
  \ assert(selectWords((\"a b c d e f\"), (1)).equals((new String(Arrays.asList((String)\"\
  b\", (String)\"c\", (String)\"d\", (String)\"f\")))));\n    }\n\n}\n"
completions: ["        // TODO: implement this function\n        return \"\";", " \
    \       String[] words = s.split(\" \");\n        List<String> result = new ArrayList<>();\n\
    \        for (String word : words) {\n            if (countConsonants(word) ==\
    \ n) {\n                result.add(word);\n            }\n        }\n        return\
    \ result.toString();", "        String[] words = s.split(\" \");\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (String word : words) {\n           \
    \ if (countConsonants(word) == n) {\n                sb.append(word + \" \");\n\
    \            }\n        }\n        return sb.toString().trim();", "        //\
    \ Write your code here\n        return \"\";", "        // TODO: implement this\
    \ function\n        return \"\";", "        // Write your code here\n        return\
    \ \"\";", "        String[] words = s.split(\" \");\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (String word : words) {\n            if\
    \ (countConsonants(word) == n) {\n                sb.append(word);\n         \
    \       sb.append(\" \");\n            }\n        }\n        return sb.toString().trim();",
  "        String[] words = s.split(\" \");\n        List<String> result = new ArrayList<>();\n\
    \        for (String word : words) {\n            if (countConsonants(word) ==\
    \ n) {\n                result.add(word);\n            }\n        }\n        return\
    \ result.toString();", "        // TODO: Implement this function\n        return\
    \ \"\";", "        String[] words = s.split(\" \");\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (String word : words) {\n            if\
    \ (countConsonants(word) == n) {\n                sb.append(word + \" \");\n \
    \           }\n        }\n        return sb.toString().trim();", "        // TODO:\
    \ implement this function\n        return \"\";", "        // TODO: implement\
    \ this function\n        return \"\";", "        String[] words = s.split(\" \"\
    );\n        List<String> result = new ArrayList<>();\n        for (String word\
    \ : words) {\n            if (countConsonants(word) == n) {\n                result.add(word);\n\
    \            }\n        }\n        return String.join(\" \", result);", "    \
    \    String[] words = s.split(\" \");\n        String result = \"\";\n       \
    \ for (String word : words) {\n            if (countConsonants(word) == n) {\n\
    \                result += word + \" \";\n            }\n        }\n        return\
    \ result.trim();", "        String[] words = s.split(\" \");\n        List<String>\
    \ result = new ArrayList<>();\n        for (String word : words) {\n         \
    \   if (countConsonants(word) == n) {\n                result.add(word);\n   \
    \         }\n        }\n        return String.join(\" \", result);", "       \
    \ String[] words = s.split(\" \");\n        StringBuilder sb = new StringBuilder();\n\
    \        for (String word : words) {\n            if (word.length() == n) {\n\
    \                sb.append(word);\n                sb.append(\" \");\n       \
    \     }\n        }\n        return sb.toString().trim();", "        // Write your\
    \ code here\n        return \"\";", "        // TODO: implement this function\n\
    \        return \"\";", '        return null;', '        return "";', "      \
    \  // TODO: implement this function\n        return \"\";", '        return "";',
  "        String[] words = s.split(\" \");\n        StringBuilder sb = new StringBuilder();\n\
    \        for (String word : words) {\n            if (countConsonants(word) ==\
    \ n) {\n                sb.append(word);\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString().trim();", "        //\
    \ TODO: Implement me!\n        return \"\";", "        // TODO: implement this\
    \ function\n        return \"\";", "        // Write your code here\n        return\
    \ \"\";", "        // TODO: implement this function\n        return \"\";", " \
    \       String[] words = s.split(\" \");\n        String[] result = new String[words.length];\n\
    \        int count = 0;\n        for (int i = 0; i < words.length; i++) {\n  \
    \          if (countConsonants(words[i]) == n) {\n                result[count]\
    \ = words[i];\n                count++;\n            }\n        }\n        return\
    \ Arrays.toString(Arrays.copyOfRange(result, 0, count));", "        // Write your\
    \ code here\n        return \"\";", "        String[] words = s.split(\" \");\n\
    \        StringBuilder sb = new StringBuilder();\n        for (String word : words)\
    \ {\n            if (countConsonants(word) == n) {\n                sb.append(word);\n\
    \                sb.append(\" \");\n            }\n        }\n        return sb.toString().trim();",
  "        String[] words = s.split(\" \");\n        List<String> result = new ArrayList<>();\n\
    \        for (String word : words) {\n            if (countConsonants(word) ==\
    \ n) {\n                result.add(word);\n            }\n        }\n        return\
    \ result.toString();", "        String[] words = s.split(\" \");\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (String word : words) {\n           \
    \ if (countConsonants(word) == n) {\n                sb.append(word + \" \");\n\
    \            }\n        }\n        return sb.toString().trim();", "        //\
    \ TODO\n        return \"\";", "        // TODO: implement this function\n   \
    \     return \"\";", "        String[] words = s.split(\" \");\n        List<String>\
    \ result = new ArrayList<>();\n        for (String word : words) {\n         \
    \   int count = 0;\n            for (char c : word.toCharArray()) {\n        \
    \        if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n   \
    \                 count++;\n                }\n            }\n            if (count\
    \ == n) {\n                result.add(word);\n            }\n        }\n     \
    \   return String.join(\" \", result);", "        String[] words = s.split(\"\
    \ \");\n        List<String> result = new ArrayList<>();\n        for (String\
    \ word : words) {\n            if (countConsonants(word) == n) {\n           \
    \     result.add(word);\n            }\n        }\n        return String.join(\"\
    \ \", result);", "        String[] words = s.split(\" \");\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (String word : words) {\n           \
    \ if (word.length() - countVowels(word) == n) {\n                sb.append(word);\n\
    \                sb.append(\" \");\n            }\n        }\n        return sb.toString().trim();",
  "        // TODO: implement this function\n        return \"\";", "        // TODO:\
    \ implement me\n        return \"\";", "        // Write your code here\n    \
    \    String[] words = s.split(\" \");\n        StringBuilder sb = new StringBuilder();\n\
    \        for (String word : words) {\n            if (countConsonants(word) ==\
    \ n) {\n                sb.append(word);\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString().trim();", '        return
    "";', "        String[] words = s.split(\" \");\n        StringBuilder result\
    \ = new StringBuilder();\n        for (String word : words) {\n            if\
    \ (countConsonants(word) == n) {\n                result.append(word + \" \");\n\
    \            }\n        }\n        return result.toString().trim();", '        return
    "";', "        // TODO: implement this method\n        return \"\";", "      \
    \  // Write your code here\n        return \"\";", "        String[] words = s.split(\"\
    \ \");\n        StringBuilder sb = new StringBuilder();\n        for (String word\
    \ : words) {\n            if (countConsonants(word) == n) {\n                sb.append(word);\n\
    \                sb.append(\" \");\n            }\n        }\n        return sb.toString().trim();",
  "        String[] words = s.split(\" \");\n        List<String> result = new ArrayList<>();\n\
    \        for (String word : words) {\n            if (countConsonants(word) ==\
    \ n) {\n                result.add(word);\n            }\n        }\n        return\
    \ String.join(\" \", result);", "        // TODO: implement this method\n    \
    \    return \"\";", "        // Write your code here\n        return \"\";", '        return
    null;', "        String[] words = s.split(\" \");\n        List<String> result\
    \ = new ArrayList<>();\n        for (String word : words) {\n            if (countConsonants(word)\
    \ == n) {\n                result.add(word);\n            }\n        }\n     \
    \   return String.join(\" \", result);", '        return "";', "        // TODO:\
    \ implement this method\n        return \"\";", "        // TODO: implement this\
    \ function\n        return null;", "        String[] words = s.split(\" \");\n\
    \        List<String> result = new ArrayList<>();\n        for (String word :\
    \ words) {\n            if (countConsonants(word) == n) {\n                result.add(word);\n\
    \            }\n        }\n        return String.join(\" \", result);", "    \
    \    // TODO: Implement this function\n        return \"\";", '        return
    "";', "        // TODO: Implement this function\n        return \"\";", "    \
    \    String[] words = s.split(\" \");\n        StringBuilder sb = new StringBuilder();\n\
    \        for (String word : words) {\n            if (countConsonants(word) ==\
    \ n) {\n                sb.append(word + \" \");\n            }\n        }\n \
    \       return sb.toString().trim();", "        String[] words = s.split(\" \"\
    );\n        String result = \"\";\n        for (String word : words) {\n     \
    \       if (countConsonants(word) == n) {\n                result += word + \"\
    \ \";\n            }\n        }\n        return result.trim();", "        String[]\
    \ words = s.split(\" \");\n        List<String> result = new ArrayList<>();\n\
    \        for (String word : words) {\n            if (countConsonants(word) ==\
    \ n) {\n                result.add(word);\n            }\n        }\n        return\
    \ String.join(\" \", result);", '        return "";', "        String[] words\
    \ = s.split(\" \");\n        List<String> result = new ArrayList<>();\n      \
    \  for (String word : words) {\n            if (countConsonants(word) == n) {\n\
    \                result.add(word);\n            }\n        }\n        return String.join(\"\
    \ \", result);", "        String[] words = s.split(\" \");\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (String word : words) {\n           \
    \ if (countConsonants(word) == n) {\n                sb.append(word + \" \");\n\
    \            }\n        }\n        return sb.toString().trim();", "        //\
    \ TODO: implement this method\n        return \"\";", "        // TODO: Implement\
    \ this function\n        return \"\";", "        // Write your code here\n   \
    \     return \"\";", '        return "";', "        String[] words = s.split(\"\
    \ \");\n        List<String> result = new ArrayList<>();\n        for (String\
    \ word : words) {\n            if (word.length() >= n) {\n                int\
    \ count = 0;\n                for (int i = 0; i < word.length(); i++) {\n    \
    \                if (!isVowel(word.charAt(i))) {\n                        count++;\n\
    \                    }\n                }\n                if (count == n) {\n\
    \                    result.add(word);\n                }\n            }\n   \
    \     }\n        return result.toString();", "        // TODO: Implement this\
    \ function\n        return \"\";", '        return "";', "        String[] words\
    \ = s.split(\" \");\n        List<String> result = new ArrayList<>();\n      \
    \  for (String word : words) {\n            if (countConsonants(word) == n) {\n\
    \                result.add(word);\n            }\n        }\n        return result.toString();",
  "        // TODO: Implement this function\n        return \"\";", '        return
    null;', "        // TODO: Implement this function.\n        return \"\";", " \
    \       // TODO: implement this function\n        return \"\";", "        String[]\
    \ words = s.split(\" \");\n        StringBuilder sb = new StringBuilder();\n \
    \       for (String word : words) {\n            if (countConsonants(word) ==\
    \ n) {\n                sb.append(word);\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString().trim();", "        String[]\
    \ words = s.split(\" \");\n        StringBuilder sb = new StringBuilder();\n \
    \       for (String word : words) {\n            if (countConsonants(word) ==\
    \ n) {\n                sb.append(word + \" \");\n            }\n        }\n \
    \       return sb.toString().trim();", "        // TODO: implement this function\n\
    \        return \"\";", "        // Write your code here\n        return \"\";",
  "        // TODO: implement this method\n        return \"\";", "        // TODO:\
    \ implement this function\n        return \"\";", "        // TODO: implement\
    \ this method\n        return \"\";", "        // Write your code here\n     \
    \   return \"\";", "        String[] words = s.split(\" \");\n        List<String>\
    \ result = new ArrayList<>();\n        for (String word : words) {\n         \
    \   if (countConsonants(word) == n) {\n                result.add(word);\n   \
    \         }\n        }\n        return String.join(\" \", result);", '        return
    null;', "        String[] words = s.split(\" \");\n        List<String> result\
    \ = new ArrayList<>();\n        for (String word : words) {\n            if (countConsonants(word)\
    \ == n) {\n                result.add(word);\n            }\n        }\n     \
    \   return result.toString();", "        // TODO: implement this function\n  \
    \      return \"\";", "        // Write your code here\n        return null;",
  '        return null;', '        return null;', "        // TODO: implement this\
    \ function\n        return \"\";", "        String[] words = s.split(\" \");\n\
    \        StringBuilder sb = new StringBuilder();\n        for (String word : words)\
    \ {\n            if (countConsonants(word) == n) {\n                sb.append(word\
    \ + \" \");\n            }\n        }\n        return sb.toString().trim();",
  '        return "";', "        // TODO: implement this function\n        return\
    \ \"\";", "        // TODO: implement this function.\n        return \"\";", " \
    \       String[] words = s.split(\" \");\n        StringBuilder sb = new StringBuilder();\n\
    \        for (String word : words) {\n            if (countConsonants(word) ==\
    \ n) {\n                sb.append(word + \" \");\n            }\n        }\n \
    \       return sb.toString().trim();", "        String[] words = s.split(\" \"\
    );\n        List<String> result = new ArrayList<>();\n        for (String word\
    \ : words) {\n            if (countConsonants(word) == n) {\n                result.add(word);\n\
    \            }\n        }\n        return String.join(\" \", result);", "    \
    \    // TODO: Implement this function\n        return \"\";", '        return
    null;', "        String[] words = s.split(\" \");\n        List<String> result\
    \ = new ArrayList<>();\n        for (String word : words) {\n            if (countConsonants(word)\
    \ == n) {\n                result.add(word);\n            }\n        }\n     \
    \   return result.toString();", "        String[] words = s.split(\" \");\n  \
    \      List<String> result = new ArrayList<>();\n        for (String word : words)\
    \ {\n            if (countConsonants(word) == n) {\n                result.add(word);\n\
    \            }\n        }\n        return result.toString();", "        // Write\
    \ your code here\n        return \"\";", "        String[] words = s.split(\"\
    \ \");\n        StringBuilder result = new StringBuilder();\n        for (String\
    \ word : words) {\n            if (countConsonants(word) == n) {\n           \
    \     result.append(word);\n                result.append(\" \");\n          \
    \  }\n        }\n        return result.toString().trim();", "        // TODO:\
    \ implement this function\n        return \"\";", "        // TODO: implement\
    \ this method\n        return \"\";", "        String[] words = s.split(\" \"\
    );\n        StringBuilder sb = new StringBuilder();\n        for (String word\
    \ : words) {\n            int numConsonants = 0;\n            for (int i = 0;\
    \ i < word.length(); i++) {\n                if (isConsonant(word.charAt(i)))\
    \ {\n                    numConsonants++;\n                }\n            }\n\
    \            if (numConsonants == n) {\n                sb.append(word);\n   \
    \             sb.append(\" \");\n            }\n        }\n        return sb.toString().trim();",
  "        // TODO: Implement this function.\n        return \"\";", "        String[]\
    \ words = s.split(\" \");\n        String result = \"\";\n        for (String\
    \ word : words) {\n            if (countConsonants(word) == n) {\n           \
    \     result += word + \" \";\n            }\n        }\n        return result.trim();",
  "        String[] words = s.split(\" \");\n        StringBuilder sb = new StringBuilder();\n\
    \        for (String word : words) {\n            if (countConsonants(word) ==\
    \ n) {\n                sb.append(word);\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString().trim();", "        String[]\
    \ words = s.split(\" \");\n        List<String> result = new ArrayList<>();\n\
    \        for (String word : words) {\n            if (countConsonants(word) ==\
    \ n) {\n                result.add(word);\n            }\n        }\n        return\
    \ result.toString();", "        String[] words = s.split(\" \");\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (String word : words) {\n           \
    \ if (countConsonants(word) == n) {\n                sb.append(word + \" \");\n\
    \            }\n        }\n        return sb.toString().trim();", "        //\
    \ TODO: implement this function\n        return \"\";", "        // TODO: implement\
    \ this function\n        return \"\";", "        String[] words = s.split(\" \"\
    );\n        List<String> result = new ArrayList<>();\n        for (String word\
    \ : words) {\n            int consonants = 0;\n            for (int i = 0; i <\
    \ word.length(); i++) {\n                char c = word.charAt(i);\n          \
    \      if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n     \
    \               consonants++;\n                }\n            }\n            if\
    \ (consonants == n) {\n                result.add(word);\n            }\n    \
    \    }\n        return result.toString();", '        return null;', '        return
    "";', "        String[] words = s.split(\" \");\n        List<String> result =\
    \ new ArrayList<>();\n        for (String word : words) {\n            if (countConsonants(word)\
    \ == n) {\n                result.add(word);\n            }\n        }\n     \
    \   return result.toString();", "        // TODO: implement this function\n  \
    \      return \"\";", '        return null;', "        // TODO: Implement this\
    \ function\n        return \"\";", "        // TODO: implement this function\n\
    \        return \"\";", "        // TODO: implement this method\n        return\
    \ \"\";", "        String[] words = s.split(\" \");\n        String result = \"\
    \";\n        for (String word : words) {\n            if (countConsonants(word)\
    \ == n) {\n                result += word + \" \";\n            }\n        }\n\
    \        return result.trim();", "        String[] words = s.split(\" \");\n \
    \       String result = \"\";\n        for (String word : words) {\n         \
    \   if (countConsonants(word) == n) {\n                result += word + \" \"\
    ;\n            }\n        }\n        return result.trim();", "        // TODO:\
    \ Implement me\n        return \"\";", '        return "";', "        return Arrays.stream(s.split(\"\
    \ \"))\n            .filter(w -> w.chars().filter(c -> \"bcdfghjklmnpqrstvwxz\"\
    .indexOf(c) != -1).count() == n)\n            .collect(Collectors.joining(\" \"\
    ));", "        // TODO: Implement this function\n        String[] words = s.split(\"\
    \ \");\n        StringBuilder result = new StringBuilder();\n        for (String\
    \ word : words) {\n            if (countConsonants(word) == n) {\n           \
    \     result.append(word + \" \");\n            }\n        }\n        return result.toString().trim();",
  "        // TODO: implement this function\n        return \"\";", "        // Write\
    \ your code here\n        return \"\";", '        return "";', "        String[]\
    \ words = s.split(\" \");\n        List<String> result = new ArrayList<>();\n\
    \        for (String word : words) {\n            int count = 0;\n           \
    \ for (char c : word.toCharArray()) {\n                if (c != 'a' && c != 'e'\
    \ && c != 'i' && c != 'o' && c != 'u') {\n                    count++;\n     \
    \           }\n            }\n            if (count == n) {\n                result.add(word);\n\
    \            }\n        }\n        return String.join(\" \", result);", "    \
    \    // TODO: implement this method\n        return \"\";", "        // TODO:\
    \ Implement this function\n        return \"\";", "        // TODO: implement\
    \ this function\n        return \"\";", "        String[] words = s.split(\" \"\
    );\n        StringBuilder result = new StringBuilder();\n        for (String word\
    \ : words) {\n            if (countConsonants(word) == n) {\n                result.append(word\
    \ + \" \");\n            }\n        }\n        return result.toString().trim();",
  '        return "";', '        return null;', '        return "";', "        String[]\
    \ words = s.split(\" \");\n        List<String> result = new ArrayList<>();\n\
    \        for (String word : words) {\n            if (countConsonants(word) ==\
    \ n) {\n                result.add(word);\n            }\n        }\n        return\
    \ String.join(\" \", result);", "        String[] words = s.split(\" \");\n  \
    \      StringBuilder sb = new StringBuilder();\n        for (String word : words)\
    \ {\n            if (word.length() == n) {\n                sb.append(word + \"\
    \ \");\n            }\n        }\n        return sb.toString().trim();", "   \
    \     // TODO: Implement this function\n        return \"\";", "        String[]\
    \ words = s.split(\" \");\n        StringBuilder sb = new StringBuilder();\n \
    \       for (String word : words) {\n            if (countConsonants(word) ==\
    \ n) {\n                sb.append(word);\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString().trim();", "        //\
    \ TODO: implement me\n        return \"\";", '        return "";', "        String[]\
    \ words = s.split(\" \");\n        StringBuilder sb = new StringBuilder();\n \
    \       for (String word : words) {\n            if (countConsonants(word) ==\
    \ n) {\n                sb.append(word);\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString().trim();", "        //\
    \ TODO: implement this function\n        return \"\";", "        // Write your\
    \ code here\n        return \"\";", "        String[] words = s.split(\" \");\n\
    \        List<String> result = new ArrayList<>();\n        for (String word :\
    \ words) {\n            if (countConsonants(word) == n) {\n                result.add(word);\n\
    \            }\n        }\n        return String.join(\" \", result);", "    \
    \    String[] words = s.split(\" \");\n        StringBuilder sb = new StringBuilder();\n\
    \        for (String word : words) {\n            if (countConsonants(word) ==\
    \ n) {\n                sb.append(word);\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString().trim();", "        return\
    \ Arrays.stream(s.split(\" \"))\n            .filter(w -> w.chars().filter(c ->\
    \ \"bcdfghjklmnpqrstvwxyz\".indexOf(c) != -1).count() == n)\n            .collect(Collectors.joining(\"\
    \ \"));", "        String[] words = s.split(\" \");\n        StringBuilder result\
    \ = new StringBuilder();\n        for (String word : words) {\n            if\
    \ (countConsonants(word) == n) {\n                result.append(word + \" \");\n\
    \            }\n        }\n        return result.toString().trim();", "      \
    \  // TODO: implement this function\n        return \"\";", "        // TODO:\
    \ implement this function\n        return \"\";", "        String[] words = s.split(\"\
    \ \");\n        StringBuilder sb = new StringBuilder();\n        for (String word\
    \ : words) {\n            if (countConsonants(word) == n) {\n                sb.append(word);\n\
    \                sb.append(\" \");\n            }\n        }\n        return sb.toString().trim();",
  "        String[] words = s.split(\" \");\n        List<String> result = new ArrayList<>();\n\
    \        for (String word : words) {\n            if (countConsonants(word) ==\
    \ n) {\n                result.add(word);\n            }\n        }\n        return\
    \ String.join(\" \", result);", "        // Write your code here\n        return\
    \ \"\";", '        return "";', '        return null;', "        // TODO: implement\
    \ this method\n        return \"\";", "        String[] words = s.split(\" \"\
    );\n        List<String> result = new ArrayList<>();\n        for (String word\
    \ : words) {\n            if (countConsonants(word) == n) {\n                result.add(word);\n\
    \            }\n        }\n        return result.toString();", '        return
    null;', "        String[] words = s.split(\" \");\n        StringBuilder sb =\
    \ new StringBuilder();\n        for (String word : words) {\n            if (countConsonants(word)\
    \ == n) {\n                sb.append(word);\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString().trim();", "        return\
    \ Arrays.stream(s.split(\" \"))\n            .filter(w -> w.chars().filter(c ->\
    \ \"bcdfghjklmnpqrstvwxz\".indexOf(c) >= 0).count() == n)\n            .collect(Collectors.joining(\"\
    \ \"));", "        // TODO: implement this method\n        return \"\";", "  \
    \      // TODO: implement this function\n        return \"\";", "        // TODO:\
    \ implement this method\n        return \"\";", "        String[] words = s.split(\"\
    \ \");\n        StringBuilder sb = new StringBuilder();\n        for (String word\
    \ : words) {\n            if (countConsonants(word) == n) {\n                sb.append(word);\n\
    \                sb.append(\" \");\n            }\n        }\n        return sb.toString().trim();",
  "        String[] words = s.split(\" \");\n        StringBuilder sb = new StringBuilder();\n\
    \        for (String word : words) {\n            if (countConsonants(word) ==\
    \ n) {\n                sb.append(word + \" \");\n            }\n        }\n \
    \       return sb.toString().trim();", '        return "";', '        return "";',
  '        return "";', '        return "";', "        String[] words = s.split(\"\
    \ \");\n        StringBuilder result = new StringBuilder();\n        for (String\
    \ word : words) {\n            if (countConsonants(word) == n) {\n           \
    \     result.append(word + \" \");\n            }\n        }\n        return result.toString().trim();",
  "        return Arrays.stream(s.split(\" \"))\n            .filter(w -> w.chars().filter(c\
    \ -> \"aeiou\".indexOf(c) == -1).count() == n)\n            .collect(Collectors.joining(\"\
    \ \"));", "        // Write your code here\n        return \"\";", "        //\
    \ TODO: implement this method\n        return \"\";", "        // TODO: implement\
    \ this function\n        return \"\";", "        // TODO: implement this function\n\
    \        return \"\";", "        // Write your code here\n        // To print\
    \ results to the standard output you can use System.out.println()\n        //\
    \ Example: System.out.println(\"Hello world!\");\n        String[] words = s.split(\"\
    \ \");\n        StringBuilder sb = new StringBuilder();\n        for (String word\
    \ : words) {\n            if (countConsonants(word) == n) {\n                sb.append(word\
    \ + \" \");\n            }\n        }\n        return sb.toString().trim();",
  "        // TODO: implement this function\n        return \"\";", "        // TODO:\
    \ implement this function\n        return \"\";", "        String[] words = s.split(\"\
    \ \");\n        StringBuilder sb = new StringBuilder();\n        for (String word\
    \ : words) {\n            if (countConsonants(word) == n) {\n                sb.append(word\
    \ + \" \");\n            }\n        }\n        return sb.toString().trim();",
  "        // TODO: Implement this function.\n        return \"\";", '        return
    "";', "        List<String> words = Arrays.asList(s.split(\" \"));\n        List<String>\
    \ result = new ArrayList<>();\n        for (String word : words) {\n         \
    \   if (countConsonants(word) == n) {\n                result.add(word);\n   \
    \         }\n        }\n        return String.join(\" \", result);", "       \
    \ // TODO: implement this function\n        return \"\";", '        return "";',
  "        String[] words = s.split(\" \");\n        List<String> result = new ArrayList<>();\n\
    \        for (String word : words) {\n            if (countConsonants(word) ==\
    \ n) {\n                result.add(word);\n            }\n        }\n        return\
    \ result.toString();", "        // TODO: implement this function\n        return\
    \ \"\";", "        String[] words = s.split(\" \");\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (String word : words) {\n            int\
    \ count = 0;\n            for (int i = 0; i < word.length(); i++) {\n        \
    \        if (isConsonant(word.charAt(i))) {\n                    count++;\n  \
    \              }\n            }\n            if (count == n) {\n             \
    \   sb.append(word + \" \");\n            }\n        }\n        return sb.toString().trim();",
  "        // TODO: implement this method\n        return null;", "        String[]\
    \ words = s.split(\" \");\n        StringBuilder sb = new StringBuilder();\n \
    \       for (String word : words) {\n            if (countConsonants(word) ==\
    \ n) {\n                sb.append(word + \" \");\n            }\n        }\n \
    \       return sb.toString().trim();", '        return "";', "        // TODO:\
    \ Implement this function\n        return null;", "        String[] words = s.split(\"\
    \ \");\n        StringBuilder sb = new StringBuilder();\n        for (String word\
    \ : words) {\n            if (countConsonants(word) == n) {\n                sb.append(word);\n\
    \                sb.append(\" \");\n            }\n        }\n        return sb.toString().trim();",
  '        return "";', "        // Write your code here\n        String[] words =\
    \ s.split(\" \");\n        String result = \"\";\n        for (String word : words)\
    \ {\n            int count = 0;\n            for (int i = 0; i < word.length();\
    \ i++) {\n                if (isConsonant(word.charAt(i))) {\n               \
    \     count++;\n                }\n            }\n            if (count == n)\
    \ {\n                result += word + \" \";\n            }\n        }\n     \
    \   return result.trim();", "        String[] words = s.split(\" \");\n      \
    \  StringBuilder sb = new StringBuilder();\n        for (String word : words)\
    \ {\n            if (countConsonants(word) == n) {\n                sb.append(word\
    \ + \" \");\n            }\n        }\n        return sb.toString().trim();"]
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"

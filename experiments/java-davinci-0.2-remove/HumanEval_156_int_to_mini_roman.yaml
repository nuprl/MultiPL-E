completions:
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] values = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        for (int i = 0; i < values.length; i++) {\n            while (number >=\
  \ values[i]) {\n                number -= values[i];\n                sb.append(roman[i]);\n\
  \            }\n        }\n        return sb.toString();"
- '        return "";'
- "        // TODO: Implement this method\n        return \"\";"
- "        StringBuilder sb = new StringBuilder();\n        int[] nums = {1, 4, 5,\
  \ 9, 10, 40, 50, 90, 100, 400, 500, 900, 1000};\n        String[] romans = {\"i\"\
  , \"iv\", \"v\", \"ix\", \"x\", \"xl\", \"l\", \"xc\", \"c\", \"cd\", \"d\", \"\
  cm\", \"m\"};\n        int i = nums.length - 1;\n        while (number > 0) {\n\
  \            while (number >= nums[i]) {\n                sb.append(romans[i]);\n\
  \                number -= nums[i];\n            }\n            i--;\n        }\n\
  \        return sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder result = new\
  \ StringBuilder();\n        int i = 0;\n        while (number > 0 || arabic.length\
  \ == (i - 1)) {\n            while ((number - arabic[i]) >= 0) {\n             \
  \   number -= arabic[i];\n                result.append(roman[i]);\n           \
  \ }\n            i++;\n        }\n        return result.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals =\
  \ {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"\
  v\", \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n      \
  \      while (number >= values[i]) {\n                number -= values[i];\n   \
  \             sb.append(numerals[i]);\n            }\n        }\n        return\
  \ sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] symbols = {\"\
  m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\",\
  \ \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n         \
  \   while (number >= values[i]) {\n                number -= values[i];\n      \
  \          sb.append(symbols[i]);\n            }\n        }\n        return sb.toString();"
- '        return "";'
- "        // TODO: implement this method\n        return \"\";"
- "        StringBuilder sb = new StringBuilder();\n        while (number > 0) {\n\
  \            if (number >= 1000) {\n                sb.append(\"m\");\n        \
  \        number -= 1000;\n            } else if (number >= 900) {\n            \
  \    sb.append(\"cm\");\n                number -= 900;\n            } else if (number\
  \ >= 500) {\n                sb.append(\"d\");\n                number -= 500;\n\
  \            } else if (number >= 400) {\n                sb.append(\"cd\");\n \
  \               number -= 400;\n            } else if (number >= 100) {\n      \
  \          sb.append(\"c\");\n                number -= 100;\n            } else\
  \ if (number >= 90) {\n                sb.append(\"xc\");\n                number\
  \ -= 90;\n            } else if (number >= 50) {\n                sb.append(\"l\"\
  );\n                number -= 50;\n            } else if (number >= 40) {\n    \
  \            sb.append(\"xl\");\n                number -= 40;\n            } else\
  \ if (number >= 10) {\n                sb.append(\"x\");\n                number\
  \ -= 10;\n            } else if (number >= 9) {\n                sb.append(\"ix\"\
  );\n                number -= 9;\n            } else if (number >= 5) {\n      \
  \          sb.append(\"v\");\n                number -= 5;\n            } else if\
  \ (number >= 4) {\n                sb.append(\"iv\");\n                number -=\
  \ 4;\n            } else if (number >= 1) {\n                sb.append(\"i\");\n\
  \                number -= 1;\n            }\n        }\n        return sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder result = new\
  \ StringBuilder();\n        int i = 0;\n        while (number > 0 || arabic.length\
  \ == (i - 1)) {\n            while ((number - arabic[i]) >= 0) {\n             \
  \   number -= arabic[i];\n                result.append(roman[i]);\n           \
  \ }\n            i++;\n        }\n        return result.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        for (int i = 0; i < arabic.length; i++) {\n            while (number >=\
  \ arabic[i]) {\n                number -= arabic[i];\n                sb.append(roman[i]);\n\
  \            }\n        }\n        return sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder result = new\
  \ StringBuilder();\n        for (int i = 0; i < arabic.length; i++) {\n        \
  \    while (number >= arabic[i]) {\n                number -= arabic[i];\n     \
  \           result.append(roman[i]);\n            }\n        }\n        return result.toString();"
- "        String roman = \"\";\n        while (number >= 1000) {\n            roman\
  \ += \"m\";\n            number -= 1000;\n        }\n        while (number >= 900)\
  \ {\n            roman += \"cm\";\n            number -= 900;\n        }\n     \
  \   while (number >= 500) {\n            roman += \"d\";\n            number -=\
  \ 500;\n        }\n        while (number >= 400) {\n            roman += \"cd\"\
  ;\n            number -= 400;\n        }\n        while (number >= 100) {\n    \
  \        roman += \"c\";\n            number -= 100;\n        }\n        while (number\
  \ >= 90) {\n            roman += \"xc\";\n            number -= 90;\n        }\n\
  \        while (number >= 50) {\n            roman += \"l\";\n            number\
  \ -= 50;\n        }\n        while (number >= 40) {\n            roman += \"xl\"\
  ;\n            number -= 40;\n        }\n        while (number >= 10) {\n      \
  \      roman += \"x\";\n            number -= 10;\n        }\n        while (number\
  \ >= 9) {\n            roman += \"ix\";\n            number -= 9;\n        }\n \
  \       while (number >= 5) {\n            roman += \"v\";\n            number -=\
  \ 5;\n        }\n        while (number >= 4) {\n            roman += \"iv\";\n \
  \           number -= 4;\n        }\n        while (number >= 1) {\n           \
  \ roman += \"i\";\n            number -= 1;\n        }\n        return roman;"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] symbols = {\"\
  m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\",\
  \ \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n         \
  \   while (number >= values[i]) {\n                number -= values[i];\n      \
  \          sb.append(symbols[i]);\n            }\n        }\n        return sb.toString();"
- "        // Fill in code here\n        return \"\";"
- "        // TODO: Implement me!\n        return \"\";"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals =\
  \ {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"\
  v\", \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n      \
  \      while (number >= values[i]) {\n                number -= values[i];\n   \
  \             sb.append(numerals[i]);\n            }\n        }\n        return\
  \ sb.toString();"
- "        String result = \"\";\n        int[] values = {1000, 900, 500, 400, 100,\
  \ 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals = {\"m\", \"cm\", \"d\"\
  , \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n\
  \        for (int i = 0; i < values.length; i++) {\n            while (number >=\
  \ values[i]) {\n                number -= values[i];\n                result +=\
  \ numerals[i];\n            }\n        }\n        return result;"
- "        StringBuilder sb = new StringBuilder();\n        int[] nums = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] romans = {\"m\"\
  , \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"\
  iv\", \"i\"};\n        for (int i = 0; i < nums.length; i++) {\n            while\
  \ (number >= nums[i]) {\n                sb.append(romans[i]);\n               \
  \ number -= nums[i];\n            }\n        }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals =\
  \ {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"\
  v\", \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n      \
  \      while (number >= values[i]) {\n                number -= values[i];\n   \
  \             sb.append(numerals[i]);\n            }\n        }\n        return\
  \ sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] nums = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] romans = {\"m\"\
  , \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"\
  iv\", \"i\"};\n        for (int i = 0; i < nums.length; i++) {\n            while\
  \ (number >= nums[i]) {\n                sb.append(romans[i]);\n               \
  \ number -= nums[i];\n            }\n        }\n        return sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] num = {1000, 900, 500,\
  \ 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        for (int i = 0; i < num.length; i++) {\n            while (number >= num[i])\
  \ {\n                number -= num[i];\n                sb.append(roman[i]);\n \
  \           }\n        }\n        return sb.toString();"
- "        // TODO: Implement this method\n        return \"\";"
- "        // TODO: Implement this function\n        return \"\";"
- "        // Your code here\n        return \"\";"
- "        String result = \"\";\n        while (number > 0) {\n            if (number\
  \ >= 1000) {\n                result += \"m\";\n                number -= 1000;\n\
  \            } else if (number >= 900) {\n                result += \"cm\";\n  \
  \              number -= 900;\n            } else if (number >= 500) {\n       \
  \         result += \"d\";\n                number -= 500;\n            } else if\
  \ (number >= 400) {\n                result += \"cd\";\n                number -=\
  \ 400;\n            } else if (number >= 100) {\n                result += \"c\"\
  ;\n                number -= 100;\n            } else if (number >= 90) {\n    \
  \            result += \"xc\";\n                number -= 90;\n            } else\
  \ if (number >= 50) {\n                result += \"l\";\n                number\
  \ -= 50;\n            } else if (number >= 40) {\n                result += \"xl\"\
  ;\n                number -= 40;\n            } else if (number >= 10) {\n     \
  \           result += \"x\";\n                number -= 10;\n            } else\
  \ if (number >= 9) {\n                result += \"ix\";\n                number\
  \ -= 9;\n            } else if (number >= 5) {\n                result += \"v\"\
  ;\n                number -= 5;\n            } else if (number >= 4) {\n       \
  \         result += \"iv\";\n                number -= 4;\n            } else if\
  \ (number >= 1) {\n                result += \"i\";\n                number -= 1;\n\
  \            }\n        }\n        return result;"
- "        StringBuilder sb = new StringBuilder();\n        while (number > 0) {\n\
  \            if (number >= 1000) {\n                sb.append(\"m\");\n        \
  \        number -= 1000;\n            } else if (number >= 900) {\n            \
  \    sb.append(\"cm\");\n                number -= 900;\n            } else if (number\
  \ >= 500) {\n                sb.append(\"d\");\n                number -= 500;\n\
  \            } else if (number >= 400) {\n                sb.append(\"cd\");\n \
  \               number -= 400;\n            } else if (number >= 100) {\n      \
  \          sb.append(\"c\");\n                number -= 100;\n            } else\
  \ if (number >= 90) {\n                sb.append(\"xc\");\n                number\
  \ -= 90;\n            } else if (number >= 50) {\n                sb.append(\"l\"\
  );\n                number -= 50;\n            } else if (number >= 40) {\n    \
  \            sb.append(\"xl\");\n                number -= 40;\n            } else\
  \ if (number >= 10) {\n                sb.append(\"x\");\n                number\
  \ -= 10;\n            } else if (number >= 9) {\n                sb.append(\"ix\"\
  );\n                number -= 9;\n            } else if (number >= 5) {\n      \
  \          sb.append(\"v\");\n                number -= 5;\n            } else if\
  \ (number >= 4) {\n                sb.append(\"iv\");\n                number -=\
  \ 4;\n            } else if (number >= 1) {\n                sb.append(\"i\");\n\
  \                number -= 1;\n            }\n        }\n        return sb.toString();"
- "        String result = \"\";\n        int[] values = {1000, 900, 500, 400, 100,\
  \ 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals = {\"m\", \"cm\", \"d\"\
  , \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n\
  \        for (int i = 0; i < values.length; i++) {\n            while (number >=\
  \ values[i]) {\n                number -= values[i];\n                result +=\
  \ numerals[i];\n            }\n        }\n        return result;"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals =\
  \ {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"\
  v\", \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n      \
  \      while (number >= values[i]) {\n                number -= values[i];\n   \
  \             sb.append(numerals[i]);\n            }\n        }\n        return\
  \ sb.toString();"
- "        String result = \"\";\n        int[] values = {1000, 900, 500, 400, 100,\
  \ 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals = {\"m\", \"cm\", \"d\"\
  , \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n\
  \        for (int i = 0; i < values.length; i++) {\n            while (number >=\
  \ values[i]) {\n                number -= values[i];\n                result +=\
  \ numerals[i];\n            }\n        }\n        return result;"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals =\
  \ {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"\
  v\", \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n      \
  \      while (number >= values[i]) {\n                number -= values[i];\n   \
  \             sb.append(numerals[i]);\n            }\n        }\n        return\
  \ sb.toString();"
- "        String result = \"\";\n        while (number > 0) {\n            if (number\
  \ >= 1000) {\n                result += \"m\";\n                number -= 1000;\n\
  \            } else if (number >= 900) {\n                result += \"cm\";\n  \
  \              number -= 900;\n            } else if (number >= 500) {\n       \
  \         result += \"d\";\n                number -= 500;\n            } else if\
  \ (number >= 400) {\n                result += \"cd\";\n                number -=\
  \ 400;\n            } else if (number >= 100) {\n                result += \"c\"\
  ;\n                number -= 100;\n            } else if (number >= 90) {\n    \
  \            result += \"xc\";\n                number -= 90;\n            } else\
  \ if (number >= 50) {\n                result += \"l\";\n                number\
  \ -= 50;\n            } else if (number >= 40) {\n                result += \"xl\"\
  ;\n                number -= 40;\n            } else if (number >= 10) {\n     \
  \           result += \"x\";\n                number -= 10;\n            } else\
  \ if (number >= 9) {\n                result += \"ix\";\n                number\
  \ -= 9;\n            } else if (number >= 5) {\n                result += \"v\"\
  ;\n                number -= 5;\n            } else if (number >= 4) {\n       \
  \         result += \"iv\";\n                number -= 4;\n            } else if\
  \ (number >= 1) {\n                result += \"i\";\n                number -= 1;\n\
  \            }\n        }\n        return result;"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals =\
  \ {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"\
  v\", \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n      \
  \      while (number >= values[i]) {\n                number -= values[i];\n   \
  \             sb.append(numerals[i]);\n            }\n        }\n        return\
  \ sb.toString();"
- '        return "";'
- '        return "";'
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals =\
  \ {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"\
  v\", \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n      \
  \      while (number >= values[i]) {\n                number -= values[i];\n   \
  \             sb.append(numerals[i]);\n            }\n        }\n        return\
  \ sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] symbols = {\"\
  m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\",\
  \ \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n         \
  \   while (number >= values[i]) {\n                number -= values[i];\n      \
  \          sb.append(symbols[i]);\n            }\n        }\n        return sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder result = new\
  \ StringBuilder();\n        int i = 0;\n        while (number > 0 || arabic.length\
  \ == (i - 1)) {\n            while ((number - arabic[i]) >= 0) {\n             \
  \   number -= arabic[i];\n                result.append(roman[i]);\n           \
  \ }\n            i++;\n        }\n        return result.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder result = new\
  \ StringBuilder();\n        int i = 0;\n        while (number > 0 || arabic.length\
  \ == (i - 1)) {\n            while ((number - arabic[i]) >= 0) {\n             \
  \   number -= arabic[i];\n                result.append(roman[i]);\n           \
  \ }\n            i++;\n        }\n        return result.toString();"
- "        String result = \"\";\n        while (number > 0) {\n            if (number\
  \ >= 1000) {\n                result += \"m\";\n                number -= 1000;\n\
  \            } else if (number >= 900) {\n                result += \"cm\";\n  \
  \              number -= 900;\n            } else if (number >= 500) {\n       \
  \         result += \"d\";\n                number -= 500;\n            } else if\
  \ (number >= 400) {\n                result += \"cd\";\n                number -=\
  \ 400;\n            } else if (number >= 100) {\n                result += \"c\"\
  ;\n                number -= 100;\n            } else if (number >= 90) {\n    \
  \            result += \"xc\";\n                number -= 90;\n            } else\
  \ if (number >= 50) {\n                result += \"l\";\n                number\
  \ -= 50;\n            } else if (number >= 40) {\n                result += \"xl\"\
  ;\n                number -= 40;\n            } else if (number >= 10) {\n     \
  \           result += \"x\";\n                number -= 10;\n            } else\
  \ if (number >= 9) {\n                result += \"ix\";\n                number\
  \ -= 9;\n            } else if (number >= 5) {\n                result += \"v\"\
  ;\n                number -= 5;\n            } else if (number >= 4) {\n       \
  \         result += \"iv\";\n                number -= 4;\n            } else if\
  \ (number >= 1) {\n                result += \"i\";\n                number -= 1;\n\
  \            }\n        }\n        return result;"
- "        StringBuilder sb = new StringBuilder();\n        int[] nums = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] romans = {\"m\"\
  , \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"\
  iv\", \"i\"};\n        for (int i = 0; i < nums.length; i++) {\n            while\
  \ (number >= nums[i]) {\n                sb.append(romans[i]);\n               \
  \ number -= nums[i];\n            }\n        }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        while (number >= 1000)\
  \ {\n            sb.append(\"m\");\n            number -= 1000;\n        }\n   \
  \     while (number >= 900) {\n            sb.append(\"cm\");\n            number\
  \ -= 900;\n        }\n        while (number >= 500) {\n            sb.append(\"\
  d\");\n            number -= 500;\n        }\n        while (number >= 400) {\n\
  \            sb.append(\"cd\");\n            number -= 400;\n        }\n       \
  \ while (number >= 100) {\n            sb.append(\"c\");\n            number -=\
  \ 100;\n        }\n        while (number >= 90) {\n            sb.append(\"xc\"\
  );\n            number -= 90;\n        }\n        while (number >= 50) {\n     \
  \       sb.append(\"l\");\n            number -= 50;\n        }\n        while (number\
  \ >= 40) {\n            sb.append(\"xl\");\n            number -= 40;\n        }\n\
  \        while (number >= 10) {\n            sb.append(\"x\");\n            number\
  \ -= 10;\n        }\n        while (number >= 9) {\n            sb.append(\"ix\"\
  );\n            number -= 9;\n        }\n        while (number >= 5) {\n       \
  \     sb.append(\"v\");\n            number -= 5;\n        }\n        while (number\
  \ >= 4) {\n            sb.append(\"iv\");\n            number -= 4;\n        }\n\
  \        while (number >= 1) {\n            sb.append(\"i\");\n            number\
  \ -= 1;\n        }\n        return sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] nums = {1000, 900, 500,\
  \ 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        int i = 0;\n        while (number > 0) {\n            if (number - nums[i]\
  \ >= 0) {\n                number -= nums[i];\n                sb.append(roman[i]);\n\
  \            } else {\n                i++;\n            }\n        }\n        return\
  \ sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] nums = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] romans = {\"m\"\
  , \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"\
  iv\", \"i\"};\n        for (int i = 0; i < nums.length; i++) {\n            while\
  \ (number >= nums[i]) {\n                sb.append(romans[i]);\n               \
  \ number -= nums[i];\n            }\n        }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] symbols = {\"\
  m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\",\
  \ \"iv\", \"i\"};\n        int i = 0;\n        while (number > 0) {\n          \
  \  int k = number / values[i];\n            for (int j = 0; j < k; j++) {\n    \
  \            sb.append(symbols[i]);\n                number -= values[i];\n    \
  \        }\n            i++;\n        }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals =\
  \ {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"\
  v\", \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n      \
  \      while (number >= values[i]) {\n                number -= values[i];\n   \
  \             sb.append(numerals[i]);\n            }\n        }\n        return\
  \ sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        int i = 0;\n        while (number > 0 || arabic.length == (i - 1)) {\n\
  \            while ((number - arabic[i]) >= 0) {\n                number -= arabic[i];\n\
  \                sb.append(roman[i]);\n            }\n            i++;\n       \
  \ }\n        return sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder result = new\
  \ StringBuilder();\n        int i = 0;\n        while (number > 0 || arabic.length\
  \ == (i - 1)) {\n            while ((number - arabic[i]) >= 0) {\n             \
  \   number -= arabic[i];\n                result.append(roman[i]);\n           \
  \ }\n            i++;\n        }\n        return result.toString();"
- "        StringBuilder sb = new StringBuilder();\n        while (number > 0) {\n\
  \            if (number >= 1000) {\n                sb.append(\"m\");\n        \
  \        number -= 1000;\n            } else if (number >= 900) {\n            \
  \    sb.append(\"cm\");\n                number -= 900;\n            } else if (number\
  \ >= 500) {\n                sb.append(\"d\");\n                number -= 500;\n\
  \            } else if (number >= 400) {\n                sb.append(\"cd\");\n \
  \               number -= 400;\n            } else if (number >= 100) {\n      \
  \          sb.append(\"c\");\n                number -= 100;\n            } else\
  \ if (number >= 90) {\n                sb.append(\"xc\");\n                number\
  \ -= 90;\n            } else if (number >= 50) {\n                sb.append(\"l\"\
  );\n                number -= 50;\n            } else if (number >= 40) {\n    \
  \            sb.append(\"xl\");\n                number -= 40;\n            } else\
  \ if (number >= 10) {\n                sb.append(\"x\");\n                number\
  \ -= 10;\n            } else if (number >= 9) {\n                sb.append(\"ix\"\
  );\n                number -= 9;\n            } else if (number >= 5) {\n      \
  \          sb.append(\"v\");\n                number -= 5;\n            } else if\
  \ (number >= 4) {\n                sb.append(\"iv\");\n                number -=\
  \ 4;\n            } else if (number >= 1) {\n                sb.append(\"i\");\n\
  \                number -= 1;\n            }\n        }\n        return sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] values = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        for (int i = 0; i < values.length; i++) {\n            while (number >=\
  \ values[i]) {\n                number -= values[i];\n                sb.append(roman[i]);\n\
  \            }\n        }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals =\
  \ {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"\
  v\", \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n      \
  \      while (number >= values[i]) {\n                number -= values[i];\n   \
  \             sb.append(numerals[i]);\n            }\n        }\n        return\
  \ sb.toString();"
- "        // TODO: Implement this method.\n        return \"\";"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1, 4,\
  \ 5, 9, 10, 40, 50, 90, 100, 400, 500, 900, 1000};\n        String[] numerals =\
  \ {\"i\", \"iv\", \"v\", \"ix\", \"x\", \"xl\", \"l\", \"xc\", \"c\", \"cd\", \"\
  d\", \"cm\", \"m\"};\n        for (int i = values.length - 1; i >= 0; i--) {\n \
  \           while (number >= values[i]) {\n                sb.append(numerals[i]);\n\
  \                number -= values[i];\n            }\n        }\n        return\
  \ sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] values = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        for (int i = 0; i < values.length; i++) {\n            while (number >=\
  \ values[i]) {\n                number -= values[i];\n                sb.append(roman[i]);\n\
  \            }\n        }\n        return sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] decimal = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        for (int i = 0; i < decimal.length; i++) {\n            while (number >=\
  \ decimal[i]) {\n                number -= decimal[i];\n                sb.append(roman[i]);\n\
  \            }\n        }\n        return sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] values = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder result = new\
  \ StringBuilder();\n        for (int i = 0; i < values.length; i++) {\n        \
  \    while (number >= values[i]) {\n                number -= values[i];\n     \
  \           result.append(roman[i]);\n            }\n        }\n        return result.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals =\
  \ {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"\
  v\", \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n      \
  \      while (number >= values[i]) {\n                number -= values[i];\n   \
  \             sb.append(numerals[i]);\n            }\n        }\n        return\
  \ sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1, 4,\
  \ 5, 9, 10, 40, 50, 90, 100, 400, 500, 900, 1000};\n        String[] numerals =\
  \ {\"i\", \"iv\", \"v\", \"ix\", \"x\", \"xl\", \"l\", \"xc\", \"c\", \"cd\", \"\
  d\", \"cm\", \"m\"};\n        int i = values.length - 1;\n        while (number\
  \ > 0) {\n            if (number >= values[i]) {\n                sb.append(numerals[i]);\n\
  \                number -= values[i];\n            } else {\n                i--;\n\
  \            }\n        }\n        return sb.toString();"
- "        String result = \"\";\n        int[] values = {1000, 900, 500, 400, 100,\
  \ 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals = {\"m\", \"cm\", \"d\"\
  , \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n\
  \        for (int i = 0; i < values.length; i++) {\n            while (number >=\
  \ values[i]) {\n                number -= values[i];\n                result +=\
  \ numerals[i];\n            }\n        }\n        return result;"
- "        StringBuilder sb = new StringBuilder();\n        int[] nums = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] romans = {\"m\"\
  , \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"\
  iv\", \"i\"};\n        for (int i = 0; i < nums.length; i++) {\n            while\
  \ (number >= nums[i]) {\n                sb.append(romans[i]);\n               \
  \ number -= nums[i];\n            }\n        }\n        return sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder result = new\
  \ StringBuilder();\n        int i = 0;\n        while (number > 0 || arabic.length\
  \ == (i - 1)) {\n            while ((number - arabic[i]) >= 0) {\n             \
  \   number -= arabic[i];\n                result.append(roman[i]);\n           \
  \ }\n            i++;\n        }\n        return result.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder result = new\
  \ StringBuilder();\n        int i = 0;\n        while (number > 0 || arabic.length\
  \ == (i - 1)) {\n            while ((number - arabic[i]) >= 0) {\n             \
  \   number -= arabic[i];\n                result.append(roman[i]);\n           \
  \ }\n            i++;\n        }\n        return result.toString();"
- "        String[] ones = {\"\", \"i\", \"ii\", \"iii\", \"iv\", \"v\", \"vi\", \"\
  vii\", \"viii\", \"ix\"};\n        String[] tens = {\"\", \"x\", \"xx\", \"xxx\"\
  , \"xl\", \"l\", \"lx\", \"lxx\", \"lxxx\", \"xc\"};\n        String[] hundreds\
  \ = {\"\", \"c\", \"cc\", \"ccc\", \"cd\", \"d\", \"dc\", \"dcc\", \"dccc\", \"\
  cm\"};\n        String[] thousands = {\"\", \"m\", \"mm\", \"mmm\"};\n        return\
  \ thousands[number / 1000] + hundreds[(number % 1000) / 100] + tens[(number % 100)\
  \ / 10] + ones[number % 10];"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder result = new\
  \ StringBuilder();\n        int i = 0;\n        while (number > 0 || arabic.length\
  \ == (i - 1)) {\n            while ((number - arabic[i]) >= 0) {\n             \
  \   number -= arabic[i];\n                result.append(roman[i]);\n           \
  \ }\n            i++;\n        }\n        return result.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        int i = 0;\n        while (number > 0 || arabic.length == (i - 1)) {\n\
  \            while ((number - arabic[i]) >= 0) {\n                number -= arabic[i];\n\
  \                sb.append(roman[i]);\n            }\n            i++;\n       \
  \ }\n        return sb.toString();"
- '        return "";'
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        for (int i = 0; i < arabic.length; i++) {\n            while (number >=\
  \ arabic[i]) {\n                number -= arabic[i];\n                sb.append(roman[i]);\n\
  \            }\n        }\n        return sb.toString();"
- "        String[] roman = {\"i\", \"v\", \"x\", \"l\", \"c\", \"d\", \"m\"};\n \
  \       StringBuilder sb = new StringBuilder();\n        int i = 0;\n        while\
  \ (number > 0) {\n            int digit = number % 10;\n            if (digit ==\
  \ 4) {\n                sb.append(roman[i]);\n                sb.append(roman[i\
  \ + 1]);\n            } else if (digit == 9) {\n                sb.append(roman[i]);\n\
  \                sb.append(roman[i + 2]);\n            } else {\n              \
  \  if (digit >= 5) {\n                    sb.append(roman[i + 1]);\n           \
  \         digit -= 5;\n                }\n                for (int j = 0; j < digit;\
  \ j++) {\n                    sb.append(roman[i]);\n                }\n        \
  \    }\n            number /= 10;\n            i += 2;\n        }\n        return\
  \ sb.reverse().toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] nums = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] romans = {\"m\"\
  , \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"\
  iv\", \"i\"};\n        for (int i = 0; i < nums.length; i++) {\n            while\
  \ (number >= nums[i]) {\n                sb.append(romans[i]);\n               \
  \ number -= nums[i];\n            }\n        }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals =\
  \ {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"\
  v\", \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n      \
  \      while (number >= values[i]) {\n                number -= values[i];\n   \
  \             sb.append(numerals[i]);\n            }\n        }\n        return\
  \ sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 500, 100, 50, 10, 5, 1};\n        String[] numerals = {\"M\", \"D\", \"C\", \"\
  L\", \"X\", \"V\", \"I\"};\n        for (int i = 0; i < values.length; i += 2) {\n\
  \            int x = number / values[i];\n            if (x < 4) {\n           \
  \     for (int j = 1; j <= x; j++) {\n                    sb.append(numerals[i]);\n\
  \                }\n            } else if (x == 4) {\n                sb.append(numerals[i]);\n\
  \                sb.append(numerals[i - 1]);\n            } else if (x > 4 && x\
  \ < 9) {\n                sb.append(numerals[i - 1]);\n                for (int\
  \ j = 6; j <= x; j++) {\n                    sb.append(numerals[i]);\n         \
  \       }\n            } else if (x == 9) {\n                sb.append(numerals[i]);\n\
  \                sb.append(numerals[i - 2]);\n            }\n            number\
  \ %= values[i];\n        }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        while (number >= 100)\
  \ {\n            sb.append(\"c\");\n            number -= 100;\n        }\n    \
  \    while (number >= 90) {\n            sb.append(\"xc\");\n            number\
  \ -= 90;\n        }\n        while (number >= 50) {\n            sb.append(\"l\"\
  );\n            number -= 50;\n        }\n        while (number >= 40) {\n     \
  \       sb.append(\"xl\");\n            number -= 40;\n        }\n        while\
  \ (number >= 10) {\n            sb.append(\"x\");\n            number -= 10;\n \
  \       }\n        while (number >= 9) {\n            sb.append(\"ix\");\n     \
  \       number -= 9;\n        }\n        while (number >= 5) {\n            sb.append(\"\
  v\");\n            number -= 5;\n        }\n        while (number >= 4) {\n    \
  \        sb.append(\"iv\");\n            number -= 4;\n        }\n        while\
  \ (number >= 1) {\n            sb.append(\"i\");\n            number -= 1;\n   \
  \     }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        while (number > 0) {\n\
  \            if (number >= 1000) {\n                sb.append(\"m\");\n        \
  \        number -= 1000;\n            } else if (number >= 900) {\n            \
  \    sb.append(\"cm\");\n                number -= 900;\n            } else if (number\
  \ >= 500) {\n                sb.append(\"d\");\n                number -= 500;\n\
  \            } else if (number >= 400) {\n                sb.append(\"cd\");\n \
  \               number -= 400;\n            } else if (number >= 100) {\n      \
  \          sb.append(\"c\");\n                number -= 100;\n            } else\
  \ if (number >= 90) {\n                sb.append(\"xc\");\n                number\
  \ -= 90;\n            } else if (number >= 50) {\n                sb.append(\"l\"\
  );\n                number -= 50;\n            } else if (number >= 40) {\n    \
  \            sb.append(\"xl\");\n                number -= 40;\n            } else\
  \ if (number >= 10) {\n                sb.append(\"x\");\n                number\
  \ -= 10;\n            } else if (number >= 9) {\n                sb.append(\"ix\"\
  );\n                number -= 9;\n            } else if (number >= 5) {\n      \
  \          sb.append(\"v\");\n                number -= 5;\n            } else if\
  \ (number >= 4) {\n                sb.append(\"iv\");\n                number -=\
  \ 4;\n            } else if (number >= 1) {\n                sb.append(\"i\");\n\
  \                number -= 1;\n            }\n        }\n        return sb.toString();"
- "        // TODO: Implement this function\n        return \"\";"
- "        StringBuilder sb = new StringBuilder();\n        while (number > 0) {\n\
  \            if (number >= 1000) {\n                sb.append(\"m\");\n        \
  \        number -= 1000;\n            } else if (number >= 900) {\n            \
  \    sb.append(\"cm\");\n                number -= 900;\n            } else if (number\
  \ >= 500) {\n                sb.append(\"d\");\n                number -= 500;\n\
  \            } else if (number >= 400) {\n                sb.append(\"cd\");\n \
  \               number -= 400;\n            } else if (number >= 100) {\n      \
  \          sb.append(\"c\");\n                number -= 100;\n            } else\
  \ if (number >= 90) {\n                sb.append(\"xc\");\n                number\
  \ -= 90;\n            } else if (number >= 50) {\n                sb.append(\"l\"\
  );\n                number -= 50;\n            } else if (number >= 40) {\n    \
  \            sb.append(\"xl\");\n                number -= 40;\n            } else\
  \ if (number >= 10) {\n                sb.append(\"x\");\n                number\
  \ -= 10;\n            } else if (number >= 9) {\n                sb.append(\"ix\"\
  );\n                number -= 9;\n            } else if (number >= 5) {\n      \
  \          sb.append(\"v\");\n                number -= 5;\n            } else if\
  \ (number >= 4) {\n                sb.append(\"iv\");\n                number -=\
  \ 4;\n            } else if (number >= 1) {\n                sb.append(\"i\");\n\
  \                number -= 1;\n            }\n        }\n        return sb.toString();"
- '        return "";'
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] values = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder result = new\
  \ StringBuilder();\n        for (int i = 0; i < values.length; i++) {\n        \
  \    while (number >= values[i]) {\n                number -= values[i];\n     \
  \           result.append(roman[i]);\n            }\n        }\n        return result.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        int i = 0;\n        while (number > 0 || arabic.length == (i - 1)) {\n\
  \            while ((number - arabic[i]) >= 0) {\n                number -= arabic[i];\n\
  \                sb.append(roman[i]);\n            }\n            i++;\n       \
  \ }\n        return sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder result = new\
  \ StringBuilder();\n        int i = 0;\n        while (number > 0 || arabic.length\
  \ == (i - 1)) {\n            while ((number - arabic[i]) >= 0) {\n             \
  \   number -= arabic[i];\n                result.append(roman[i]);\n           \
  \ }\n            i++;\n        }\n        return result.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals =\
  \ {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"\
  v\", \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n      \
  \      while (number >= values[i]) {\n                number -= values[i];\n   \
  \             sb.append(numerals[i]);\n            }\n        }\n        return\
  \ sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] nums = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] romans = {\"m\"\
  , \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"\
  iv\", \"i\"};\n        for (int i = 0; i < nums.length; i++) {\n            while\
  \ (number >= nums[i]) {\n                sb.append(romans[i]);\n               \
  \ number -= nums[i];\n            }\n        }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        while (number >= 100)\
  \ {\n            sb.append(\"c\");\n            number -= 100;\n        }\n    \
  \    while (number >= 90) {\n            sb.append(\"xc\");\n            number\
  \ -= 90;\n        }\n        while (number >= 50) {\n            sb.append(\"l\"\
  );\n            number -= 50;\n        }\n        while (number >= 40) {\n     \
  \       sb.append(\"xl\");\n            number -= 40;\n        }\n        while\
  \ (number >= 10) {\n            sb.append(\"x\");\n            number -= 10;\n \
  \       }\n        while (number >= 9) {\n            sb.append(\"ix\");\n     \
  \       number -= 9;\n        }\n        while (number >= 5) {\n            sb.append(\"\
  v\");\n            number -= 5;\n        }\n        while (number >= 4) {\n    \
  \        sb.append(\"iv\");\n            number -= 4;\n        }\n        while\
  \ (number >= 1) {\n            sb.append(\"i\");\n            number -= 1;\n   \
  \     }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] symbols = {\"\
  m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\",\
  \ \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n         \
  \   while (number >= values[i]) {\n                number -= values[i];\n      \
  \          sb.append(symbols[i]);\n            }\n        }\n        return sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        int i = 0;\n        while (number > 0 || roman.length == (i - 1)) {\n \
  \           while ((number - arabic[i]) >= 0) {\n                number -= arabic[i];\n\
  \                sb.append(roman[i]);\n            }\n            i++;\n       \
  \ }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        while (number > 0) {\n\
  \            if (number >= 1000) {\n                sb.append(\"m\");\n        \
  \        number -= 1000;\n            } else if (number >= 900) {\n            \
  \    sb.append(\"cm\");\n                number -= 900;\n            } else if (number\
  \ >= 500) {\n                sb.append(\"d\");\n                number -= 500;\n\
  \            } else if (number >= 400) {\n                sb.append(\"cd\");\n \
  \               number -= 400;\n            } else if (number >= 100) {\n      \
  \          sb.append(\"c\");\n                number -= 100;\n            } else\
  \ if (number >= 90) {\n                sb.append(\"xc\");\n                number\
  \ -= 90;\n            } else if (number >= 50) {\n                sb.append(\"l\"\
  );\n                number -= 50;\n            } else if (number >= 40) {\n    \
  \            sb.append(\"xl\");\n                number -= 40;\n            } else\
  \ if (number >= 10) {\n                sb.append(\"x\");\n                number\
  \ -= 10;\n            } else if (number >= 9) {\n                sb.append(\"ix\"\
  );\n                number -= 9;\n            } else if (number >= 5) {\n      \
  \          sb.append(\"v\");\n                number -= 5;\n            } else if\
  \ (number >= 4) {\n                sb.append(\"iv\");\n                number -=\
  \ 4;\n            } else if (number >= 1) {\n                sb.append(\"i\");\n\
  \                number -= 1;\n            }\n        }\n        return sb.toString();"
- "        if (number < 1 || number > 1000) {\n            throw new IllegalArgumentException(\"\
  Number must be between 1 and 1000\");\n        }\n        StringBuilder sb = new\
  \ StringBuilder();\n        int[] values = {1000, 900, 500, 400, 100, 90, 50, 40,\
  \ 10, 9, 5, 4, 1};\n        String[] symbols = {\"m\", \"cm\", \"d\", \"cd\", \"\
  c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int i\
  \ = 0;\n        while (number > 0) {\n            int k = number / values[i];\n\
  \            for (int j = 0; j < k; j++) {\n                sb.append(symbols[i]);\n\
  \                number -= values[i];\n            }\n            i++;\n       \
  \ }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] symbols = {\"\
  m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\",\
  \ \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n         \
  \   while (number >= values[i]) {\n                number -= values[i];\n      \
  \          sb.append(symbols[i]);\n            }\n        }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        while (number >= 1000)\
  \ {\n            sb.append(\"m\");\n            number -= 1000;\n        }\n   \
  \     while (number >= 900) {\n            sb.append(\"cm\");\n            number\
  \ -= 900;\n        }\n        while (number >= 500) {\n            sb.append(\"\
  d\");\n            number -= 500;\n        }\n        while (number >= 400) {\n\
  \            sb.append(\"cd\");\n            number -= 400;\n        }\n       \
  \ while (number >= 100) {\n            sb.append(\"c\");\n            number -=\
  \ 100;\n        }\n        while (number >= 90) {\n            sb.append(\"xc\"\
  );\n            number -= 90;\n        }\n        while (number >= 50) {\n     \
  \       sb.append(\"l\");\n            number -= 50;\n        }\n        while (number\
  \ >= 40) {\n            sb.append(\"xl\");\n            number -= 40;\n        }\n\
  \        while (number >= 10) {\n            sb.append(\"x\");\n            number\
  \ -= 10;\n        }\n        while (number >= 9) {\n            sb.append(\"ix\"\
  );\n            number -= 9;\n        }\n        while (number >= 5) {\n       \
  \     sb.append(\"v\");\n            number -= 5;\n        }\n        while (number\
  \ >= 4) {\n            sb.append(\"iv\");\n            number -= 4;\n        }\n\
  \        while (number >= 1) {\n            sb.append(\"i\");\n            number\
  \ -= 1;\n        }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] nums = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] romans = {\"m\"\
  , \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"\
  iv\", \"i\"};\n        for (int i = 0; i < nums.length; i++) {\n            while\
  \ (number >= nums[i]) {\n                sb.append(romans[i]);\n               \
  \ number -= nums[i];\n            }\n        }\n        return sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] num = {1000, 900, 500,\
  \ 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        int i = 0;\n        while (number > 0) {\n            while (number >=\
  \ num[i]) {\n                number -= num[i];\n                sb.append(roman[i]);\n\
  \            }\n            i++;\n        }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] nums = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] romans = {\"m\"\
  , \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"\
  iv\", \"i\"};\n        for (int i = 0; i < nums.length; i++) {\n            while\
  \ (number >= nums[i]) {\n                sb.append(romans[i]);\n               \
  \ number -= nums[i];\n            }\n        }\n        return sb.toString();"
- '        return "";'
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals =\
  \ {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"\
  v\", \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n      \
  \      while (number >= values[i]) {\n                number -= values[i];\n   \
  \             sb.append(numerals[i]);\n            }\n        }\n        return\
  \ sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals =\
  \ {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"\
  v\", \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n      \
  \      while (number >= values[i]) {\n                number -= values[i];\n   \
  \             sb.append(numerals[i]);\n            }\n        }\n        return\
  \ sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        int i = 0;\n        while (number > 0 || arabic.length == (i - 1)) {\n\
  \            while ((number - arabic[i]) >= 0) {\n                number -= arabic[i];\n\
  \                sb.append(roman[i]);\n            }\n            i++;\n       \
  \ }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] symbols = {\"\
  m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\",\
  \ \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n         \
  \   while (number >= values[i]) {\n                number -= values[i];\n      \
  \          sb.append(symbols[i]);\n            }\n        }\n        return sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        int i = 0;\n        while (number > 0 || arabic.length == (i - 1)) {\n\
  \            while ((number - arabic[i]) >= 0) {\n                number -= arabic[i];\n\
  \                sb.append(roman[i]);\n            }\n            i++;\n       \
  \ }\n        return sb.toString();"
- "        String[] ones = {\"\", \"i\", \"ii\", \"iii\", \"iv\", \"v\", \"vi\", \"\
  vii\", \"viii\", \"ix\"};\n        String[] tens = {\"\", \"x\", \"xx\", \"xxx\"\
  , \"xl\", \"l\", \"lx\", \"lxx\", \"lxxx\", \"xc\"};\n        String[] hundreds\
  \ = {\"\", \"c\", \"cc\", \"ccc\", \"cd\", \"d\", \"dc\", \"dcc\", \"dccc\", \"\
  cm\"};\n        String[] thousands = {\"\", \"m\", \"mm\", \"mmm\"};\n        return\
  \ thousands[number / 1000] + hundreds[(number % 1000) / 100] + tens[(number % 100)\
  \ / 10] + ones[number % 10];"
- "        // TODO: implement this method\n        return \"\";"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals =\
  \ {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"\
  v\", \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n      \
  \      while (number >= values[i]) {\n                number -= values[i];\n   \
  \             sb.append(numerals[i]);\n            }\n        }\n        return\
  \ sb.toString();"
- "        String result = \"\";\n        int[] values = {1000, 900, 500, 400, 100,\
  \ 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals = {\"m\", \"cm\", \"d\"\
  , \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n\
  \        for (int i = 0; i < values.length; i++) {\n            while (number >=\
  \ values[i]) {\n                number -= values[i];\n                result +=\
  \ numerals[i];\n            }\n        }\n        return result;"
- "        // TODO: Implement this method\n        return \"\";"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] symbols = {\"\
  m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\",\
  \ \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n         \
  \   while (number >= values[i]) {\n                number -= values[i];\n      \
  \          sb.append(symbols[i]);\n            }\n        }\n        return sb.toString();"
- "        // TODO: Implement this function\n        return \"\";"
- "        StringBuilder sb = new StringBuilder();\n        while (number >= 1000)\
  \ {\n            sb.append(\"m\");\n            number -= 1000;\n        }\n   \
  \     while (number >= 900) {\n            sb.append(\"cm\");\n            number\
  \ -= 900;\n        }\n        while (number >= 500) {\n            sb.append(\"\
  d\");\n            number -= 500;\n        }\n        while (number >= 400) {\n\
  \            sb.append(\"cd\");\n            number -= 400;\n        }\n       \
  \ while (number >= 100) {\n            sb.append(\"c\");\n            number -=\
  \ 100;\n        }\n        while (number >= 90) {\n            sb.append(\"xc\"\
  );\n            number -= 90;\n        }\n        while (number >= 50) {\n     \
  \       sb.append(\"l\");\n            number -= 50;\n        }\n        while (number\
  \ >= 40) {\n            sb.append(\"xl\");\n            number -= 40;\n        }\n\
  \        while (number >= 10) {\n            sb.append(\"x\");\n            number\
  \ -= 10;\n        }\n        while (number >= 9) {\n            sb.append(\"ix\"\
  );\n            number -= 9;\n        }\n        while (number >= 5) {\n       \
  \     sb.append(\"v\");\n            number -= 5;\n        }\n        while (number\
  \ >= 4) {\n            sb.append(\"iv\");\n            number -= 4;\n        }\n\
  \        while (number >= 1) {\n            sb.append(\"i\");\n            number\
  \ -= 1;\n        }\n        return sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder result = new\
  \ StringBuilder();\n        int i = 0;\n        while (number > 0 || arabic.length\
  \ == (i - 1)) {\n            while ((number - arabic[i]) >= 0) {\n             \
  \   number -= arabic[i];\n                result.append(roman[i]);\n           \
  \ }\n            i++;\n        }\n        return result.toString();"
- "        StringBuilder sb = new StringBuilder();\n        while (number >= 1000)\
  \ {\n            sb.append(\"m\");\n            number -= 1000;\n        }\n   \
  \     while (number >= 900) {\n            sb.append(\"cm\");\n            number\
  \ -= 900;\n        }\n        while (number >= 500) {\n            sb.append(\"\
  d\");\n            number -= 500;\n        }\n        while (number >= 400) {\n\
  \            sb.append(\"cd\");\n            number -= 400;\n        }\n       \
  \ while (number >= 100) {\n            sb.append(\"c\");\n            number -=\
  \ 100;\n        }\n        while (number >= 90) {\n            sb.append(\"xc\"\
  );\n            number -= 90;\n        }\n        while (number >= 50) {\n     \
  \       sb.append(\"l\");\n            number -= 50;\n        }\n        while (number\
  \ >= 40) {\n            sb.append(\"xl\");\n            number -= 40;\n        }\n\
  \        while (number >= 10) {\n            sb.append(\"x\");\n            number\
  \ -= 10;\n        }\n        while (number >= 9) {\n            sb.append(\"ix\"\
  );\n            number -= 9;\n        }\n        while (number >= 5) {\n       \
  \     sb.append(\"v\");\n            number -= 5;\n        }\n        while (number\
  \ >= 4) {\n            sb.append(\"iv\");\n            number -= 4;\n        }\n\
  \        while (number >= 1) {\n            sb.append(\"i\");\n            number\
  \ -= 1;\n        }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        while (number >= 1000)\
  \ {\n            sb.append(\"m\");\n            number -= 1000;\n        }\n   \
  \     while (number >= 900) {\n            sb.append(\"cm\");\n            number\
  \ -= 900;\n        }\n        while (number >= 500) {\n            sb.append(\"\
  d\");\n            number -= 500;\n        }\n        while (number >= 400) {\n\
  \            sb.append(\"cd\");\n            number -= 400;\n        }\n       \
  \ while (number >= 100) {\n            sb.append(\"c\");\n            number -=\
  \ 100;\n        }\n        while (number >= 90) {\n            sb.append(\"xc\"\
  );\n            number -= 90;\n        }\n        while (number >= 50) {\n     \
  \       sb.append(\"l\");\n            number -= 50;\n        }\n        while (number\
  \ >= 40) {\n            sb.append(\"xl\");\n            number -= 40;\n        }\n\
  \        while (number >= 10) {\n            sb.append(\"x\");\n            number\
  \ -= 10;\n        }\n        while (number >= 9) {\n            sb.append(\"ix\"\
  );\n            number -= 9;\n        }\n        while (number >= 5) {\n       \
  \     sb.append(\"v\");\n            number -= 5;\n        }\n        while (number\
  \ >= 4) {\n            sb.append(\"iv\");\n            number -= 4;\n        }\n\
  \        while (number >= 1) {\n            sb.append(\"i\");\n            number\
  \ -= 1;\n        }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals =\
  \ {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"\
  v\", \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n      \
  \      while (number >= values[i]) {\n                number -= values[i];\n   \
  \             sb.append(numerals[i]);\n            }\n        }\n        return\
  \ sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] values = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        for (int i = 0; i < values.length; i++) {\n            while (number >=\
  \ values[i]) {\n                number -= values[i];\n                sb.append(roman[i]);\n\
  \            }\n        }\n        return sb.toString();"
- '        return "";'
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals =\
  \ {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"\
  v\", \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n      \
  \      while (number >= values[i]) {\n                number -= values[i];\n   \
  \             sb.append(numerals[i]);\n            }\n        }\n        return\
  \ sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        for (int i = 0; i < arabic.length; i++) {\n            while (number >=\
  \ arabic[i]) {\n                number -= arabic[i];\n                sb.append(roman[i]);\n\
  \            }\n        }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        while (number >= 100)\
  \ {\n            sb.append(\"c\");\n            number -= 100;\n        }\n    \
  \    while (number >= 90) {\n            sb.append(\"xc\");\n            number\
  \ -= 90;\n        }\n        while (number >= 50) {\n            sb.append(\"l\"\
  );\n            number -= 50;\n        }\n        while (number >= 40) {\n     \
  \       sb.append(\"xl\");\n            number -= 40;\n        }\n        while\
  \ (number >= 10) {\n            sb.append(\"x\");\n            number -= 10;\n \
  \       }\n        while (number >= 9) {\n            sb.append(\"ix\");\n     \
  \       number -= 9;\n        }\n        while (number >= 5) {\n            sb.append(\"\
  v\");\n            number -= 5;\n        }\n        while (number >= 4) {\n    \
  \        sb.append(\"iv\");\n            number -= 4;\n        }\n        while\
  \ (number >= 1) {\n            sb.append(\"i\");\n            number -= 1;\n   \
  \     }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] symbols = {\"\
  m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\",\
  \ \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n         \
  \   while (number >= values[i]) {\n                number -= values[i];\n      \
  \          sb.append(symbols[i]);\n            }\n        }\n        return sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder result = new\
  \ StringBuilder();\n        int i = 0;\n        while (number > 0 || arabic.length\
  \ == (i - 1)) {\n            while ((number - arabic[i]) >= 0) {\n             \
  \   number -= arabic[i];\n                result.append(roman[i]);\n           \
  \ }\n            i++;\n        }\n        return result.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals =\
  \ {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"\
  v\", \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n      \
  \      while (number >= values[i]) {\n                number -= values[i];\n   \
  \             sb.append(numerals[i]);\n            }\n        }\n        return\
  \ sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] num = {1000, 900, 500,\
  \ 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        int i = 0;\n        while (number > 0) {\n            while (number >=\
  \ num[i]) {\n                number -= num[i];\n                sb.append(roman[i]);\n\
  \            }\n            i++;\n        }\n        return sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder result = new\
  \ StringBuilder();\n        int i = 0;\n        while (number > 0 || arabic.length\
  \ == (i - 1)) {\n            while ((number - arabic[i]) >= 0) {\n             \
  \   number -= arabic[i];\n                result.append(roman[i]);\n           \
  \ }\n            i++;\n        }\n        return result.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals =\
  \ {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"\
  v\", \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n      \
  \      while (number >= values[i]) {\n                number -= values[i];\n   \
  \             sb.append(numerals[i]);\n            }\n        }\n        return\
  \ sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] nums = {1, 4, 5,\
  \ 9, 10, 40, 50, 90, 100, 400, 500, 900, 1000};\n        String[] romans = {\"i\"\
  , \"iv\", \"v\", \"ix\", \"x\", \"xl\", \"l\", \"xc\", \"c\", \"cd\", \"d\", \"\
  cm\", \"m\"};\n        int i = nums.length - 1;\n        while (number > 0) {\n\
  \            while (number >= nums[i]) {\n                sb.append(romans[i]);\n\
  \                number -= nums[i];\n            }\n            i--;\n        }\n\
  \        return sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        int i = 0;\n        while (number > 0 || arabic.length == (i - 1)) {\n\
  \            while ((number - arabic[i]) >= 0) {\n                number -= arabic[i];\n\
  \                sb.append(roman[i]);\n            }\n            i++;\n       \
  \ }\n        return sb.toString();"
- "        // TODO: Implement this function\n        return \"\";"
- '        return "";'
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        int i = 0;\n        while (number > 0 || arabic.length == (i - 1)) {\n\
  \            while ((number - arabic[i]) >= 0) {\n                number -= arabic[i];\n\
  \                sb.append(roman[i]);\n            }\n            i++;\n       \
  \ }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] nums = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] romans = {\"m\"\
  , \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"\
  iv\", \"i\"};\n        int i = 0;\n        while (number > 0) {\n            int\
  \ times = number / nums[i];\n            number -= times * nums[i];\n          \
  \  while (times > 0) {\n                sb.append(romans[i]);\n                times--;\n\
  \            }\n            i++;\n        }\n        return sb.toString();"
- "        // Fill in the code here\n        return \"\";"
- "        StringBuilder sb = new StringBuilder();\n        while (number >= 1000)\
  \ {\n            sb.append(\"m\");\n            number -= 1000;\n        }\n   \
  \     while (number >= 900) {\n            sb.append(\"cm\");\n            number\
  \ -= 900;\n        }\n        while (number >= 500) {\n            sb.append(\"\
  d\");\n            number -= 500;\n        }\n        while (number >= 400) {\n\
  \            sb.append(\"cd\");\n            number -= 400;\n        }\n       \
  \ while (number >= 100) {\n            sb.append(\"c\");\n            number -=\
  \ 100;\n        }\n        while (number >= 90) {\n            sb.append(\"xc\"\
  );\n            number -= 90;\n        }\n        while (number >= 50) {\n     \
  \       sb.append(\"l\");\n            number -= 50;\n        }\n        while (number\
  \ >= 40) {\n            sb.append(\"xl\");\n            number -= 40;\n        }\n\
  \        while (number >= 10) {\n            sb.append(\"x\");\n            number\
  \ -= 10;\n        }\n        while (number >= 9) {\n            sb.append(\"ix\"\
  );\n            number -= 9;\n        }\n        while (number >= 5) {\n       \
  \     sb.append(\"v\");\n            number -= 5;\n        }\n        while (number\
  \ >= 4) {\n            sb.append(\"iv\");\n            number -= 4;\n        }\n\
  \        while (number >= 1) {\n            sb.append(\"i\");\n            number\
  \ -= 1;\n        }\n        return sb.toString();"
- "        // TODO: implement this function\n        return \"\";"
- "        String[] symbols = {\"i\", \"v\", \"x\", \"l\", \"c\", \"d\", \"m\"};\n\
  \        StringBuilder result = new StringBuilder();\n        int i = 0;\n     \
  \   while (number > 0) {\n            int digit = number % 10;\n            if (digit\
  \ == 0) {\n                i += 2;\n            } else if (digit < 4) {\n      \
  \          for (int j = 0; j < digit; j++) {\n                    result.insert(0,\
  \ symbols[i]);\n                }\n                i += 2;\n            } else if\
  \ (digit == 4) {\n                result.insert(0, symbols[i]);\n              \
  \  result.insert(0, symbols[i + 1]);\n                i += 2;\n            } else\
  \ if (digit == 5) {\n                result.insert(0, symbols[i + 1]);\n       \
  \         i += 2;\n            } else if (digit < 9) {\n                result.insert(0,\
  \ symbols[i + 1]);\n                for (int j = 0; j < digit - 5; j++) {\n    \
  \                result.insert(0, symbols[i]);\n                }\n            \
  \    i += 2;\n            } else {\n                result.insert(0, symbols[i]);\n\
  \                result.insert(0, symbols[i + 2]);\n                i += 2;\n  \
  \          }\n            number /= 10;\n        }\n        return result.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] roman = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] romanStr = {\"m\"\
  , \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"\
  iv\", \"i\"};\n        for (int i = 0; i < roman.length; i++) {\n            while\
  \ (number >= roman[i]) {\n                sb.append(romanStr[i]);\n            \
  \    number -= roman[i];\n            }\n        }\n        return sb.toString();"
- "        String[] ones = {\"\", \"i\", \"ii\", \"iii\", \"iv\", \"v\", \"vi\", \"\
  vii\", \"viii\", \"ix\"};\n        String[] tens = {\"\", \"x\", \"xx\", \"xxx\"\
  , \"xl\", \"l\", \"lx\", \"lxx\", \"lxxx\", \"xc\"};\n        String[] hundreds\
  \ = {\"\", \"c\", \"cc\", \"ccc\", \"cd\", \"d\", \"dc\", \"dcc\", \"dccc\", \"\
  cm\"};\n        String[] thousands = {\"\", \"m\", \"mm\", \"mmm\"};\n        return\
  \ thousands[number / 1000] + hundreds[(number % 1000) / 100] + tens[(number % 100)\
  \ / 10] + ones[number % 10];"
- "        // Your code here\n        return \"\";"
- "        String[] ones = {\"\", \"i\", \"ii\", \"iii\", \"iv\", \"v\", \"vi\", \"\
  vii\", \"viii\", \"ix\"};\n        String[] tens = {\"\", \"x\", \"xx\", \"xxx\"\
  , \"xl\", \"l\", \"lx\", \"lxx\", \"lxxx\", \"xc\"};\n        String[] hundreds\
  \ = {\"\", \"c\", \"cc\", \"ccc\", \"cd\", \"d\", \"dc\", \"dcc\", \"dccc\", \"\
  cm\"};\n        String[] thousands = {\"\", \"m\", \"mm\", \"mmm\"};\n        return\
  \ thousands[number / 1000] + hundreds[(number % 1000) / 100] + tens[(number % 100)\
  \ / 10] + ones[number % 10];"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] numbers = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        for (int i = 0; i < numbers.length; i++) {\n            while (number >=\
  \ numbers[i]) {\n                sb.append(roman[i]);\n                number -=\
  \ numbers[i];\n            }\n        }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals =\
  \ {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"\
  v\", \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n      \
  \      while (number >= values[i]) {\n                number -= values[i];\n   \
  \             sb.append(numerals[i]);\n            }\n        }\n        return\
  \ sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] nums = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] romans = {\"m\"\
  , \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"\
  iv\", \"i\"};\n        for (int i = 0; i < nums.length; i++) {\n            while\
  \ (number >= nums[i]) {\n                sb.append(romans[i]);\n               \
  \ number -= nums[i];\n            }\n        }\n        return sb.toString();"
- '        return "";'
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] symbols = {\"\
  m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\",\
  \ \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n         \
  \   while (number >= values[i]) {\n                number -= values[i];\n      \
  \          sb.append(symbols[i]);\n            }\n        }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] nums = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] romans = {\"m\"\
  , \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"\
  iv\", \"i\"};\n        for (int i = 0; i < nums.length; i++) {\n            while\
  \ (number >= nums[i]) {\n                sb.append(romans[i]);\n               \
  \ number -= nums[i];\n            }\n        }\n        return sb.toString();"
- "        // TODO: Implement this function.\n        return \"\";"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] symbols = {\"\
  m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\",\
  \ \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n         \
  \   while (number >= values[i]) {\n                number -= values[i];\n      \
  \          sb.append(symbols[i]);\n            }\n        }\n        return sb.toString();"
- "        // TODO: Implement this method\n        return \"\";"
- "        StringBuilder sb = new StringBuilder();\n        while (number > 0) {\n\
  \            if (number >= 1000) {\n                sb.append(\"m\");\n        \
  \        number -= 1000;\n            } else if (number >= 900) {\n            \
  \    sb.append(\"cm\");\n                number -= 900;\n            } else if (number\
  \ >= 500) {\n                sb.append(\"d\");\n                number -= 500;\n\
  \            } else if (number >= 400) {\n                sb.append(\"cd\");\n \
  \               number -= 400;\n            } else if (number >= 100) {\n      \
  \          sb.append(\"c\");\n                number -= 100;\n            } else\
  \ if (number >= 90) {\n                sb.append(\"xc\");\n                number\
  \ -= 90;\n            } else if (number >= 50) {\n                sb.append(\"l\"\
  );\n                number -= 50;\n            } else if (number >= 40) {\n    \
  \            sb.append(\"xl\");\n                number -= 40;\n            } else\
  \ if (number >= 10) {\n                sb.append(\"x\");\n                number\
  \ -= 10;\n            } else if (number >= 9) {\n                sb.append(\"ix\"\
  );\n                number -= 9;\n            } else if (number >= 5) {\n      \
  \          sb.append(\"v\");\n                number -= 5;\n            } else if\
  \ (number >= 4) {\n                sb.append(\"iv\");\n                number -=\
  \ 4;\n            } else if (number >= 1) {\n                sb.append(\"i\");\n\
  \                number -= 1;\n            }\n        }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] symbols = {\"\
  m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\",\
  \ \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n         \
  \   while (number >= values[i]) {\n                number -= values[i];\n      \
  \          sb.append(symbols[i]);\n            }\n        }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] nums = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] romans = {\"m\"\
  , \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"\
  iv\", \"i\"};\n        for (int i = 0; i < nums.length; i++) {\n            while\
  \ (number >= nums[i]) {\n                sb.append(romans[i]);\n               \
  \ number -= nums[i];\n            }\n        }\n        return sb.toString();"
- "        StringBuilder result = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals =\
  \ {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"\
  v\", \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n      \
  \      while (number >= values[i]) {\n                number -= values[i];\n   \
  \             result.append(numerals[i]);\n            }\n        }\n        return\
  \ result.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] nums = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] romans = {\"m\"\
  , \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"\
  iv\", \"i\"};\n        for (int i = 0; i < nums.length; i++) {\n            while\
  \ (number >= nums[i]) {\n                sb.append(romans[i]);\n               \
  \ number -= nums[i];\n            }\n        }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] symbols = {\"\
  m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\",\
  \ \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n         \
  \   while (number >= values[i]) {\n                number -= values[i];\n      \
  \          sb.append(symbols[i]);\n            }\n        }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals =\
  \ {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"\
  v\", \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n      \
  \      while (number >= values[i]) {\n                number -= values[i];\n   \
  \             sb.append(numerals[i]);\n            }\n        }\n        return\
  \ sb.toString();"
- "        // Fill in the code here.\n        return \"\";"
- "        StringBuilder sb = new StringBuilder();\n        int[] nums = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] romans = {\"m\"\
  , \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"\
  iv\", \"i\"};\n        for (int i = 0; i < nums.length; i++) {\n            while\
  \ (number >= nums[i]) {\n                sb.append(romans[i]);\n               \
  \ number -= nums[i];\n            }\n        }\n        return sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        int i = 0;\n        while (number > 0 || arabic.length == (i - 1)) {\n\
  \            while ((number - arabic[i]) >= 0) {\n                number -= arabic[i];\n\
  \                sb.append(roman[i]);\n            }\n            i++;\n       \
  \ }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] nums = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] romans = {\"m\"\
  , \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"\
  iv\", \"i\"};\n        for (int i = 0; i < nums.length; i++) {\n            while\
  \ (number >= nums[i]) {\n                sb.append(romans[i]);\n               \
  \ number -= nums[i];\n            }\n        }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] symbols = {\"\
  m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\",\
  \ \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n         \
  \   while (number >= values[i]) {\n                number -= values[i];\n      \
  \          sb.append(symbols[i]);\n            }\n        }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals =\
  \ {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"\
  v\", \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n      \
  \      while (number >= values[i]) {\n                number -= values[i];\n   \
  \             sb.append(numerals[i]);\n            }\n        }\n        return\
  \ sb.toString();"
- "        // TODO: Implement this function\n        return \"\";"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        for (int i = 0; i < arabic.length; i++) {\n            while (number >=\
  \ arabic[i]) {\n                number -= arabic[i];\n                sb.append(roman[i]);\n\
  \            }\n        }\n        return sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        for (int i = 0; i < arabic.length; i++) {\n            while (number >=\
  \ arabic[i]) {\n                number -= arabic[i];\n                sb.append(roman[i]);\n\
  \            }\n        }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        while (number > 0) {\n\
  \            if (number >= 1000) {\n                sb.append(\"m\");\n        \
  \        number -= 1000;\n            } else if (number >= 900) {\n            \
  \    sb.append(\"cm\");\n                number -= 900;\n            } else if (number\
  \ >= 500) {\n                sb.append(\"d\");\n                number -= 500;\n\
  \            } else if (number >= 400) {\n                sb.append(\"cd\");\n \
  \               number -= 400;\n            } else if (number >= 100) {\n      \
  \          sb.append(\"c\");\n                number -= 100;\n            } else\
  \ if (number >= 90) {\n                sb.append(\"xc\");\n                number\
  \ -= 90;\n            } else if (number >= 50) {\n                sb.append(\"l\"\
  );\n                number -= 50;\n            } else if (number >= 40) {\n    \
  \            sb.append(\"xl\");\n                number -= 40;\n            } else\
  \ if (number >= 10) {\n                sb.append(\"x\");\n                number\
  \ -= 10;\n            } else if (number >= 9) {\n                sb.append(\"ix\"\
  );\n                number -= 9;\n            } else if (number >= 5) {\n      \
  \          sb.append(\"v\");\n                number -= 5;\n            } else if\
  \ (number >= 4) {\n                sb.append(\"iv\");\n                number -=\
  \ 4;\n            } else if (number >= 1) {\n                sb.append(\"i\");\n\
  \                number -= 1;\n            }\n        }\n        return sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        int i = 0;\n        while (number > 0 || arabic.length == (i - 1)) {\n\
  \            while ((number - arabic[i]) >= 0) {\n                number -= arabic[i];\n\
  \                sb.append(roman[i]);\n            }\n            i++;\n       \
  \ }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] symbols = {\"\
  m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\",\
  \ \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n         \
  \   while (number >= values[i]) {\n                number -= values[i];\n      \
  \          sb.append(symbols[i]);\n            }\n        }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] symbols = {\"\
  m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\",\
  \ \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n         \
  \   while (number >= values[i]) {\n                number -= values[i];\n      \
  \          sb.append(symbols[i]);\n            }\n        }\n        return sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] values = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        for (int i = 0; i < values.length; i++) {\n            while (number >=\
  \ values[i]) {\n                number -= values[i];\n                sb.append(roman[i]);\n\
  \            }\n        }\n        return sb.toString();"
- "        // TODO: Implement this method\n        return \"\";"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        int i = 0;\n        while (number > 0 || arabic.length == (i - 1)) {\n\
  \            while ((number - arabic[i]) >= 0) {\n                number -= arabic[i];\n\
  \                sb.append(roman[i]);\n            }\n            i++;\n       \
  \ }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals =\
  \ {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"\
  v\", \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n      \
  \      while (number >= values[i]) {\n                number -= values[i];\n   \
  \             sb.append(numerals[i]);\n            }\n        }\n        return\
  \ sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] nums = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] romans = {\"m\"\
  , \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"\
  iv\", \"i\"};\n        for (int i = 0; i < nums.length; i++) {\n            while\
  \ (number >= nums[i]) {\n                sb.append(romans[i]);\n               \
  \ number -= nums[i];\n            }\n        }\n        return sb.toString();"
- '        return "";'
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder result = new\
  \ StringBuilder();\n        int i = 0;\n        while (number > 0 || arabic.length\
  \ == (i - 1)) {\n            while ((number - arabic[i]) >= 0) {\n             \
  \   number -= arabic[i];\n                result.append(roman[i]);\n           \
  \ }\n            i++;\n        }\n        return result.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        int i = 0;\n        while (number > 0 || arabic.length == (i - 1)) {\n\
  \            while ((number - arabic[i]) >= 0) {\n                number -= arabic[i];\n\
  \                sb.append(roman[i]);\n            }\n            i++;\n       \
  \ }\n        return sb.toString();"
- "        String[] symbols = {\"i\", \"v\", \"x\", \"l\", \"c\", \"d\", \"m\"};\n\
  \        StringBuilder sb = new StringBuilder();\n        int i = 0;\n        while\
  \ (number > 0) {\n            int digit = number % 10;\n            if (digit <\
  \ 4) {\n                for (int j = 0; j < digit; j++) {\n                    sb.append(symbols[i]);\n\
  \                }\n            } else if (digit == 4) {\n                sb.append(symbols[i]);\n\
  \                sb.append(symbols[i + 1]);\n            } else if (digit == 5)\
  \ {\n                sb.append(symbols[i + 1]);\n            } else if (digit <\
  \ 9) {\n                sb.append(symbols[i + 1]);\n                for (int j =\
  \ 0; j < digit - 5; j++) {\n                    sb.append(symbols[i]);\n       \
  \         }\n            } else {\n                sb.append(symbols[i]);\n    \
  \            sb.append(symbols[i + 2]);\n            }\n            number /= 10;\n\
  \            i += 2;\n        }\n        return sb.reverse().toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 500, 100, 50, 10, 5, 1};\n        String[] numerals = {\"M\", \"D\", \"C\", \"\
  L\", \"X\", \"V\", \"I\"};\n        for (int i = 0; i < values.length; i++) {\n\
  \            int val = values[i];\n            int count = number / val;\n     \
  \       number %= val;\n            if (count == 4) {\n                if (i ==\
  \ 0) {\n                    sb.append(\"MMMM\");\n                } else {\n   \
  \                 sb.append(numerals[i]);\n                    sb.append(numerals[i\
  \ - 1]);\n                }\n            } else {\n                for (int j =\
  \ 0; j < count; j++) {\n                    sb.append(numerals[i]);\n          \
  \      }\n            }\n        }\n        return sb.toString();"
- "        // TODO: Implement this function\n        return \"\";"
- "        // TODO: Implement this method.\n        return \"\";"
- "        // TODO: Implement this function.\n        return \"\";"
- "        // TODO: Implement this method\n        return null;"
- "        StringBuilder sb = new StringBuilder();\n        while (number >= 1000)\
  \ {\n            sb.append(\"m\");\n            number -= 1000;\n        }\n   \
  \     while (number >= 900) {\n            sb.append(\"cm\");\n            number\
  \ -= 900;\n        }\n        while (number >= 500) {\n            sb.append(\"\
  d\");\n            number -= 500;\n        }\n        while (number >= 400) {\n\
  \            sb.append(\"cd\");\n            number -= 400;\n        }\n       \
  \ while (number >= 100) {\n            sb.append(\"c\");\n            number -=\
  \ 100;\n        }\n        while (number >= 90) {\n            sb.append(\"xc\"\
  );\n            number -= 90;\n        }\n        while (number >= 50) {\n     \
  \       sb.append(\"l\");\n            number -= 50;\n        }\n        while (number\
  \ >= 40) {\n            sb.append(\"xl\");\n            number -= 40;\n        }\n\
  \        while (number >= 10) {\n            sb.append(\"x\");\n            number\
  \ -= 10;\n        }\n        while (number >= 9) {\n            sb.append(\"ix\"\
  );\n            number -= 9;\n        }\n        while (number >= 5) {\n       \
  \     sb.append(\"v\");\n            number -= 5;\n        }\n        while (number\
  \ >= 4) {\n            sb.append(\"iv\");\n            number -= 4;\n        }\n\
  \        while (number >= 1) {\n            sb.append(\"i\");\n            number\
  \ -= 1;\n        }\n        return sb.toString();"
- "        // TODO: Implement this method\n        return \"\";"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        int i = 0;\n        while (number > 0 || arabic.length == (i - 1)) {\n\
  \            while ((number - arabic[i]) >= 0) {\n                number -= arabic[i];\n\
  \                sb.append(roman[i]);\n            }\n            i++;\n       \
  \ }\n        return sb.toString();"
- "        // TODO: Implement this method\n        return \"\";"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals =\
  \ {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"\
  v\", \"iv\", \"i\"};\n        for (int i = 0; i < values.length; i++) {\n      \
  \      while (number >= values[i]) {\n                number -= values[i];\n   \
  \             sb.append(numerals[i]);\n            }\n        }\n        return\
  \ sb.toString();"
- "        // TODO: implement this method\n        return \"\";"
- "        StringBuilder sb = new StringBuilder();\n        int[] nums = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] romans = {\"m\"\
  , \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"\
  iv\", \"i\"};\n        for (int i = 0; i < nums.length; i++) {\n            while\
  \ (number >= nums[i]) {\n                sb.append(romans[i]);\n               \
  \ number -= nums[i];\n            }\n        }\n        return sb.toString();"
- "        // TODO: Implement this method\n        return \"\";"
- "        StringBuilder sb = new StringBuilder();\n        int[] nums = {1, 4, 5,\
  \ 9, 10, 40, 50, 90, 100, 400, 500, 900, 1000};\n        String[] romans = {\"i\"\
  , \"iv\", \"v\", \"ix\", \"x\", \"xl\", \"l\", \"xc\", \"c\", \"cd\", \"d\", \"\
  cm\", \"m\"};\n        int i = nums.length - 1;\n        while (number > 0) {\n\
  \            if (number >= nums[i]) {\n                sb.append(romans[i]);\n \
  \               number -= nums[i];\n            } else {\n                i--;\n\
  \            }\n        }\n        return sb.toString();"
- "        String result = \"\";\n        int[] values = {1000, 900, 500, 400, 100,\
  \ 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals = {\"m\", \"cm\", \"d\"\
  , \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n\
  \        for (int i = 0; i < values.length; i++) {\n            while (number >=\
  \ values[i]) {\n                number -= values[i];\n                result +=\
  \ numerals[i];\n            }\n        }\n        return result;"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        int i = 0;\n        while (number > 0 || arabic.length == (i - 1)) {\n\
  \            while ((number - arabic[i]) >= 0) {\n                number -= arabic[i];\n\
  \                sb.append(roman[i]);\n            }\n            i++;\n       \
  \ }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        while (number >= 1000)\
  \ {\n            sb.append(\"m\");\n            number -= 1000;\n        }\n   \
  \     while (number >= 900) {\n            sb.append(\"cm\");\n            number\
  \ -= 900;\n        }\n        while (number >= 500) {\n            sb.append(\"\
  d\");\n            number -= 500;\n        }\n        while (number >= 400) {\n\
  \            sb.append(\"cd\");\n            number -= 400;\n        }\n       \
  \ while (number >= 100) {\n            sb.append(\"c\");\n            number -=\
  \ 100;\n        }\n        while (number >= 90) {\n            sb.append(\"xc\"\
  );\n            number -= 90;\n        }\n        while (number >= 50) {\n     \
  \       sb.append(\"l\");\n            number -= 50;\n        }\n        while (number\
  \ >= 40) {\n            sb.append(\"xl\");\n            number -= 40;\n        }\n\
  \        while (number >= 10) {\n            sb.append(\"x\");\n            number\
  \ -= 10;\n        }\n        while (number >= 9) {\n            sb.append(\"ix\"\
  );\n            number -= 9;\n        }\n        while (number >= 5) {\n       \
  \     sb.append(\"v\");\n            number -= 5;\n        }\n        while (number\
  \ >= 4) {\n            sb.append(\"iv\");\n            number -= 4;\n        }\n\
  \        while (number >= 1) {\n            sb.append(\"i\");\n            number\
  \ -= 1;\n        }\n        return sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        int i = 0;\n        while (number > 0 || arabic.length == (i - 1)) {\n\
  \            while ((number - arabic[i]) >= 0) {\n                number -= arabic[i];\n\
  \                sb.append(roman[i]);\n            }\n            i++;\n       \
  \ }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] nums = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] romans = {\"m\"\
  , \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"\
  iv\", \"i\"};\n        for (int i = 0; i < nums.length; i++) {\n            while\
  \ (number >= nums[i]) {\n                sb.append(romans[i]);\n               \
  \ number -= nums[i];\n            }\n        }\n        return sb.toString();"
- "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < number\
  \ / 1000; i++) {\n            sb.append(\"m\");\n        }\n        number %= 1000;\n\
  \        if (number >= 900) {\n            sb.append(\"cm\");\n            number\
  \ -= 900;\n        }\n        if (number >= 500) {\n            sb.append(\"d\"\
  );\n            number -= 500;\n        }\n        if (number >= 400) {\n      \
  \      sb.append(\"cd\");\n            number -= 400;\n        }\n        for (int\
  \ i = 0; i < number / 100; i++) {\n            sb.append(\"c\");\n        }\n  \
  \      number %= 100;\n        if (number >= 90) {\n            sb.append(\"xc\"\
  );\n            number -= 90;\n        }\n        if (number >= 50) {\n        \
  \    sb.append(\"l\");\n            number -= 50;\n        }\n        if (number\
  \ >= 40) {\n            sb.append(\"xl\");\n            number -= 40;\n        }\n\
  \        for (int i = 0; i < number / 10; i++) {\n            sb.append(\"x\");\n\
  \        }\n        number %= 10;\n        if (number >= 9) {\n            sb.append(\"\
  ix\");\n            number -= 9;\n        }\n        if (number >= 5) {\n      \
  \      sb.append(\"v\");\n            number -= 5;\n        }\n        if (number\
  \ >= 4) {\n            sb.append(\"iv\");\n            number -= 4;\n        }\n\
  \        for (int i = 0; i < number; i++) {\n            sb.append(\"i\");\n   \
  \     }\n        return sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        for (int i = 0; i < arabic.length; i++) {\n            while (number >=\
  \ arabic[i]) {\n                number -= arabic[i];\n                sb.append(roman[i]);\n\
  \            }\n        }\n        return sb.toString();"
- "        String result = \"\";\n        int[] values = {1000, 900, 500, 400, 100,\
  \ 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals = {\"m\", \"cm\", \"d\"\
  , \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n\
  \        for (int i = 0; i < values.length; i++) {\n            while (number >=\
  \ values[i]) {\n                number -= values[i];\n                result +=\
  \ numerals[i];\n            }\n        }\n        return result;"
- "        StringBuilder sb = new StringBuilder();\n        while (number > 0) {\n\
  \            if (number >= 1000) {\n                sb.append(\"m\");\n        \
  \        number -= 1000;\n            } else if (number >= 900) {\n            \
  \    sb.append(\"cm\");\n                number -= 900;\n            } else if (number\
  \ >= 500) {\n                sb.append(\"d\");\n                number -= 500;\n\
  \            } else if (number >= 400) {\n                sb.append(\"cd\");\n \
  \               number -= 400;\n            } else if (number >= 100) {\n      \
  \          sb.append(\"c\");\n                number -= 100;\n            } else\
  \ if (number >= 90) {\n                sb.append(\"xc\");\n                number\
  \ -= 90;\n            } else if (number >= 50) {\n                sb.append(\"l\"\
  );\n                number -= 50;\n            } else if (number >= 40) {\n    \
  \            sb.append(\"xl\");\n                number -= 40;\n            } else\
  \ if (number >= 10) {\n                sb.append(\"x\");\n                number\
  \ -= 10;\n            } else if (number >= 9) {\n                sb.append(\"ix\"\
  );\n                number -= 9;\n            } else if (number >= 5) {\n      \
  \          sb.append(\"v\");\n                number -= 5;\n            } else if\
  \ (number >= 4) {\n                sb.append(\"iv\");\n                number -=\
  \ 4;\n            } else if (number >= 1) {\n                sb.append(\"i\");\n\
  \                number -= 1;\n            }\n        }\n        return sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder result = new\
  \ StringBuilder();\n        int i = 0;\n        while (number > 0 || arabic.length\
  \ == (i - 1)) {\n            while ((number - arabic[i]) >= 0) {\n             \
  \   number -= arabic[i];\n                result.append(roman[i]);\n           \
  \ }\n            i++;\n        }\n        return result.toString();"
- "        StringBuilder sb = new StringBuilder();\n        int[] values = {1000,\
  \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] numerals =\
  \ {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"\
  v\", \"iv\", \"i\"};\n        int i = 0;\n        while (number > 0) {\n       \
  \     if (number >= values[i]) {\n                sb.append(numerals[i]);\n    \
  \            number -= values[i];\n            } else {\n                i++;\n\
  \            }\n        }\n        return sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] arabic = {1000, 900,\
  \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        int i = 0;\n        while (number > 0 || arabic.length == (i - 1)) {\n\
  \            while ((number - arabic[i]) >= 0) {\n                number -= arabic[i];\n\
  \                sb.append(roman[i]);\n            }\n            i++;\n       \
  \ }\n        return sb.toString();"
- "        String[] roman = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
  xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] nums = {1000, 900, 500,\
  \ 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n\
  \        int i = 0;\n        while (number > 0) {\n            if (number - nums[i]\
  \ >= 0) {\n                number -= nums[i];\n                sb.append(roman[i]);\n\
  \            } else {\n                i++;\n            }\n        }\n        return\
  \ sb.toString();"
language: java
name: HumanEval_156_int_to_mini_roman
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given a positive integer, obtain its roman numeral equivalent\
  \ as a string,\n    // and return it in lowercase.\n    // Restrictions: 1 <= num\
  \ <= 1000\n    // Examples:\n    public static String intToMiniRoman(int number)\
  \ {\n"
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- '    }

  }'
- "\n    }\n"
tests: "}\n    public static void main(String[] args) {\n    assert(intToMiniRoman((19)).equals((\"\
  xix\")));\n    assert(intToMiniRoman((152)).equals((\"clii\")));\n    assert(intToMiniRoman((251)).equals((\"\
  ccli\")));\n    assert(intToMiniRoman((426)).equals((\"cdxxvi\")));\n    assert(intToMiniRoman((500)).equals((\"\
  d\")));\n    assert(intToMiniRoman((1)).equals((\"i\")));\n    assert(intToMiniRoman((4)).equals((\"\
  iv\")));\n    assert(intToMiniRoman((43)).equals((\"xliii\")));\n    assert(intToMiniRoman((90)).equals((\"\
  xc\")));\n    assert(intToMiniRoman((94)).equals((\"xciv\")));\n    assert(intToMiniRoman((532)).equals((\"\
  dxxxii\")));\n    assert(intToMiniRoman((900)).equals((\"cm\")));\n    assert(intToMiniRoman((994)).equals((\"\
  cmxciv\")));\n    assert(intToMiniRoman((1000)).equals((\"m\")));\n    }\n\n}\n"

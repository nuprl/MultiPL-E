name: HumanEval_58_common
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Return sorted unique common elements for two lists.\n  \
  \  public static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer>\
  \ l2) {\n"
tests: "return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static\
  \ void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
  \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
  \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
  \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
  \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
  \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
  \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
  \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
  \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
  \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
  \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
completions: ["        ArrayList<Integer> result = new ArrayList<Integer>();\n   \
    \     int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n  \
    \          if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ res = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while (i\
    \ < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                res.add(l1.get(i));\n                i++;\n             \
    \   j++;\n            } else if (l1.get(i) < l2.get(j)) {\n                i++;\n\
    \            } else {\n                j++;\n            }\n        }\n      \
    \  return res;", "        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                res.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return res;", "        ArrayList<Integer>\
    \ l3 = new ArrayList<Integer>();\n        for (int i = 0; i < l1.size(); i++)\
    \ {\n            if (l2.contains(l1.get(i))) {\n                l3.add(l1.get(i));\n\
    \            }\n        }\n        Collections.sort(l3);\n        return l3;",
  "        ArrayList<Integer> result = new ArrayList<Integer>();\n        int i =\
    \ 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n            if\
    \ (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n  \
    \              i++;\n                j++;\n            } else if (l1.get(i) <\
    \ l2.get(j)) {\n                i++;\n            } else {\n                j++;\n\
    \            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> l = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i) < l2.get(j)) {\n                i++;\n            }\
    \ else if (l1.get(i) > l2.get(j)) {\n                j++;\n            } else\
    \ {\n                l.add(l1.get(i));\n                i++;\n               \
    \ j++;\n            }\n        }\n        return l;", "        ArrayList<Integer>\
    \ l3 = new ArrayList<Integer>();\n        for (int i = 0; i < l1.size(); i++)\
    \ {\n            if (l2.contains(l1.get(i))) {\n                l3.add(l1.get(i));\n\
    \            }\n        }\n        Collections.sort(l3);\n        return l3;",
  "        ArrayList<Integer> result = new ArrayList<Integer>();\n        int i =\
    \ 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n            if\
    \ (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n  \
    \              i++;\n                j++;\n            } else if (l1.get(i) <\
    \ l2.get(j)) {\n                i++;\n            } else {\n                j++;\n\
    \            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                res.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return res;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i = 0; i < l1.size(); i++)\
    \ {\n            if (l2.contains(l1.get(i))) {\n                result.add(l1.get(i));\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;",
  "        ArrayList<Integer> l = new ArrayList<Integer>();\n        int i = 0, j\
    \ = 0;\n        while (i < l1.size() && j < l2.size()) {\n            if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else if (l1.get(i) > l2.get(j))\
    \ {\n                j++;\n            } else {\n                l.add(l1.get(i));\n\
    \                i++;\n                j++;\n            }\n        }\n      \
    \  return l;", "        ArrayList<Integer> res = new ArrayList<Integer>();\n \
    \       int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                res.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return res;", "        ArrayList<Integer>\
    \ l3 = new ArrayList<Integer>();\n        for (int i = 0; i < l1.size(); i++)\
    \ {\n            for (int j = 0; j < l2.size(); j++) {\n                if (l1.get(i)\
    \ == l2.get(j)) {\n                    l3.add(l1.get(i));\n                }\n\
    \            }\n        }\n        Collections.sort(l3);\n        return l3;",
  "        ArrayList<Integer> res = new ArrayList<Integer>();\n        int i = 0,\
    \ j = 0;\n        while (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                res.add(l1.get(i));\n                i++;\n             \
    \   j++;\n            } else if (l1.get(i) < l2.get(j)) {\n                i++;\n\
    \            } else {\n                j++;\n            }\n        }\n      \
    \  return res;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ res = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while (i\
    \ < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                res.add(l1.get(i));\n                i++;\n             \
    \   j++;\n            } else if (l1.get(i) < l2.get(j)) {\n                i++;\n\
    \            } else {\n                j++;\n            }\n        }\n      \
    \  return res;", "        ArrayList<Integer> l = new ArrayList<Integer>();\n \
    \       for (int i = 0; i < l1.size(); i++) {\n            for (int j = 0; j <\
    \ l2.size(); j++) {\n                if (l1.get(i) == l2.get(j)) {\n         \
    \           l.add(l1.get(i));\n                }\n            }\n        }\n \
    \       Collections.sort(l);\n        return l;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        Collections.sort(l1);\n        Collections.sort(l2);\n        int i =\
    \ 0;\n        int j = 0;\n        while (i < l1.size() && j < l2.size()) {\n \
    \           if (l1.get(i) == l2.get(j)) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> l = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i) < l2.get(j)) {\n                i++;\n            }\
    \ else if (l1.get(i) > l2.get(j)) {\n                j++;\n            } else\
    \ {\n                l.add(l1.get(i));\n                i++;\n               \
    \ j++;\n            }\n        }\n        return l;", "        ArrayList<Integer>\
    \ l = new ArrayList<Integer>();\n        for (int i = 0; i < l1.size(); i++) {\n\
    \            if (l2.contains(l1.get(i))) {\n                l.add(l1.get(i));\n\
    \            }\n        }\n        Collections.sort(l);\n        return l;", " \
    \       ArrayList<Integer> result = new ArrayList<Integer>();\n        int i1\
    \ = 0;\n        int i2 = 0;\n        while (i1 < l1.size() && i2 < l2.size())\
    \ {\n            if (l1.get(i1) < l2.get(i2)) {\n                i1++;\n     \
    \       } else if (l1.get(i1) > l2.get(i2)) {\n                i2++;\n       \
    \     } else {\n                result.add(l1.get(i1));\n                i1++;\n\
    \                i2++;\n            }\n        }\n        return result;", " \
    \       ArrayList<Integer> result = new ArrayList<Integer>();\n        int i =\
    \ 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n            if\
    \ (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n  \
    \              i++;\n                j++;\n            } else if (l1.get(i) <\
    \ l2.get(j)) {\n                i++;\n            } else {\n                j++;\n\
    \            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i = 0; i < l1.size(); i++)\
    \ {\n            if (l2.contains(l1.get(i))) {\n                result.add(l1.get(i));\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;",
  "        ArrayList<Integer> l3 = new ArrayList<Integer>();\n        int i = 0, j\
    \ = 0;\n        while (i < l1.size() && j < l2.size()) {\n            if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else if (l1.get(i) > l2.get(j))\
    \ {\n                j++;\n            } else {\n                l3.add(l1.get(i));\n\
    \                i++;\n                j++;\n            }\n        }\n      \
    \  return l3;", "        ArrayList<Integer> l = new ArrayList<Integer>();\n  \
    \      int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n \
    \           if (l1.get(i) == l2.get(j)) {\n                l.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return l;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                res.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return res;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> ret = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i) == l2.get(j)) {\n                ret.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return ret;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                res.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return res;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l1.size(); i++) {\n            if (l2.contains(l1.get(i)))\
    \ {\n                result.add(l1.get(i));\n            }\n        }\n      \
    \  Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ res = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while (i\
    \ < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                res.add(l1.get(i));\n                i++;\n             \
    \   j++;\n            } else if (l1.get(i) < l2.get(j)) {\n                i++;\n\
    \            } else {\n                j++;\n            }\n        }\n      \
    \  return res;", "        ArrayList<Integer> l = new ArrayList<Integer>();\n \
    \       for (int i = 0; i < l1.size(); i++) {\n            for (int j = 0; j <\
    \ l2.size(); j++) {\n                if (l1.get(i) == l2.get(j)) {\n         \
    \           l.add(l1.get(i));\n                }\n            }\n        }\n \
    \       Collections.sort(l);\n        return l;", "        ArrayList<Integer>\
    \ l = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while (i <\
    \ l1.size() && j < l2.size()) {\n            if (l1.get(i) == l2.get(j)) {\n \
    \               l.add(l1.get(i));\n                i++;\n                j++;\n\
    \            } else if (l1.get(i) < l2.get(j)) {\n                i++;\n     \
    \       } else {\n                j++;\n            }\n        }\n        return\
    \ l;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n     \
    \       if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i = 0; i < l1.size(); i++)\
    \ {\n            if (l2.contains(l1.get(i))) {\n                result.add(l1.get(i));\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;",
  "        ArrayList<Integer> l3 = new ArrayList<Integer>();\n        for (int i =\
    \ 0; i < l1.size(); i++) {\n            if (l2.contains(l1.get(i))) {\n      \
    \          l3.add(l1.get(i));\n            }\n        }\n        Collections.sort(l3);\n\
    \        return l3;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l1.size(); i++) {\n            for (int j = 0; j\
    \ < l2.size(); j++) {\n                if (l1.get(i) == l2.get(j)) {\n       \
    \             result.add(l1.get(i));\n                }\n            }\n     \
    \   }\n        Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ res = new ArrayList<Integer>();\n        int i1 = 0, i2 = 0;\n        while\
    \ (i1 < l1.size() && i2 < l2.size()) {\n            if (l1.get(i1) == l2.get(i2))\
    \ {\n                res.add(l1.get(i1));\n                i1++;\n           \
    \     i2++;\n            } else if (l1.get(i1) < l2.get(i2)) {\n             \
    \   i1++;\n            } else {\n                i2++;\n            }\n      \
    \  }\n        return res;", "        ArrayList<Integer> ret = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l1.size(); i++) {\n            for (int j = 0; j\
    \ < l2.size(); j++) {\n                if (l1.get(i) == l2.get(j)) {\n       \
    \             ret.add(l1.get(i));\n                }\n            }\n        }\n\
    \        Collections.sort(ret);\n        return ret;", "        ArrayList<Integer>\
    \ l3 = new ArrayList<Integer>();\n        for (int i = 0; i < l1.size(); i++)\
    \ {\n            if (l2.contains(l1.get(i))) {\n                l3.add(l1.get(i));\n\
    \            }\n        }\n        Collections.sort(l3);\n        return l3;",
  "        ArrayList<Integer> result = new ArrayList<Integer>();\n        int i =\
    \ 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n            if\
    \ (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n  \
    \              i++;\n                j++;\n            } else if (l1.get(i) <\
    \ l2.get(j)) {\n                i++;\n            } else {\n                j++;\n\
    \            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ l = new ArrayList<>();\n        int i = 0, j = 0;\n        while (i < l1.size()\
    \ && j < l2.size()) {\n            if (l1.get(i) < l2.get(j)) {\n            \
    \    i++;\n            } else if (l1.get(i) > l2.get(j)) {\n                j++;\n\
    \            } else {\n                l.add(l1.get(i));\n                i++;\n\
    \                j++;\n            }\n        }\n        return l;", "       \
    \ ArrayList<Integer> result = new ArrayList<Integer>();\n        int i = 0, j\
    \ = 0;\n        while (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l1.size(); i++) {\n            if (l2.contains(l1.get(i)))\
    \ {\n                result.add(l1.get(i));\n            }\n        }\n      \
    \  Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ l = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while (i <\
    \ l1.size() && j < l2.size()) {\n            if (l1.get(i) == l2.get(j)) {\n \
    \               l.add(l1.get(i));\n                i++;\n                j++;\n\
    \            } else if (l1.get(i) < l2.get(j)) {\n                i++;\n     \
    \       } else {\n                j++;\n            }\n        }\n        return\
    \ l;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n     \
    \       if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i = 0; i < l1.size(); i++)\
    \ {\n            if (l2.contains(l1.get(i))) {\n                result.add(l1.get(i));\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;",
  "        ArrayList<Integer> result = new ArrayList<Integer>();\n        int i =\
    \ 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n            if\
    \ (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n  \
    \              i++;\n                j++;\n            } else if (l1.get(i) <\
    \ l2.get(j)) {\n                i++;\n            } else {\n                j++;\n\
    \            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ l = new ArrayList<Integer>();\n        for (int i = 0; i < l1.size(); i++) {\n\
    \            if (l2.contains(l1.get(i))) {\n                l.add(l1.get(i));\n\
    \            }\n        }\n        Collections.sort(l);\n        return l;", " \
    \       ArrayList<Integer> result = new ArrayList<Integer>();\n        int i =\
    \ 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n            if\
    \ (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n  \
    \              i++;\n                j++;\n            } else if (l1.get(i) <\
    \ l2.get(j)) {\n                i++;\n            } else {\n                j++;\n\
    \            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i = 0; i < l1.size(); i++)\
    \ {\n            for (int j = 0; j < l2.size(); j++) {\n                if (l1.get(i)\
    \ == l2.get(j)) {\n                    result.add(l1.get(i));\n              \
    \  }\n            }\n        }\n        Collections.sort(result);\n        return\
    \ result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n \
    \       int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ res = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while (i\
    \ < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                res.add(l1.get(i));\n                i++;\n             \
    \   j++;\n            } else if (l1.get(i) < l2.get(j)) {\n                i++;\n\
    \            } else {\n                j++;\n            }\n        }\n      \
    \  return res;", "        ArrayList<Integer> l3 = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l1.size(); i++) {\n            for (int j = 0; j\
    \ < l2.size(); j++) {\n                if (l1.get(i) == l2.get(j)) {\n       \
    \             l3.add(l1.get(i));\n                }\n            }\n        }\n\
    \        Collections.sort(l3);\n        return l3;", "        ArrayList<Integer>\
    \ l = new ArrayList<Integer>();\n        for (int i = 0; i < l1.size(); i++) {\n\
    \            if (l2.contains(l1.get(i))) {\n                l.add(l1.get(i));\n\
    \            }\n        }\n        Collections.sort(l);\n        return l;", " \
    \       ArrayList<Integer> result = new ArrayList<Integer>();\n        int i =\
    \ 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n            if\
    \ (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n  \
    \              i++;\n                j++;\n            } else if (l1.get(i) <\
    \ l2.get(j)) {\n                i++;\n            } else {\n                j++;\n\
    \            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                res.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return res;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ res = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while (i\
    \ < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                res.add(l1.get(i));\n                i++;\n             \
    \   j++;\n            } else if (l1.get(i) < l2.get(j)) {\n                i++;\n\
    \            } else {\n                j++;\n            }\n        }\n      \
    \  return res;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> l = new ArrayList<>();\n\
    \        for (int i = 0; i < l1.size(); i++) {\n            if (l2.contains(l1.get(i)))\
    \ {\n                l.add(l1.get(i));\n            }\n        }\n        Collections.sort(l);\n\
    \        return l;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> l3 = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l1.size(); i++) {\n            for (int j = 0; j\
    \ < l2.size(); j++) {\n                if (l1.get(i) == l2.get(j)) {\n       \
    \             l3.add(l1.get(i));\n                }\n            }\n        }\n\
    \        Collections.sort(l3);\n        return l3;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i = 0; i < l1.size(); i++)\
    \ {\n            if (l2.contains(l1.get(i))) {\n                result.add(l1.get(i));\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;",
  "        ArrayList<Integer> res = new ArrayList<Integer>();\n        int i = 0,\
    \ j = 0;\n        while (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                res.add(l1.get(i));\n                i++;\n             \
    \   j++;\n            } else if (l1.get(i) < l2.get(j)) {\n                i++;\n\
    \            } else {\n                j++;\n            }\n        }\n      \
    \  return res;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> l = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i) < l2.get(j)) {\n                i++;\n            }\
    \ else if (l1.get(i) > l2.get(j)) {\n                j++;\n            } else\
    \ {\n                l.add(l1.get(i));\n                i++;\n               \
    \ j++;\n            }\n        }\n        return l;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                res.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return res;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                res.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return res;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        Collections.sort(l1);\n        Collections.sort(l2);\n        int i =\
    \ 0;\n        int j = 0;\n        while (i < l1.size() && j < l2.size()) {\n \
    \           if (l1.get(i) == l2.get(j)) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i = 0; i < l1.size(); i++)\
    \ {\n            int x = l1.get(i);\n            if (l2.contains(x)) {\n     \
    \           result.add(x);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l1.size(); i++) {\n            for (int j = 0; j\
    \ < l2.size(); j++) {\n                if (l1.get(i) == l2.get(j)) {\n       \
    \             result.add(l1.get(i));\n                }\n            }\n     \
    \   }\n        Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                res.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return res;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ res = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while (i\
    \ < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                res.add(l1.get(i));\n                i++;\n             \
    \   j++;\n            } else if (l1.get(i) < l2.get(j)) {\n                i++;\n\
    \            } else {\n                j++;\n            }\n        }\n      \
    \  return res;", "        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                res.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return res;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l1.size(); i++) {\n            if (l2.contains(l1.get(i)))\
    \ {\n                result.add(l1.get(i));\n            }\n        }\n      \
    \  Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i = 0; i < l1.size(); i++)\
    \ {\n            if (l2.contains(l1.get(i))) {\n                result.add(l1.get(i));\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;",
  "        ArrayList<Integer> result = new ArrayList<Integer>();\n        int i =\
    \ 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n            if\
    \ (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n  \
    \              i++;\n                j++;\n            } else if (l1.get(i) <\
    \ l2.get(j)) {\n                i++;\n            } else {\n                j++;\n\
    \            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ res = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while (i\
    \ < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                res.add(l1.get(i));\n                i++;\n             \
    \   j++;\n            } else if (l1.get(i) < l2.get(j)) {\n                i++;\n\
    \            } else {\n                j++;\n            }\n        }\n      \
    \  return res;", "        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i) == l2.get(j)) {\n                res.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return res;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i = 0; i < l1.size(); i++)\
    \ {\n            for (int j = 0; j < l2.size(); j++) {\n                if (l1.get(i)\
    \ == l2.get(j)) {\n                    result.add(l1.get(i));\n              \
    \  }\n            }\n        }\n        Collections.sort(result);\n        return\
    \ result;", "        ArrayList<Integer> res = new ArrayList<Integer>();\n    \
    \    int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n   \
    \         if (l1.get(i).equals(l2.get(j))) {\n                res.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return res;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> l3 = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l1.size(); i++) {\n            if (l2.contains(l1.get(i)))\
    \ {\n                l3.add(l1.get(i));\n            }\n        }\n        Collections.sort(l3);\n\
    \        return l3;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l1.size(); i++) {\n            if (l2.contains(l1.get(i)))\
    \ {\n                result.add(l1.get(i));\n            }\n        }\n      \
    \  Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i = 0; i < l1.size(); i++)\
    \ {\n            if (l2.contains(l1.get(i))) {\n                result.add(l1.get(i));\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;",
  "        ArrayList<Integer> result = new ArrayList<Integer>();\n        int i =\
    \ 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n            if\
    \ (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n  \
    \              i++;\n                j++;\n            } else if (l1.get(i) <\
    \ l2.get(j)) {\n                i++;\n            } else {\n                j++;\n\
    \            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i = 0; i < l1.size(); i++)\
    \ {\n            if (l2.contains(l1.get(i))) {\n                result.add(l1.get(i));\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;",
  "        ArrayList<Integer> result = new ArrayList<Integer>();\n        int i =\
    \ 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n            if\
    \ (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n  \
    \              i++;\n                j++;\n            } else if (l1.get(i) <\
    \ l2.get(j)) {\n                i++;\n            } else {\n                j++;\n\
    \            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ l = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while (i <\
    \ l1.size() && j < l2.size()) {\n            if (l1.get(i) < l2.get(j)) {\n  \
    \              i++;\n            } else if (l1.get(i) > l2.get(j)) {\n       \
    \         j++;\n            } else {\n                l.add(l1.get(i));\n    \
    \            i++;\n                j++;\n            }\n        }\n        return\
    \ l;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int i = 0; i < l1.size(); i++) {\n            if (l2.contains(l1.get(i)))\
    \ {\n                result.add(l1.get(i));\n            }\n        }\n      \
    \  Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i = 0; i < l1.size(); i++)\
    \ {\n            if (l2.contains(l1.get(i))) {\n                result.add(l1.get(i));\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;",
  "        ArrayList<Integer> result = new ArrayList<Integer>();\n        int i =\
    \ 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n            if\
    \ (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n  \
    \              i++;\n                j++;\n            } else if (l1.get(i) <\
    \ l2.get(j)) {\n                i++;\n            } else {\n                j++;\n\
    \            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                res.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return res;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                res.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return res;", "        ArrayList<Integer>\
    \ l = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while (i <\
    \ l1.size() && j < l2.size()) {\n            if (l1.get(i) == l2.get(j)) {\n \
    \               l.add(l1.get(i));\n                i++;\n                j++;\n\
    \            } else if (l1.get(i) < l2.get(j)) {\n                i++;\n     \
    \       } else {\n                j++;\n            }\n        }\n        return\
    \ l;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n     \
    \       if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i = 0; i < l1.size(); i++)\
    \ {\n            if (l2.contains(l1.get(i))) {\n                result.add(l1.get(i));\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;",
  "        ArrayList<Integer> result = new ArrayList<Integer>();\n        int i =\
    \ 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n            if\
    \ (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n  \
    \              i++;\n                j++;\n            } else if (l1.get(i) <\
    \ l2.get(j)) {\n                i++;\n            } else {\n                j++;\n\
    \            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ res = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while (i\
    \ < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                res.add(l1.get(i));\n                i++;\n             \
    \   j++;\n            } else if (l1.get(i) < l2.get(j)) {\n                i++;\n\
    \            } else {\n                j++;\n            }\n        }\n      \
    \  return res;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l1.size(); i++) {\n            int x = l1.get(i);\n\
    \            if (l2.contains(x)) {\n                result.add(x);\n         \
    \   }\n        }\n        Collections.sort(result);\n        return result;",
  "        ArrayList<Integer> result = new ArrayList<Integer>();\n        int i =\
    \ 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n            if\
    \ (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n  \
    \              i++;\n                j++;\n            } else if (l1.get(i) <\
    \ l2.get(j)) {\n                i++;\n            } else {\n                j++;\n\
    \            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ l3 = new ArrayList<Integer>();\n        for (int i = 0; i < l1.size(); i++)\
    \ {\n            if (l2.contains(l1.get(i))) {\n                l3.add(l1.get(i));\n\
    \            }\n        }\n        Collections.sort(l3);\n        return l3;",
  "        ArrayList<Integer> l = new ArrayList<Integer>();\n        int i = 0, j\
    \ = 0;\n        while (i < l1.size() && j < l2.size()) {\n            if (l1.get(i)\
    \ == l2.get(j)) {\n                l.add(l1.get(i));\n                i++;\n \
    \               j++;\n            } else if (l1.get(i) < l2.get(j)) {\n      \
    \          i++;\n            } else {\n                j++;\n            }\n \
    \       }\n        return l;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l1.size(); i++) {\n            int x = l1.get(i);\n\
    \            if (l2.contains(x)) {\n                result.add(x);\n         \
    \   }\n        }\n        Collections.sort(result);\n        return result;",
  "        ArrayList<Integer> result = new ArrayList<Integer>();\n        int i =\
    \ 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n            if\
    \ (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n  \
    \              i++;\n                j++;\n            } else if (l1.get(i) <\
    \ l2.get(j)) {\n                i++;\n            } else {\n                j++;\n\
    \            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ l = new ArrayList<Integer>();\n        for (int i = 0; i < l1.size(); i++) {\n\
    \            for (int j = 0; j < l2.size(); j++) {\n                if (l1.get(i)\
    \ == l2.get(j)) {\n                    l.add(l1.get(i));\n                }\n\
    \            }\n        }\n        Collections.sort(l);\n        return l;", " \
    \       ArrayList<Integer> result = new ArrayList<Integer>();\n        int i =\
    \ 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n            if\
    \ (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n  \
    \              i++;\n                j++;\n            } else if (l1.get(i) <\
    \ l2.get(j)) {\n                i++;\n            } else {\n                j++;\n\
    \            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i = 0; i < l1.size(); i++)\
    \ {\n            for (int j = 0; j < l2.size(); j++) {\n                if (l1.get(i)\
    \ == l2.get(j)) {\n                    result.add(l1.get(i));\n              \
    \  }\n            }\n        }\n        Collections.sort(result);\n        return\
    \ result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n \
    \       int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i = 0; i < l1.size(); i++)\
    \ {\n            if (l2.contains(l1.get(i))) {\n                result.add(l1.get(i));\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;",
  "        ArrayList<Integer> result = new ArrayList<Integer>();\n        for (int\
    \ i = 0; i < l1.size(); i++) {\n            for (int j = 0; j < l2.size(); j++)\
    \ {\n                if (l1.get(i) == l2.get(j)) {\n                    result.add(l1.get(i));\n\
    \                }\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                res.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return res;", "        ArrayList<Integer>\
    \ l = new ArrayList<Integer>();\n        for (int i = 0; i < l1.size(); i++) {\n\
    \            int x = l1.get(i);\n            if (l2.contains(x)) {\n         \
    \       l.add(x);\n            }\n        }\n        Collections.sort(l);\n  \
    \      return l;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l1.size(); i++) {\n            for (int j = 0; j\
    \ < l2.size(); j++) {\n                if (l1.get(i) == l2.get(j)) {\n       \
    \             result.add(l1.get(i));\n                }\n            }\n     \
    \   }\n        return result;", "        ArrayList<Integer> l3 = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l1.size(); i++) {\n            if (l2.contains(l1.get(i)))\
    \ {\n                l3.add(l1.get(i));\n            }\n        }\n        Collections.sort(l3);\n\
    \        return l3;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ res = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while (i\
    \ < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                res.add(l1.get(i));\n                i++;\n             \
    \   j++;\n            } else if (l1.get(i) < l2.get(j)) {\n                i++;\n\
    \            } else {\n                j++;\n            }\n        }\n      \
    \  return res;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ l3 = new ArrayList<Integer>();\n        for (int i = 0; i < l1.size(); i++)\
    \ {\n            if (l2.contains(l1.get(i))) {\n                l3.add(l1.get(i));\n\
    \            }\n        }\n        Collections.sort(l3);\n        return l3;",
  "        ArrayList<Integer> result = new ArrayList<Integer>();\n        for (int\
    \ i = 0; i < l1.size(); i++) {\n            if (l2.contains(l1.get(i))) {\n  \
    \              result.add(l1.get(i));\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ l = new ArrayList<Integer>();\n        for (int i = 0; i < l1.size(); i++) {\n\
    \            for (int j = 0; j < l2.size(); j++) {\n                if (l1.get(i)\
    \ == l2.get(j)) {\n                    l.add(l1.get(i));\n                }\n\
    \            }\n        }\n        Collections.sort(l);\n        return l;", " \
    \       ArrayList<Integer> res = new ArrayList<Integer>();\n        int i = 0,\
    \ j = 0;\n        while (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                res.add(l1.get(i));\n                i++;\n             \
    \   j++;\n            } else if (l1.get(i) < l2.get(j)) {\n                i++;\n\
    \            } else {\n                j++;\n            }\n        }\n      \
    \  return res;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l1.size(); i++) {\n            for (int j = 0; j\
    \ < l2.size(); j++) {\n                if (l1.get(i) == l2.get(j)) {\n       \
    \             result.add(l1.get(i));\n                }\n            }\n     \
    \   }\n        Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        Collections.sort(l1);\n        Collections.sort(l2);\n\
    \        int i = 0;\n        int j = 0;\n        while (i < l1.size() && j < l2.size())\
    \ {\n            if (l1.get(i) == l2.get(j)) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l1.size(); i++) {\n            if (l2.contains(l1.get(i)))\
    \ {\n                result.add(l1.get(i));\n            }\n        }\n      \
    \  Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ res = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while (i\
    \ < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                res.add(l1.get(i));\n                i++;\n             \
    \   j++;\n            } else if (l1.get(i) < l2.get(j)) {\n                i++;\n\
    \            } else {\n                j++;\n            }\n        }\n      \
    \  return res;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l1.size(); i++) {\n            for (int j = 0; j\
    \ < l2.size(); j++) {\n                if (l1.get(i) == l2.get(j)) {\n       \
    \             result.add(l1.get(i));\n                }\n            }\n     \
    \   }\n        Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;", "        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                res.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return res;", "        ArrayList<Integer>\
    \ res = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while (i\
    \ < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                res.add(l1.get(i));\n                i++;\n             \
    \   j++;\n            } else if (l1.get(i) < l2.get(j)) {\n                i++;\n\
    \            } else {\n                j++;\n            }\n        }\n      \
    \  return res;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i).equals(l2.get(j))) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i++;\n            } else {\n               \
    \ j++;\n            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0, j = 0;\n        while\
    \ (i < l1.size() && j < l2.size()) {\n            if (l1.get(i).equals(l2.get(j)))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;"]
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"
